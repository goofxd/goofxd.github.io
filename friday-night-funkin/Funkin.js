/*
 howler.js v2.1.1 | (c) 2013-2018, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.checkStringArgs = function(O, t, C) {
    if (null == O) throw new TypeError("The 'this' value for String.prototype." + C + " must not be null or undefined");
    if (t instanceof RegExp) throw new TypeError("First argument to String.prototype." + C + " must not be a regular expression");
    return O + ""
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(O, t, C) {
    O != Array.prototype && O != Object.prototype && (O[t] = C.value)
};
$jscomp.getGlobal = function(O) {
    O = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global, O];
    for (var t = 0; t < O.length; ++t) {
        var C = O[t];
        if (C && C.Math == Math) return C
    }
    throw Error("Cannot find global object");
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(O, t, C, E) {
    if (t) {
        C = $jscomp.global;
        O = O.split(".");
        for (E = 0; E < O.length - 1; E++) {
            var z = O[E];
            z in C || (C[z] = {});
            C = C[z]
        }
        O = O[O.length - 1];
        E = C[O];
        t = t(E);
        t != E && null != t && $jscomp.defineProperty(C, O, {
            configurable: !0,
            writable: !0,
            value: t
        })
    }
};
$jscomp.polyfill("String.prototype.endsWith", function(O) {
    return O ? O : function(t, C) {
        var E = $jscomp.checkStringArgs(this, t, "endsWith");
        t += "";
        void 0 === C && (C = E.length);
        C = Math.max(0, Math.min(C | 0, E.length));
        for (var z = t.length; 0 < z && 0 < C;)
            if (E[--C] != t[--z]) return !1;
        return 0 >= z
    }
}, "es6", "es3");
$jscomp.arrayIteratorImpl = function(O) {
    var t = 0;
    return function() {
        return t < O.length ? {
            done: !1,
            value: O[t++]
        } : {
            done: !0
        }
    }
};
$jscomp.arrayIterator = function(O) {
    return {
        next: $jscomp.arrayIteratorImpl(O)
    }
};
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
    $jscomp.initSymbol = function() {};
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.SymbolClass = function(O, t) {
    this.$jscomp$symbol$id_ = O;
    $jscomp.defineProperty(this, "description", {
        configurable: !0,
        writable: !0,
        value: t
    })
};
$jscomp.SymbolClass.prototype.toString = function() {
    return this.$jscomp$symbol$id_
};
$jscomp.Symbol = function() {
    function O(C) {
        if (this instanceof O) throw new TypeError("Symbol is not a constructor");
        return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (C || "") + "_" + t++, C)
    }
    var t = 0;
    return O
}();
$jscomp.initSymbolIterator = function() {
    $jscomp.initSymbol();
    var O = $jscomp.global.Symbol.iterator;
    O || (O = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("Symbol.iterator"));
    "function" != typeof Array.prototype[O] && $jscomp.defineProperty(Array.prototype, O, {
        configurable: !0,
        writable: !0,
        value: function() {
            return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
        }
    });
    $jscomp.initSymbolIterator = function() {}
};
$jscomp.initSymbolAsyncIterator = function() {
    $jscomp.initSymbol();
    var O = $jscomp.global.Symbol.asyncIterator;
    O || (O = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol("Symbol.asyncIterator"));
    $jscomp.initSymbolAsyncIterator = function() {}
};
$jscomp.iteratorPrototype = function(O) {
    $jscomp.initSymbolIterator();
    O = {
        next: O
    };
    O[$jscomp.global.Symbol.iterator] = function() {
        return this
    };
    return O
};
$jscomp.iteratorFromArray = function(O, t) {
    $jscomp.initSymbolIterator();
    O instanceof String && (O += "");
    var C = 0,
        E = {
            next: function() {
                if (C < O.length) {
                    var z = C++;
                    return {
                        value: t(z, O[z]),
                        done: !1
                    }
                }
                E.next = function() {
                    return {
                        done: !0,
                        value: void 0
                    }
                };
                return E.next()
            }
        };
    E[Symbol.iterator] = function() {
        return E
    };
    return E
};
$jscomp.polyfill("Array.prototype.keys", function(O) {
    return O ? O : function() {
        return $jscomp.iteratorFromArray(this, function(t) {
            return t
        })
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(O) {
    return O ? O : function(t, C, E) {
        var z = this.length || 0;
        0 > C && (C = Math.max(0, z + C));
        if (null == E || E > z) E = z;
        E = Number(E);
        0 > E && (E = Math.max(0, z + E));
        for (C = Number(C || 0); C < E; C++) this[C] = t;
        return this
    }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.startsWith", function(O) {
    return O ? O : function(t, C) {
        var E = $jscomp.checkStringArgs(this, t, "startsWith");
        t += "";
        var z = E.length,
            T = t.length;
        C = Math.max(0, Math.min(C | 0, E.length));
        for (var n = 0; n < T && C < z;)
            if (E[C++] != t[n++]) return !1;
        return n >= T
    }
}, "es6", "es3");
$jscomp.polyfill("String.fromCodePoint", function(O) {
    return O ? O : function(t) {
        for (var C = "", E = 0; E < arguments.length; E++) {
            var z = Number(arguments[E]);
            if (0 > z || 1114111 < z || z !== Math.floor(z)) throw new RangeError("invalid_code_point " + z);
            65535 >= z ? C += String.fromCharCode(z) : (z -= 65536, C += String.fromCharCode(z >>> 10 & 1023 | 55296), C += String.fromCharCode(z & 1023 | 56320))
        }
        return C
    }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.entries", function(O) {
    return O ? O : function() {
        return $jscomp.iteratorFromArray(this, function(t, C) {
            return [t, C]
        })
    }
}, "es6", "es3");
(function(O, t) {
    O.lime = O.lime || {};
    O.lime.$scripts = O.lime.$scripts || {};
    O.lime.$scripts.Funkin = function(t, E) {
        (function(t, C) {
            function n(a, b) {
                a = Object.create(a);
                for (var c in b) a[c] = b[c];
                b.toString !== Object.prototype.toString && (a.toString = b.toString);
                return a
            }

            function E(a) {
                return a instanceof Array ? new Je(a) : a.iterator()
            }

            function r(a, b) {
                if (null == b) return null;
                null == b.__id__ && (b.__id__ = C.$haxeUID++);
                var c;
                null == a.hx__closures__ ? a.hx__closures__ = {} : c = a.hx__closures__[b.__id__];
                null == c && (c = b.bind(a), a.hx__closures__[b.__id__] =
                    c);
                return c
            }
            t.lime = t.lime || {};
            var g = {},
                h = function() {
                    return oa.__string_rec(this, "")
                },
                w = w || {},
                x, ma = function() {};
            g.APIStuff = ma;
            ma.__name__ = "APIStuff";
            var L = function() {};
            g["flixel.util.IFlxDestroyable"] = L;
            L.__name__ = "flixel.util.IFlxDestroyable";
            L.__isInterface__ = !0;
            L.prototype = {
                __class__: L
            };
            var J = function() {
                this.flixelType = 0;
                this.active = this.visible = this.alive = this.exists = !0;
                this.ID = -1
            };
            g["flixel.FlxBasic"] = J;
            J.__name__ = "flixel.FlxBasic";
            J.__interfaces__ = [L];
            J.prototype = {
                destroy: function() {
                    this.set_exists(!1);
                    this._cameras = null
                },
                kill: function() {
                    this.set_alive(!1);
                    this.set_exists(!1)
                },
                revive: function() {
                    this.set_alive(!0);
                    this.set_exists(!0)
                },
                update: function(a) {},
                draw: function() {},
                set_visible: function(a) {
                    return this.visible = a
                },
                set_active: function(a) {
                    return this.active = a
                },
                set_exists: function(a) {
                    return this.exists = a
                },
                set_alive: function(a) {
                    return this.alive = a
                },
                get_cameras: function() {
                    return null == this._cameras ? Rb.defaultCameras : this._cameras
                },
                set_cameras: function(a) {
                    return this._cameras = a
                },
                __class__: J,
                __properties__: {
                    set_cameras: "set_cameras",
                    get_cameras: "get_cameras",
                    set_exists: "set_exists",
                    set_alive: "set_alive",
                    set_visible: "set_visible",
                    set_active: "set_active"
                }
            };
            var z = function() {};
            g["flixel.util.IFlxPooled"] = z;
            z.__name__ = "flixel.util.IFlxPooled";
            z.__isInterface__ = !0;
            z.__interfaces__ = [L];
            z.prototype = {
                __class__: z
            };
            var nb = function() {};
            g["flixel.util.IFlxPool"] = nb;
            nb.__name__ = "flixel.util.IFlxPool";
            nb.__isInterface__ = !0;
            var T = function(a) {
                this._count = 0;
                this._pool = [];
                this._class = a
            };
            g["flixel.util.FlxPool_flixel_math_FlxRect"] = T;
            T.__name__ =
                "flixel.util.FlxPool_flixel_math_FlxRect";
            T.__interfaces__ = [nb];
            T.prototype = {
                get: function() {
                    return 0 == this._count ? Ua.createInstance(this._class, []) : this._pool[--this._count]
                },
                putUnsafe: function(a) {
                    null != a && (a.destroy(), this._pool[this._count++] = a)
                },
                __class__: T
            };
            var ca = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this._weak = this._inPool = !1;
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b;
                this.width = c;
                this.height = d
            };
            g["flixel.math.FlxRect"] =
                ca;
            ca.__name__ = "flixel.math.FlxRect";
            ca.__interfaces__ = [z];
            ca.prototype = {
                put: function() {
                    this._inPool || (this._inPool = !0, this._weak = !1, ca._pool.putUnsafe(this))
                },
                destroy: function() {},
                intersection: function(a, b) {
                    if (null == b) {
                        b = ca._pool.get();
                        var c = 0,
                            d = 0,
                            e = 0,
                            f = 0;
                        null == f && (f = 0);
                        null == e && (e = 0);
                        null == d && (d = 0);
                        null == c && (c = 0);
                        b.x = c;
                        b.y = d;
                        b.width = e;
                        b.height = f;
                        b._inPool = !1
                    }
                    e = this.x < a.x ? a.x : this.x;
                    var k = this.x + this.width > a.x + a.width ? a.x + a.width : this.x + this.width;
                    if (k <= e) return a._weak && !a._inPool && (a._inPool = !0,
                        a._weak = !1, ca._pool.putUnsafe(a)), b;
                    f = this.y < a.y ? a.y : this.y;
                    var p = this.y + this.height > a.y + a.height ? a.y + a.height : this.y + this.height;
                    if (p <= f) return a._weak && !a._inPool && (a._inPool = !0, a._weak = !1, ca._pool.putUnsafe(a)), b;
                    a._weak && !a._inPool && (a._inPool = !0, a._weak = !1, ca._pool.putUnsafe(a));
                    c = e;
                    d = f;
                    e = k - e;
                    f = p - f;
                    null == f && (f = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    b.x = c;
                    b.y = d;
                    b.width = e;
                    b.height = f;
                    return b
                },
                __class__: ca
            };
            var O = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a =
                    0);
                var e = ca._pool.get();
                e.x = 0;
                e.y = 0;
                e.width = 0;
                e.height = 0;
                e._inPool = !1;
                this._rect = e;
                e = X._pool.get().set(0, 0);
                e._inPool = !1;
                this._point = e;
                this.path = null;
                this.allowCollisions = 4369;
                this.touching = this.wasTouching = 0;
                this.maxAngular = 1E4;
                this.angularVelocity = this.angularAcceleration = this.angularDrag = 0;
                this.immovable = !1;
                this.moves = !0;
                this.angle = 0;
                this.pixelPerfectPosition = !0;
                this.x = this.y = 0;
                J.call(this);
                this.set_x(a);
                this.set_y(b);
                this.set_width(c);
                this.set_height(d);
                this.initVars()
            };
            g["flixel.FlxObject"] =
                O;
            O.__name__ = "flixel.FlxObject";
            O.__super__ = J;
            O.prototype = n(J.prototype, {
                initVars: function() {
                    this.flixelType = 1;
                    var a = this.x,
                        b = this.y;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    this.last = a;
                    b = a = 1;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    this.scrollFactor = a;
                    this.pixelPerfectPosition = O.defaultPixelPerfectPosition;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.velocity = a;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.acceleration = a;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.drag = a;
                    b = a = 1E4;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    this.maxVelocity = a
                },
                destroy: function() {
                    J.prototype.destroy.call(this);
                    this.velocity = V.put(this.velocity);
                    this.acceleration = V.put(this.acceleration);
                    this.drag = V.put(this.drag);
                    this.maxVelocity = V.put(this.maxVelocity);
                    this.scrollFactor = V.put(this.scrollFactor);
                    this.last = V.put(this.last);
                    this._point = V.put(this._point);
                    this._rect = V.put(this._rect)
                },
                update: function(a) {
                    this.last.set(this.x, this.y);
                    null != this.path &&
                        this.path.active && this.path.update(a);
                    this.moves && this.updateMotion(a);
                    this.wasTouching = this.touching;
                    this.touching = 0
                },
                updateMotion: function(a) {
                    var b = .5 * (Ph.computeVelocity(this.angularVelocity, this.angularAcceleration, this.angularDrag, this.maxAngular, a) - this.angularVelocity);
                    this.angularVelocity += b;
                    var c = this;
                    c.set_angle(c.angle + this.angularVelocity * a);
                    this.angularVelocity += b;
                    b = .5 * (Ph.computeVelocity(this.velocity.x, this.acceleration.x, this.drag.x, this.maxVelocity.x, a) - this.velocity.x);
                    c = this.velocity;
                    c.set_x(c.x + b);
                    var d = this.velocity.x * a;
                    c = this.velocity;
                    c.set_x(c.x + b);
                    c = this;
                    c.set_x(c.x + d);
                    b = .5 * (Ph.computeVelocity(this.velocity.y, this.acceleration.y, this.drag.y, this.maxVelocity.y, a) - this.velocity.y);
                    c = this.velocity;
                    c.set_y(c.y + b);
                    d = this.velocity.y * a;
                    c = this.velocity;
                    c.set_y(c.y + b);
                    c = this;
                    c.set_y(c.y + d)
                },
                draw: function() {},
                overlapsPoint: function(a, b, c) {
                    null == b && (b = !1);
                    if (!b) return a.x >= this.x && a.x < this.x + this.get_width() && a.y >= this.y ? a.y < this.y + this.get_height() : !1;
                    null == c && (c = q.camera);
                    b = a.x - c.scroll.x;
                    var d = a.y - c.scroll.y;
                    this.getScreenPosition(this._point, c);
                    a._weak && a.put();
                    return b >= this._point.x && b < this._point.x + this.get_width() && d >= this._point.y ? d < this._point.y + this.get_height() : !1
                },
                getScreenPosition: function(a, b) {
                    null == a && (a = X._pool.get().set(0, 0), a._inPool = !1);
                    null == b && (b = q.camera);
                    a.set(this.x, this.y);
                    this.pixelPerfectPosition && (a.set_x(Math.floor(a.x)), a.set_y(Math.floor(a.y)));
                    var c = b.scroll.x * this.scrollFactor.x;
                    b = b.scroll.y * this.scrollFactor.y;
                    null == b && (b = 0);
                    null == c && (c = 0);
                    var d = a;
                    d.set_x(d.x - c);
                    d = a;
                    d.set_y(d.y - b);
                    return a
                },
                getPosition: function(a) {
                    null == a && (a = X._pool.get().set(0, 0), a._inPool = !1);
                    return a.set(this.x, this.y)
                },
                getMidpoint: function(a) {
                    null == a && (a = X._pool.get().set(0, 0), a._inPool = !1);
                    return a.set(this.x + .5 * this.get_width(), this.y + .5 * this.get_height())
                },
                isOnScreen: function(a) {
                    null == a && (a = q.camera);
                    this.getScreenPosition(this._point, a);
                    var b = this._point,
                        c = this.get_width(),
                        d = this.get_height();
                    null == d && (d = 0);
                    null == c && (c = 0);
                    return b.x + c > a.viewOffsetX && b.x < a.viewOffsetWidth &&
                        b.y + d > a.viewOffsetY ? b.y < a.viewOffsetHeight : !1
                },
                isPixelPerfectRender: function(a) {
                    null == a && (a = q.camera);
                    return null == this.pixelPerfectRender ? a.pixelPerfectRender : this.pixelPerfectRender
                },
                screenCenter: function(a) {
                    null == a && (a = vd.XY);
                    a != vd.Y && this.set_x(q.width / 2 - this.get_width() / 2);
                    a != vd.X && this.set_y(q.height / 2 - this.get_height() / 2);
                    return this
                },
                setPosition: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.set_x(a);
                    this.set_y(b)
                },
                toString: function() {
                    var a = this.x,
                        b = Xb._pool.get();
                    b.label = "x";
                    b.value = a;
                    a = this.y;
                    var c = Xb._pool.get();
                    c.label = "y";
                    c.value = a;
                    a = this.get_width();
                    var d = Xb._pool.get();
                    d.label = "w";
                    d.value = a;
                    a = this.get_height();
                    var e = Xb._pool.get();
                    e.label = "h";
                    e.value = a;
                    a = this.visible;
                    var f = Xb._pool.get();
                    f.label = "visible";
                    f.value = a;
                    a = this.velocity;
                    var k = Xb._pool.get();
                    k.label = "velocity";
                    k.value = a;
                    return ub.getDebugString([b, c, d, e, f, k])
                },
                set_x: function(a) {
                    return this.x = a
                },
                set_y: function(a) {
                    return this.y = a
                },
                set_width: function(a) {
                    return this.width = a
                },
                set_height: function(a) {
                    return this.height =
                        a
                },
                get_width: function() {
                    return this.width
                },
                get_height: function() {
                    return this.height
                },
                set_angle: function(a) {
                    return this.angle = a
                },
                set_moves: function(a) {
                    return this.moves = a
                },
                set_immovable: function(a) {
                    return this.immovable = a
                },
                set_allowCollisions: function(a) {
                    return this.allowCollisions = a
                },
                __class__: O,
                __properties__: n(J.prototype.__properties__, {
                    set_allowCollisions: "set_allowCollisions",
                    set_immovable: "set_immovable",
                    set_moves: "set_moves",
                    set_angle: "set_angle",
                    set_height: "set_height",
                    get_height: "get_height",
                    set_width: "set_width",
                    get_width: "get_width",
                    set_y: "set_y",
                    set_x: "set_x"
                })
            });
            var G = function(a, b, c) {
                null == b && (b = 0);
                null == a && (a = 0);
                this._angleChanged = !0;
                this._cosAngle = 1;
                this._sinAngle = 0;
                this._facingHorizontalMult = this._facingVerticalMult = 1;
                this.useColorTransform = !1;
                this.color = 16777215;
                this.flipX = this.flipY = !1;
                this.alpha = 1;
                this.frameWidth = this.frameHeight = this.numFrames = this.bakedRotationAngle = 0;
                this.dirty = !0;
                this.antialiasing = !1;
                this.useFramePixels = !0;
                O.call(this, a, b);
                this.set_useFramePixels(q.renderBlit);
                null != c && this.loadGraphic(c)
            };
            g["flixel.FlxSprite"] = G;
            G.__name__ = "flixel.FlxSprite";
            G.__super__ = O;
            G.prototype = n(O.prototype, {
                initVars: function() {
                    O.prototype.initVars.call(this);
                    this.animation = new Qh(this);
                    this._flashPoint = new La;
                    this._flashRect = new fa;
                    this._flashRect2 = new fa;
                    this._flashPointZero = new La;
                    var a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.offset = a;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.origin = a;
                    var b = a = 1;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    this.scale =
                        a;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this._halfSize = a;
                    this._matrix = new Mf;
                    this.colorTransform = new wb
                },
                destroy: function() {
                    O.prototype.destroy.call(this);
                    this.animation = V.destroy(this.animation);
                    this.offset = V.put(this.offset);
                    this.origin = V.put(this.origin);
                    this.scale = V.put(this.scale);
                    this._halfSize = V.put(this._halfSize);
                    this.framePixels = V.dispose(this.framePixels);
                    this.colorTransform = this._matrix = this._flashPointZero = this._flashRect2 = this._flashRect = this._flashPoint = null;
                    this.set_blend(null);
                    this.set_frames(null);
                    this.set_graphic(null);
                    this._frame = V.destroy(this._frame);
                    this._frameGraphic = V.destroy(this._frameGraphic);
                    this.shader = null
                },
                loadGraphic: function(a, b, c, d, e, f) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = !1);
                    a = q.bitmap.add(a, e, f);
                    if (null == a) return this;
                    0 == c && (c = b ? a.height : a.width, c > a.width && (c = a.width));
                    0 == d && (d = b ? c : a.height, d > a.height && (d = a.height));
                    b ? (b = c, null == d && (d = 0), null == b && (b = 0), d = X._pool.get().set(b, d), d._inPool = !1, this.set_frames(mf.fromGraphic(a, d))) : this.set_frames(a.get_imageFrame());
                    return this
                },
                makeGraphic: function(a, b, c, d, e) {
                    null == d && (d = !1);
                    null == c && (c = -1);
                    a = q.bitmap.create(a, b, c, d, e);
                    this.set_frames(a.get_imageFrame());
                    return this
                },
                graphicLoaded: function() {},
                setGraphicSize: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    if (!(0 >= a && 0 >= b)) {
                        var c = a / this.frameWidth,
                            d = b / this.frameHeight;
                        this.scale.set(c, d);
                        0 >= a ? this.scale.set_x(d) : 0 >= b && this.scale.set_y(c)
                    }
                },
                updateHitbox: function() {
                    this.set_width(Math.abs(this.scale.x) * this.frameWidth);
                    this.set_height(Math.abs(this.scale.y) * this.frameHeight);
                    this.offset.set(-.5 * (this.get_width() - this.frameWidth), -.5 * (this.get_height() - this.frameHeight));
                    this.origin.set(.5 * this.frameWidth, .5 * this.frameHeight)
                },
                resetHelpers: function() {
                    null != this.frame && (this.frameWidth = this.frame.sourceSize.x | 0, this.frameHeight = this.frame.sourceSize.y | 0);
                    this._halfSize.set(.5 * this.frameWidth, .5 * this.frameHeight);
                    this._flashRect.x = 0;
                    this._flashRect.y = 0;
                    this._flashRect.width = this.frameWidth;
                    this._flashRect.height = this.frameHeight;
                    this.set_width(this.frameWidth);
                    this.set_height(this.frameHeight);
                    this._flashRect2.x = 0;
                    this._flashRect2.y = 0;
                    null != this.graphic && (this._flashRect2.width = this.graphic.width, this._flashRect2.height = this.graphic.height);
                    this.origin.set(.5 * this.frameWidth, .5 * this.frameHeight);
                    q.renderBlit && (this.dirty = !0, this.updateFramePixels())
                },
                update: function(a) {
                    O.prototype.update.call(this, a);
                    this.updateAnimation(a)
                },
                updateAnimation: function(a) {
                    this.animation.update(a)
                },
                checkEmptyFrame: function() {
                    null == this._frame && this.loadGraphic("flixel/images/logo/default.png")
                },
                draw: function() {
                    this.checkEmptyFrame();
                    if (0 != this.alpha && 2 != this._frame.type) {
                        this.dirty && this.calcFrame(this.useFramePixels);
                        for (var a = 0, b = this.get_cameras(); a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.visible && c.exists && this.isOnScreen(c) && (this.getScreenPosition(this._point, c).subtractPoint(this.offset), this.isSimpleRender(c) ? this.drawSimple(c) : this.drawComplex(c))
                        }
                    }
                },
                drawSimple: function(a) {
                    if (this.isPixelPerfectRender(a)) {
                        var b = this._point;
                        b.set_x(Math.floor(b.x));
                        b.set_y(Math.floor(b.y))
                    }
                    b = this._point;
                    var c = this._flashPoint;
                    null == c && (c = new La);
                    c.x = b.x;
                    c.y = b.y;
                    a.copyPixels(this._frame, this.framePixels, this._flashRect, this._flashPoint, this.colorTransform, this.blend, this.antialiasing)
                },
                drawComplex: function(a) {
                    var b = this.flipX != this._frame.flipX,
                        c = this.flipY != this._frame.flipY;
                    this._frame.prepareMatrix(this._matrix, 0, null != this.animation._curAnim ? b != this.animation._curAnim.flipX : b, null != this.animation._curAnim ? c != this.animation._curAnim.flipY : c);
                    this._matrix.translate(-this.origin.x, -this.origin.y);
                    this._matrix.scale(this.scale.x, this.scale.y);
                    if (0 >= this.bakedRotationAngle && (this._angleChanged && (b = Math.PI / 180 * this.angle, this._sinAngle = Math.sin(b), this._cosAngle = Math.cos(b), this._angleChanged = !1), 0 != this.angle)) {
                        b = this._matrix;
                        c = this._cosAngle;
                        var d = this._sinAngle,
                            e = b.a * c - b.b * d;
                        b.b = b.a * d + b.b * c;
                        b.a = e;
                        e = b.c * c - b.d * d;
                        b.d = b.c * d + b.d * c;
                        b.c = e;
                        e = b.tx * c - b.ty * d;
                        b.ty = b.tx * d + b.ty * c;
                        b.tx = e
                    }
                    b = this._point;
                    c = this.origin.x;
                    d = this.origin.y;
                    null == d && (d = 0);
                    null == c && (c = 0);
                    e = b;
                    e.set_x(e.x + c);
                    e = b;
                    e.set_y(e.y + d);
                    this._matrix.translate(this._point.x, this._point.y);
                    this.isPixelPerfectRender(a) && (this._matrix.tx = Math.floor(this._matrix.tx), this._matrix.ty = Math.floor(this._matrix.ty));
                    a.drawPixels(this._frame, this.framePixels, this._matrix, this.colorTransform, this.blend, this.antialiasing, this.shader)
                },
                stamp: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    a.drawFrame();
                    if (null == this.graphic || null == a.graphic) throw F.thrown("Cannot stamp to or from a FlxSprite with no graphics.");
                    var d = a.framePixels;
                    this.isSimpleRenderBlit() ? (this._flashPoint.x = b + this.frame.frame.x,
                        this._flashPoint.y = c + this.frame.frame.y, this._flashRect2.width = d.width, this._flashRect2.height = d.height, this.graphic.bitmap.copyPixels(d, this._flashRect2, this._flashPoint, null, null, !0), this._flashRect2.width = this.graphic.bitmap.width, this._flashRect2.height = this.graphic.bitmap.height) : (this._matrix.identity(), this._matrix.translate(-a.origin.x, -a.origin.y), this._matrix.scale(a.scale.x, a.scale.y), 0 != a.angle && this._matrix.rotate(Math.PI / 180 * a.angle), this._matrix.translate(b + this.frame.frame.x + a.origin.x,
                        c + this.frame.frame.y + a.origin.y), this.graphic.bitmap.draw(d, this._matrix, null, a.blend, null, a.antialiasing));
                    q.renderBlit && (this.dirty = !0, this.calcFrame())
                },
                drawFrame: function(a) {
                    null == a && (a = !1);
                    if (q.renderBlit) {
                        if (a || this.dirty) this.dirty = !0, this.calcFrame()
                    } else this.dirty = !0, this.calcFrame(!0)
                },
                centerOffsets: function(a) {
                    null == a && (a = !1);
                    this.offset.set_x(.5 * (this.frameWidth - this.get_width()));
                    this.offset.set_y(.5 * (this.frameHeight - this.get_height()));
                    a && (a = this, a.set_x(a.x + this.offset.x), a = this,
                        a.set_y(a.y + this.offset.y))
                },
                updateColorTransform: function() {
                    null == this.colorTransform && (this.colorTransform = new wb);
                    (this.useColorTransform = 1 != this.alpha || 16777215 != this.color) ? ie.setMultipliers(this.colorTransform, (this.color >> 16 & 255) / 255, (this.color >> 8 & 255) / 255, (this.color & 255) / 255, this.alpha): ie.setMultipliers(this.colorTransform, 1, 1, 1, 1);
                    this.dirty = !0
                },
                calcFrame: function(a) {
                    null == a && (a = !1);
                    this.checkEmptyFrame();
                    q.renderTile && !a || this.updateFramePixels()
                },
                updateFramePixels: function() {
                    if (null ==
                        this._frame || !this.dirty) return this.framePixels;
                    if (q.renderTile && null != this._frameGraphic) return this.dirty = !1, this.framePixels;
                    var a = this.flipX != this._frame.flipX;
                    a = null != this.animation._curAnim ? a != this.animation._curAnim.flipX : a;
                    var b = this.flipY != this._frame.flipY;
                    b = null != this.animation._curAnim ? b != this.animation._curAnim.flipY : b;
                    this.framePixels = a || b || 0 != this._frame.type ? this._frame.paintRotatedAndFlipped(this.framePixels, this._flashPointZero, 0, a, b, !1, !0) : this._frame.paint(this.framePixels, this._flashPointZero, !1, !0);
                    this.useColorTransform && this.framePixels.colorTransform(this._flashRect, this.colorTransform);
                    q.renderTile && this.useFramePixels && (this._frameGraphic = V.destroy(this._frameGraphic), this._frameGraphic = zb.fromBitmapData(this.framePixels, !1, null, !1), this._frame = this._frameGraphic.get_imageFrame().get_frame().copyTo(this._frame));
                    this.dirty = !1;
                    return this.framePixels
                },
                getGraphicMidpoint: function(a) {
                    null == a && (a = X._pool.get().set(0, 0), a._inPool = !1);
                    return a.set(this.x + .5 * this.frameWidth, this.y + .5 * this.frameHeight)
                },
                isOnScreen: function(a) {
                    null == a && (a = q.camera);
                    var b = this.x - this.offset.x - a.scroll.x * this.scrollFactor.x,
                        c = this.y - this.offset.y - a.scroll.y * this.scrollFactor.y;
                    if ((0 == this.angle || 0 < this.bakedRotationAngle) && 1 == this.scale.x && 1 == this.scale.y) {
                        this._point.set(b, c);
                        b = this._point;
                        c = this.frameWidth;
                        var d = this.frameHeight;
                        null == d && (d = 0);
                        null == c && (c = 0);
                        return b.x + c > a.viewOffsetX && b.x < a.viewOffsetWidth && b.y + d > a.viewOffsetY ? b.y < a.viewOffsetHeight : !1
                    }
                    var e = this._halfSize.x,
                        f = this._halfSize.y;
                    d = this.origin.x;
                    d !=
                        e && (e = Math.max(Math.abs(this.frameWidth - d), Math.abs(d)));
                    var k = this.origin.y;
                    k != f && (f = Math.max(Math.abs(this.frameHeight - k), Math.abs(k)));
                    e *= Math.abs(this.scale.x);
                    f *= Math.abs(this.scale.y);
                    f = Math.max(e, f);
                    f *= 1.41421356237;
                    e = 2 * f;
                    this._point.set(b + (d - f), c + (k - f));
                    b = this._point;
                    d = c = e;
                    null == d && (d = 0);
                    null == c && (c = 0);
                    return b.x + c > a.viewOffsetX && b.x < a.viewOffsetWidth && b.y + d > a.viewOffsetY ? b.y < a.viewOffsetHeight : !1
                },
                isSimpleRender: function(a) {
                    return q.renderTile ? !1 : this.isSimpleRenderBlit(a)
                },
                isSimpleRenderBlit: function(a) {
                    var b =
                        (0 == this.angle || 0 < this.bakedRotationAngle) && 1 == this.scale.x && 1 == this.scale.y && null == this.blend;
                    return b = b && (null != a ? this.isPixelPerfectRender(a) : this.pixelPerfectRender)
                },
                get_pixels: function() {
                    return null == this.graphic ? null : this.graphic.bitmap
                },
                set_pixels: function(a) {
                    var b = q.bitmap.findKeyForBitmap(a);
                    null == b ? (b = q.bitmap.getUniqueKey(), this.set_graphic(q.bitmap.add(a, !1, b))) : this.set_graphic(q.bitmap._cache.h[b]);
                    this.set_frames(this.graphic.get_imageFrame());
                    return a
                },
                set_frame: function(a) {
                    this.frame =
                        a;
                    if (null != this.frame) null != this.frame && (this.frameWidth = this.frame.sourceSize.x | 0, this.frameHeight = this.frame.sourceSize.y | 0), this._halfSize.set(.5 * this.frameWidth, .5 * this.frameHeight), this._flashRect.x = 0, this._flashRect.y = 0, this._flashRect.width = this.frameWidth, this._flashRect.height = this.frameHeight, this.dirty = !0;
                    else if (null != this.frames && null != this.frames.frames && 0 < this.numFrames) this.frame = this.frames.frames[0], this.dirty = !0;
                    else return null;
                    q.renderTile && (this._frameGraphic = V.destroy(this._frameGraphic));
                    this._frame = null != this.clipRect ? this.frame.clipTo(this.clipRect, this._frame) : this.frame.copyTo(this._frame);
                    return this.frame
                },
                set_alpha: function(a) {
                    if (this.alpha == a) return a;
                    a = 0 > a ? 0 : a;
                    this.alpha = 1 < a ? 1 : a;
                    this.updateColorTransform();
                    return this.alpha
                },
                set_color: function(a) {
                    if (this.color == a) return a;
                    this.color = a;
                    this.updateColorTransform();
                    return this.color
                },
                set_angle: function(a) {
                    var b = this.angle != a;
                    a = O.prototype.set_angle.call(this, a);
                    b && (this._angleChanged = !0, this.animation.update(0));
                    return a
                },
                set_blend: function(a) {
                    return this.blend =
                        a
                },
                set_graphic: function(a) {
                    var b = this.graphic;
                    if (this.graphic != a && null != a) {
                        var c = a;
                        c.set_useCount(c.get_useCount() + 1)
                    }
                    null != b && b != a && (c = b, c.set_useCount(c.get_useCount() - 1));
                    return this.graphic = a
                },
                set_clipRect: function(a) {
                    null != a ? (a.x = Math.round(a.x), a.y = Math.round(a.y), a.width = Math.round(a.width), a.height = Math.round(a.height), this.clipRect = a) : this.clipRect = null;
                    null != this.frames && this.set_frame(this.frames.frames[this.animation.frameIndex]);
                    return a
                },
                set_frames: function(a) {
                    null != this.animation &&
                        this.animation.destroyAnimations();
                    null != a ? (this.set_graphic(a.parent), this.frames = a, this.set_frame(this.frames.frames[0]), this.numFrames = this.frames.frames.length, this.resetHelpers(), this.bakedRotationAngle = 0, this.animation.set_frameIndex(0), this.graphicLoaded()) : (this.frames = null, this.set_frame(null), this.set_graphic(null));
                    return a
                },
                set_flipX: function(a) {
                    q.renderTile && (this._facingHorizontalMult = a ? -1 : 1);
                    this.dirty = this.flipX != a || this.dirty;
                    return this.flipX = a
                },
                set_flipY: function(a) {
                    q.renderTile &&
                        (this._facingVerticalMult = a ? -1 : 1);
                    this.dirty = this.flipY != a || this.dirty;
                    return this.flipY = a
                },
                set_antialiasing: function(a) {
                    return this.antialiasing = a
                },
                set_useFramePixels: function(a) {
                    return q.renderTile ? (a != this.useFramePixels && (this.useFramePixels = a, this.set_frame(this.frame), a && this.updateFramePixels()), a) : this.useFramePixels = !0
                },
                __class__: G,
                __properties__: n(O.prototype.__properties__, {
                    set_clipRect: "set_clipRect",
                    set_color: "set_color",
                    set_blend: "set_blend",
                    set_flipY: "set_flipY",
                    set_flipX: "set_flipX",
                    set_alpha: "set_alpha",
                    set_graphic: "set_graphic",
                    set_frames: "set_frames",
                    set_frame: "set_frame",
                    set_pixels: "set_pixels",
                    get_pixels: "get_pixels",
                    set_antialiasing: "set_antialiasing",
                    set_useFramePixels: "set_useFramePixels"
                })
            });
            var ka = function(a, b, c) {
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.directAlpha = this._skipTransformChildren = !1;
                G.call(this, a, b);
                this.group = new Ra(c);
                this._sprites = this.group.members
            };
            g["flixel.group.FlxTypedSpriteGroup"] = ka;
            ka.__name__ = "flixel.group.FlxTypedSpriteGroup";
            ka.__super__ =
                G;
            ka.prototype = n(G.prototype, {
                transformChildren_flixel_math_FlxRect: function(a, b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                transformChildren_flash_display_BlendMode: function(a, b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                multiTransformChildren_Float: function(a, b) {
                    if (null != this.group) {
                        var c = a.length;
                        if (!(c > b.length))
                            for (var d, e = 0, f = this._sprites; e < f.length;) {
                                var k = f[e];
                                ++e;
                                if (null != k && k.exists)
                                    for (var p =
                                            0, m = c; p < m;) {
                                        var ja = p++;
                                        d = a[ja];
                                        d(k, b[ja])
                                    }
                            }
                    }
                },
                transformChildren_flixel_math_FlxPoint: function(a, b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                transformChildren_Int: function(a, b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                transformChildren_Float: function(a, b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                transformChildren_Array_flixel_FlxCamera: function(a,
                    b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                transformChildren_Bool: function(a, b) {
                    if (null != this.group)
                        for (var c = 0, d = this._sprites; c < d.length;) {
                            var e = d[c];
                            ++c;
                            null != e && a(e, b)
                        }
                },
                initVars: function() {
                    this.flixelType = 4;
                    this.offset = new Nf(r(this, this.offsetCallback));
                    this.origin = new Nf(r(this, this.originCallback));
                    this.scale = new Nf(r(this, this.scaleCallback));
                    this.scrollFactor = new Nf(r(this, this.scrollFactorCallback));
                    this.scale.set(1, 1);
                    this.scrollFactor.set(1,
                        1);
                    var a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.velocity = a;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.acceleration = a;
                    a = X._pool.get().set(0, 0);
                    a._inPool = !1;
                    this.drag = a;
                    var b = a = 1E4;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    this.maxVelocity = a
                },
                destroy: function() {
                    this.offset = V.destroy(this.offset);
                    this.origin = V.destroy(this.origin);
                    this.scale = V.destroy(this.scale);
                    this.scrollFactor = V.destroy(this.scrollFactor);
                    this.group = V.destroy(this.group);
                    this._sprites = null;
                    G.prototype.destroy.call(this)
                },
                isOnScreen: function(a) {
                    for (var b = 0, c = this._sprites; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (null != d && d.exists && d.visible && d.isOnScreen(a)) return !0
                    }
                    return !1
                },
                overlapsPoint: function(a, b, c) {
                    null == b && (b = !1);
                    for (var d = !1, e = 0, f = this._sprites; e < f.length;) {
                        var k = f[e];
                        ++e;
                        null != k && k.exists && k.visible && (d = d || k.overlapsPoint(a, b, c))
                    }
                    return d
                },
                update: function(a) {
                    this.group.update(a);
                    this.moves && this.updateMotion(a)
                },
                draw: function() {
                    this.group.draw()
                },
                add: function(a) {
                    this.preAdd(a);
                    return this.group.add(a)
                },
                preAdd: function(a) {
                    var b =
                        a;
                    b.set_x(b.x + this.x);
                    b = a;
                    b.set_y(b.y + this.y);
                    b = a;
                    b.set_alpha(b.alpha * this.alpha);
                    b = a.scrollFactor;
                    var c = this.scrollFactor;
                    b.set_x(c.x);
                    b.set_y(c.y);
                    c._weak && c.put();
                    a.set_cameras(this._cameras);
                    if (null != this.clipRect)
                        if (b = this.clipRect, null == b) a.set_clipRect(null);
                        else {
                            var d = b.x - a.x + this.x,
                                e = b.y - a.y + this.y;
                            c = b.width;
                            var f = b.height;
                            null == f && (f = 0);
                            null == c && (c = 0);
                            null == e && (e = 0);
                            null == d && (d = 0);
                            b = ca._pool.get();
                            null == f && (f = 0);
                            null == c && (c = 0);
                            null == e && (e = 0);
                            null == d && (d = 0);
                            b.x = d;
                            b.y = e;
                            b.width = c;
                            b.height =
                                f;
                            b._inPool = !1;
                            a.set_clipRect(b)
                        }
                },
                remove: function(a, b) {
                    null == b && (b = !1);
                    var c = a;
                    c.set_x(c.x - this.x);
                    c = a;
                    c.set_y(c.y - this.y);
                    a.set_cameras(null);
                    return this.group.remove(a, b)
                },
                kill: function() {
                    G.prototype.kill.call(this);
                    this.group.kill()
                },
                revive: function() {
                    G.prototype.revive.call(this);
                    this.group.revive()
                },
                setPosition: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    var c = a - this.x,
                        d = b - this.y;
                    this.multiTransformChildren_Float([r(this, this.xTransform), r(this, this.yTransform)], [c, d]);
                    this._skipTransformChildren = !0;
                    this.set_x(a);
                    this.set_y(b);
                    this._skipTransformChildren = !1
                },
                set_cameras: function(a) {
                    this.get_cameras() != a && this.transformChildren_Array_flixel_FlxCamera(r(this, this.camerasTransform), a);
                    return G.prototype.set_cameras.call(this, a)
                },
                set_exists: function(a) {
                    this.exists != a && this.transformChildren_Bool(r(this, this.existsTransform), a);
                    return G.prototype.set_exists.call(this, a)
                },
                set_visible: function(a) {
                    this.exists && this.visible != a && this.transformChildren_Bool(r(this, this.visibleTransform), a);
                    return G.prototype.set_visible.call(this,
                        a)
                },
                set_active: function(a) {
                    this.exists && this.active != a && this.transformChildren_Bool(r(this, this.activeTransform), a);
                    return G.prototype.set_active.call(this, a)
                },
                set_alive: function(a) {
                    this.alive != a && this.transformChildren_Bool(r(this, this.aliveTransform), a);
                    return G.prototype.set_alive.call(this, a)
                },
                set_x: function(a) {
                    if (!this._skipTransformChildren && this.exists && this.x != a) {
                        var b = a - this.x;
                        this.transformChildren_Float(r(this, this.xTransform), b)
                    }
                    return this.x = a
                },
                set_y: function(a) {
                    if (!this._skipTransformChildren &&
                        this.exists && this.y != a) {
                        var b = a - this.y;
                        this.transformChildren_Float(r(this, this.yTransform), b)
                    }
                    return this.y = a
                },
                set_angle: function(a) {
                    if (this.exists && this.angle != a) {
                        var b = a - this.angle;
                        this.transformChildren_Float(r(this, this.angleTransform), b)
                    }
                    return this.angle = a
                },
                set_alpha: function(a) {
                    a = 0 > a ? 0 : a;
                    a = 1 < a ? 1 : a;
                    if (this.exists && this.alpha != a) {
                        var b = 0 < this.alpha ? a / this.alpha : 0;
                        this.directAlpha || 0 == this.alpha ? this.transformChildren_Float(r(this, this.directAlphaTransform), a) : this.transformChildren_Float(r(this,
                            this.alphaTransform), b)
                    }
                    return this.alpha = a
                },
                set_flipX: function(a) {
                    this.exists && this.flipX != a && this.transformChildren_Bool(r(this, this.flipXTransform), a);
                    return this.flipX = a
                },
                set_flipY: function(a) {
                    this.exists && this.flipY != a && this.transformChildren_Bool(r(this, this.flipYTransform), a);
                    return this.flipY = a
                },
                set_moves: function(a) {
                    this.exists && this.moves != a && this.transformChildren_Bool(r(this, this.movesTransform), a);
                    return this.moves = a
                },
                set_immovable: function(a) {
                    this.exists && this.immovable != a && this.transformChildren_Bool(r(this,
                        this.immovableTransform), a);
                    return this.immovable = a
                },
                set_color: function(a) {
                    this.exists && this.color != a && this.transformChildren_Int(r(this, this.gColorTransform), a);
                    return this.color = a
                },
                set_blend: function(a) {
                    this.exists && this.blend != a && this.transformChildren_flash_display_BlendMode(r(this, this.blendTransform), a);
                    return this.blend = a
                },
                set_clipRect: function(a) {
                    this.exists && this.transformChildren_flixel_math_FlxRect(r(this, this.clipRectTransform), a);
                    return G.prototype.set_clipRect.call(this, a)
                },
                set_width: function(a) {
                    return a
                },
                get_width: function() {
                    if (0 == this.group.length) return 0;
                    for (var a = Infinity, b = -Infinity, c = 0, d = this._sprites; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (null != e) {
                            var f = e.x;
                            e = f + e.get_width();
                            e > b && (b = e);
                            f < a && (a = f)
                        }
                    }
                    return b - a
                },
                set_height: function(a) {
                    return a
                },
                get_height: function() {
                    if (0 == this.group.length) return 0;
                    for (var a = Infinity, b = -Infinity, c = 0, d = this._sprites; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (null != e) {
                            var f = e.y;
                            e = f + e.get_height();
                            e > b && (b = e);
                            f < a && (a = f)
                        }
                    }
                    return b - a
                },
                xTransform: function(a, b) {
                    a.set_x(a.x + b)
                },
                yTransform: function(a,
                    b) {
                    a.set_y(a.y + b)
                },
                angleTransform: function(a, b) {
                    a.set_angle(a.angle + b)
                },
                alphaTransform: function(a, b) {
                    0 != a.alpha || 0 == b ? a.set_alpha(a.alpha * b) : a.set_alpha(1 / b)
                },
                directAlphaTransform: function(a, b) {
                    a.set_alpha(b)
                },
                flipXTransform: function(a, b) {
                    a.set_flipX(b)
                },
                flipYTransform: function(a, b) {
                    a.set_flipY(b)
                },
                movesTransform: function(a, b) {
                    a.set_moves(b)
                },
                gColorTransform: function(a, b) {
                    a.set_color(b)
                },
                blendTransform: function(a, b) {
                    a.set_blend(b)
                },
                immovableTransform: function(a, b) {
                    a.set_immovable(b)
                },
                visibleTransform: function(a,
                    b) {
                    a.set_visible(b)
                },
                activeTransform: function(a, b) {
                    a.set_active(b)
                },
                aliveTransform: function(a, b) {
                    a.set_alive(b)
                },
                existsTransform: function(a, b) {
                    a.set_exists(b)
                },
                camerasTransform: function(a, b) {
                    a.set_cameras(b)
                },
                offsetTransform: function(a, b) {
                    a = a.offset;
                    a.set_x(b.x);
                    a.set_y(b.y);
                    b._weak && b.put()
                },
                originTransform: function(a, b) {
                    a = a.origin;
                    a.set_x(b.x);
                    a.set_y(b.y);
                    b._weak && b.put()
                },
                scaleTransform: function(a, b) {
                    a = a.scale;
                    a.set_x(b.x);
                    a.set_y(b.y);
                    b._weak && b.put()
                },
                scrollFactorTransform: function(a, b) {
                    a = a.scrollFactor;
                    a.set_x(b.x);
                    a.set_y(b.y);
                    b._weak && b.put()
                },
                clipRectTransform: function(a, b) {
                    if (null == b) a.set_clipRect(null);
                    else {
                        var c = b.x - a.x + this.x,
                            d = b.y - a.y + this.y,
                            e = b.width,
                            f = b.height;
                        null == f && (f = 0);
                        null == e && (e = 0);
                        null == d && (d = 0);
                        null == c && (c = 0);
                        b = ca._pool.get();
                        null == f && (f = 0);
                        null == e && (e = 0);
                        null == d && (d = 0);
                        null == c && (c = 0);
                        b.x = c;
                        b.y = d;
                        b.width = e;
                        b.height = f;
                        b._inPool = !1;
                        a.set_clipRect(b)
                    }
                },
                offsetCallback: function(a) {
                    this.transformChildren_flixel_math_FlxPoint(r(this, this.offsetTransform), a)
                },
                originCallback: function(a) {
                    this.transformChildren_flixel_math_FlxPoint(r(this,
                        this.originTransform), a)
                },
                scaleCallback: function(a) {
                    this.transformChildren_flixel_math_FlxPoint(r(this, this.scaleTransform), a)
                },
                scrollFactorCallback: function(a) {
                    this.transformChildren_flixel_math_FlxPoint(r(this, this.scrollFactorTransform), a)
                },
                loadGraphic: function(a, b, c, d, e, f) {
                    return this
                },
                makeGraphic: function(a, b, c, d, e) {
                    return this
                },
                set_pixels: function(a) {
                    return a
                },
                set_frame: function(a) {
                    return a
                },
                get_pixels: function() {
                    return null
                },
                calcFrame: function(a) {},
                resetHelpers: function() {},
                stamp: function(a,
                    b, c) {},
                set_frames: function(a) {
                    return a
                },
                updateColorTransform: function() {},
                __class__: ka
            });
            var pb = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = !1);
                null == c && (c = "");
                this.isBold = !1;
                this.splitWords = [];
                this.xPosResetted = this.lastWasSpace = !1;
                this.yMulti = 1;
                this.text = this._finalText = "";
                this.isMenuItem = !1;
                this.targetY = 0;
                ka.call(this, a, b);
                this.text = this._finalText = c;
                this.isBold = d;
                "" != c && (e ? this.startTypedText() : this.addText())
            };
            g.Alphabet = pb;
            pb.__name__ = "Alphabet";
            pb.__super__ = ka;
            pb.prototype = n(ka.prototype, {
                addText: function() {
                    this.doSplitWords();
                    for (var a = 0, b = 0, c = this.splitWords; b < c.length;) {
                        var d = c[b];
                        ++b;
                        " " == d && (this.lastWasSpace = !0);
                        if (-1 != da.alphabet.indexOf(d.toLowerCase())) {
                            null != this.lastSprite && (a = this.lastSprite.x + this.lastSprite.get_width());
                            this.lastWasSpace && (a += 40, this.lastWasSpace = !1);
                            var e = new da(a, 0);
                            this.isBold ? e.createBold(d) : e.createLetter(d);
                            this.add(e);
                            this.lastSprite = e
                        }
                    }
                },
                doSplitWords: function() {
                    this.splitWords = this._finalText.split("")
                },
                startTypedText: function() {
                    var a = this;
                    this._finalText =
                        this.text;
                    this.doSplitWords();
                    var b = 0,
                        c = 0,
                        d = 0;
                    (new Rc).start(.05, function(e) {
                        10 == a._finalText.charCodeAt(b) && (a.yMulti += 1, a.xPosResetted = !0, c = 0, d += 1);
                        " " == a.splitWords[b] && (a.lastWasSpace = !0);
                        var f = -1 != da.numbers.indexOf(a.splitWords[b]),
                            k = -1 != da.symbols.indexOf(a.splitWords[b]);
                        if (-1 != da.alphabet.indexOf(a.splitWords[b].toLowerCase()) || f || k) {
                            null == a.lastSprite || a.xPosResetted ? a.xPosResetted = !1 : (a.lastSprite.updateHitbox(), c += a.lastSprite.get_width() + 3);
                            a.lastWasSpace && (c += 20, a.lastWasSpace = !1);
                            var p =
                                new da(c, 55 * a.yMulti);
                            p.row = d;
                            a.isBold ? p.createBold(a.splitWords[b]) : (f ? p.createNumber(a.splitWords[b]) : k ? p.createSymbol(a.splitWords[b]) : p.createLetter(a.splitWords[b]), p.set_x(p.x + 90));
                            f = 40;
                            null == f && (f = 50);
                            q.random.float(0, 100) < f && q.sound.play("assets/sounds/GF_" + q.random.int(1, 4) + fb.soundExt, .4);
                            a.add(p);
                            a.lastSprite = p
                        }
                        b += 1;
                        e.time = q.random.float(.04, .09)
                    }, this.splitWords.length)
                },
                update: function(a) {
                    if (this.isMenuItem) {
                        var b = Qg.remapToRange(this.targetY, 0, 1, 0, 1.3),
                            c = this.y;
                        this.set_y(c + .16 * (120 *
                            b + .48 * q.height - c));
                        c = this.x;
                        this.set_x(c + .16 * (20 * this.targetY + 90 - c))
                    }
                    ka.prototype.update.call(this, a)
                },
                __class__: pb
            });
            var da = function(a, b) {
                this.row = 0;
                G.call(this, a, b);
                a = Nb.fromSparrow("assets/images/alphabet.png", "assets/images/alphabet.xml");
                this.set_frames(a);
                this.set_antialiasing(!0)
            };
            g.AlphaCharacter = da;
            da.__name__ = "AlphaCharacter";
            da.__super__ = G;
            da.prototype = n(G.prototype, {
                createBold: function(a) {
                    this.animation.addByPrefix(a, a.toUpperCase() + " bold", 24);
                    this.animation.play(a);
                    this.updateHitbox()
                },
                createLetter: function(a) {
                    var b = "lowercase";
                    a.toLowerCase() != a && (b = "capital");
                    this.animation.addByPrefix(a, a + " " + b, 24);
                    this.animation.play(a);
                    this.updateHitbox();
                    this.set_y(110 - this.get_height());
                    this.set_y(this.y + 60 * this.row)
                },
                createNumber: function(a) {
                    this.animation.addByPrefix(a, a, 24);
                    this.animation.play(a);
                    this.updateHitbox()
                },
                createSymbol: function(a) {
                    switch (a) {
                        case "!":
                            this.animation.addByPrefix(a, "exclamation point", 24);
                            this.animation.play(a);
                            break;
                        case "'":
                            this.animation.addByPrefix(a, "apostraphie",
                                24);
                            this.animation.play(a);
                            a = this;
                            a.set_y(a.y);
                            break;
                        case ".":
                            this.animation.addByPrefix(a, "period", 24);
                            this.animation.play(a);
                            a = this;
                            a.set_y(a.y + 50);
                            break;
                        case "?":
                            this.animation.addByPrefix(a, "question mark", 24), this.animation.play(a)
                    }
                    this.updateHitbox()
                },
                __class__: da
            });
            var Ba = function() {};
            g["lime.app.IModule"] = Ba;
            Ba.__name__ = "lime.app.IModule";
            Ba.__isInterface__ = !0;
            Ba.prototype = {
                __class__: Ba
            };
            var hb = function() {
                this.onExit = new Of
            };
            g["lime.app.Module"] = hb;
            hb.__name__ = "lime.app.Module";
            hb.__interfaces__ = [Ba];
            hb.prototype = {
                __registerLimeModule: function(a) {},
                __class__: hb
            };
            var va = function(a) {
                this.gameDeviceCache = new Tb;
                this.parent = a;
                this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
                this.framePeriod = -1;
                fg.init();
                this.accelerometer = wd.registerSensor(lm.ACCELEROMETER, 0)
            };
            g["lime._internal.backend.html5.HTML5Application"] = va;
            va.__name__ = "lime._internal.backend.html5.HTML5Application";
            va.prototype = {
                convertKeyCode: function(a) {
                    if (65 <= a && 90 >= a) return a + 32;
                    switch (a) {
                        case 12:
                            return 1073741980;
                        case 16:
                            return 1073742049;
                        case 17:
                            return 1073742048;
                        case 18:
                            return 1073742050;
                        case 19:
                            return 1073741896;
                        case 20:
                            return 1073741881;
                        case 33:
                            return 1073741899;
                        case 34:
                            return 1073741902;
                        case 35:
                            return 1073741901;
                        case 36:
                            return 1073741898;
                        case 37:
                            return 1073741904;
                        case 38:
                            return 1073741906;
                        case 39:
                            return 1073741903;
                        case 40:
                            return 1073741905;
                        case 41:
                            return 1073741943;
                        case 43:
                            return 1073741940;
                        case 44:
                            return 1073741894;
                        case 45:
                            return 1073741897;
                        case 46:
                            return 127;
                        case 91:
                            return 1073742051;
                        case 92:
                            return 1073742055;
                        case 93:
                            return 1073742055;
                        case 95:
                            return 1073742106;
                        case 96:
                            return 1073741922;
                        case 97:
                            return 1073741913;
                        case 98:
                            return 1073741914;
                        case 99:
                            return 1073741915;
                        case 100:
                            return 1073741916;
                        case 101:
                            return 1073741917;
                        case 102:
                            return 1073741918;
                        case 103:
                            return 1073741919;
                        case 104:
                            return 1073741920;
                        case 105:
                            return 1073741921;
                        case 106:
                            return 1073741909;
                        case 107:
                            return 1073741911;
                        case 108:
                            return 1073741923;
                        case 109:
                            return 1073741910;
                        case 110:
                            return 1073741923;
                        case 111:
                            return 1073741908;
                        case 112:
                            return 1073741882;
                        case 113:
                            return 1073741883;
                        case 114:
                            return 1073741884;
                        case 115:
                            return 1073741885;
                        case 116:
                            return 1073741886;
                        case 117:
                            return 1073741887;
                        case 118:
                            return 1073741888;
                        case 119:
                            return 1073741889;
                        case 120:
                            return 1073741890;
                        case 121:
                            return 1073741891;
                        case 122:
                            return 1073741892;
                        case 123:
                            return 1073741893;
                        case 124:
                            return 1073741928;
                        case 125:
                            return 1073741929;
                        case 126:
                            return 1073741930;
                        case 127:
                            return 1073741931;
                        case 128:
                            return 1073741932;
                        case 129:
                            return 1073741933;
                        case 130:
                            return 1073741934;
                        case 131:
                            return 1073741935;
                        case 132:
                            return 1073741936;
                        case 133:
                            return 1073741937;
                        case 134:
                            return 1073741938;
                        case 135:
                            return 1073741939;
                        case 144:
                            return 1073741907;
                        case 145:
                            return 1073741895;
                        case 160:
                            return 94;
                        case 161:
                            return 33;
                        case 163:
                            return 35;
                        case 164:
                            return 36;
                        case 166:
                            return 1073742094;
                        case 167:
                            return 1073742095;
                        case 168:
                            return 1073742097;
                        case 169:
                            return 41;
                        case 170:
                            return 42;
                        case 171:
                            return 96;
                        case 172:
                            return 1073741898;
                        case 173:
                            return 45;
                        case 174:
                            return 1073741953;
                        case 175:
                            return 1073741952;
                        case 176:
                            return 1073742082;
                        case 177:
                            return 1073742083;
                        case 178:
                            return 1073742084;
                        case 179:
                            return 1073742085;
                        case 180:
                            return 1073742089;
                        case 181:
                            return 1073742086;
                        case 182:
                            return 1073741953;
                        case 183:
                            return 1073741952;
                        case 186:
                            return 59;
                        case 187:
                            return 61;
                        case 188:
                            return 44;
                        case 189:
                            return 45;
                        case 190:
                            return 46;
                        case 191:
                            return 47;
                        case 192:
                            return 96;
                        case 193:
                            return 63;
                        case 194:
                            return 1073741923;
                        case 219:
                            return 91;
                        case 220:
                            return 92;
                        case 221:
                            return 93;
                        case 222:
                            return 39;
                        case 223:
                            return 96;
                        case 224:
                            return 1073742051;
                        case 226:
                            return 92
                    }
                    return a
                },
                exec: function() {
                    window.addEventListener("keydown",
                        r(this, this.handleKeyEvent), !1);
                    window.addEventListener("keyup", r(this, this.handleKeyEvent), !1);
                    window.addEventListener("focus", r(this, this.handleWindowEvent), !1);
                    window.addEventListener("blur", r(this, this.handleWindowEvent), !1);
                    window.addEventListener("resize", r(this, this.handleWindowEvent), !1);
                    window.addEventListener("beforeunload", r(this, this.handleWindowEvent), !1);
                    window.addEventListener("devicemotion", r(this, this.handleSensorEvent), !1);
                    CanvasRenderingContext2D.prototype.isPointInStroke || (CanvasRenderingContext2D.prototype.isPointInStroke =
                        function(a, b, c) {
                            return !1
                        });
                    CanvasRenderingContext2D.prototype.isPointInPath || (CanvasRenderingContext2D.prototype.isPointInPath = function(a, b, c) {
                        return !1
                    });
                    0 == "performance" in window && (window.performance = {});
                    if (0 == "now" in window.performance) {
                        var a = Date.now();
                        performance.timing && performance.timing.navigationStart && (a = performance.timing.navigationStart);
                        window.performance.now = function() {
                            return Date.now() - a
                        }
                    }
                    for (var b = 0, c = ["ms", "moz", "webkit", "o"], d = 0; d < c.length && !window.requestAnimationFrame; ++d) window.requestAnimationFrame =
                        window[c[d] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[c[d] + "CancelAnimationFrame"] || window[c[d] + "CancelRequestAnimationFrame"];
                    window.requestAnimationFrame || (window.requestAnimationFrame = function(a, c) {
                        var d = (new Date).getTime(),
                            e = Math.max(0, 16 - (d - b));
                        c = window.setTimeout(function() {
                            a(d + e)
                        }, e);
                        b = d + e;
                        return c
                    });
                    window.cancelAnimationFrame || (window.cancelAnimationFrame = function(a) {
                        clearTimeout(a)
                    });
                    window.requestAnimFrame = window.requestAnimationFrame;
                    this.lastUpdate = (new Date).getTime();
                    this.handleApplicationEvent();
                    return 0
                },
                exit: function() {},
                handleApplicationEvent: function(a) {
                    a = 0;
                    for (var b = this.parent.__windows; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.__backend.updateSize()
                    }
                    this.updateGameDevices();
                    this.currentUpdate = (new Date).getTime();
                    if (this.currentUpdate >= this.nextUpdate) {
                        this.deltaTime = this.currentUpdate - this.lastUpdate;
                        a = 0;
                        for (b = this.parent.__windows; a < b.length;) c = b[a], ++a, this.parent.onUpdate.dispatch(this.deltaTime | 0), null != c.context && c.onRender.dispatch(c.context);
                        this.nextUpdate =
                            0 > this.framePeriod ? this.currentUpdate : this.currentUpdate - this.currentUpdate % this.framePeriod + this.framePeriod;
                        this.lastUpdate = this.currentUpdate
                    }
                    window.requestAnimationFrame(r(this, this.handleApplicationEvent))
                },
                handleKeyEvent: function(a) {
                    if (null != this.parent.__window) {
                        var b = this.convertKeyCode(null != a.keyCode ? a.keyCode : a.which),
                            c = (a.shiftKey ? 3 : 0) | (a.ctrlKey ? 192 : 0) | (a.altKey ? 768 : 0) | (a.metaKey ? 3072 : 0);
                        "keydown" == a.type ? (this.parent.__window.onKeyDown.dispatch(b, c), this.parent.__window.onKeyDown.canceled &&
                            a.cancelable && a.preventDefault()) : (this.parent.__window.onKeyUp.dispatch(b, c), this.parent.__window.onKeyUp.canceled && a.cancelable && a.preventDefault())
                    }
                },
                handleSensorEvent: function(a) {
                    this.accelerometer.onUpdate.dispatch(a.accelerationIncludingGravity.x, a.accelerationIncludingGravity.y, a.accelerationIncludingGravity.z)
                },
                handleWindowEvent: function(a) {
                    if (null != this.parent.__window) switch (a.type) {
                        case "blur":
                            this.parent.__window.onFocusOut.dispatch();
                            this.parent.__window.onDeactivate.dispatch();
                            break;
                        case "focus":
                            this.parent.__window.onFocusIn.dispatch();
                            this.parent.__window.onActivate.dispatch();
                            break;
                        case "resize":
                            this.parent.__window.__backend.handleResizeEvent(a)
                    }
                },
                updateGameDevices: function() {
                    var a = Ub.__getDeviceData();
                    if (null != a)
                        for (var b, c, d, e, f, k = 0, p = a.length; k < p;)
                            if (b = k++, e = a[b], null != e) {
                                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                                    f = new ik;
                                    f.id = b;
                                    f.connected = e.connected;
                                    c = 0;
                                    for (d = e.buttons.length; c < d;) {
                                        var m = c++;
                                        f.buttons.push(e.buttons[m].value)
                                    }
                                    c = 0;
                                    for (d = e.axes.length; c < d;) m = c++,
                                        f.axes.push(e.axes[m]);
                                    "standard" == e.mapping && (f.isGamepad = !0);
                                    this.gameDeviceCache.h[b] = f;
                                    e.connected && (Ub.__connect(b), f.isGamepad && ac.__connect(b))
                                }
                                f = this.gameDeviceCache.h[b];
                                d = Ub.devices.h[b];
                                c = ac.devices.h[b];
                                if (e.connected) {
                                    for (var ja = 0, h = e.buttons.length; ja < h;) {
                                        var l = ja++;
                                        m = e.buttons[l].value;
                                        if (m != f.buttons[l]) {
                                            if (6 == l) d.onAxisMove.dispatch(e.axes.length, m), null != c && c.onAxisMove.dispatch(4, m);
                                            else if (7 == l) d.onAxisMove.dispatch(e.axes.length + 1, m), null != c && c.onAxisMove.dispatch(5, m);
                                            else if (0 <
                                                m ? d.onButtonDown.dispatch(l) : d.onButtonUp.dispatch(l), null != c) {
                                                switch (l) {
                                                    case 0:
                                                        b = 0;
                                                        break;
                                                    case 1:
                                                        b = 1;
                                                        break;
                                                    case 2:
                                                        b = 2;
                                                        break;
                                                    case 3:
                                                        b = 3;
                                                        break;
                                                    case 4:
                                                        b = 9;
                                                        break;
                                                    case 5:
                                                        b = 10;
                                                        break;
                                                    case 8:
                                                        b = 4;
                                                        break;
                                                    case 9:
                                                        b = 6;
                                                        break;
                                                    case 10:
                                                        b = 7;
                                                        break;
                                                    case 11:
                                                        b = 8;
                                                        break;
                                                    case 12:
                                                        b = 11;
                                                        break;
                                                    case 13:
                                                        b = 12;
                                                        break;
                                                    case 14:
                                                        b = 13;
                                                        break;
                                                    case 15:
                                                        b = 14;
                                                        break;
                                                    case 16:
                                                        b = 5;
                                                        break;
                                                    default:
                                                        continue
                                                }
                                                0 < m ? c.onButtonDown.dispatch(b) : c.onButtonUp.dispatch(b)
                                            }
                                            f.buttons[l] = m
                                        }
                                    }
                                    b = 0;
                                    for (m = e.axes.length; b < m;) ja = b++, e.axes[ja] != f.axes[ja] && (d.onAxisMove.dispatch(ja,
                                        e.axes[ja]), null != c && c.onAxisMove.dispatch(ja, e.axes[ja]), f.axes[ja] = e.axes[ja])
                                } else f.connected && (f.connected = !1, Ub.__disconnect(b), ac.__disconnect(b))
                            }
                },
                __class__: va
            };
            var Ga = function() {
                this.onCreateWindow = new jk;
                this.onUpdate = new Of;
                this.onExit = new Of;
                null == Ga.current && (Ga.current = this);
                this.meta = new aa;
                this.modules = [];
                this.__windowByID = new Tb;
                this.__windows = [];
                this.__backend = new va(this);
                this.__registerLimeModule(this);
                this.__preloader = new kk;
                this.__preloader.onProgress.add(r(this, this.onPreloadProgress));
                this.__preloader.onComplete.add(r(this, this.onPreloadComplete))
            };
            g["lime.app.Application"] = Ga;
            Ga.__name__ = "lime.app.Application";
            Ga.__super__ = hb;
            Ga.prototype = n(hb.prototype, {
                addModule: function(a) {
                    a.__registerLimeModule(this);
                    this.modules.push(a)
                },
                exec: function() {
                    Ga.current = this;
                    return this.__backend.exec()
                },
                onGamepadAxisMove: function(a, b, c) {},
                onGamepadButtonDown: function(a, b) {},
                onGamepadButtonUp: function(a, b) {},
                onGamepadConnect: function(a) {},
                onGamepadDisconnect: function(a) {},
                onJoystickAxisMove: function(a,
                    b, c) {},
                onJoystickButtonDown: function(a, b) {},
                onJoystickButtonUp: function(a, b) {},
                onJoystickConnect: function(a) {},
                onJoystickDisconnect: function(a) {},
                onJoystickHatMove: function(a, b, c) {},
                onJoystickTrackballMove: function(a, b, c, d) {},
                onKeyDown: function(a, b) {},
                onKeyUp: function(a, b) {},
                onModuleExit: function(a) {},
                onMouseDown: function(a, b, c) {},
                onMouseMove: function(a, b) {},
                onMouseMoveRelative: function(a, b) {},
                onMouseUp: function(a, b, c) {},
                onMouseWheel: function(a, b, c) {},
                onPreloadComplete: function() {},
                onPreloadProgress: function(a,
                    b) {},
                onRenderContextLost: function() {},
                onRenderContextRestored: function(a) {},
                onTextEdit: function(a, b, c) {},
                onTextInput: function(a) {},
                onTouchCancel: function(a) {},
                onTouchEnd: function(a) {},
                onTouchMove: function(a) {},
                onTouchStart: function(a) {},
                onWindowActivate: function() {},
                onWindowClose: function() {},
                onWindowCreate: function() {},
                onWindowDeactivate: function() {},
                onWindowDropFile: function(a) {},
                onWindowEnter: function() {},
                onWindowExpose: function() {},
                onWindowFocusIn: function() {},
                onWindowFocusOut: function() {},
                onWindowFullscreen: function() {},
                onWindowLeave: function() {},
                onWindowMove: function(a, b) {},
                onWindowMinimize: function() {},
                onWindowResize: function(a, b) {},
                onWindowRestore: function() {},
                render: function(a) {},
                update: function(a) {},
                __registerLimeModule: function(a) {
                    a.onUpdate.add(r(this, this.update));
                    a.onExit.add(r(this, this.onModuleExit), !1, 0);
                    a.onExit.add(r(this, this.__onModuleExit), !1, 0);
                    for (a = ac.devices.iterator(); a.hasNext();) {
                        var b = a.next();
                        this.__onGamepadConnect(b)
                    }
                    ac.onConnect.add(r(this, this.__onGamepadConnect));
                    for (a = Ub.devices.iterator(); a.hasNext();) b =
                        a.next(), this.__onJoystickConnect(b);
                    Ub.onConnect.add(r(this, this.__onJoystickConnect));
                    uc.onCancel.add(r(this, this.onTouchCancel));
                    uc.onStart.add(r(this, this.onTouchStart));
                    uc.onMove.add(r(this, this.onTouchMove));
                    uc.onEnd.add(r(this, this.onTouchEnd))
                },
                __removeWindow: function(a) {
                    null != a && this.__windowByID.h.hasOwnProperty(a.id) && (this.__window == a && (this.__window = null), Y.remove(this.__windows, a), this.__windowByID.remove(a.id), a.close(), 0 == this.__windows.length && bc.exit(0))
                },
                __onGamepadConnect: function(a) {
                    this.onGamepadConnect(a);
                    var b = r(this, this.onGamepadAxisMove),
                        c = function(c, d) {
                            b(a, c, d)
                        };
                    a.onAxisMove.add(c);
                    var d = r(this, this.onGamepadButtonDown);
                    c = function(b) {
                        d(a, b)
                    };
                    a.onButtonDown.add(c);
                    var e = r(this, this.onGamepadButtonUp);
                    c = function(b) {
                        e(a, b)
                    };
                    a.onButtonUp.add(c);
                    var f = r(this, this.onGamepadDisconnect);
                    a.onDisconnect.add(function() {
                        f(a)
                    })
                },
                __onJoystickConnect: function(a) {
                    this.onJoystickConnect(a);
                    var b = r(this, this.onJoystickAxisMove),
                        c = function(c, d) {
                            b(a, c, d)
                        };
                    a.onAxisMove.add(c);
                    var d = r(this, this.onJoystickButtonDown);
                    c = function(b) {
                        d(a, b)
                    };
                    a.onButtonDown.add(c);
                    var e = r(this, this.onJoystickButtonUp);
                    c = function(b) {
                        e(a, b)
                    };
                    a.onButtonUp.add(c);
                    var f = r(this, this.onJoystickDisconnect);
                    a.onDisconnect.add(function() {
                        f(a)
                    });
                    var k = r(this, this.onJoystickHatMove);
                    c = function(b, c) {
                        k(a, b, c)
                    };
                    a.onHatMove.add(c);
                    var p = r(this, this.onJoystickTrackballMove);
                    c = function(b, c, d) {
                        p(a, b, c, d)
                    };
                    a.onTrackballMove.add(c)
                },
                __onModuleExit: function(a) {
                    this.__backend.exit()
                },
                __onWindowClose: function(a) {
                    if (this.__window == a) this.onWindowClose();
                    this.__removeWindow(a)
                },
                __class__: Ga
            });
            var vb = function() {};
            g.ApplicationMain = vb;
            vb.__name__ = "ApplicationMain";
            vb.main = function() {
                bc.__registerEntryPoint("Funkin", vb.create)
            };
            vb.create = function(a) {
                var b = new Rg;
                xd.init(a);
                b.meta.h.build = "124";
                b.meta.h.company = "HaxeFlixel";
                b.meta.h.file = "Funkin";
                b.meta.h.name = "Friday Night Funkin";
                b.meta.h.packageName = "com.example.myapp";
                b.meta.h.version = "0.0.1";
                var c = {
                    allowHighDPI: !1,
                    alwaysOnTop: !1,
                    borderless: !1,
                    element: null,
                    frameRate: 60,
                    height: 720,
                    hidden: !1,
                    maximized: !1,
                    minimized: !1,
                    parameters: {},
                    resizable: !0,
                    title: "Friday Night Funkin",
                    width: 1280,
                    x: null,
                    y: null,
                    context: {
                        antialiasing: 0,
                        background: 0,
                        colorDepth: 32,
                        depth: !0,
                        hardware: !0,
                        stencil: !0,
                        type: null,
                        vsync: !1
                    }
                };
                if (null == b.__window && null != a)
                    for (var d = 0, e = ea.fields(a); d < e.length;) {
                        var f = e[d];
                        ++d;
                        Object.prototype.hasOwnProperty.call(c, f) ? c[f] = ea.field(a, f) : Object.prototype.hasOwnProperty.call(c.context, f) && (c.context[f] = ea.field(a, f))
                    }
                b.createWindow(c);
                var k = new Rh(new Sh);
                b.__preloader.onProgress.add(function(a,
                    b) {
                    k.update(a, b)
                });
                b.__preloader.onComplete.add(function() {
                    k.start()
                });
                var p = oa.__cast(b.__window, gg).stage;
                k.onComplete.add(function() {
                    vb.start(p)
                });
                d = 0;
                for (e = xd.preloadLibraries; d < e.length;) a = e[d], ++d, b.__preloader.addLibrary(a);
                d = 0;
                for (e = xd.preloadLibraryNames; d < e.length;) a = e[d], ++d, b.__preloader.addLibraryName(a);
                b.__preloader.load();
                b.exec()
            };
            vb.start = function(a) {
                try {
                    var b = a.getChildAt(0);
                    null != b && b instanceof wa || (b = new $e, a.addChild(b));
                    new U(b);
                    a.dispatchEvent(new sa("resize", !1, !1));
                    a.window.__fullscreen &&
                        a.dispatchEvent(new Pf("fullScreen", !1, !1, !0, !0))
                } catch (c) {
                    Ca.lastError = c, b = F.caught(c).unwrap(), a.__handleError(b)
                }
            };
            var zc = function() {};
            g["openfl.events.IEventDispatcher"] = zc;
            zc.__name__ = "openfl.events.IEventDispatcher";
            zc.__isInterface__ = !0;
            var ua = function(a) {
                null != a && (this.__targetDispatcher = a)
            };
            g["openfl.events.EventDispatcher"] = ua;
            ua.__name__ = "openfl.events.EventDispatcher";
            ua.__interfaces__ = [zc];
            ua.prototype = {
                addEventListener: function(a, b, c, d, e) {
                    null == d && (d = 0);
                    null == c && (c = !1);
                    if (null != b)
                        if (null ==
                            this.__eventMap && (this.__eventMap = new aa, this.__iterators = new aa), Object.prototype.hasOwnProperty.call(this.__eventMap.h, a)) {
                            p = this.__eventMap.h[a];
                            e = 0;
                            for (var f = p.length; e < f;) {
                                var k = e++;
                                if (p[k].match(b, c)) return
                            }
                            a = this.__iterators.h[a];
                            for (e = 0; e < a.length;) f = a[e], ++e, f.active && f.copy();
                            this.__addListenerByPriority(p, new Sg(b, c, d))
                        } else {
                            var p = [];
                            p.push(new Sg(b, c, d));
                            f = new Tg(p);
                            this.__eventMap.h[a] = p;
                            this.__iterators.h[a] = [f]
                        }
                },
                dispatchEvent: function(a) {
                    a.target = null != this.__targetDispatcher ? this.__targetDispatcher :
                        this;
                    return this.__dispatchEvent(a)
                },
                hasEventListener: function(a) {
                    return null == this.__eventMap ? !1 : Object.prototype.hasOwnProperty.call(this.__eventMap.h, a)
                },
                removeEventListener: function(a, b, c) {
                    null == c && (c = !1);
                    if (null != this.__eventMap && null != b) {
                        var d = this.__eventMap.h[a];
                        if (null != d) {
                            for (var e = this.__iterators.h[a], f = 0, k = d.length; f < k;) {
                                var p = f++;
                                if (d[p].match(b, c)) {
                                    for (b = 0; b < e.length;) c = e[b], ++b, c.remove(d[p], p);
                                    d.splice(p, 1);
                                    break
                                }
                            }
                            0 == d.length && (d = this.__eventMap, Object.prototype.hasOwnProperty.call(d.h,
                                a) && delete d.h[a], d = this.__iterators, Object.prototype.hasOwnProperty.call(d.h, a) && delete d.h[a]);
                            aa.valueIterator(this.__eventMap.h).hasNext() || (this.__iterators = this.__eventMap = null)
                        }
                    }
                },
                __dispatchEvent: function(a) {
                    if (null == this.__eventMap || null == a) return !0;
                    var b = a.type,
                        c = this.__eventMap.h[b];
                    if (null == c) return !0;
                    null == a.target && (a.target = null != this.__targetDispatcher ? this.__targetDispatcher : this);
                    a.currentTarget = this;
                    var d = 1 == a.eventPhase;
                    b = this.__iterators.h[b];
                    var e = b[0];
                    e.active && (e = new Tg(c),
                        b.push(e));
                    e.start();
                    for (var f = e; f.hasNext();) {
                        var k = f.next();
                        if (null != k && k.useCapture == d && (k.callback(a), a.__isCanceledNow)) break
                    }
                    e.stop();
                    e != b[0] ? Y.remove(b, e) : e.reset(c);
                    return !a.isDefaultPrevented()
                },
                __addListenerByPriority: function(a, b) {
                    for (var c = a.length, d = c, e = 0; e < c;) {
                        var f = e++;
                        if (a[f].priority < b.priority) {
                            d = f;
                            break
                        }
                    }
                    a.splice(d, 0, b)
                },
                __class__: ua
            };
            var Lc = function() {};
            g["openfl.display.IBitmapDrawable"] = Lc;
            Lc.__name__ = "openfl.display.IBitmapDrawable";
            Lc.__isInterface__ = !0;
            Lc.prototype = {
                __class__: Lc
            };
            var ib = {
                    toIntVector: function(a, b, c, d) {
                        return new hg(b, c, d)
                    },
                    toFloatVector: function(a, b, c, d) {
                        return new Ke(b, c, d, !0)
                    },
                    toObjectVector: function(a, b, c, d) {
                        return new ig(b, c, d, !0)
                    }
                },
                mb = function(a, b, c) {
                    this.__pool = new A;
                    this.inactiveObjects = this.activeObjects = 0;
                    this.__inactiveObject1 = this.__inactiveObject0 = null;
                    this.__inactiveObjectList = new Wa;
                    null != a && (this.create = a);
                    null != b && (this.clean = b);
                    null != c && this.set_size(c)
                };
            g["lime.utils.ObjectPool"] = mb;
            mb.__name__ = "lime.utils.ObjectPool";
            mb.prototype = {
                clean: function(a) {},
                create: function() {
                    return null
                },
                get: function() {
                    var a = null;
                    if (0 < this.inactiveObjects) null != this.__inactiveObject0 ? (a = this.__inactiveObject0, this.__inactiveObject0 = null) : null != this.__inactiveObject1 ? (a = this.__inactiveObject1, this.__inactiveObject1 = null) : (a = this.__inactiveObjectList.pop(), 0 < this.__inactiveObjectList.length && (this.__inactiveObject0 = this.__inactiveObjectList.pop()), 0 < this.__inactiveObjectList.length && (this.__inactiveObject1 = this.__inactiveObjectList.pop())), this.inactiveObjects--, this.activeObjects++;
                    else if (null == this.__size || this.activeObjects < this.__size) a = this.create(), null != a && (this.__pool.set(a, !0), this.activeObjects++);
                    return a
                },
                release: function(a) {
                    this.activeObjects--;
                    null == this.__size || this.activeObjects + this.inactiveObjects < this.__size ? (this.clean(a), null == this.__inactiveObject0 ? this.__inactiveObject0 = a : null == this.__inactiveObject1 ? this.__inactiveObject1 = a : this.__inactiveObjectList.add(a), this.inactiveObjects++) : this.__pool.remove(a)
                },
                __removeInactive: function(a) {
                    if (!(0 >= a || 0 == this.inactiveObjects) &&
                        (null != this.__inactiveObject0 && (this.__pool.remove(this.__inactiveObject0), this.__inactiveObject0 = null, this.inactiveObjects--, --a), 0 != a && 0 != this.inactiveObjects && (null != this.__inactiveObject1 && (this.__pool.remove(this.__inactiveObject1), this.__inactiveObject1 = null, this.inactiveObjects--, --a), 0 != a && 0 != this.inactiveObjects)))
                        for (var b = this.__inactiveObjectList.h; null != b;) {
                            var c = b.item;
                            b = b.next;
                            this.__pool.remove(c);
                            this.__inactiveObjectList.remove(c);
                            this.inactiveObjects--;
                            --a;
                            if (0 == a || 0 == this.inactiveObjects) break
                        }
                },
                set_size: function(a) {
                    if (null == a) this.__size = null;
                    else {
                        var b = this.inactiveObjects + this.activeObjects;
                        this.__size = a;
                        if (b > a) this.__removeInactive(b - a);
                        else if (a > b)
                            for (var c = 0, d = a - b; c < d;)
                                if (c++, b = this.create(), null != b) this.__pool.set(b, !1), this.__inactiveObjectList.add(b), this.inactiveObjects++;
                                else break
                    }
                    return a
                },
                __class__: mb,
                __properties__: {
                    set_size: "set_size"
                }
            };
            var Ac = function() {};
            g["haxe.IMap"] = Ac;
            Ac.__name__ = "haxe.IMap";
            Ac.__isInterface__ = !0;
            Ac.prototype = {
                __class__: Ac
            };
            var A = function() {
                this.h = {
                    __keys__: {}
                }
            };
            g["haxe.ds.ObjectMap"] = A;
            A.__name__ = "haxe.ds.ObjectMap";
            A.__interfaces__ = [Ac];
            A.prototype = {
                set: function(a, b) {
                    var c = a.__id__;
                    null == c && (c = a.__id__ = C.$haxeUID++);
                    this.h[c] = b;
                    this.h.__keys__[c] = a
                },
                get: function(a) {
                    return this.h[a.__id__]
                },
                remove: function(a) {
                    a = a.__id__;
                    if (null == this.h.__keys__[a]) return !1;
                    delete this.h[a];
                    delete this.h.__keys__[a];
                    return !0
                },
                keys: function() {
                    var a = [],
                        b;
                    for (b in this.h.__keys__) this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
                    return new Je(a)
                },
                __class__: A
            };
            var Wa = function() {
                this.length =
                    0
            };
            g["haxe.ds.List"] = Wa;
            Wa.__name__ = "haxe.ds.List";
            Wa.prototype = {
                add: function(a) {
                    a = new Th(a, null);
                    null == this.h ? this.h = a : this.q.next = a;
                    this.q = a;
                    this.length++
                },
                push: function(a) {
                    this.h = a = new Th(a, this.h);
                    null == this.q && (this.q = a);
                    this.length++
                },
                pop: function() {
                    if (null == this.h) return null;
                    var a = this.h.item;
                    this.h = this.h.next;
                    null == this.h && (this.q = null);
                    this.length--;
                    return a
                },
                clear: function() {
                    this.q = this.h = null;
                    this.length = 0
                },
                remove: function(a) {
                    for (var b = null, c = this.h; null != c;) {
                        if (c.item == a) return null ==
                            b ? this.h = c.next : b.next = c.next, this.q == c && (this.q = b), this.length--, !0;
                        b = c;
                        c = c.next
                    }
                    return !1
                },
                iterator: function() {
                    return new lk(this.h)
                },
                __class__: Wa
            };
            var za = function() {
                ua.call(this);
                this.__alpha = 1;
                this.__blendMode = 10;
                this.__cacheAsBitmap = !1;
                this.__transform = new xa;
                this.__visible = !0;
                this.__rotationSine = this.__rotation = 0;
                this.__worldAlpha = this.__scaleY = this.__scaleX = this.__rotationCosine = 1;
                this.__worldBlendMode = 10;
                this.__worldTransform = new xa;
                this.__worldColorTransform = new wb;
                this.__renderTransform =
                    new xa;
                this.__worldVisible = !0;
                this.set_name("instance" + ++za.__instanceCount);
                null != za.__initStage && (this.stage = za.__initStage, za.__initStage = null, this.stage.addChild(this))
            };
            g["openfl.display.DisplayObject"] = za;
            za.__name__ = "openfl.display.DisplayObject";
            za.__interfaces__ = [Lc];
            za.__super__ = ua;
            za.prototype = n(ua.prototype, {
                addEventListener: function(a, b, c, d, e) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = !1);
                    switch (a) {
                        case "activate":
                        case "deactivate":
                        case "enterFrame":
                        case "exitFrame":
                        case "frameConstructed":
                        case "render":
                            Object.prototype.hasOwnProperty.call(za.__broadcastEvents.h,
                                a) || (za.__broadcastEvents.h[a] = []);
                            var f = za.__broadcastEvents.h[a]; - 1 == f.indexOf(this) && f.push(this);
                            break;
                        case "clearDOM":
                        case "renderCairo":
                        case "renderCanvas":
                        case "renderDOM":
                        case "renderOpenGL":
                            null == this.__customRenderEvent && (this.__customRenderEvent = new Uh(null), this.__customRenderEvent.objectColorTransform = new wb, this.__customRenderEvent.objectMatrix = new xa, this.__customRenderClear = !0)
                    }
                    ua.prototype.addEventListener.call(this, a, b, c, d, e)
                },
                dispatchEvent: function(a) {
                    if (a instanceof eb) {
                        var b =
                            this.__getRenderTransform();
                        a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
                        b = this.__getRenderTransform();
                        a.stageY = a.localX * b.b + a.localY * b.d + b.ty
                    } else a instanceof Id && (b = this.__getRenderTransform(), a.stageX = a.localX * b.a + a.localY * b.c + b.tx, b = this.__getRenderTransform(), a.stageY = a.localX * b.b + a.localY * b.d + b.ty);
                    a.target = this;
                    return this.__dispatchWithCapture(a)
                },
                getBounds: function(a) {
                    var b = xa.__pool.get();
                    if (null != a && a != this) {
                        b.copyFrom(this.__getWorldTransform());
                        var c = xa.__pool.get();
                        c.copyFrom(a.__getWorldTransform());
                        c.invert();
                        b.concat(c);
                        xa.__pool.release(c)
                    } else b.identity();
                    a = new fa;
                    this.__getBounds(a, b);
                    xa.__pool.release(b);
                    return a
                },
                globalToLocal: function(a) {
                    return this.__globalToLocal(a, new La)
                },
                removeEventListener: function(a, b, c) {
                    null == c && (c = !1);
                    ua.prototype.removeEventListener.call(this, a, b, c);
                    switch (a) {
                        case "activate":
                        case "deactivate":
                        case "enterFrame":
                        case "exitFrame":
                        case "frameConstructed":
                        case "render":
                            this.hasEventListener(a) || Object.prototype.hasOwnProperty.call(za.__broadcastEvents.h, a) && Y.remove(za.__broadcastEvents.h[a],
                                this);
                            break;
                        case "clearDOM":
                        case "renderCairo":
                        case "renderCanvas":
                        case "renderDOM":
                        case "renderOpenGL":
                            this.hasEventListener("clearDOM") || this.hasEventListener("renderCairo") || this.hasEventListener("renderCanvas") || this.hasEventListener("renderDOM") || this.hasEventListener("renderOpenGL") || (this.__customRenderEvent = null)
                    }
                },
                __cleanup: function() {
                    this.__context = this.__canvas = this.__cairo = null;
                    null != this.__graphics && this.__graphics.__cleanup();
                    null != this.__cacheBitmap && (this.__cacheBitmap.__cleanup(),
                        this.__cacheBitmap = null);
                    null != this.__cacheBitmapData && (this.__cacheBitmapData.dispose(), this.__cacheBitmapData = null)
                },
                __dispatch: function(a) {
                    if (null != this.__eventMap && this.hasEventListener(a.type)) {
                        var b = ua.prototype.__dispatchEvent.call(this, a);
                        return a.__isCanceled ? !0 : b
                    }
                    return !0
                },
                __dispatchChildren: function(a) {},
                __dispatchEvent: function(a) {
                    var b = a.bubbles ? this.parent : null,
                        c = ua.prototype.__dispatchEvent.call(this, a);
                    if (a.__isCanceled) return !0;
                    null != b && b != this && (a.eventPhase = 3, null == a.target && (a.target =
                        this), b.__dispatchEvent(a));
                    return c
                },
                __dispatchWithCapture: function(a) {
                    null == a.target && (a.target = this);
                    if (null != this.parent)
                        if (a.eventPhase = 1, this.parent == this.stage) this.parent.__dispatch(a);
                        else {
                            for (var b = za.__tempStack.get(), c = this.parent, d = 0; null != c;) b.set(d, c), c = c.parent, ++d;
                            c = 0;
                            for (var e = d; c < e;) {
                                var f = c++;
                                b.get(d - f - 1).__dispatch(a)
                            }
                            za.__tempStack.release(b)
                        }
                    a.eventPhase = 2;
                    return this.__dispatchEvent(a)
                },
                __enterFrame: function(a) {},
                __getBounds: function(a, b) {
                    null != this.__graphics && this.__graphics.__getBounds(a,
                        b)
                },
                __getCursor: function() {
                    return null
                },
                __getFilterBounds: function(a, b) {
                    this.__getRenderBounds(a, b);
                    if (null != this.__filters) {
                        b = fa.__pool.get();
                        for (var c = 0, d = this.__filters; c < d.length;) {
                            var e = d[c];
                            ++c;
                            b.__expand(-e.__leftExtension, -e.__topExtension, e.__leftExtension + e.__rightExtension, e.__topExtension + e.__bottomExtension)
                        }
                        a.width += b.width;
                        a.height += b.height;
                        a.x += b.x;
                        a.y += b.y;
                        fa.__pool.release(b)
                    }
                },
                __getInteractive: function(a) {
                    return !1
                },
                __getLocalBounds: function(a) {
                    this.__getBounds(a, this.__transform);
                    a.x -= this.__transform.tx;
                    a.y -= this.__transform.ty
                },
                __getRenderBounds: function(a, b) {
                    if (null == this.__scrollRect) this.__getBounds(a, b);
                    else {
                        var c = fa.__pool.get();
                        c.copyFrom(this.__scrollRect);
                        c.__transform(c, b);
                        a.__expand(c.x, c.y, c.width, c.height);
                        fa.__pool.release(c)
                    }
                },
                __getRenderTransform: function() {
                    this.__getWorldTransform();
                    return this.__renderTransform
                },
                __getWorldTransform: function() {
                    if (this.__transformDirty || this.__worldTransformInvalid) {
                        var a = [],
                            b = this;
                        if (null == this.parent) this.__update(!0, !1);
                        else
                            for (; b != this.stage && (a.push(b), b = b.parent, null != b););
                        for (var c = a.length; 0 <= --c;) b = a[c], b.__update(!0, !1)
                    }
                    return this.__worldTransform
                },
                __globalToLocal: function(a, b) {
                    this.__getRenderTransform();
                    if (a == b) {
                        var c = this.__renderTransform,
                            d = c.a * c.d - c.b * c.c;
                        if (0 == d) a.x = -c.tx, a.y = -c.ty;
                        else {
                            var e = 1 / d * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
                            a.y = 1 / d * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
                            a.x = e
                        }
                    } else c = this.__renderTransform, d = c.a * c.d - c.b * c.c, b.x = 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx)), c = this.__renderTransform, d =
                        c.a * c.d - c.b * c.c, b.y = 0 == d ? -c.ty : 1 / d * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
                    return b
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (null != this.__graphics) {
                        if (!f.__visible || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                        if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())) return null == d || e || d.push(f), !0
                    }
                    return !1
                },
                __hitTestMask: function(a, b) {
                    return null != this.__graphics && this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()) ? !0 : !1
                },
                __renderCairo: function(a) {},
                __renderCairoMask: function(a) {},
                __renderCanvas: function(a) {
                    if (null == this.get_mask() || 0 < this.get_mask().get_width() && 0 < this.get_mask().get_height())
                        if (this.__updateCacheBitmap(a, !1), null != this.__cacheBitmap && !this.__isCacheBitmapRender) {
                            var b = this.__cacheBitmap;
                            if (b.__renderable) {
                                var c = a.__getAlpha(b.__worldAlpha);
                                if (0 < c && null != b.__bitmapData && b.__bitmapData.__isValid && b.__bitmapData.readable) {
                                    var d = a.context;
                                    a.__setBlendMode(b.__worldBlendMode);
                                    a.__pushMaskObject(b, !1);
                                    Ma.convertToCanvas(b.__bitmapData.image);
                                    d.globalAlpha = c;
                                    var e =
                                        b.__scrollRect;
                                    a.setTransform(b.__renderTransform, d);
                                    a.__allowSmoothing && b.smoothing || (d.imageSmoothingEnabled = !1);
                                    null == e ? d.drawImage(b.__bitmapData.image.get_src(), 0, 0, b.__bitmapData.image.width, b.__bitmapData.image.height) : d.drawImage(b.__bitmapData.image.get_src(), e.x, e.y, e.width, e.height);
                                    a.__allowSmoothing && b.smoothing || (d.imageSmoothingEnabled = !0);
                                    a.__popMaskObject(b, !1)
                                }
                            }
                        } else if (!(null == this.opaqueBackground && null == this.__graphics || !this.__renderable || (c = a.__getAlpha(this.__worldAlpha), 0 >=
                            c || (null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && 0 < this.get_height() && (a.__setBlendMode(this.__worldBlendMode), a.__pushMaskObject(this), d = a.context, a.setTransform(this.__renderTransform, d), b = this.opaqueBackground, d.fillStyle = "rgb(" + (b >>> 16 & 255) + "," + (b >>> 8 & 255) + "," + (b & 255) + ")", d.fillRect(0, 0, this.get_width(), this.get_height()), a.__popMaskObject(this)), null == this.__graphics || !this.__renderable || (c = a.__getAlpha(this.__worldAlpha), 0 >= c))))) {
                        var f = this.__graphics;
                        if (null !=
                            f) {
                            v.render(f, a);
                            var k = f.__width,
                                p = f.__height;
                            b = f.__canvas;
                            if (null != b && f.__visible && 1 <= k && 1 <= p) {
                                var m = f.__worldTransform;
                                d = a.context;
                                e = this.__scrollRect;
                                var ja = this.__worldScale9Grid;
                                if (null == e || 0 < e.width && 0 < e.height) {
                                    a.__setBlendMode(this.__worldBlendMode);
                                    a.__pushMaskObject(this);
                                    d.globalAlpha = c;
                                    if (null != ja && 0 == m.b && 0 == m.c) {
                                        d.setTransform(1, 0, 0, 1, m.tx, m.ty);
                                        var h = f.__bounds,
                                            l = f.__renderTransform.a,
                                            g = f.__renderTransform.d,
                                            q = m.a,
                                            r = m.d;
                                        m = Math.max(1, Math.round(ja.x * l));
                                        f = Math.round(ja.y * g);
                                        c = Math.max(1,
                                            Math.round((h.get_right() - ja.get_right()) * l));
                                        e = Math.round((h.get_bottom() - ja.get_bottom()) * g);
                                        l = Math.round(ja.width * l);
                                        g = Math.round(ja.height * g);
                                        var D = Math.round(ja.x * q),
                                            n = Math.round(ja.y * r),
                                            w = Math.round((h.get_right() - ja.get_right()) * q);
                                        ja = Math.round((h.get_bottom() - ja.get_bottom()) * r);
                                        h = Math.round(k * q) - D - w;
                                        q = Math.round(p * r) - n - ja;
                                        a.applySmoothing(d, !1);
                                        0 != l && 0 != g ? (d.drawImage(b, 0, 0, m, f, 0, 0, D, n), d.drawImage(b, m, 0, l, f, D, 0, h, n), d.drawImage(b, m + l, 0, c, f, D + h, 0, w, n), d.drawImage(b, 0, f, m, g, 0, n, D, q), d.drawImage(b,
                                            m, f, l, g, D, n, h, q), d.drawImage(b, m + l, f, c, g, D + h, n, w, q), d.drawImage(b, 0, f + g, m, e, 0, n + q, D, ja), d.drawImage(b, m, f + g, l, e, D, n + q, h, ja), d.drawImage(b, m + l, f + g, c, e, D + h, n + q, w, ja)) : 0 == l && 0 != g ? (p = D + h + w, d.drawImage(b, 0, 0, k, f, 0, 0, p, n), d.drawImage(b, 0, f, k, g, 0, n, p, q), d.drawImage(b, 0, f + g, k, e, 0, n + q, p, ja)) : 0 == g && 0 != l && (k = n + q + ja, d.drawImage(b, 0, 0, m, p, 0, 0, D, k), d.drawImage(b, m, 0, l, p, D, 0, h, k), d.drawImage(b, m + l, 0, c, p, D + h, 0, w, k))
                                    } else a.setTransform(m, d), a.__isDOM && (ja = 1 / a.pixelRatio, d.scale(ja, ja)), d.drawImage(b, 0, 0, k, p);
                                    a.__popMaskObject(this)
                                }
                            }
                        }
                    }
                    this.__renderEvent(a)
                },
                __renderCanvasMask: function(a) {
                    null != this.__graphics && v.renderMask(this.__graphics, a)
                },
                __renderDOM: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                        null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && this.get_height();
                        var b = this.__graphics;
                        if (null != this.stage && this.__worldVisible && this.__renderable && null != b) {
                            v.render(b, a.__canvasRenderer);
                            if (b.__softwareDirty || this.__worldAlphaChanged || this.__canvas != b.__canvas) null != b.__canvas ?
                                this.__canvas != b.__canvas && (null != this.__canvas && a.element.removeChild(this.__canvas), this.__canvas = b.__canvas, this.__context = b.__context, a.__initializeElement(this, this.__canvas)) : Qf.clear(this, a);
                            if (null != this.__canvas) {
                                a.__pushMaskObject(this);
                                var c = this.__renderTransform;
                                this.__renderTransform = b.__worldTransform;
                                b.__transformDirty && (b.__transformDirty = !1, this.__renderTransformChanged = !0);
                                a.__updateClip(this);
                                a.__applyStyle(this, !0, !0, !0);
                                this.__renderTransform = c;
                                a.__popMaskObject(this)
                            }
                        } else Qf.clear(this,
                            a)
                    } else this.__renderDOMClear(a), this.__cacheBitmap.stage = this.stage, b = this.__cacheBitmap, null != b.stage && b.__worldVisible && b.__renderable && null != b.__bitmapData && b.__bitmapData.__isValid && b.__bitmapData.readable ? (a.__pushMaskObject(b), null != b.__bitmapData.image.buffer.__srcImage ? Bc.renderImage(b, a) : Bc.renderCanvas(b, a), a.__popMaskObject(b)) : Bc.clear(b, a);
                    this.__renderEvent(a)
                },
                __renderDOMClear: function(a) {
                    nk.clear(this, a)
                },
                __renderEvent: function(a) {
                    if (null != this.__customRenderEvent && this.__renderable) {
                        this.__customRenderEvent.allowSmoothing =
                            a.__allowSmoothing;
                        this.__customRenderEvent.objectMatrix.copyFrom(this.__renderTransform);
                        this.__customRenderEvent.objectColorTransform.__copyFrom(this.__worldColorTransform);
                        this.__customRenderEvent.renderer = a;
                        switch (a.__type) {
                            case "cairo":
                                this.__customRenderEvent.type = "renderCairo";
                                break;
                            case "canvas":
                                this.__customRenderEvent.type = "renderCanvas";
                                break;
                            case "dom":
                                this.__customRenderEvent.type = null != this.stage && this.__worldVisible ? "renderDOM" : "clearDOM";
                                break;
                            case "opengl":
                                a.__cleared || a.__clear();
                                a.setShader(this.__worldShader);
                                a.__context3D.__flushGL();
                                this.__customRenderEvent.type = "renderOpenGL";
                                break;
                            default:
                                return
                        }
                        a.__setBlendMode(this.__worldBlendMode);
                        a.__pushMaskObject(this);
                        this.dispatchEvent(this.__customRenderEvent);
                        a.__popMaskObject(this);
                        "opengl" == a.__type && a.setViewport()
                    }
                },
                __renderGL: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    if (null != this.__cacheBitmap && !this.__isCacheBitmapRender) nf.render(this.__cacheBitmap, a);
                    else if (!(null == this.opaqueBackground && null == this.__graphics ||
                            !this.__renderable || 0 >= this.__worldAlpha)) {
                        if (null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && 0 < this.get_height()) {
                            a.__setBlendMode(this.__worldBlendMode);
                            a.__pushMaskObject(this);
                            var b = a.__context3D,
                                c = fa.__pool.get();
                            c.setTo(0, 0, this.get_width(), this.get_height());
                            a.__pushMaskRect(c, this.__renderTransform);
                            var d = this.opaqueBackground;
                            b.clear((d >>> 16 & 255) / 255, (d >>> 8 & 255) / 255, (d & 255) / 255, 1, 0, 0, 1);
                            a.__popMaskRect();
                            a.__popMaskObject(this);
                            fa.__pool.release(c)
                        }
                        null != this.__graphics &&
                            of .render(this, a)
                    }
                    this.__renderEvent(a)
                },
                __renderGLMask: function(a) {
                    null != this.__graphics && of .renderMask(this, a)
                },
                __setParentRenderDirty: function() {
                    var a = null != this.__renderParent ? this.__renderParent : this.parent;
                    null == a || a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty())
                },
                __setStageReference: function(a) {
                    this.stage = a
                },
                __setTransformDirty: function() {
                    this.__transformDirty || (this.__transformDirty = !0, this.__setWorldTransformInvalid(), this.__setParentRenderDirty())
                },
                __setWorldTransformInvalid: function() {
                    this.__worldTransformInvalid = !0
                },
                __shouldCacheHardware: function(a) {
                    return 1 == a || null != this.__filters ? !0 : 0 == a || null != this.__graphics && !Ab.isCompatible(this.__graphics) ? !1 : null
                },
                __update: function(a, b) {
                    var c = null != this.__renderParent ? this.__renderParent : this.parent;
                    this.__isMask && null == c && (c = this.__maskTarget);
                    this.__renderable = this.__visible && 0 != this.__scaleX && 0 != this.__scaleY && !this.__isMask && (null == c || !c.__isMask);
                    this.__updateTransforms();
                    this.__worldTransformInvalid = this.__transformDirty = !1;
                    if (!a)
                        if (za.__supportDOM && (this.__renderTransformChanged = !this.__renderTransform.equals(this.__renderTransformCache), null == this.__renderTransformCache ? this.__renderTransformCache = this.__renderTransform.clone() : this.__renderTransformCache.copyFrom(this.__renderTransform)), null != c) {
                            if (za.__supportDOM) {
                                var d = c.__worldVisible && this.__visible;
                                this.__worldVisibleChanged = this.__worldVisible != d;
                                this.__worldVisible = d;
                                d = this.get_alpha() * c.__worldAlpha;
                                this.__worldAlphaChanged = this.__worldAlpha != d;
                                this.__worldAlpha = d
                            } else this.__worldAlpha = this.get_alpha() * c.__worldAlpha;
                            null != this.__objectTransform ? (this.__worldColorTransform.__copyFrom(this.__objectTransform.get_colorTransform()), this.__worldColorTransform.__combine(c.__worldColorTransform)) : this.__worldColorTransform.__copyFrom(c.__worldColorTransform);
                            this.__worldBlendMode = null == this.__blendMode || 10 == this.__blendMode ? c.__worldBlendMode : this.__blendMode;
                            this.__worldShader = null == this.__shader ? c.__shader : this.__shader;
                            this.__worldScale9Grid = null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid
                        } else this.__worldAlpha =
                            this.get_alpha(), za.__supportDOM && (this.__worldVisibleChanged = this.__worldVisible != this.__visible, this.__worldVisible = this.__visible, this.__worldAlphaChanged = this.__worldAlpha != this.get_alpha()), null != this.__objectTransform ? this.__worldColorTransform.__copyFrom(this.__objectTransform.get_colorTransform()) : this.__worldColorTransform.__identity(), this.__worldBlendMode = this.__blendMode, this.__worldShader = this.__shader, this.__worldScale9Grid = this.__scale9Grid;
                    b && null != this.get_mask() && this.get_mask().__update(a, !0)
                },
                __updateCacheBitmap: function(a, b) {
                    if (this.__isCacheBitmapRender) return !1;
                    var c = wb.__pool.get();
                    c.__copyFrom(this.__worldColorTransform);
                    null != a.__worldColorTransform && c.__combine(a.__worldColorTransform);
                    var d = !1;
                    if (this.get_cacheAsBitmap() || "opengl" != a.__type && !c.__isDefault(!0)) {
                        d = null;
                        var e = (b = null == this.__cacheBitmap || this.__renderDirty && (b || null != this.__children && 0 < this.__children.length) || this.opaqueBackground != this.__cacheBitmapBackground) || null != this.__graphics && this.__graphics.__softwareDirty ||
                            !this.__cacheBitmapColorTransform.__equals(c, !0),
                            f = b || null != this.__graphics && this.__graphics.__hardwareDirty,
                            k = a.__type;
                        if (e || f) "opengl" == k && 0 == this.__shouldCacheHardware(null) && (k = "canvas"), !e || "canvas" != k && "cairo" != k || (b = !0), f && "opengl" == k && (b = !0);
                        e = b || !this.__cacheBitmap.__worldTransform.equals(this.__worldTransform);
                        var p = null != this.__filters;
                        if (p && !b) {
                            f = 0;
                            for (var m = this.__filters; f < m.length;) {
                                var ja = m[f];
                                ++f;
                                if (ja.__renderDirty) {
                                    b = !0;
                                    break
                                }
                            }
                        }
                        null == this.__cacheBitmapMatrix && (this.__cacheBitmapMatrix =
                            new xa);
                        f = null != this.__cacheAsBitmapMatrix ? this.__cacheAsBitmapMatrix : this.__renderTransform;
                        b || f.a == this.__cacheBitmapMatrix.a && f.b == this.__cacheBitmapMatrix.b && f.c == this.__cacheBitmapMatrix.c && f.d == this.__cacheBitmapMatrix.d || (b = !0);
                        !b && "opengl" != a.__type && null != this.__cacheBitmapData && null != this.__cacheBitmapData.image && this.__cacheBitmapData.image.version < this.__cacheBitmapData.__textureVersion && (b = !0);
                        this.__cacheBitmapMatrix.copyFrom(f);
                        this.__cacheBitmapMatrix.tx = 0;
                        var h = this.__cacheBitmapMatrix.ty =
                            0,
                            l = 0,
                            g = 0,
                            q = 0;
                        ja = m = 0;
                        if (e || b) d = fa.__pool.get(), this.__getFilterBounds(d, this.__cacheBitmapMatrix), g = Math.ceil(d.width), q = Math.ceil(d.height), m = 0 < d.x ? Math.ceil(d.x) : Math.floor(d.x), ja = 0 < d.y ? Math.ceil(d.y) : Math.floor(d.y), null != this.__cacheBitmapData ? g > this.__cacheBitmapData.width || q > this.__cacheBitmapData.height ? (h = Math.ceil(Math.max(1.25 * g, this.__cacheBitmapData.width)), l = Math.ceil(Math.max(1.25 * q, this.__cacheBitmapData.height)), b = !0) : (h = this.__cacheBitmapData.width, l = this.__cacheBitmapData.height) :
                            (h = g, l = q);
                        if (b)
                            if (e = !0, this.__cacheBitmapBackground = this.opaqueBackground, .5 <= g && .5 <= q) {
                                var r = null != this.opaqueBackground && (h != g || l != q),
                                    D = null != this.opaqueBackground ? -16777216 | this.opaqueBackground : 0,
                                    n = r ? 0 : D,
                                    w = "opengl" == a.__type;
                                null == this.__cacheBitmapData || h > this.__cacheBitmapData.width || l > this.__cacheBitmapData.height ? (this.__cacheBitmapData = new H(h, l, !0, n), null == this.__cacheBitmap && (this.__cacheBitmap = new Jb), this.__cacheBitmap.__bitmapData = this.__cacheBitmapData, this.__cacheBitmapRenderer = null) :
                                    this.__cacheBitmapData.__fillRect(this.__cacheBitmapData.rect, n, w);
                                r && (d.setTo(0, 0, g, q), this.__cacheBitmapData.__fillRect(d, D, w))
                            } else return wb.__pool.release(c), this.__cacheBitmapRenderer = this.__cacheBitmapData3 = this.__cacheBitmapData2 = this.__cacheBitmapData = this.__cacheBitmap = null, !0;
                        else this.__cacheBitmapData = this.__cacheBitmap.get_bitmapData(), this.__cacheBitmapData3 = this.__cacheBitmapData2 = null;
                        if (e || b) this.__cacheBitmap.__worldTransform.copyFrom(this.__worldTransform), f == this.__renderTransform ?
                            (this.__cacheBitmap.__renderTransform.identity(), this.__cacheBitmap.__renderTransform.tx = this.__renderTransform.tx + m, this.__cacheBitmap.__renderTransform.ty = this.__renderTransform.ty + ja) : (this.__cacheBitmap.__renderTransform.copyFrom(this.__cacheBitmapMatrix), this.__cacheBitmap.__renderTransform.invert(), this.__cacheBitmap.__renderTransform.concat(this.__renderTransform), this.__cacheBitmap.__renderTransform.tx += m, this.__cacheBitmap.__renderTransform.ty += ja);
                        this.__cacheBitmap.smoothing = a.__allowSmoothing;
                        this.__cacheBitmap.__renderable = this.__renderable;
                        this.__cacheBitmap.__worldAlpha = this.__worldAlpha;
                        this.__cacheBitmap.__worldBlendMode = this.__worldBlendMode;
                        this.__cacheBitmap.__worldShader = this.__worldShader;
                        this.__cacheBitmap.set_mask(this.__mask);
                        if (b) {
                            if (null == this.__cacheBitmapRenderer || k != this.__cacheBitmapRenderer.__type) "opengl" == k ? this.__cacheBitmapRenderer = new Oa(oa.__cast(a, Oa).__context3D, this.__cacheBitmapData) : (null == this.__cacheBitmapData.image && (this.__cacheBitmapData = new H(h, l, !0,
                                null != this.opaqueBackground ? -16777216 | this.opaqueBackground : 0), this.__cacheBitmap.__bitmapData = this.__cacheBitmapData), Ma.convertToCanvas(this.__cacheBitmapData.image), this.__cacheBitmapRenderer = new Le(this.__cacheBitmapData.image.buffer.__srcContext)), this.__cacheBitmapRenderer.__worldTransform = new xa, this.__cacheBitmapRenderer.__worldColorTransform = new wb;
                            null == this.__cacheBitmapColorTransform && (this.__cacheBitmapColorTransform = new wb);
                            this.__cacheBitmapRenderer.__stage = this.stage;
                            this.__cacheBitmapRenderer.__allowSmoothing =
                                a.__allowSmoothing;
                            this.__cacheBitmapRenderer.__setBlendMode(10);
                            this.__cacheBitmapRenderer.__worldAlpha = 1 / this.__worldAlpha;
                            this.__cacheBitmapRenderer.__worldTransform.copyFrom(this.__renderTransform);
                            this.__cacheBitmapRenderer.__worldTransform.invert();
                            this.__cacheBitmapRenderer.__worldTransform.concat(this.__cacheBitmapMatrix);
                            this.__cacheBitmapRenderer.__worldTransform.tx -= m;
                            this.__cacheBitmapRenderer.__worldTransform.ty -= ja;
                            this.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(c);
                            this.__cacheBitmapRenderer.__worldColorTransform.__invert();
                            this.__isCacheBitmapRender = !0;
                            if ("opengl" == this.__cacheBitmapRenderer.__type) {
                                D = this.__cacheBitmapRenderer;
                                n = D.__context3D;
                                w = n.__state.renderToTexture;
                                var x = n.__state.renderToTextureDepthStencil,
                                    u = n.__state.renderToTextureAntiAlias,
                                    B = n.__state.renderToTextureSurfaceSelector,
                                    v = a.__blendMode;
                                a.__suspendClipAndMask();
                                D.__copyShader(a);
                                this.__cacheBitmapData.__setUVRect(n, 0, 0, g, q);
                                D.__setRenderTarget(this.__cacheBitmapData);
                                null != this.__cacheBitmapData.image && (this.__cacheBitmapData.__textureVersion =
                                    this.__cacheBitmapData.image.version + 1);
                                this.__cacheBitmapData.__drawGL(this, D);
                                if (p) {
                                    var y = !1;
                                    f = 0;
                                    for (m = this.__filters; f < m.length;) ja = m[f], ++f, ja.__preserveObject && (y = !0);
                                    p = this.__cacheBitmapData;
                                    r = null;
                                    null == this.__cacheBitmapData2 || h > this.__cacheBitmapData2.width || l > this.__cacheBitmapData2.height ? this.__cacheBitmapData2 = new H(h, l, !0, 0) : (this.__cacheBitmapData2.fillRect(this.__cacheBitmapData2.rect, 0), null != this.__cacheBitmapData2.image && (this.__cacheBitmapData2.__textureVersion = this.__cacheBitmapData2.image.version +
                                        1));
                                    this.__cacheBitmapData2.__setUVRect(n, 0, 0, g, q);
                                    k = this.__cacheBitmapData2;
                                    y && (null == this.__cacheBitmapData3 || h > this.__cacheBitmapData3.width || l > this.__cacheBitmapData3.height ? this.__cacheBitmapData3 = new H(h, l, !0, 0) : (this.__cacheBitmapData3.fillRect(this.__cacheBitmapData3.rect, 0), null != this.__cacheBitmapData3.image && (this.__cacheBitmapData3.__textureVersion = this.__cacheBitmapData3.image.version + 1)), this.__cacheBitmapData3.__setUVRect(n, 0, 0, g, q), r = this.__cacheBitmapData3);
                                    D.__setBlendMode(10);
                                    D.__worldAlpha =
                                        1;
                                    D.__worldTransform.identity();
                                    D.__worldColorTransform.__identity();
                                    f = 0;
                                    for (m = this.__filters; f < m.length;) {
                                        ja = m[f];
                                        ++f;
                                        ja.__preserveObject && (D.__setRenderTarget(r), D.__renderFilterPass(p, D.__defaultDisplayShader, ja.__smooth));
                                        l = 0;
                                        for (g = ja.__numShaderPasses; l < g;) h = l++, h = ja.__initShader(D, h, ja.__preserveObject ? r : null), D.__setBlendMode(ja.__shaderBlendMode), D.__setRenderTarget(k), D.__renderFilterPass(p, h, ja.__smooth), h = p, p = k, k = h;
                                        ja.__renderDirty = !1
                                    }
                                    this.__cacheBitmap.__bitmapData = p
                                }
                                a.__blendMode = 10;
                                a.__setBlendMode(v);
                                a.__copyShader(D);
                                null != w ? n.setRenderToTexture(w, x, u, B) : n.setRenderToBackBuffer();
                                a.__resumeClipAndMask(D);
                                a.setViewport();
                                this.__cacheBitmapColorTransform.__copyFrom(c)
                            } else {
                                this.__cacheBitmapData.__drawCanvas(this, this.__cacheBitmapRenderer);
                                if (p) {
                                    y = a = !1;
                                    f = 0;
                                    for (m = this.__filters; f < m.length;) ja = m[f], ++f, ja.__needSecondBitmapData && (a = !0), ja.__preserveObject && (y = !0);
                                    p = this.__cacheBitmapData;
                                    r = null;
                                    a ? (null == this.__cacheBitmapData2 || null == this.__cacheBitmapData2.image || h > this.__cacheBitmapData2.width ||
                                        l > this.__cacheBitmapData2.height ? this.__cacheBitmapData2 = new H(h, l, !0, 0) : this.__cacheBitmapData2.fillRect(this.__cacheBitmapData2.rect, 0), k = this.__cacheBitmapData2) : k = p;
                                    y && (null == this.__cacheBitmapData3 || null == this.__cacheBitmapData3.image || h > this.__cacheBitmapData3.width || l > this.__cacheBitmapData3.height ? this.__cacheBitmapData3 = new H(h, l, !0, 0) : this.__cacheBitmapData3.fillRect(this.__cacheBitmapData3.rect, 0), r = this.__cacheBitmapData3);
                                    null == this.__tempPoint && (this.__tempPoint = new La);
                                    l = this.__tempPoint;
                                    f = 0;
                                    for (m = this.__filters; f < m.length;) ja = m[f], ++f, ja.__preserveObject && r.copyPixels(p, p.rect, l), h = ja.__applyFilter(k, p, p.rect, l), ja.__preserveObject && h.draw(r, null, null != this.__objectTransform ? this.__objectTransform.get_colorTransform() : null), ja.__renderDirty = !1, a && h == k && (h = p, p = k, k = h);
                                    this.__cacheBitmapData != p && (h = this.__cacheBitmapData, this.__cacheBitmapData = p, this.__cacheBitmapData2 = h, this.__cacheBitmap.__bitmapData = this.__cacheBitmapData, this.__cacheBitmapRenderer = null);
                                    this.__cacheBitmap.__imageVersion =
                                        this.__cacheBitmapData.__textureVersion
                                }
                                this.__cacheBitmapColorTransform.__copyFrom(c);
                                this.__cacheBitmapColorTransform.__isDefault(!0) || (this.__cacheBitmapColorTransform.alphaMultiplier = 1, this.__cacheBitmapData.colorTransform(this.__cacheBitmapData.rect, this.__cacheBitmapColorTransform))
                            }
                            this.__isCacheBitmapRender = !1
                        }(e || b) && fa.__pool.release(d);
                        d = e
                    } else null != this.__cacheBitmap && ("dom" == a.__type && this.__cacheBitmap.__renderDOMClear(a), this.__cacheBitmapRenderer = this.__cacheBitmapColorTransform =
                        this.__cacheBitmapData3 = this.__cacheBitmapData2 = this.__cacheBitmapData = this.__cacheBitmap = null, d = !0);
                    wb.__pool.release(c);
                    return d
                },
                __updateTransforms: function(a) {
                    var b = null != a;
                    a = b ? a : this.__transform;
                    null == this.__worldTransform && (this.__worldTransform = new xa);
                    null == this.__renderTransform && (this.__renderTransform = new xa);
                    var c = null != this.__renderParent ? this.__renderParent : this.parent;
                    if (b || null == this.parent) this.__worldTransform.copyFrom(a);
                    else {
                        var d = this.parent.__worldTransform,
                            e = this.__worldTransform;
                        e.a = a.a * d.a + a.b * d.c;
                        e.b = a.a * d.b + a.b * d.d;
                        e.c = a.c * d.a + a.d * d.c;
                        e.d = a.c * d.b + a.d * d.d;
                        e.tx = a.tx * d.a + a.ty * d.c + d.tx;
                        e.ty = a.tx * d.b + a.ty * d.d + d.ty
                    }
                    b || null == c ? this.__renderTransform.copyFrom(a) : (d = c.__renderTransform, e = this.__renderTransform, e.a = a.a * d.a + a.b * d.c, e.b = a.a * d.b + a.b * d.d, e.c = a.c * d.a + a.d * d.c, e.d = a.c * d.b + a.d * d.d, e.tx = a.tx * d.a + a.ty * d.c + d.tx, e.ty = a.tx * d.b + a.ty * d.d + d.ty);
                    null != this.__scrollRect && (b = this.__renderTransform, a = -this.__scrollRect.x, c = -this.__scrollRect.y, b.tx = a * b.a + c * b.c + b.tx, b.ty = a * b.b + c * b.d +
                        b.ty)
                },
                get_alpha: function() {
                    return this.__alpha
                },
                set_alpha: function(a) {
                    1 < a && (a = 1);
                    0 > a && (a = 0);
                    a == this.__alpha || this.get_cacheAsBitmap() || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                    return this.__alpha = a
                },
                set_blendMode: function(a) {
                    null == a && (a = 10);
                    a == this.__blendMode || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                    return this.__blendMode = a
                },
                get_cacheAsBitmap: function() {
                    return null == this.__filters ? this.__cacheAsBitmap : !0
                },
                set_filters: function(a) {
                    null !=
                        a && 0 < a.length ? (this.__filters = a, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())) : null != this.__filters && (this.__filters = null, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    return a
                },
                get_height: function() {
                    var a = fa.__pool.get();
                    this.__getLocalBounds(a);
                    var b = a.height;
                    fa.__pool.release(a);
                    return b
                },
                set_height: function(a) {
                    var b = fa.__pool.get(),
                        c = xa.__pool.get();
                    c.identity();
                    this.__getBounds(b, c);
                    a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
                    fa.__pool.release(b);
                    xa.__pool.release(c);
                    return a
                },
                get_loaderInfo: function() {
                    return null != this.stage ? Sc.current.__loaderInfo : null
                },
                get_mask: function() {
                    return this.__mask
                },
                set_mask: function(a) {
                    if (a == this.__mask) return a;
                    a != this.__mask && (this.__setTransformDirty(), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    if (null != this.__mask) {
                        this.__mask.__isMask = !1;
                        this.__mask.__maskTarget = null;
                        this.__mask.__setTransformDirty();
                        var b = this.__mask;
                        b.__renderDirty || (b.__renderDirty = !0, b.__setParentRenderDirty())
                    }
                    null != a && (a.__isMask = !0, a.__maskTarget = this, a.__setWorldTransformInvalid());
                    null != this.__cacheBitmap && this.__cacheBitmap.get_mask() != a && this.__cacheBitmap.set_mask(a);
                    return this.__mask = a
                },
                get_mouseX: function() {
                    var a = null != this.stage ? this.stage.__mouseX : Sc.current.stage.__mouseX,
                        b = null != this.stage ? this.stage.__mouseY : Sc.current.stage.__mouseY,
                        c = this.__getRenderTransform(),
                        d = c.a * c.d - c.b * c.c;
                    return 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - b) + c.d * (a - c.tx))
                },
                get_mouseY: function() {
                    var a =
                        null != this.stage ? this.stage.__mouseX : Sc.current.stage.__mouseX,
                        b = null != this.stage ? this.stage.__mouseY : Sc.current.stage.__mouseY,
                        c = this.__getRenderTransform(),
                        d = c.a * c.d - c.b * c.c;
                    return 0 == d ? -c.ty : 1 / d * (c.a * (b - c.ty) + c.b * (c.tx - a))
                },
                get_name: function() {
                    return this.__name
                },
                set_name: function(a) {
                    return this.__name = a
                },
                get_rotation: function() {
                    return this.__rotation
                },
                set_rotation: function(a) {
                    if (a != this.__rotation) {
                        this.__rotation = a;
                        var b = Math.PI / 180 * this.__rotation;
                        this.__rotationSine = Math.sin(b);
                        this.__rotationCosine =
                            Math.cos(b);
                        this.__transform.a = this.__rotationCosine * this.__scaleX;
                        this.__transform.b = this.__rotationSine * this.__scaleX;
                        this.__transform.c = -this.__rotationSine * this.__scaleY;
                        this.__transform.d = this.__rotationCosine * this.__scaleY;
                        this.__setTransformDirty()
                    }
                    return a
                },
                get_scaleX: function() {
                    return this.__scaleX
                },
                set_scaleX: function(a) {
                    if (a != this.__scaleX)
                        if (this.__scaleX = a, 0 == this.__transform.b) a != this.__transform.a && this.__setTransformDirty(), this.__transform.a = a;
                        else {
                            var b = this.__rotationCosine * a,
                                c =
                                this.__rotationSine * a;
                            this.__transform.a == b && this.__transform.b == c || this.__setTransformDirty();
                            this.__transform.a = b;
                            this.__transform.b = c
                        }
                    return a
                },
                get_scaleY: function() {
                    return this.__scaleY
                },
                set_scaleY: function(a) {
                    if (a != this.__scaleY)
                        if (this.__scaleY = a, 0 == this.__transform.c) a != this.__transform.d && this.__setTransformDirty(), this.__transform.d = a;
                        else {
                            var b = -this.__rotationSine * a,
                                c = this.__rotationCosine * a;
                            this.__transform.d == c && this.__transform.c == b || this.__setTransformDirty();
                            this.__transform.c = b;
                            this.__transform.d =
                                c
                        }
                    return a
                },
                get_scrollRect: function() {
                    return null == this.__scrollRect ? null : this.__scrollRect.clone()
                },
                set_scrollRect: function(a) {
                    if (null == a && null == this.__scrollRect || null != a && null != this.__scrollRect && this.__scrollRect.equals(a)) return a;
                    null != a ? (null == this.__scrollRect && (this.__scrollRect = new fa), this.__scrollRect.copyFrom(a)) : this.__scrollRect = null;
                    this.__setTransformDirty();
                    za.__supportDOM && !this.__renderDirty && (this.__renderDirty = !0, this.__setParentRenderDirty());
                    return a
                },
                get_transform: function() {
                    null ==
                        this.__objectTransform && (this.__objectTransform = new Vh(this));
                    return this.__objectTransform
                },
                set_transform: function(a) {
                    if (null == a) throw F.thrown(new Ug("Parameter transform must be non-null."));
                    null == this.__objectTransform && (this.__objectTransform = new Vh(this));
                    this.__setTransformDirty();
                    this.__objectTransform.set_matrix(a.get_matrix());
                    if (!this.__objectTransform.get_colorTransform().__equals(a.get_colorTransform(), !0) || !this.get_cacheAsBitmap() && this.__objectTransform.get_colorTransform().alphaMultiplier !=
                        a.get_colorTransform().alphaMultiplier) this.__objectTransform.get_colorTransform().__copyFrom(a.get_colorTransform()), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                    return this.__objectTransform
                },
                get_visible: function() {
                    return this.__visible
                },
                set_visible: function(a) {
                    a == this.__visible || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                    return this.__visible = a
                },
                get_width: function() {
                    var a = fa.__pool.get();
                    this.__getLocalBounds(a);
                    var b = a.width;
                    fa.__pool.release(a);
                    return b
                },
                set_width: function(a) {
                    var b = fa.__pool.get(),
                        c = xa.__pool.get();
                    c.identity();
                    this.__getBounds(b, c);
                    a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
                    fa.__pool.release(b);
                    xa.__pool.release(c);
                    return a
                },
                get_x: function() {
                    return this.__transform.tx
                },
                set_x: function(a) {
                    a != this.__transform.tx && this.__setTransformDirty();
                    return this.__transform.tx = a
                },
                get_y: function() {
                    return this.__transform.ty
                },
                set_y: function(a) {
                    a != this.__transform.ty && this.__setTransformDirty();
                    return this.__transform.ty =
                        a
                },
                __class__: za,
                __properties__: {
                    set_filters: "set_filters",
                    set_blendMode: "set_blendMode",
                    set_y: "set_y",
                    get_y: "get_y",
                    set_x: "set_x",
                    get_x: "get_x",
                    set_width: "set_width",
                    get_width: "get_width",
                    set_visible: "set_visible",
                    get_visible: "get_visible",
                    set_transform: "set_transform",
                    get_transform: "get_transform",
                    set_scrollRect: "set_scrollRect",
                    get_scrollRect: "get_scrollRect",
                    set_scaleY: "set_scaleY",
                    get_scaleY: "get_scaleY",
                    set_scaleX: "set_scaleX",
                    get_scaleX: "get_scaleX",
                    set_rotation: "set_rotation",
                    get_rotation: "get_rotation",
                    set_name: "set_name",
                    get_name: "get_name",
                    get_mouseY: "get_mouseY",
                    get_mouseX: "get_mouseX",
                    set_mask: "set_mask",
                    get_mask: "get_mask",
                    get_loaderInfo: "get_loaderInfo",
                    set_height: "set_height",
                    get_height: "get_height",
                    get_cacheAsBitmap: "get_cacheAsBitmap",
                    set_alpha: "set_alpha",
                    get_alpha: "get_alpha"
                }
            });
            var pa = function() {
                za.call(this);
                this.doubleClickEnabled = !1;
                this.mouseEnabled = !0;
                this.needsSoftKeyboard = !1;
                this.__tabEnabled = null;
                this.__tabIndex = -1
            };
            g["openfl.display.InteractiveObject"] = pa;
            pa.__name__ = "openfl.display.InteractiveObject";
            pa.__super__ = za;
            pa.prototype = n(za.prototype, {
                __allowMouseFocus: function() {
                    return this.get_tabEnabled()
                },
                __getInteractive: function(a) {
                    null != a && (a.push(this), null != this.parent && this.parent.__getInteractive(a));
                    return !0
                },
                __hitTest: function(a, b, c, d, e, f) {
                    return !f.get_visible() || this.__isMask || e && !this.mouseEnabled ? !1 : za.prototype.__hitTest.call(this, a, b, c, d, e, f)
                },
                __tabTest: function(a) {
                    this.get_tabEnabled() && a.push(this)
                },
                get_tabEnabled: function() {
                    return 1 == this.__tabEnabled ? !0 : !1
                },
                get_tabIndex: function() {
                    return this.__tabIndex
                },
                __class__: pa,
                __properties__: n(za.prototype.__properties__, {
                    get_tabIndex: "get_tabIndex",
                    get_tabEnabled: "get_tabEnabled"
                })
            });
            var wa = function() {
                pa.call(this);
                this.__tabChildren = this.mouseChildren = !0;
                this.__children = [];
                this.__removedChildren = ib.toObjectVector(null)
            };
            g["openfl.display.DisplayObjectContainer"] = wa;
            wa.__name__ = "openfl.display.DisplayObjectContainer";
            wa.__super__ = pa;
            wa.prototype = n(pa.prototype, {
                addChild: function(a) {
                    return this.addChildAt(a, this.get_numChildren())
                },
                addChildAt: function(a, b) {
                    if (null ==
                        a) throw a = new Ug("Error #2007: Parameter child must be non-null."), a.errorID = 2007, F.thrown(a);
                    if (a.stage == a) throw a = new jg("Error #3783: A Stage object cannot be added as the child of another object."), a.errorID = 3783, F.thrown(a);
                    if (b > this.__children.length || 0 > b) throw F.thrown("Invalid index position " + b);
                    if (a.parent == this) this.__children[b] != a && (Y.remove(this.__children, a), this.__children.splice(b, 0, a), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    else {
                        null != a.parent &&
                            a.parent.removeChild(a);
                        this.__children.splice(b, 0, a);
                        a.parent = this;
                        (b = null != this.stage && null == a.stage) && a.__setStageReference(this.stage);
                        a.__setTransformDirty();
                        a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty());
                        this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                        var c = new sa("added");
                        c.bubbles = !0;
                        c.target = a;
                        a.__dispatchWithCapture(c);
                        b && (c = new sa("addedToStage", !1, !1), a.__dispatchWithCapture(c), a.__dispatchChildren(c))
                    }
                    return a
                },
                contains: function(a) {
                    for (; a !=
                        this && null != a;) a = a.parent;
                    return a == this
                },
                getChildAt: function(a) {
                    return 0 <= a && a < this.__children.length ? this.__children[a] : null
                },
                getChildIndex: function(a) {
                    for (var b = 0, c = this.__children.length; b < c;) {
                        var d = b++;
                        if (this.__children[d] == a) return d
                    }
                    return -1
                },
                removeChild: function(a) {
                    if (null != a && a.parent == this) {
                        a.__setTransformDirty();
                        a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty());
                        this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                        var b = new sa("removed", !0);
                        a.__dispatchWithCapture(b);
                        null != this.stage && (null != a.stage && this.stage.get_focus() == a && this.stage.set_focus(null), b = new sa("removedFromStage", !1, !1), a.__dispatchWithCapture(b), a.__dispatchChildren(b), a.__setStageReference(null));
                        a.parent = null;
                        Y.remove(this.__children, a);
                        this.__removedChildren.push(a);
                        a.__setTransformDirty()
                    }
                    return a
                },
                removeChildAt: function(a) {
                    return 0 <= a && a < this.__children.length ? this.removeChild(this.__children[a]) : null
                },
                removeChildren: function(a, b) {
                    null == b && (b = 2147483647);
                    null == a && (a = 0);
                    if (2147483647 == b &&
                        (b = this.__children.length - 1, 0 > b)) return;
                    if (!(a > this.__children.length - 1)) {
                        if (b < a || 0 > a || b > this.__children.length) throw F.thrown(new Wh("The supplied index is out of bounds."));
                        for (b -= a; 0 <= b;) this.removeChildAt(a), --b
                    }
                },
                __cleanup: function() {
                    pa.prototype.__cleanup.call(this);
                    for (var a = 0, b = this.__children; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.__cleanup()
                    }
                    for (a = this.__removedChildren.iterator(); a.hasNext();) b = a.next(), null == b.stage && b.__cleanup();
                    this.__removedChildren.set_length(0)
                },
                __dispatchChildren: function(a) {
                    if (null !=
                        this.__children)
                        for (var b = 0, c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            a.target = d;
                            if (!d.__dispatchWithCapture(a)) break;
                            d.__dispatchChildren(a)
                        }
                },
                __enterFrame: function(a) {
                    for (var b = 0, c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__enterFrame(a)
                    }
                },
                __getBounds: function(a, b) {
                    pa.prototype.__getBounds.call(this, a, b);
                    if (0 != this.__children.length) {
                        for (var c = xa.__pool.get(), d = 0, e = this.__children; d < e.length;) {
                            var f = e[d];
                            ++d;
                            if (0 != f.__scaleX && 0 != f.__scaleY) {
                                var k = f.__transform;
                                c.a = k.a * b.a + k.b * b.c;
                                c.b = k.a *
                                    b.b + k.b * b.d;
                                c.c = k.c * b.a + k.d * b.c;
                                c.d = k.c * b.b + k.d * b.d;
                                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                                f.__getBounds(a, c)
                            }
                        }
                        xa.__pool.release(c)
                    }
                },
                __getFilterBounds: function(a, b) {
                    pa.prototype.__getFilterBounds.call(this, a, b);
                    if (null == this.__scrollRect && 0 != this.__children.length) {
                        for (var c = xa.__pool.get(), d = 0, e = this.__children; d < e.length;) {
                            var f = e[d];
                            ++d;
                            if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
                                var k = f.__transform;
                                c.a = k.a * b.a + k.b * b.c;
                                c.b = k.a * b.b + k.b * b.d;
                                c.c = k.c * b.a + k.d * b.c;
                                c.d = k.c * b.b + k.d *
                                    b.d;
                                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                                f.__getFilterBounds(a, c)
                            }
                        }
                        xa.__pool.release(c)
                    }
                },
                __getRenderBounds: function(a, b) {
                    if (null != this.__scrollRect) pa.prototype.__getRenderBounds.call(this, a, b);
                    else if (pa.prototype.__getBounds.call(this, a, b), 0 != this.__children.length) {
                        for (var c = xa.__pool.get(), d = 0, e = this.__children; d < e.length;) {
                            var f = e[d];
                            ++d;
                            if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
                                var k = f.__transform;
                                c.a = k.a * b.a + k.b * b.c;
                                c.b = k.a * b.b + k.b * b.d;
                                c.c = k.c * b.a + k.d * b.c;
                                c.d = k.c * b.b +
                                    k.d * b.d;
                                c.tx = k.tx * b.a + k.ty * b.c + b.tx;
                                c.ty = k.tx * b.b + k.ty * b.d + b.ty;
                                f.__getRenderBounds(a, c)
                            }
                        }
                        xa.__pool.release(c)
                    }
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (!f.get_visible() || this.__isMask || e && !this.mouseEnabled && !this.mouseChildren || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                    if (null != this.__scrollRect) {
                        var k = La.__pool.get();
                        k.setTo(a, b);
                        var p = this.__getRenderTransform(),
                            m = p.a * p.d - p.b * p.c;
                        if (0 == m) k.x = -p.tx, k.y = -p.ty;
                        else {
                            var ja = 1 / m * (p.c * (p.ty - k.y) + p.d * (k.x - p.tx));
                            k.y = 1 / m * (p.a * (k.y -
                                p.ty) + p.b * (p.tx - k.x));
                            k.x = ja
                        }
                        if (!this.__scrollRect.containsPoint(k)) return La.__pool.release(k), !1;
                        La.__pool.release(k)
                    }
                    k = this.__children.length;
                    if (e)
                        if (null == d || !this.mouseChildren)
                            for (; 0 <= --k;) {
                                if (this.__children[k].__hitTest(a, b, c, null, !0, this.__children[k])) return null != d && d.push(f), !0
                            } else {
                                if (null != d) {
                                    e = d.length;
                                    for (m = !1; 0 <= --k && !(((p = this.__children[k].__getInteractive(null)) || this.mouseEnabled && !m) && this.__children[k].__hitTest(a, b, c, d, !0, this.__children[k]) && (m = !0, p && d.length > e)););
                                    if (m) return d.splice(e,
                                        0, f), !0
                                }
                            } else {
                                for (m = !1; 0 <= --k && (!this.__children[k].__hitTest(a, b, c, d, !1, this.__children[k]) || (m = !0, null != d)););
                                return m
                            }
                    return !1
                },
                __hitTestMask: function(a, b) {
                    for (var c = this.__children.length; 0 <= --c;)
                        if (this.__children[c].__hitTestMask(a, b)) return !0;
                    return !1
                },
                __renderCairo: function(a) {},
                __renderCairoMask: function(a) {},
                __renderCanvas: function(a) {
                    for (var b = this.__removedChildren.iterator(); b.hasNext();) {
                        var c = b.next();
                        null == c.stage && c.__cleanup()
                    }
                    this.__removedChildren.set_length(0);
                    if (!(!this.__renderable ||
                            0 >= this.__worldAlpha || null != this.get_mask() && (0 >= this.get_mask().get_width() || 0 >= this.get_mask().get_height())) && (pa.prototype.__renderCanvas.call(this, a), null == this.__cacheBitmap || this.__isCacheBitmapRender)) {
                        a.__pushMaskObject(this);
                        if (null != a.__stage) {
                            b = 0;
                            for (c = this.__children; b < c.length;) {
                                var d = c[b];
                                ++b;
                                d.__renderCanvas(a);
                                d.__renderDirty = !1
                            }
                            this.__renderDirty = !1
                        } else
                            for (b = 0, c = this.__children; b < c.length;) d = c[b], ++b, d.__renderCanvas(a);
                        a.__popMaskObject(this)
                    }
                },
                __renderCanvasMask: function(a) {
                    for (var b =
                            this.__removedChildren.iterator(); b.hasNext();) {
                        var c = b.next();
                        null == c.stage && c.__cleanup()
                    }
                    this.__removedChildren.set_length(0);
                    null != this.__graphics && v.renderMask(this.__graphics, a);
                    b = 0;
                    for (c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__renderCanvasMask(a)
                    }
                },
                __renderDOM: function(a) {
                    for (var b = this.__removedChildren.iterator(); b.hasNext();) {
                        var c = b.next();
                        null == c.stage && c.__renderDOM(a)
                    }
                    for (b = this.__removedChildren.iterator(); b.hasNext();) c = b.next(), null == c.stage && c.__cleanup();
                    this.__removedChildren.set_length(0);
                    pa.prototype.__renderDOM.call(this, a);
                    if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                        a.__pushMaskObject(this);
                        if (null != a.__stage) {
                            b = 0;
                            for (c = this.__children; b < c.length;) {
                                var d = c[b];
                                ++b;
                                d.__renderDOM(a);
                                d.__renderDirty = !1
                            }
                            this.__renderDirty = !1
                        } else
                            for (b = 0, c = this.__children; b < c.length;) d = c[b], ++b, d.__renderDOM(a);
                        a.__popMaskObject(this)
                    }
                },
                __renderDOMClear: function(a) {
                    for (var b = this.__removedChildren.iterator(); b.hasNext();) {
                        var c = b.next();
                        null == c.stage && c.__renderDOMClear(a)
                    }
                    for (b = this.__removedChildren.iterator(); b.hasNext();) c =
                        b.next(), null == c.stage && c.__cleanup();
                    this.__removedChildren.set_length(0);
                    b = 0;
                    for (c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__renderDOMClear(a)
                    }
                },
                __renderGL: function(a) {
                    for (var b = this.__removedChildren.iterator(); b.hasNext();) {
                        var c = b.next();
                        null == c.stage && c.__cleanup()
                    }
                    this.__removedChildren.set_length(0);
                    if (this.__renderable && !(0 >= this.__worldAlpha) && (pa.prototype.__renderGL.call(this, a), null == this.__cacheBitmap || this.__isCacheBitmapRender)) {
                        if (0 < this.__children.length)
                            if (a.__pushMaskObject(this),
                                null != a.__stage) {
                                b = 0;
                                for (c = this.__children; b < c.length;) {
                                    var d = c[b];
                                    ++b;
                                    d.__renderGL(a);
                                    d.__renderDirty = !1
                                }
                                this.__renderDirty = !1
                            } else
                                for (b = 0, c = this.__children; b < c.length;) d = c[b], ++b, d.__renderGL(a);
                        0 < this.__children.length && a.__popMaskObject(this)
                    }
                },
                __renderGLMask: function(a) {
                    for (var b = this.__removedChildren.iterator(); b.hasNext();) {
                        var c = b.next();
                        null == c.stage && c.__cleanup()
                    }
                    this.__removedChildren.set_length(0);
                    null != this.__graphics && of .renderMask(this, a);
                    b = 0;
                    for (c = this.__children; b < c.length;) {
                        var d =
                            c[b];
                        ++b;
                        d.__renderGLMask(a)
                    }
                },
                __setStageReference: function(a) {
                    pa.prototype.__setStageReference.call(this, a);
                    if (null != this.__children)
                        for (var b = 0, c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d.__setStageReference(a)
                        }
                },
                __setWorldTransformInvalid: function() {
                    if (!this.__worldTransformInvalid && (this.__worldTransformInvalid = !0, null != this.__children))
                        for (var a = 0, b = this.__children; a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.__setWorldTransformInvalid()
                        }
                },
                __shouldCacheHardware: function(a) {
                    if (1 == a) return !0;
                    a = pa.prototype.__shouldCacheHardware.call(this,
                        a);
                    if (1 == a) return !0;
                    if (null != this.__children)
                        for (var b = 0, c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            a = d.__shouldCacheHardware(a);
                            if (1 == a) return !0
                        }
                    return a
                },
                __tabTest: function(a) {
                    pa.prototype.__tabTest.call(this, a);
                    if (this.get_tabChildren())
                        for (var b, c = 0, d = this.__children; c < d.length;) {
                            var e = d[c];
                            ++c;
                            if (b = e.__getInteractive(null)) b = e, b.__tabTest(a)
                        }
                },
                __update: function(a, b) {
                    pa.prototype.__update.call(this, a, b);
                    if (b) {
                        b = 0;
                        for (var c = this.__children; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d.__update(a, !0)
                        }
                    }
                },
                get_numChildren: function() {
                    return this.__children.length
                },
                get_tabChildren: function() {
                    return this.__tabChildren
                },
                __class__: wa,
                __properties__: n(pa.prototype.__properties__, {
                    get_tabChildren: "get_tabChildren",
                    get_numChildren: "get_numChildren"
                })
            });
            var Z = function() {
                wa.call(this);
                this.__buttonMode = !1;
                this.useHandCursor = !0
            };
            g["openfl.display.Sprite"] = Z;
            Z.__name__ = "openfl.display.Sprite";
            Z.__super__ = wa;
            Z.prototype = n(wa.prototype, {
                __getCursor: function() {
                    return this.__buttonMode && this.useHandCursor ? "button" : null
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (e && !this.mouseEnabled &&
                        !this.mouseChildren) return !1;
                    if (!f.get_visible() || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return this.__hitTestHitArea(a, b, c, d, e, f);
                    if (null != this.__scrollRect) {
                        var k = La.__pool.get();
                        k.setTo(a, b);
                        var p = this.__getRenderTransform(),
                            m = p.a * p.d - p.b * p.c;
                        if (0 == m) k.x = -p.tx, k.y = -p.ty;
                        else {
                            var ja = 1 / m * (p.c * (p.ty - k.y) + p.d * (k.x - p.tx));
                            k.y = 1 / m * (p.a * (k.y - p.ty) + p.b * (p.tx - k.x));
                            k.x = ja
                        }
                        if (!this.__scrollRect.containsPoint(k)) return La.__pool.release(k), this.__hitTestHitArea(a, b, c, d, !0, f);
                        La.__pool.release(k)
                    }
                    return wa.prototype.__hitTest.call(this, a, b, c, d, e, f) ? null != d ? e : !0 : null == this.hitArea && null != this.__graphics && this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()) ? (null == d || e && !this.mouseEnabled || d.push(f), !0) : this.__hitTestHitArea(a, b, c, d, e, f)
                },
                __hitTestHitArea: function(a, b, c, d, e, f) {
                    return null == this.hitArea || this.hitArea.mouseEnabled ? !1 : (this.hitArea.mouseEnabled = !0, a = this.hitArea.__hitTest(a, b, c, null, !0, f), this.hitArea.mouseEnabled = !1, null != d && a && (d[d.length] =
                        f), a)
                },
                __hitTestMask: function(a, b) {
                    return wa.prototype.__hitTestMask.call(this, a, b) || null != this.__graphics && this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()) ? !0 : !1
                },
                get_graphics: function() {
                    null == this.__graphics && (this.__graphics = new ad(this));
                    return this.__graphics
                },
                get_tabEnabled: function() {
                    return null == this.__tabEnabled ? this.__buttonMode : this.__tabEnabled
                },
                get_buttonMode: function() {
                    return this.__buttonMode
                },
                __class__: Z,
                __properties__: n(wa.prototype.__properties__, {
                    get_graphics: "get_graphics",
                    get_buttonMode: "get_buttonMode"
                })
            });
            var na = function() {
                Z.call(this);
                this.addChild(new Xh(0, 0, fb));
                this.addChild(new Yh(10, 3, 16777215))
            };
            g.Main = na;
            na.__name__ = "Main";
            na.__super__ = Z;
            na.prototype = n(Z.prototype, {
                __class__: na
            });
            var U = function(a) {
                a.addChild(this);
                na.call(this);
                this.dispatchEvent(new sa("addedToStage", !1, !1))
            };
            g.DocumentClass = U;
            U.__name__ = "DocumentClass";
            U.__super__ = na;
            U.prototype = n(na.prototype, {
                __class__: U
            });
            var Q = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = "bf");
                this.danced = !1;
                this.curCharacter =
                    "bf";
                this.debugMode = this.isPlayer = !1;
                this.animOffsets = new aa;
                G.call(this, a, b);
                this.curCharacter = c;
                this.isPlayer = d;
                this.set_antialiasing(!0);
                switch (this.curCharacter) {
                    case "dad":
                        a = Nb.fromSparrow("assets/images/DADDY_DEAREST.png", "assets/images/DADDY_DEAREST.xml");
                        this.set_frames(a);
                        this.animation.addByPrefix("idle", "Dad idle dance", 24);
                        this.animation.addByPrefix("singUP", "Dad Sing Note UP", 24);
                        this.animation.addByPrefix("singRIGHT", "Dad Sing Note RIGHT", 24);
                        this.animation.addByPrefix("singDOWN", "Dad Sing Note DOWN",
                            24);
                        this.animation.addByPrefix("singLEFT", "Dad Sing Note LEFT", 24);
                        this.playAnim("idle");
                        this.addOffset("idle");
                        this.addOffset("singUP", -6, 50);
                        this.addOffset("singRIGHT", 0, 27);
                        this.addOffset("singLEFT", -10, 10);
                        this.addOffset("singDOWN", 0, -30);
                        break;
                    case "gf":
                        a = Nb.fromSparrow("assets/images/GF_assets.png", "assets/images/GF_assets.xml");
                        this.set_frames(a);
                        this.animation.addByPrefix("cheer", "GF Cheer", 24, !1);
                        this.animation.addByPrefix("singLEFT", "GF left note", 24, !1);
                        this.animation.addByPrefix("singRIGHT",
                            "GF Right Note", 24, !1);
                        this.animation.addByPrefix("singUP", "GF Up Note", 24, !1);
                        this.animation.addByPrefix("singDOWN", "GF Down Note", 24, !1);
                        this.animation.addByIndices("sad", "gf sad", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "", 24, !1);
                        this.animation.addByIndices("danceLeft", "GF Dancing Beat", [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "", 24, !1);
                        this.animation.addByIndices("danceRight", "GF Dancing Beat", [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "", 24, !1);
                        this.animation.addByPrefix("scared", "GF FEAR", 24);
                        this.addOffset("cheer");
                        this.addOffset("sad", -2, -2);
                        this.addOffset("danceLeft", 0, -9);
                        this.addOffset("danceRight", 0, -9);
                        this.addOffset("singUP", 0, 4);
                        this.addOffset("singRIGHT", 0, -20);
                        this.addOffset("singLEFT", 0, -19);
                        this.addOffset("singDOWN", 0, -20);
                        this.addOffset("scared");
                        this.playAnim("danceRight");
                        break;
                    case "monster":
                        a = Nb.fromSparrow("assets/images/Monster_Assets.png", "assets/images/Monster_Assets.xml");
                        this.set_frames(a);
                        this.animation.addByPrefix("idle", "monster idle", 24);
                        this.animation.addByPrefix("singUP", "monster up note",
                            24, !1);
                        this.animation.addByPrefix("singDOWN", "monster down", 24, !1);
                        this.animation.addByPrefix("singLEFT", "Monster left note", 24, !1);
                        this.animation.addByPrefix("singRIGHT", "Monster Right note", 24, !1);
                        this.addOffset("idle");
                        this.addOffset("singUP", -20, 50);
                        this.addOffset("singRIGHT", -51);
                        this.addOffset("singLEFT", -30);
                        this.addOffset("singDOWN", -30, -40);
                        this.playAnim("idle");
                        break;
                    case "spooky":
                        a = Nb.fromSparrow("assets/images/spooky_kids_assets.png", "assets/images/spooky_kids_assets.xml"), this.set_frames(a),
                            this.animation.addByPrefix("singUP", "spooky UP NOTE", 24, !1), this.animation.addByPrefix("singDOWN", "spooky DOWN note", 24, !1), this.animation.addByPrefix("singLEFT", "note sing left", 24, !1), this.animation.addByPrefix("singRIGHT", "spooky sing right", 24, !1), this.animation.addByIndices("danceLeft", "spooky dance idle", [0, 2, 6], "", 12, !1), this.animation.addByIndices("danceRight", "spooky dance idle", [8, 10, 12, 14], "", 12, !1), this.addOffset("danceLeft"), this.addOffset("danceRight"), this.addOffset("singUP", -20, 26),
                            this.addOffset("singRIGHT", -130, -14), this.addOffset("singLEFT", 130, -10), this.addOffset("singDOWN", -50, -130), this.playAnim("danceRight")
                }
            };
            g.Character = Q;
            Q.__name__ = "Character";
            Q.__super__ = G;
            Q.prototype = n(G.prototype, {
                dance: function() {
                    switch (this.curCharacter) {
                        case "dad":
                            this.playAnim("idle");
                            break;
                        case "gf":
                            (this.danced = !this.danced) ? this.playAnim("danceRight"): this.playAnim("danceLeft");
                            break;
                        case "monster":
                            this.playAnim("idle");
                            break;
                        case "spooky":
                            (this.danced = !this.danced) ? this.playAnim("danceRight"):
                                this.playAnim("danceLeft")
                    }
                },
                playAnim: function(a, b, c, d) {
                    null == d && (d = 0);
                    null == c && (c = !1);
                    null == b && (b = !1);
                    this.animation.play(a, b, c, d);
                    b = this.animOffsets.h[this.animation._curAnim.name];
                    Object.prototype.hasOwnProperty.call(this.animOffsets.h, this.animation._curAnim.name) && this.offset.set(b[0], b[1]);
                    "gf" == this.curCharacter && ("singLEFT" == a ? this.danced = !0 : "singRIGHT" == a && (this.danced = !1), "singUP" == a || "singDOWN" == a) && (this.danced = !this.danced)
                },
                addOffset: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    this.animOffsets.h[a] = [b, c]
                },
                __class__: Q
            });
            var kc = function(a, b) {
                this.stunned = !1;
                Q.call(this, a, b);
                a = Nb.fromSparrow("assets/images/BOYFRIEND.png", "assets/images/BOYFRIEND.xml");
                this.set_frames(a);
                this.animation.addByPrefix("idle", "BF idle dance", 24, !1);
                this.animation.addByPrefix("singUP", "BF NOTE UP0", 24, !1);
                this.animation.addByPrefix("singLEFT", "BF NOTE LEFT0", 24, !1);
                this.animation.addByPrefix("singRIGHT", "BF NOTE RIGHT0", 24, !1);
                this.animation.addByPrefix("singDOWN", "BF NOTE DOWN0", 24, !1);
                this.animation.addByPrefix("singUPmiss",
                    "BF NOTE UP MISS", 24, !1);
                this.animation.addByPrefix("singLEFTmiss", "BF NOTE LEFT MISS", 24, !1);
                this.animation.addByPrefix("singRIGHTmiss", "BF NOTE RIGHT MISS", 24, !1);
                this.animation.addByPrefix("singDOWNmiss", "BF NOTE DOWN MISS", 24, !1);
                this.animation.addByPrefix("hey", "BF HEY", 24, !1);
                this.animation.addByPrefix("firstDeath", "BF dies", 24, !1);
                this.animation.addByPrefix("deathLoop", "BF Dead Loop", 24, !0);
                this.animation.addByPrefix("deathConfirm", "BF Dead confirm", 24, !1);
                this.animation.addByPrefix("scared",
                    "BF idle shaking", 24);
                this.playAnim("idle");
                this.set_antialiasing(!0);
                this.addOffset("idle", -5);
                this.addOffset("singUP", -29, 27);
                this.addOffset("singRIGHT", -38, -7);
                this.addOffset("singLEFT", 12, -6);
                this.addOffset("singDOWN", -10, -50);
                this.addOffset("singUPmiss", -29, 27);
                this.addOffset("singRIGHTmiss", -30, 21);
                this.addOffset("singLEFTmiss", 12, 24);
                this.addOffset("singDOWNmiss", -11, -19);
                this.addOffset("hey", 7, 4);
                this.addOffset("firstDeath", 37, 11);
                this.addOffset("deathLoop", 37, 5);
                this.addOffset("deathConfirm",
                    37, 69);
                this.addOffset("scared", -4)
            };
            g.Boyfriend = kc;
            kc.__name__ = "Boyfriend";
            kc.__super__ = Q;
            kc.prototype = n(Q.prototype, {
                update: function(a) {
                    K.endsWith(this.animation._curAnim.name, "miss") && this.animation._curAnim.finished && !this.debugMode && this.playAnim("idle", !0, !1, 10);
                    "firstDeath" == this.animation._curAnim.name && this.animation._curAnim.finished && this.playAnim("deathLoop");
                    Q.prototype.update.call(this, a)
                },
                __class__: kc
            });
            var W = function() {};
            g.Conductor = W;
            W.__name__ = "Conductor";
            W.changeBPM = function(a) {
                W.bpm =
                    a;
                W.crochet = 60 / W.bpm * 1E3;
                W.stepCrochet = W.crochet / 4
            };
            var cc = w.Device = {
                    __ename__: "Device",
                    __constructs__: ["Keys", "Gamepad"],
                    Keys: {
                        _hx_index: 0,
                        __enum__: "Device",
                        toString: h
                    },
                    Gamepad: (x = function(a) {
                        return {
                            _hx_index: 1,
                            id: a,
                            __enum__: "Device",
                            toString: h
                        }
                    }, x.__params__ = ["id"], x)
                },
                Da = w.Control = {
                    __ename__: "Control",
                    __constructs__: "UP LEFT RIGHT DOWN RESET ACCEPT BACK PAUSE".split(" "),
                    UP: {
                        _hx_index: 0,
                        __enum__: "Control",
                        toString: h
                    },
                    LEFT: {
                        _hx_index: 1,
                        __enum__: "Control",
                        toString: h
                    },
                    RIGHT: {
                        _hx_index: 2,
                        __enum__: "Control",
                        toString: h
                    },
                    DOWN: {
                        _hx_index: 3,
                        __enum__: "Control",
                        toString: h
                    },
                    RESET: {
                        _hx_index: 4,
                        __enum__: "Control",
                        toString: h
                    },
                    ACCEPT: {
                        _hx_index: 5,
                        __enum__: "Control",
                        toString: h
                    },
                    BACK: {
                        _hx_index: 6,
                        __enum__: "Control",
                        toString: h
                    },
                    PAUSE: {
                        _hx_index: 7,
                        __enum__: "Control",
                        toString: h
                    }
                },
                D = w.KeyboardScheme = {
                    __ename__: "KeyboardScheme",
                    __constructs__: ["Solo", "Duo", "None", "Custom"],
                    Solo: {
                        _hx_index: 0,
                        __enum__: "KeyboardScheme",
                        toString: h
                    },
                    Duo: (x = function(a) {
                        return {
                            _hx_index: 1,
                            first: a,
                            __enum__: "KeyboardScheme",
                            toString: h
                        }
                    }, x.__params__ = ["first"], x),
                    None: {
                        _hx_index: 2,
                        __enum__: "KeyboardScheme",
                        toString: h
                    },
                    Custom: {
                        _hx_index: 3,
                        __enum__: "KeyboardScheme",
                        toString: h
                    }
                },
                xb = function(a, b, c) {
                    this.name = "";
                    this.name = a;
                    null == b && (b = []);
                    null == c && (c = []);
                    this.digitalActions = b;
                    this.analogActions = c
                };
            g["flixel.input.actions.FlxActionSet"] = xb;
            xb.__name__ = "flixel.input.actions.FlxActionSet";
            xb.__interfaces__ = [L];
            xb.prototype = {
                add: function(a) {
                    if (a.type == ok.DIGITAL) {
                        if (-1 != this.digitalActions.indexOf(a)) return !1;
                        this.digitalActions.push(a);
                        return !0
                    }
                    if (a.type ==
                        ok.ANALOG) {
                        if (-1 != this.analogActions.indexOf(a)) return !1;
                        this.analogActions.push(a);
                        return !0
                    }
                    return !1
                },
                destroy: function() {
                    this.digitalActions = V.destroyArray(this.digitalActions);
                    this.analogActions = V.destroyArray(this.analogActions)
                },
                __class__: xb
            };
            var B = function(a, b) {
                null == b && (b = D.None);
                this.keyboardScheme = D.None;
                this.gamepadsAdded = [];
                this.byName = new aa;
                this._reset = new vc("reset");
                this._pause = new vc("pause");
                this._back = new vc("back");
                this._accept = new vc("accept");
                this._downR = new vc("down-release");
                this._rightR = new vc("right-release");
                this._leftR = new vc("left-release");
                this._upR = new vc("up-release");
                this._downP = new vc("down-press");
                this._rightP = new vc("right-press");
                this._leftP = new vc("left-press");
                this._upP = new vc("up-press");
                this._down = new vc("down");
                this._right = new vc("right");
                this._left = new vc("left");
                this._up = new vc("up");
                xb.call(this, a);
                this.add(this._up);
                this.add(this._left);
                this.add(this._right);
                this.add(this._down);
                this.add(this._upP);
                this.add(this._leftP);
                this.add(this._rightP);
                this.add(this._downP);
                this.add(this._upR);
                this.add(this._leftR);
                this.add(this._rightR);
                this.add(this._downR);
                this.add(this._accept);
                this.add(this._back);
                this.add(this._pause);
                this.add(this._reset);
                a = 0;
                for (var c = this.digitalActions; a < c.length;) {
                    var d = c[a];
                    ++a;
                    this.byName.h[d.name] = d
                }
                this.setKeyboardScheme(b, !1)
            };
            g.Controls = B;
            B.__name__ = "Controls";
            B.removeKeys = function(a, b) {
                for (var c = a.inputs.length; 0 < c--;) {
                    var d = a.inputs[c];
                    d.device == pk.KEYBOARD && -1 != b.indexOf(d.inputID) && a.remove(d)
                }
            };
            B.removeButtons = function(a, b, c) {
                for (var d =
                        a.inputs.length; 0 < d--;) {
                    var e = a.inputs[d];
                    e.device != pk.GAMEPAD || -1 != b && e.deviceID != b || -1 == c.indexOf(e.inputID) || a.remove(e)
                }
            };
            B.__super__ = xb;
            B.prototype = n(xb.prototype, {
                replaceBinding: function(a, b, c, d) {
                    if (c != d) switch (b._hx_index) {
                        case 0:
                            null != d && this.unbindKeys(a, [d]);
                            null != c && this.bindKeys(a, [c]);
                            break;
                        case 1:
                            b = b.id, null != d && this.unbindButtons(a, b, [d]), null != c && this.bindButtons(a, b, [c])
                    }
                },
                bindKeys: function(a, b) {
                    switch (a._hx_index) {
                        case 0:
                            a = this._up;
                            for (var c = 1, d = 0; d < b.length;) {
                                var e = b[d];
                                ++d;
                                a.addKey(e,
                                    c)
                            }
                            a = this._upP;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._upR;
                            c = -1;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            break;
                        case 1:
                            a = this._left;
                            c = 1;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._leftP;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._leftR;
                            c = -1;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            break;
                        case 2:
                            a = this._right;
                            c = 1;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._rightP;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._rightR;
                            c = -1;
                            for (d = 0; d < b.length;) e =
                                b[d], ++d, a.addKey(e, c);
                            break;
                        case 3:
                            a = this._down;
                            c = 1;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._downP;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            a = this._downR;
                            c = -1;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            break;
                        case 4:
                            a = this._reset;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            break;
                        case 5:
                            a = this._accept;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            break;
                        case 6:
                            a = this._back;
                            c = 2;
                            for (d = 0; d < b.length;) e = b[d], ++d, a.addKey(e, c);
                            break;
                        case 7:
                            for (a = this._pause, c = 2, d = 0; d < b.length;) e =
                                b[d], ++d, a.addKey(e, c)
                    }
                },
                unbindKeys: function(a, b) {
                    switch (a._hx_index) {
                        case 0:
                            B.removeKeys(this._up, b);
                            B.removeKeys(this._upP, b);
                            B.removeKeys(this._upR, b);
                            break;
                        case 1:
                            B.removeKeys(this._left, b);
                            B.removeKeys(this._leftP, b);
                            B.removeKeys(this._leftR, b);
                            break;
                        case 2:
                            B.removeKeys(this._right, b);
                            B.removeKeys(this._rightP, b);
                            B.removeKeys(this._rightR, b);
                            break;
                        case 3:
                            B.removeKeys(this._down, b);
                            B.removeKeys(this._downP, b);
                            B.removeKeys(this._downR, b);
                            break;
                        case 4:
                            B.removeKeys(this._reset, b);
                            break;
                        case 5:
                            B.removeKeys(this._accept,
                                b);
                            break;
                        case 6:
                            B.removeKeys(this._back, b);
                            break;
                        case 7:
                            B.removeKeys(this._pause, b)
                    }
                },
                setKeyboardScheme: function(a, b) {
                    null == b && (b = !0);
                    b && this.removeKeyboard();
                    this.keyboardScheme = a;
                    switch (a._hx_index) {
                        case 0:
                            a = [87, 38];
                            switch (Da.UP._hx_index) {
                                case 0:
                                    b = this._up;
                                    for (var c = 1, d = 0; d < a.length;) {
                                        var e = a[d];
                                        ++d;
                                        b.addKey(e, c)
                                    }
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d,
                                        b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [83, 40];
                            switch (Da.DOWN._hx_index) {
                                case 0:
                                    b = this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                        c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [65, 37];
                            switch (Da.LEFT._hx_index) {
                                case 0:
                                    b =
                                        this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d],
                                        ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                        c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [68, 39];
                            switch (Da.RIGHT._hx_index) {
                                case 0:
                                    b = this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                        c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b =
                                        this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [90, 32, 13];
                            switch (Da.ACCEPT._hx_index) {
                                case 0:
                                    b = this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d],
                                        ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [8, 27];
                            switch (Da.BACK._hx_index) {
                                case 0:
                                    b = this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d,
                                        b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [80, 13, 27];
                            switch (Da.PAUSE._hx_index) {
                                case 0:
                                    b =
                                        this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d],
                                        ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                        c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            a = [82];
                            switch (Da.RESET._hx_index) {
                                case 0:
                                    b = this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                        c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b =
                                        this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                            break;
                        case 1:
                            if (a.first) {
                                a = [87];
                                switch (Da.UP._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e =
                                            a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [83];
                                switch (Da.DOWN._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d,
                                            b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [65];
                                switch (Da.LEFT._hx_index) {
                                    case 0:
                                        b =
                                            this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d],
                                            ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [68];
                                switch (Da.RIGHT._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b =
                                            this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [71, 90];
                                switch (Da.ACCEPT._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d,
                                            b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [72, 88];
                                switch (Da.BACK._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [49];
                                switch (Da.PAUSE._hx_index) {
                                    case 0:
                                        b =
                                            this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d],
                                            ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [82]
                            } else {
                                a = [38];
                                switch (Da.UP._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b =
                                            this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [40];
                                switch (Da.DOWN._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d <
                                            a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [37];
                                switch (Da.LEFT._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b =
                                            this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d =
                                            0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [39];
                                switch (Da.RIGHT._hx_index) {
                                    case 0:
                                        b =
                                            this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d],
                                            ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [79];
                                switch (Da.ACCEPT._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b =
                                            this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [80];
                                switch (Da.BACK._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                            c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d <
                                            a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [13];
                                switch (Da.PAUSE._hx_index) {
                                    case 0:
                                        b = this._up;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._upR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 1:
                                        b = this._left;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._leftR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 2:
                                        b = this._right;
                                        c = 1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._rightR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 3:
                                        b = this._down;
                                        c = 1;
                                        for (d =
                                            0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downP;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        b = this._downR;
                                        c = -1;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 4:
                                        b = this._reset;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 5:
                                        b = this._accept;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 6:
                                        b = this._back;
                                        c = 2;
                                        for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                        break;
                                    case 7:
                                        for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                                }
                                a = [8]
                            }
                            switch (Da.RESET._hx_index) {
                                case 0:
                                    b =
                                        this._up;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._upR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 1:
                                    b = this._left;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._leftR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 2:
                                    b = this._right;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._rightP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d],
                                        ++d, b.addKey(e, c);
                                    b = this._rightR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 3:
                                    b = this._down;
                                    c = 1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downP;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    b = this._downR;
                                    c = -1;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 4:
                                    b = this._reset;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 5:
                                    b = this._accept;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c);
                                    break;
                                case 6:
                                    b = this._back;
                                    c = 2;
                                    for (d = 0; d < a.length;) e = a[d], ++d, b.addKey(e,
                                        c);
                                    break;
                                case 7:
                                    for (b = this._pause, c = 2, d = 0; d < a.length;) e = a[d], ++d, b.addKey(e, c)
                            }
                    }
                },
                removeKeyboard: function() {
                    for (var a = 0, b = this.digitalActions; a < b.length;) {
                        var c = b[a];
                        ++a;
                        for (var d = c.inputs.length; 0 < d--;) {
                            var e = c.inputs[d];
                            e.device == pk.KEYBOARD && c.remove(e)
                        }
                    }
                },
                addDefaultGamepad: function(a) {
                    var b = new kg;
                    b.set(Da.ACCEPT, [0]);
                    b.set(Da.BACK, [1]);
                    b.set(Da.UP, [11, 34]);
                    b.set(Da.DOWN, [12, 36]);
                    b.set(Da.LEFT, [13, 37]);
                    b.set(Da.RIGHT, [14, 35]);
                    b.set(Da.PAUSE, [7]);
                    b.set(Da.RESET, [3]);
                    this.gamepadsAdded.push(a);
                    for (var c = new qk(b); c.hasNext();) {
                        b = c.next();
                        var d = a,
                            e = b.value;
                        switch (b.key._hx_index) {
                            case 0:
                                b = this._up;
                                for (var f = 0; f < e.length;) {
                                    var k = e[f];
                                    ++f;
                                    b.addGamepad(k, 1, d)
                                }
                                b = this._upP;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                b = this._upR;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, -1, d);
                                break;
                            case 1:
                                b = this._left;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 1, d);
                                b = this._leftP;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                b = this._leftR;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, -1, d);
                                break;
                            case 2:
                                b = this._right;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 1, d);
                                b = this._rightP;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                b = this._rightR;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, -1, d);
                                break;
                            case 3:
                                b = this._down;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 1, d);
                                b = this._downP;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                b = this._downR;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, -1, d);
                                break;
                            case 4:
                                b = this._reset;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                break;
                            case 5:
                                b =
                                    this._accept;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                break;
                            case 6:
                                b = this._back;
                                for (f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d);
                                break;
                            case 7:
                                for (b = this._pause, f = 0; f < e.length;) k = e[f], ++f, b.addGamepad(k, 2, d)
                        }
                    }
                },
                bindButtons: function(a, b, c) {
                    switch (a._hx_index) {
                        case 0:
                            a = this._up;
                            for (var d = 1, e = 0; e < c.length;) {
                                var f = c[e];
                                ++e;
                                a.addGamepad(f, d, b)
                            }
                            a = this._upP;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            a = this._upR;
                            d = -1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 1:
                            a =
                                this._left;
                            d = 1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            a = this._leftP;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            a = this._leftR;
                            d = -1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 2:
                            a = this._right;
                            d = 1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            a = this._rightP;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            a = this._rightR;
                            d = -1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 3:
                            a = this._down;
                            d = 1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f,
                                d, b);
                            a = this._downP;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            a = this._downR;
                            d = -1;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 4:
                            a = this._reset;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 5:
                            a = this._accept;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 6:
                            a = this._back;
                            d = 2;
                            for (e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b);
                            break;
                        case 7:
                            for (a = this._pause, d = 2, e = 0; e < c.length;) f = c[e], ++e, a.addGamepad(f, d, b)
                    }
                },
                unbindButtons: function(a, b,
                    c) {
                    switch (a._hx_index) {
                        case 0:
                            B.removeButtons(this._up, b, c);
                            B.removeButtons(this._upP, b, c);
                            B.removeButtons(this._upR, b, c);
                            break;
                        case 1:
                            B.removeButtons(this._left, b, c);
                            B.removeButtons(this._leftP, b, c);
                            B.removeButtons(this._leftR, b, c);
                            break;
                        case 2:
                            B.removeButtons(this._right, b, c);
                            B.removeButtons(this._rightP, b, c);
                            B.removeButtons(this._rightR, b, c);
                            break;
                        case 3:
                            B.removeButtons(this._down, b, c);
                            B.removeButtons(this._downP, b, c);
                            B.removeButtons(this._downR, b, c);
                            break;
                        case 4:
                            B.removeButtons(this._reset, b,
                                c);
                            break;
                        case 5:
                            B.removeButtons(this._accept, b, c);
                            break;
                        case 6:
                            B.removeButtons(this._back, b, c);
                            break;
                        case 7:
                            B.removeButtons(this._pause, b, c)
                    }
                },
                __class__: B
            });
            var u = function(a, b) {
                null == a && (a = !0);
                this.dialogueOpened = this.dialogueStarted = !1;
                this.dialogueList = [];
                ka.call(this);
                this.box = new G(40);
                this.box.set_frames(Nb.fromSparrow("assets/images/speech_bubble_talking.png", "assets/images/speech_bubble_talking.xml"));
                this.box.animation.addByPrefix("normalOpen", "Speech Bubble Normal Open", 24, !1);
                this.box.animation.addByPrefix("normal",
                    "speech bubble normal", 24);
                this.box.animation.play("normalOpen");
                this.add(this.box);
                a || this.box.set_flipX(!0);
                this.dialogue = new pb(0, 80, "", !1, !0);
                this.add(this.dialogue);
                this.dialogueList = b
            };
            g.DialogueBox = u;
            u.__name__ = "DialogueBox";
            u.__super__ = ka;
            u.prototype = n(ka.prototype, {
                update: function(a) {
                    null != this.box.animation._curAnim && "normalOpen" == this.box.animation._curAnim.name && this.box.animation._curAnim.finished && (this.box.animation.play("normal"), this.dialogueOpened = !0);
                    this.dialogueOpened && !this.dialogueStarted &&
                        (this.startDialogue(), this.dialogueStarted = !0);
                    var b = q.keys.justPressed;
                    b.keyManager.checkStatus(32, b.status) && (this.remove(this.dialogue), null == this.dialogueList[1] ? (this.finishThing(), this.kill()) : (Y.remove(this.dialogueList, this.dialogueList[0]), this.startDialogue()));
                    ka.prototype.update.call(this, a)
                },
                startDialogue: function() {
                    var a = new pb(0, 70, this.dialogueList[0], !1, !0);
                    this.dialogue = a;
                    this.add(a)
                },
                __class__: u
            });
            var ya = function(a, b) {
                this.r = new RegExp(a, b.split("u").join(""))
            };
            g.EReg = ya;
            ya.__name__ =
                "EReg";
            ya.prototype = {
                match: function(a) {
                    this.r.global && (this.r.lastIndex = 0);
                    this.r.m = this.r.exec(a);
                    this.r.s = a;
                    return null != this.r.m
                },
                matched: function(a) {
                    if (null != this.r.m && 0 <= a && a < this.r.m.length) return this.r.m[a];
                    throw F.thrown("EReg::matched");
                },
                matchedRight: function() {
                    if (null == this.r.m) throw F.thrown("No string matched");
                    var a = this.r.m.index + this.r.m[0].length;
                    return Y.substr(this.r.s, a, this.r.s.length - a)
                },
                matchedPos: function() {
                    if (null == this.r.m) throw F.thrown("No string matched");
                    return {
                        pos: this.r.m.index,
                        len: this.r.m[0].length
                    }
                },
                matchSub: function(a, b, c) {
                    null == c && (c = -1);
                    if (this.r.global) {
                        if (this.r.lastIndex = b, this.r.m = this.r.exec(0 > c ? a : Y.substr(a, 0, b + c)), c = null != this.r.m) this.r.s = a
                    } else if (c = this.match(0 > c ? Y.substr(a, b, null) : Y.substr(a, b, c))) this.r.s = a, this.r.m.index += b;
                    return c
                },
                split: function(a) {
                    return a.replace(this.r, "#__delim__#").split("#__delim__#")
                },
                __class__: ya
            };
            var Ra = function(a) {
                null == a && (a = 0);
                this.length = this._marker = 0;
                J.call(this);
                this.members = [];
                this.set_maxSize(Math.abs(a) | 0);
                this.flixelType =
                    2
            };
            g["flixel.group.FlxTypedGroup"] = Ra;
            Ra.__name__ = "flixel.group.FlxTypedGroup";
            Ra.resolveGroup = function(a) {
                var b = null;
                null != a && (2 == a.flixelType ? b = a : 4 == a.flixelType && (b = a.group));
                return b
            };
            Ra.__super__ = J;
            Ra.prototype = n(J.prototype, {
                destroy: function() {
                    J.prototype.destroy.call(this);
                    V.destroy(this._memberAdded);
                    V.destroy(this._memberRemoved);
                    if (null != this.members) {
                        for (var a = 0, b; a < this.length;) b = this.members[a++], null != b && b.destroy();
                        this.members = null
                    }
                },
                update: function(a) {
                    for (var b = 0, c; b < this.length;) c =
                        this.members[b++], null != c && c.exists && c.active && c.update(a)
                },
                draw: function() {
                    var a = 0,
                        b = Rb.defaultCameras;
                    null != this.get_cameras() && (Rb.defaultCameras = this.get_cameras());
                    for (; a < this.length;) {
                        var c = this.members[a++];
                        null != c && c.exists && c.visible && c.draw()
                    }
                    Rb.defaultCameras = b
                },
                add: function(a) {
                    if (null == a) return null;
                    if (0 <= this.members.indexOf(a)) return a;
                    var b = this.getFirstNull();
                    if (-1 != b) return this.members[b] = a, b >= this.length && (this.length = b + 1), null != this._memberAdded && this._memberAdded.dispatch(a),
                        a;
                    if (0 < this.maxSize && this.length >= this.maxSize) return a;
                    this.members.push(a);
                    this.length++;
                    null != this._memberAdded && this._memberAdded.dispatch(a);
                    return a
                },
                recycle: function(a, b, c, d) {
                    null == d && (d = !0);
                    null == c && (c = !1);
                    if (0 < this.maxSize) {
                        if (this.length < this.maxSize) return d = null, null != b ? (d = b(), this.add(d)) : null != a && (d = Ua.createInstance(a, []), this.add(d)), d;
                        c = this.members[this._marker++];
                        this._marker >= this.maxSize && (this._marker = 0);
                        d && c.revive();
                        return c
                    }
                    c = this.getFirstAvailable(a, c);
                    if (null != c) return d &&
                        c.revive(), c;
                    d = null;
                    null != b ? (d = b(), this.add(d)) : null != a && (d = Ua.createInstance(a, []), this.add(d));
                    return d
                },
                remove: function(a, b) {
                    null == b && (b = !1);
                    if (null == this.members) return null;
                    var c = this.members.indexOf(a);
                    if (0 > c) return null;
                    b ? (this.members.splice(c, 1), this.length--) : this.members[c] = null;
                    null != this._memberRemoved && this._memberRemoved.dispatch(a);
                    return a
                },
                getFirstAvailable: function(a, b) {
                    null == b && (b = !1);
                    for (var c = 0, d; c < this.length;)
                        if (d = this.members[c++], !(null == d || d.exists || null != a && !oa.__instanceof(d,
                                a) || b && oa.getClass(d).__name__ != a.__name__)) return this.members[c - 1];
                    return null
                },
                getFirstNull: function() {
                    for (var a = 0; a < this.length;) {
                        if (null == this.members[a]) return a;
                        ++a
                    }
                    return -1
                },
                clear: function() {
                    this.length = 0;
                    if (null != this._memberRemoved)
                        for (var a = 0, b = this.members; a < b.length;) {
                            var c = b[a];
                            ++a;
                            null != c && this._memberRemoved.dispatch(c)
                        }
                    Tc.clearArray(this.members)
                },
                kill: function() {
                    for (var a = 0, b; a < this.length;) b = this.members[a++], null != b && b.exists && b.kill();
                    J.prototype.kill.call(this)
                },
                revive: function() {
                    for (var a =
                            0, b; a < this.length;) b = this.members[a++], null == b || b.exists || b.revive();
                    J.prototype.revive.call(this)
                },
                forEach: function(a, b) {
                    null == b && (b = !1);
                    for (var c = 0, d; c < this.length;)
                        if (d = this.members[c++], null != d) {
                            if (b) {
                                var e = Ra.resolveGroup(d);
                                null != e && e.forEach(a, b)
                            }
                            a(d)
                        }
                },
                forEachAlive: function(a, b) {
                    null == b && (b = !1);
                    for (var c = 0, d; c < this.length;)
                        if (d = this.members[c++], null != d && d.exists && d.alive) {
                            if (b) {
                                var e = Ra.resolveGroup(d);
                                null != e && e.forEachAlive(a, b)
                            }
                            a(d)
                        }
                },
                forEachExists: function(a, b) {
                    null == b && (b = !1);
                    for (var c =
                            0, d; c < this.length;)
                        if (d = this.members[c++], null != d && d.exists) {
                            if (b) {
                                var e = Ra.resolveGroup(d);
                                null != e && e.forEachExists(a, b)
                            }
                            a(d)
                        }
                },
                set_maxSize: function(a) {
                    this.maxSize = Math.abs(a) | 0;
                    this._marker >= this.maxSize && (this._marker = 0);
                    if (0 == this.maxSize || null == this.members || this.maxSize >= this.length) return this.maxSize;
                    a = this.maxSize;
                    for (var b = this.length, c; a < b;) c = this.members[a++], null != c && (null != this._memberRemoved && this._memberRemoved.dispatch(c), c.destroy());
                    Tc.setLength_flixel_group_FlxTypedGroup_T(this.members,
                        this.maxSize);
                    this.length = this.members.length;
                    return this.maxSize
                },
                __class__: Ra,
                __properties__: n(J.prototype.__properties__, {
                    set_maxSize: "set_maxSize"
                })
            });
            var qb = function(a) {
                this._requestSubStateReset = !1;
                this.persistentDraw = this.destroySubStates = !0;
                this.persistentUpdate = !1;
                Ra.call(this, a)
            };
            g["flixel.FlxState"] = qb;
            qb.__name__ = "flixel.FlxState";
            qb.__super__ = Ra;
            qb.prototype = n(Ra.prototype, {
                create: function() {},
                draw: function() {
                    (this.persistentDraw || null == this.subState) && Ra.prototype.draw.call(this);
                    null !=
                        this.subState && this.subState.draw()
                },
                openSubState: function(a) {
                    this._requestSubStateReset = !0;
                    this._requestedSubState = a
                },
                closeSubState: function() {
                    this._requestSubStateReset = !0
                },
                resetSubState: function() {
                    null != this.subState && (null != this.subState.closeCallback && this.subState.closeCallback(), this.destroySubStates && this.subState.destroy());
                    this.subState = this._requestedSubState;
                    this._requestedSubState = null;
                    if (null != this.subState) {
                        if (!this.persistentUpdate) q.inputs.onStateSwitch();
                        this.subState._parentState =
                            this;
                        this.subState._created || (this.subState._created = !0, this.subState.create());
                        null != this.subState.openCallback && this.subState.openCallback()
                    }
                },
                destroy: function() {
                    null != this.subState && (this.subState.destroy(), this.subState = null);
                    Ra.prototype.destroy.call(this)
                },
                switchTo: function(a) {
                    return !0
                },
                onFocusLost: function() {},
                onFocus: function() {},
                onResize: function(a, b) {},
                tryUpdate: function(a) {
                    (this.persistentUpdate || null == this.subState) && this.update(a);
                    this._requestSubStateReset && (this._requestSubStateReset = !1, this.resetSubState());
                    null != this.subState && this.subState.tryUpdate(a)
                },
                get_bgColor: function() {
                    return q.cameras.get_bgColor()
                },
                set_bgColor: function(a) {
                    return q.cameras.set_bgColor(a)
                },
                __class__: qb,
                __properties__: n(Ra.prototype.__properties__, {
                    set_bgColor: "set_bgColor",
                    get_bgColor: "get_bgColor"
                })
            });
            var gb = function(a, b) {
                this.transOutFinished = this._exiting = !1;
                this.transIn = a;
                this.transOut = b;
                null == this.transIn && null != gb.defaultTransIn && (this.transIn = gb.defaultTransIn);
                null == this.transOut && null != gb.defaultTransOut &&
                    (this.transOut = gb.defaultTransOut);
                qb.call(this)
            };
            g["flixel.addons.transition.FlxTransitionableState"] = gb;
            gb.__name__ = "flixel.addons.transition.FlxTransitionableState";
            gb.__super__ = qb;
            gb.prototype = n(qb.prototype, {
                destroy: function() {
                    qb.prototype.destroy.call(this);
                    this._onExit = this.transOut = this.transIn = null
                },
                create: function() {
                    qb.prototype.create.call(this);
                    this.transitionIn()
                },
                switchTo: function(a) {
                    if (!this.get_hasTransOut()) return !0;
                    this._exiting || this.transitionToState(a);
                    return this.transOutFinished
                },
                transitionToState: function(a) {
                    this._exiting = !0;
                    this.transitionOut(function() {
                        q.game._state.switchTo(a) && (q.game._requestedState = a)
                    });
                    gb.skipNextTransOut && (gb.skipNextTransOut = !1, this.finishTransOut())
                },
                transitionIn: function() {
                    if (null != this.transIn && "none" != this.transIn.type)
                        if (gb.skipNextTransIn) gb.skipNextTransIn = !1, null != this.finishTransIn && this.finishTransIn();
                        else {
                            var a = this.createTransition(this.transIn);
                            a.setStatus(3);
                            this.openSubState(a);
                            a.set_finishCallback(r(this, this.finishTransIn));
                            a.start(1)
                        }
                },
                transitionOut: function(a) {
                    this._onExit = a;
                    this.get_hasTransOut() ? (a = this.createTransition(this.transOut), a.setStatus(2), this.openSubState(a), a.set_finishCallback(r(this, this.finishTransOut)), a.start(0)) : this._onExit()
                },
                get_hasTransIn: function() {
                    return null != this.transIn ? "none" != this.transIn.type : !1
                },
                get_hasTransOut: function() {
                    return null != this.transOut ? "none" != this.transOut.type : !1
                },
                createTransition: function(a) {
                    switch (a.type) {
                        case "fade":
                            return new Vg(a);
                        case "tiles":
                            return new Vg(a);
                        default:
                            return null
                    }
                },
                finishTransIn: function() {
                    this.closeSubState()
                },
                finishTransOut: function() {
                    this.transOutFinished = !0;
                    this._exiting || this.closeSubState();
                    null != this._onExit && this._onExit()
                },
                __class__: gb,
                __properties__: n(qb.prototype.__properties__, {
                    get_hasTransOut: "get_hasTransOut",
                    get_hasTransIn: "get_hasTransIn"
                })
            });
            var je = function() {};
            g["flixel.addons.ui.interfaces.IEventGetter"] = je;
            je.__name__ = "flixel.addons.ui.interfaces.IEventGetter";
            je.__isInterface__ = !0;
            je.prototype = {
                __class__: je
            };
            var Yb = function() {};
            g["flixel.addons.ui.interfaces.IFlxUIState"] =
                Yb;
            Yb.__name__ = "flixel.addons.ui.interfaces.IFlxUIState";
            Yb.__isInterface__ = !0;
            Yb.__interfaces__ = [je];
            Yb.prototype = {
                __class__: Yb
            };
            var Eb = function(a, b) {
                this.getTextFallback = null;
                this._reload_countdown = 0;
                this.reload_ui_on_resize = this._reload = !1;
                this._xml_id = "";
                this.hideCursorOnSubstate = this._cursorHidden = !1;
                this.cursor = null;
                gb.call(this, a, b)
            };
            g["flixel.addons.ui.FlxUIState"] = Eb;
            Eb.__name__ = "flixel.addons.ui.FlxUIState";
            Eb.__interfaces__ = [Yb, je];
            Eb.__super__ = gb;
            Eb.prototype = n(gb.prototype, {
                create: function() {
                    null !=
                        Eb.static_tongue && (this._tongue = Eb.static_tongue);
                    1 == this._makeCursor && (this.cursor = this.createCursor());
                    this.tooltips = new Wg(this);
                    this._ui = this.createUI(null, this, null, this._tongue);
                    this.add(this._ui);
                    null != this.getTextFallback && (this._ui.getTextFallback = this.getTextFallback);
                    if (null != this._xml_id && "" != this._xml_id) {
                        var a = null;
                        try {
                            a = y.xml(this._xml_id)
                        } catch (c) {
                            Ca.lastError = c;
                            var b = F.caught(c).unwrap();
                            if ("string" != typeof b) throw c;
                        }
                        if (null == a) try {
                            a = y.xml(this._xml_id, "xml", !0, "")
                        } catch (c) {
                            if (Ca.lastError =
                                c, b = F.caught(c).unwrap(), "string" != typeof b) throw c;
                        }
                        null != a && this.loadUIFromData(a)
                    } else this.loadUIFromData(null);
                    null != this.cursor && null != this._ui && (this.add(this.cursor), this.cursor.addWidgetsFromUI(this._ui), this.cursor.findVisibleLocation(0));
                    this.tooltips.init();
                    gb.prototype.create.call(this);
                    this.cleanup()
                },
                update: function(a) {
                    gb.prototype.update.call(this, a);
                    null != this.tooltips && this.tooltips.update(a);
                    this._reload && 0 < this._reload_countdown && (this._reload_countdown--, 0 == this._reload_countdown &&
                        this.reloadUI())
                },
                cleanup: function() {
                    this._ui.cleanup()
                },
                _cleanupUIVars: function() {
                    if (null != this._ui_vars) {
                        for (var a = aa.keysIterator(this._ui_vars.h); a.hasNext();) {
                            var b = a.next(),
                                c = this._ui_vars;
                            Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b]
                        }
                        this._ui_vars = null
                    }
                },
                setUIVariable: function(a, b) {
                    null != this._ui ? this._ui.setVariable(a, b) : (null == this._ui_vars && (this._ui_vars = new aa), this._ui_vars.h[a] = b)
                },
                resizeScreen: function(a, b) {},
                openSubState: function(a) {
                    null != this.cursor && this.hideCursorOnSubstate &&
                        1 == this.cursor.visible && (this._cursorHidden = !0, this.cursor.set_visible(!1));
                    gb.prototype.openSubState.call(this, a)
                },
                closeSubState: function() {
                    null != this.cursor && this.hideCursorOnSubstate && this._cursorHidden && (this._cursorHidden = !1, this.cursor.set_visible(!0));
                    gb.prototype.closeSubState.call(this)
                },
                onResize: function(a, b) {
                    this.reload_ui_on_resize && (q.scaleMode.onMeasure(a, b), this._reload_countdown = 1, this._reload = !0)
                },
                onShowTooltip: function(a) {},
                destroy: function() {
                    this.destroyed = !0;
                    null != this._ui && (this._ui.destroy(),
                        this.remove(this._ui, !0), this._ui = null);
                    null != this.tooltips && (this.tooltips.destroy(), this.tooltips = null);
                    gb.prototype.destroy.call(this)
                },
                forceFocus: function(a, b) {
                    null != this._ui && (a ? this._ui.set_focus(b) : this._ui.set_focus(null))
                },
                onCursorEvent: function(a, b) {
                    this.getEvent(a, b, null)
                },
                getEvent: function(a, b, c, d) {},
                getRequest: function(a, b, c, d) {
                    return null
                },
                getText: function(a, b, c) {
                    null == c && (c = !0);
                    null == b && (b = "ui");
                    return null != this._tongue ? this._tongue.get(a, b, c) : null != this.getTextFallback ? this.getTextFallback(a,
                        b, c) : a
                },
                createCursor: function() {
                    return new Xg(r(this, this.onCursorEvent))
                },
                createUI: function(a, b, c, d, e) {
                    null == e && (e = "");
                    a = new Qa(a, b, c, d, e, this._ui_vars);
                    this._cleanupUIVars();
                    return a
                },
                loadUIFromData: function(a) {
                    this._ui.load(a)
                },
                reloadUI: function(a) {
                    null != this._ui && (this.remove(this._ui, !0), this._ui.destroy(), this._ui = null);
                    this._ui = this.createUI(null, this, null, this._tongue);
                    this.add(this._ui);
                    a = y.xml(this._xml_id);
                    null != a && this.loadUIFromData(a);
                    this._reload = !1;
                    this._reload_countdown = 0
                },
                __class__: Eb
            });
            var rb = function(a, b) {
                this.lastBeat = this.lastStep = this.totalBeats = this.totalSteps = this.curStep = this.curBeat = 0;
                Eb.call(this, a, b)
            };
            g.MusicBeatState = rb;
            rb.__name__ = "MusicBeatState";
            rb.__super__ = Eb;
            rb.prototype = n(Eb.prototype, {
                get_controls: function() {
                    return Pa.player1.controls
                },
                create: function() {
                    Eb.prototype.create.call(this)
                },
                update: function(a) {
                    this.everyStep();
                    this.updateCurStep();
                    this.curBeat = Math.round(this.curStep / 4);
                    Eb.prototype.update.call(this, a)
                },
                everyStep: function() {
                    (W.songPosition > this.lastStep +
                        W.stepCrochet - W.safeZoneOffset || W.songPosition < this.lastStep + W.safeZoneOffset) && W.songPosition > this.lastStep + W.stepCrochet && this.stepHit()
                },
                updateCurStep: function() {
                    this.curStep = Math.floor(W.songPosition / W.stepCrochet)
                },
                stepHit: function() {
                    this.totalSteps += 1;
                    this.lastStep += W.stepCrochet;
                    0 == this.totalSteps % 4 && this.beatHit()
                },
                beatHit: function() {
                    this.lastBeat += W.crochet;
                    this.totalBeats += 1
                },
                __class__: rb,
                __properties__: n(Eb.prototype.__properties__, {
                    get_controls: "get_controls"
                })
            });
            var lg = function(a, b) {
                this.curSelected =
                    0;
                this.songs = ["Bopeebo", "Dadbattle", "Fresh", "Tutorial"];
                rb.call(this, a, b)
            };
            g.FreeplayState = lg;
            lg.__name__ = "FreeplayState";
            lg.__super__ = rb;
            lg.prototype = n(rb.prototype, {
                create: function() {
                    null == q.sound.music._channel && q.sound.playMusic("assets/music/freakyMenu" + fb.soundExt);
                    jd.weekUnlocked[1] && (this.songs.push("Spookeez"), this.songs.push("South"));
                    var a = (new G).loadGraphic("assets/images/menuBGBlue.png");
                    this.add(a);
                    this.grpSongs = new Ra;
                    this.add(this.grpSongs);
                    a = 0;
                    for (var b = this.songs.length; a < b;) {
                        var c =
                            a++,
                            d = new pb(0, 70 * c + 30, this.songs[c], !0, !1);
                        d.isMenuItem = !0;
                        d.targetY = c;
                        this.grpSongs.add(d)
                    }
                    this.changeSelection();
                    this.selector = new Fb;
                    this.selector.set_size(40);
                    this.selector.set_text(">");
                    new pb(1, 0, "swag");
                    rb.prototype.create.call(this)
                },
                update: function(a) {
                    rb.prototype.update.call(this, a);
                    var b = Pa.player1.controls._upP.check(),
                        c = Pa.player1.controls._downP.check();
                    a = Pa.player1.controls._accept.check();
                    b && this.changeSelection(-1);
                    c && this.changeSelection(1);
                    Pa.player1.controls._back.check() && (b =
                        new mg, q.game._state.switchTo(b) && (q.game._requestedState = b));
                    a && (Ha.SONG = Yg.loadFromJson(this.songs[this.curSelected].toLowerCase(), this.songs[this.curSelected].toLowerCase()), Ha.isStoryMode = !1, b = new Ha, q.game._state.switchTo(b) && (q.game._requestedState = b), a = q.sound.music, a.cleanup(a.autoDestroy, !0))
                },
                changeSelection: function(a) {
                    null == a && (a = 0);
                    this.curSelected += a;
                    0 > this.curSelected && (this.curSelected = this.songs.length - 1);
                    this.curSelected >= this.songs.length && (this.curSelected = 0);
                    for (var b = a = 0, c = this.grpSongs.members; b <
                        c.length;) {
                        var d = c[b];
                        ++b;
                        d.targetY = a - this.curSelected;
                        ++a;
                        d.set_alpha(.6);
                        0 == d.targetY && d.set_alpha(1)
                    }
                },
                __class__: lg
            });
            var Ob = function(a) {
                null == a && (a = 0);
                this._created = !1;
                qb.call(this);
                this.openCallback = this.closeCallback = null;
                q.renderTile && (this._bgSprite = new Zh);
                this.set_bgColor(a)
            };
            g["flixel.FlxSubState"] = Ob;
            Ob.__name__ = "flixel.FlxSubState";
            Ob.__super__ = qb;
            Ob.prototype = n(qb.prototype, {
                draw: function() {
                    if (q.renderBlit)
                        for (var a = 0, b = this.get_cameras(); a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.fill(this._bgColor)
                        } else this._bgSprite.draw();
                    qb.prototype.draw.call(this)
                },
                destroy: function() {
                    qb.prototype.destroy.call(this);
                    this._bgSprite = this._parentState = this.openCallback = this.closeCallback = null
                },
                close: function() {
                    null != this._parentState && this._parentState.subState == this && this._parentState.closeSubState()
                },
                get_bgColor: function() {
                    return this._bgColor
                },
                set_bgColor: function(a) {
                    q.renderTile && null != this._bgSprite && this._bgSprite.get_pixels().setPixel32(0, 0, a);
                    return this._bgColor = a
                },
                __class__: Ob
            });
            var pf = function() {
                this.lastBeat = this.lastStep =
                    this.totalBeats = this.totalSteps = this.curStep = this.curBeat = 0;
                Ob.call(this)
            };
            g.MusicBeatSubstate = pf;
            pf.__name__ = "MusicBeatSubstate";
            pf.__super__ = Ob;
            pf.prototype = n(Ob.prototype, {
                get_controls: function() {
                    return Pa.player1.controls
                },
                create: function() {
                    Ob.prototype.create.call(this)
                },
                update: function(a) {
                    this.everyStep();
                    this.updateCurStep();
                    this.curBeat = Math.round(this.curStep / 4);
                    Ob.prototype.update.call(this, a)
                },
                everyStep: function() {
                    (W.songPosition > this.lastStep + W.stepCrochet - W.safeZoneOffset || W.songPosition <
                        this.lastStep + W.safeZoneOffset) && W.songPosition > this.lastStep + W.stepCrochet && this.stepHit()
                },
                updateCurStep: function() {
                    this.curStep = Math.floor(W.songPosition / W.stepCrochet)
                },
                stepHit: function() {
                    this.totalSteps += 1;
                    this.lastStep += W.stepCrochet;
                    0 == this.totalSteps % 4 && this.beatHit()
                },
                beatHit: function() {
                    this.lastBeat += W.crochet;
                    this.totalBeats += 1
                },
                __class__: pf,
                __properties__: n(Ob.prototype.__properties__, {
                    get_controls: "get_controls"
                })
            });
            var $h = function(a, b) {
                this.isEnding = !1;
                pf.call(this);
                W.songPosition = 0;
                this.bf = new kc(a, b);
                this.add(this.bf);
                this.camFollow = new O(this.bf.getGraphicMidpoint().x, this.bf.getGraphicMidpoint().y, 1, 1);
                this.add(this.camFollow);
                q.sound.play("assets/sounds/fnf_loss_sfx" + fb.soundExt);
                W.changeBPM(100);
                q.camera.scroll.set();
                q.camera.target = null;
                this.bf.playAnim("firstDeath")
            };
            g.GameOverSubstate = $h;
            $h.__name__ = "GameOverSubstate";
            $h.__super__ = pf;
            $h.prototype = n(pf.prototype, {
                update: function(a) {
                    pf.prototype.update.call(this, a);
                    Pa.player1.controls._accept.check() && this.endBullshit();
                    Pa.player1.controls._back.check() && (a = q.sound.music, a.cleanup(a.autoDestroy, !0), a = Ha.isStoryMode ? new jd : new lg, q.game._state.switchTo(a) && (q.game._requestedState = a));
                    "firstDeath" == this.bf.animation._curAnim.name && 12 == this.bf.animation._curAnim.curFrame && q.camera.follow(this.camFollow, Il.LOCKON, .01);
                    "firstDeath" == this.bf.animation._curAnim.name && this.bf.animation._curAnim.finished && q.sound.playMusic("assets/music/gameOver" + fb.soundExt);
                    null != q.sound.music._channel && (W.songPosition = q.sound.music._time)
                },
                beatHit: function() {
                    pf.prototype.beatHit.call(this)
                },
                endBullshit: function() {
                    if (!this.isEnding) {
                        this.isEnding = !0;
                        this.bf.playAnim("deathConfirm", !0);
                        var a = q.sound.music;
                        a.cleanup(a.autoDestroy, !0);
                        q.sound.play("assets/music/gameOverEnd" + fb.soundExt);
                        (new Rc).start(.7, function(a) {
                            q.camera.fade(-16777216, 2, !1, function() {
                                var a = new Ha;
                                q.game._state.switchTo(a) && (q.game._requestedState = a)
                            })
                        })
                    }
                },
                __class__: $h
            });
            var Y = function() {};
            g.HxOverrides = Y;
            Y.__name__ = "HxOverrides";
            Y.strDate = function(a) {
                switch (a.length) {
                    case 8:
                        a =
                            a.split(":");
                        var b = new Date;
                        b.setTime(0);
                        b.setUTCHours(a[0]);
                        b.setUTCMinutes(a[1]);
                        b.setUTCSeconds(a[2]);
                        return b;
                    case 10:
                        return a = a.split("-"), new Date(a[0], a[1] - 1, a[2], 0, 0, 0);
                    case 19:
                        return a = a.split(" "), b = a[0].split("-"), a = a[1].split(":"), new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2]);
                    default:
                        throw F.thrown("Invalid date format : " + a);
                }
            };
            Y.cca = function(a, b) {
                a = a.charCodeAt(b);
                if (a == a) return a
            };
            Y.substr = function(a, b, c) {
                if (null == c) c = a.length;
                else if (0 > c)
                    if (0 == b) c = a.length + c;
                    else return "";
                return a.substr(b,
                    c)
            };
            Y.remove = function(a, b) {
                b = a.indexOf(b);
                if (-1 == b) return !1;
                a.splice(b, 1);
                return !0
            };
            Y.now = function() {
                return Date.now()
            };
            var Jl = function(a, b) {
                this.min = a;
                this.max = b
            };
            g.IntIterator = Jl;
            Jl.__name__ = "IntIterator";
            Jl.prototype = {
                hasNext: function() {
                    return this.min < this.max
                },
                next: function() {
                    return this.min++
                },
                __class__: Jl
            };
            var Zg = function() {};
            g.Lambda = Zg;
            Zg.__name__ = "Lambda";
            Zg.array = function(a) {
                var b = [];
                for (a = E(a); a.hasNext();) {
                    var c = a.next();
                    b.push(c)
                }
                return b
            };
            Zg.exists = function(a, b) {
                for (a = E(a); a.hasNext();) {
                    var c =
                        a.next();
                    if (b(c)) return !0
                }
                return !1
            };
            var mg = function(a, b) {
                this.selectedSomethin = !1;
                this.optionShit = ["story mode", "freeplay", "donate"];
                this.curSelected = 0;
                rb.call(this, a, b)
            };
            g.MainMenuState = mg;
            mg.__name__ = "MainMenuState";
            mg.__super__ = rb;
            mg.prototype = n(rb.prototype, {
                create: function() {
                    this.persistentUpdate = this.persistentDraw = !0;
                    var a = (new G(-80)).loadGraphic("assets/images/menuBG.png");
                    a.scrollFactor.set_x(0);
                    a.scrollFactor.set_y(.18);
                    a.setGraphicSize(1.1 * a.get_width() | 0);
                    a.updateHitbox();
                    a.screenCenter();
                    a.set_antialiasing(!0);
                    this.add(a);
                    this.camFollow = new O(0, 0, 1, 1);
                    this.add(this.camFollow);
                    this.magenta = (new G(-80)).loadGraphic("assets/images/menuBGMagenta.png");
                    this.magenta.scrollFactor.set_x(0);
                    this.magenta.scrollFactor.set_y(.18);
                    this.magenta.setGraphicSize(1.1 * this.magenta.get_width() | 0);
                    this.magenta.updateHitbox();
                    this.magenta.screenCenter();
                    this.magenta.set_visible(!1);
                    this.magenta.set_antialiasing(!0);
                    this.add(this.magenta);
                    this.menuItems = new Ra;
                    this.add(this.menuItems);
                    a = Nb.fromSparrow("assets/images/FNF_main_menu_assets.png",
                        "assets/images/FNF_main_menu_assets.xml");
                    for (var b = 0, c = this.optionShit.length; b < c;) {
                        var d = b++,
                            e = new G(0, 60 + 160 * d);
                        e.set_frames(a);
                        e.animation.addByPrefix("idle", this.optionShit[d] + " basic", 24);
                        e.animation.addByPrefix("selected", this.optionShit[d] + " white", 24);
                        e.animation.play("idle");
                        e.ID = d;
                        e.screenCenter(vd.X);
                        this.menuItems.add(e);
                        e.scrollFactor.set();
                        e.set_antialiasing(!0)
                    }
                    q.camera.follow(this.camFollow, null, .06);
                    this.changeItem();
                    rb.prototype.create.call(this)
                },
                update: function(a) {
                    var b = this;
                    if (!this.selectedSomethin) {
                        Pa.player1.controls._upP.check() && (q.sound.play("assets/sounds/scrollMenu" + fb.soundExt), this.changeItem(-1));
                        Pa.player1.controls._downP.check() && (q.sound.play("assets/sounds/scrollMenu" + fb.soundExt), this.changeItem(1));
                        if (Pa.player1.controls._back.check()) {
                            var c = new fb;
                            q.game._state.switchTo(c) && (q.game._requestedState = c)
                        }
                        Pa.player1.controls._accept.check() && ("donate" == this.optionShit[this.curSelected] ? (c = "", (new ya("^https?://", "")).match("https://ninja-muffin24.itch.io/funkin") ||
                            (c = "http://"), la.getURL(new $g(c + "https://ninja-muffin24.itch.io/funkin"), "_blank")) : (this.selectedSomethin = !0, q.sound.play("assets/sounds/confirmMenu" + fb.soundExt), lc.flicker(this.magenta, 1.1, .15, !1), this.menuItems.forEach(function(a) {
                            b.curSelected != a.ID ? Za.tween(a, {
                                alpha: 0
                            }, .4, {
                                ease: mc.quadOut,
                                onComplete: function(b) {
                                    a.kill()
                                }
                            }) : lc.flicker(a, 1, .06, !1, !1, function(a) {
                                switch (b.optionShit[b.curSelected]) {
                                    case "freeplay":
                                        a = new lg;
                                        q.game._state.switchTo(a) && (q.game._requestedState = a);
                                        break;
                                    case "story mode":
                                        a =
                                            new jd, q.game._state.switchTo(a) && (q.game._requestedState = a)
                                }
                            })
                        })))
                    }
                    rb.prototype.update.call(this, a);
                    this.menuItems.forEach(function(a) {
                        a.screenCenter(vd.X)
                    })
                },
                changeItem: function(a) {
                    null == a && (a = 0);
                    var b = this;
                    this.curSelected += a;
                    this.curSelected >= this.menuItems.length && (this.curSelected = 0);
                    0 > this.curSelected && (this.curSelected = this.menuItems.length - 1);
                    this.menuItems.forEach(function(a) {
                        a.animation.play("idle");
                        a.ID == b.curSelected && (a.animation.play("selected"), b.camFollow.setPosition(a.getGraphicMidpoint().x,
                            a.getGraphicMidpoint().y));
                        a.updateHitbox()
                    })
                },
                __class__: mg
            });
            var xd = function() {};
            g.ManifestResources = xd;
            xd.__name__ = "ManifestResources";
            xd.init = function(a) {
                xd.preloadLibraries = [];
                xd.preloadLibraryNames = [];
                xd.rootPath = null;
                null != a && Object.prototype.hasOwnProperty.call(a, "rootPath") && (xd.rootPath = ea.field(a, "rootPath"));
                null == xd.rootPath && (xd.rootPath = "./");
                yb.registerFont(ai);
                yb.registerFont(bi);
                yb.registerFont(ci);
                a = bd.parse('{"name":null,"assets":"aoy4:pathy30:assets%2Fimages%2Falphabet.pngy4:sizei139836y4:typey5:IMAGEy2:idR1y7:preloadtgoR0y30:assets%2Fimages%2Falphabet.xmlR2i39069R3y4:TEXTR5R7R6tgoR0y31:assets%2Fimages%2Fbackspace.pngR2i43348R3R4R5R9R6tgoR0y31:assets%2Fimages%2Fbackspace.xmlR2i747R3R8R5R10R6tgoR0y25:assets%2Fimages%2Fbad.pngR2i11727R3R4R5R11R6tgoR0y31:assets%2Fimages%2FBOYFRIEND.pngR2i5042658R3R4R5R12R6tgoR0y31:assets%2Fimages%2FBOYFRIEND.xmlR2i67577R3R8R5R13R6tgoR0y45:assets%2Fimages%2Fcampaign_menu_UI_assets.pngR2i65369R3R4R5R14R6tgoR0y45:assets%2Fimages%2Fcampaign_menu_UI_assets.xmlR2i2040R3R8R5R15R6tgoR0y49:assets%2Fimages%2Fcampaign_menu_UI_characters.pngR2i1313242R3R4R5R16R6tgoR0y49:assets%2Fimages%2Fcampaign_menu_UI_characters.xmlR2i14831R3R8R5R17R6tgoR0y27:assets%2Fimages%2Fcombo.pngR2i14255R3R4R5R18R6tgoR0y35:assets%2Fimages%2FDADDY_DEAREST.pngR2i1106359R3R4R5R19R6tgoR0y35:assets%2Fimages%2FDADDY_DEAREST.xmlR2i6531R3R8R5R20R6tgoR0y42:assets%2Fimages%2FFNF_main_menu_assets.pngR2i281298R3R4R5R21R6tgoR0y42:assets%2Fimages%2FFNF_main_menu_assets.xmlR2i4755R3R8R5R22R6tgoR0y34:assets%2Fimages%2FgfDanceTitle.pngR2i1221436R3R4R5R23R6tgoR0y34:assets%2Fimages%2FgfDanceTitle.xmlR2i4259R3R8R5R24R6tgoR0y31:assets%2Fimages%2FGF_assets.pngR2i3495414R3R4R5R25R6tgoR0y31:assets%2Fimages%2FGF_assets.xmlR2i21523R3R8R5R26R6tgoR0y24:assets%2Fimages%2Fgo.pngR2i12296R3R4R5R27R6tgoR0y26:assets%2Fimages%2Fgood.pngR2i11923R3R4R5R28R6tgoR0y28:assets%2Fimages%2Fgrafix.pngR2i139101R3R4R5R29R6tgoR0y34:assets%2Fimages%2Fhalloween_bg.pngR2i5482377R3R4R5R30R6tgoR0y34:assets%2Fimages%2Fhalloween_bg.xmlR2i3663R3R8R5R31R6tgoR0y31:assets%2Fimages%2FhealthBar.pngR2i307R3R4R5R32R6tgoR0y33:assets%2Fimages%2FhealthHeads.pngR2i22300R3R4R5R33R6tgoR0y33:assets%2Fimages%2FhealthHeads.xmlR2i429R3R8R5R34R6tgoR0y36:assets%2Fimages%2Fimages-go-here.txtR2zR3R8R5R35R6tgoR0y26:assets%2Fimages%2Flogo.pngR2i86924R3R4R5R36R6tgoR0y32:assets%2Fimages%2FlogoBumpin.pngR2i592724R3R4R5R37R6tgoR0y32:assets%2Fimages%2FlogoBumpin.xmlR2i2177R3R8R5R38R6tgoR0y26:assets%2Fimages%2Flose.pngR2i236363R3R4R5R39R6tgoR0y26:assets%2Fimages%2Flose.xmlR2i4131R3R8R5R40R6tgoR0y28:assets%2Fimages%2FmenuBG.pngR2i620342R3R4R5R41R6tgoR0y32:assets%2Fimages%2FmenuBGBlue.pngR2i614586R3R4R5R42R6tgoR0y35:assets%2Fimages%2FmenuBGMagenta.pngR2i553468R3R4R5R43R6tgoR0y36:assets%2Fimages%2FMonster_Assets.pngR2i1570346R3R4R5R44R6tgoR0y36:assets%2Fimages%2FMonster_Assets.xmlR2i14853R3R8R5R45R6tgoR0y37:assets%2Fimages%2Fnewgrounds_logo.pngR2i56932R3R4R5R46R6tgoR0y33:assets%2Fimages%2FNOTE_assets.pngR2i716622R3R4R5R47R6tgoR0y33:assets%2Fimages%2FNOTE_assets.xmlR2i4973R3R8R5R48R6tgoR0y26:assets%2Fimages%2Fnum0.pngR2i3738R3R4R5R49R6tgoR0y26:assets%2Fimages%2Fnum1.pngR2i3390R3R4R5R50R6tgoR0y26:assets%2Fimages%2Fnum2.pngR2i3990R3R4R5R51R6tgoR0y26:assets%2Fimages%2Fnum3.pngR2i4022R3R4R5R52R6tgoR0y26:assets%2Fimages%2Fnum4.pngR2i3989R3R4R5R53R6tgoR0y26:assets%2Fimages%2Fnum5.pngR2i4113R3R4R5R54R6tgoR0y26:assets%2Fimages%2Fnum6.pngR2i4181R3R4R5R55R6tgoR0y26:assets%2Fimages%2Fnum7.pngR2i3692R3R4R5R56R6tgoR0y26:assets%2Fimages%2Fnum8.pngR2i3914R3R4R5R57R6tgoR0y26:assets%2Fimages%2Fnum9.pngR2i3687R3R4R5R58R6tgoR0y27:assets%2Fimages%2Fready.pngR2i28966R3R4R5R59R6tgoR0y29:assets%2Fimages%2Frestart.pngR2i41117R3R4R5R60R6tgoR0y25:assets%2Fimages%2Fset.pngR2i25471R3R4R5R61R6tgoR0y26:assets%2Fimages%2Fshit.pngR2i15319R3R4R5R62R6tgoR0y26:assets%2Fimages%2Fsick.pngR2i19249R3R4R5R63R6tgoR0y43:assets%2Fimages%2Fspeech_bubble_talking.pngR2i201150R3R4R5R64R6tgoR0y43:assets%2Fimages%2Fspeech_bubble_talking.xmlR2i4745R3R8R5R65R6tgoR0y40:assets%2Fimages%2Fspooky_kids_assets.pngR2i714454R3R4R5R66R6tgoR0y40:assets%2Fimages%2Fspooky_kids_assets.xmlR2i12390R3R8R5R67R6tgoR0y31:assets%2Fimages%2Fstageback.pngR2i36925R3R4R5R68R6tgoR0y35:assets%2Fimages%2Fstagecurtains.pngR2i154716R3R4R5R69R6tgoR0y32:assets%2Fimages%2Fstagefront.pngR2i143142R3R4R5R70R6tgoR0y33:assets%2Fimages%2Fstage_light.pngR2i12177R3R4R5R71R6tgoR0y32:assets%2Fimages%2FtitleEnter.pngR2i1449202R3R4R5R72R6tgoR0y32:assets%2Fimages%2FtitleEnter.xmlR2i4875R3R8R5R73R6tgoR0y43:assets%2Fdata%2Fbopeebo%2Fbopeebo-easy.jsonR2i12574R3R8R5R74R6tgoR0y43:assets%2Fdata%2Fbopeebo%2Fbopeebo-hard.jsonR2i12576R3R8R5R75R6tgoR0y38:assets%2Fdata%2Fbopeebo%2Fbopeebo.jsonR2i12574R3R8R5R76R6tgoR0y47:assets%2Fdata%2Fdadbattle%2Fdadbattle-easy.jsonR2i28153R3R8R5R77R6tgoR0y47:assets%2Fdata%2Fdadbattle%2Fdadbattle-hard.jsonR2i34303R3R8R5R78R6tgoR0y42:assets%2Fdata%2Fdadbattle%2Fdadbattle.jsonR2i33340R3R8R5R79R6tgoR0y34:assets%2Fdata%2Fdata-goes-here.txtR2zR3R8R5R80R6tgoR0y39:assets%2Fdata%2Ffresh%2Ffresh-easy.jsonR2i17647R3R8R5R81R6tgoR0y39:assets%2Fdata%2Ffresh%2Ffresh-hard.jsonR2i19185R3R8R5R82R6tgoR0y34:assets%2Fdata%2Ffresh%2Ffresh.jsonR2i18864R3R8R5R83R6tgoR0y29:assets%2Fdata%2Fmain-view.xmlR2i125R3R8R5R84R6tgoR0y38:assets%2Fdata%2Fmonster%2Fmonster.jsonR2i11448R3R8R5R85R6tgoR0y34:assets%2Fdata%2Fsmash%2Fsmash.jsonR2i154R3R8R5R86R6tgoR0y39:assets%2Fdata%2Fsouth%2Fsouth-easy.jsonR2i30048R3R8R5R87R6tgoR0y39:assets%2Fdata%2Fsouth%2Fsouth-hard.jsonR2i34002R3R8R5R88R6tgoR0y34:assets%2Fdata%2Fsouth%2Fsouth.jsonR2i33359R3R8R5R89R6tgoR0y33:assets%2Fdata%2FspecialThanks.txtR2i154R3R8R5R90R6tgoR0y45:assets%2Fdata%2Fspookeez%2Fspookeez-easy.jsonR2i27685R3R8R5R91R6tgoR0y45:assets%2Fdata%2Fspookeez%2Fspookeez-hard.jsonR2i32667R3R8R5R92R6tgoR0y40:assets%2Fdata%2Fspookeez%2Fspookeez.jsonR2i32346R3R8R5R93R6tgoR0y45:assets%2Fdata%2Ftutorial%2Ftutorial-easy.jsonR2i5739R3R8R5R94R6tgoR0y45:assets%2Fdata%2Ftutorial%2Ftutorial-hard.jsonR2i9504R3R8R5R95R6tgoR0y40:assets%2Fdata%2Ftutorial%2Ftutorial.jsonR2i5739R3R8R5R96R6tgoR2i1507242R3y5:MUSICR5y33:assets%2Fmusic%2FBopeebo_Inst.mp3y9:pathGroupaR98hR6tgoR2i758037R3R97R5y35:assets%2Fmusic%2FBopeebo_Voices.mp3R99aR100hR6tgoR2i1541628R3R97R5y30:assets%2Fmusic%2FDadbattle.mp3R99aR101hR6tgoR2i1583631R3R97R5y35:assets%2Fmusic%2FDadbattle_Inst.mp3R99aR102hR6tgoR2i3466970R3R97R5y37:assets%2Fmusic%2FDadbattle_Voices.mp3R99aR103hR6tgoR2i2309657R3R97R5y31:assets%2Fmusic%2FfreakyMenu.mp3R99aR104hR6tgoR2i1725123R3R97R5y31:assets%2Fmusic%2FFresh_Inst.mp3R99aR105hR6tgoR2i3279933R3R97R5y33:assets%2Fmusic%2FFresh_Voices.mp3R99aR106hR6tgoR2i1535999R3R97R5y29:assets%2Fmusic%2FgameOver.mp3R99aR107hR6tgoR2i288391R3R97R5y32:assets%2Fmusic%2FgameOverEnd.mp3R99aR108hR6tgoR2i2843793R3R97R5y28:assets%2Fmusic%2FMonster.mp3R99aR109hR6tgoR2i7108510R3R97R5y33:assets%2Fmusic%2FMonster_Inst.mp3R99aR110hR6tgoR2i7108510R3R97R5y35:assets%2Fmusic%2FMonster_Voices.mp3R99aR111hR6tgoR2i3549517R3R97R5y31:assets%2Fmusic%2FSouth_Inst.mp3R99aR112hR6tgoR2i1136376R3R97R5y33:assets%2Fmusic%2FSouth_Voices.mp3R99aR113hR6tgoR2i4616358R3R97R5y29:assets%2Fmusic%2FSpookeez.mp3R99aR114hR6tgoR2i2201383R3R97R5y34:assets%2Fmusic%2FSpookeez_Inst.mp3R99aR115hR6tgoR2i1177354R3R97R5y36:assets%2Fmusic%2FSpookeez_Voices.mp3R99aR116hR6tgoR2i1508831R3R97R5y26:assets%2Fmusic%2Ftitle.mp3R99aR117hR6tgoR2i210573R3R97R5y31:assets%2Fmusic%2FtitleShoot.mp3R99aR118hR6tgoR2i1072499R3R97R5y34:assets%2Fmusic%2FTutorial_Inst.mp3R99aR119hR6tgoR2i34480R3R97R5y31:assets%2Fsounds%2Fbadnoise1.mp3R99aR120hR6tgoR2i34480R3R97R5y31:assets%2Fsounds%2Fbadnoise2.mp3R99aR121hR6tgoR2i34480R3R97R5y31:assets%2Fsounds%2Fbadnoise3.mp3R99aR122hR6tgoR2i17762R3R97R5y32:assets%2Fsounds%2FcancelMenu.mp3R99aR123hR6tgoR2i91950R3R97R5y33:assets%2Fsounds%2FconfirmMenu.mp3R99aR124hR6tgoR2i83302R3R97R5y34:assets%2Fsounds%2Ffnf_loss_sfx.mp3R99aR125hR6tgoR2i6339R3R97R5y32:assets%2Fsounds%2FfreshIntro.mp3R99aR126hR6tgoR2i34480R3R97R5y26:assets%2Fsounds%2FGF_1.mp3R99aR127hR6tgoR2i34480R3R97R5y26:assets%2Fsounds%2FGF_2.mp3R99aR128hR6tgoR2i34480R3R97R5y26:assets%2Fsounds%2FGF_3.mp3R99aR129hR6tgoR2i34480R3R97R5y26:assets%2Fsounds%2FGF_4.mp3R99aR130hR6tgoR2i11426R3R97R5y28:assets%2Fsounds%2Fintro1.mp3R99aR131hR6tgoR2i12051R3R97R5y28:assets%2Fsounds%2Fintro2.mp3R99aR132hR6tgoR2i11582R3R97R5y28:assets%2Fsounds%2Fintro3.mp3R99aR133hR6tgoR2i13254R3R97R5y29:assets%2Fsounds%2FintroGo.mp3R99aR134hR6tgoR2i68962R3R97R5y31:assets%2Fsounds%2Fmissnote1.mp3R99aR135hR6tgoR2i68962R3R97R5y31:assets%2Fsounds%2Fmissnote2.mp3R99aR136hR6tgoR2i68962R3R97R5y31:assets%2Fsounds%2Fmissnote3.mp3R99aR137hR6tgoR2i17762R3R97R5y32:assets%2Fsounds%2FscrollMenu.mp3R99aR138hR6tgoR2i320854R3R97R5y31:assets%2Fsounds%2FsoundTest.mp3R99aR139hR6tgoR2i137925R3R97R5y31:assets%2Fsounds%2Fthunder_1.mp3R99aR140hR6tgoR2i274807R3R97R5y31:assets%2Fsounds%2Fthunder_2.mp3R99aR141hR6tgoR2i75864R3y4:FONTy9:classNamey29:__ASSET__assets_fonts_vcr_ttfR5y24:assets%2Ffonts%2Fvcr.ttfR6tgoR2i2114R3R97R5y26:flixel%2Fsounds%2Fbeep.mp3R99aR146y26:flixel%2Fsounds%2Fbeep.ogghR6tgoR2i39706R3R97R5y28:flixel%2Fsounds%2Fflixel.mp3R99aR148y28:flixel%2Fsounds%2Fflixel.ogghR6tgoR2i5794R3y5:SOUNDR5R147R99aR146R147hgoR2i33629R3R150R5R149R99aR148R149hgoR2i15744R3R142R143y35:__ASSET__flixel_fonts_nokiafc22_ttfR5y30:flixel%2Ffonts%2Fnokiafc22.ttfR6tgoR2i29724R3R142R143y36:__ASSET__flixel_fonts_monsterrat_ttfR5y31:flixel%2Ffonts%2Fmonsterrat.ttfR6tgoR0y33:flixel%2Fimages%2Fui%2Fbutton.pngR2i519R3R4R5R155R6tgoR0y36:flixel%2Fimages%2Flogo%2Fdefault.pngR2i3280R3R4R5R156R6tgoR0y34:flixel%2Fflixel-ui%2Fimg%2Fbox.pngR2i912R3R4R5R157R6tgoR0y37:flixel%2Fflixel-ui%2Fimg%2Fbutton.pngR2i433R3R4R5R158R6tgoR0y48:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_down.pngR2i446R3R4R5R159R6tgoR0y48:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_left.pngR2i459R3R4R5R160R6tgoR0y49:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_right.pngR2i511R3R4R5R161R6tgoR0y46:flixel%2Fflixel-ui%2Fimg%2Fbutton_arrow_up.pngR2i493R3R4R5R162R6tgoR0y42:flixel%2Fflixel-ui%2Fimg%2Fbutton_thin.pngR2i247R3R4R5R163R6tgoR0y44:flixel%2Fflixel-ui%2Fimg%2Fbutton_toggle.pngR2i534R3R4R5R164R6tgoR0y40:flixel%2Fflixel-ui%2Fimg%2Fcheck_box.pngR2i922R3R4R5R165R6tgoR0y41:flixel%2Fflixel-ui%2Fimg%2Fcheck_mark.pngR2i946R3R4R5R166R6tgoR0y37:flixel%2Fflixel-ui%2Fimg%2Fchrome.pngR2i253R3R4R5R167R6tgoR0y42:flixel%2Fflixel-ui%2Fimg%2Fchrome_flat.pngR2i212R3R4R5R168R6tgoR0y43:flixel%2Fflixel-ui%2Fimg%2Fchrome_inset.pngR2i192R3R4R5R169R6tgoR0y43:flixel%2Fflixel-ui%2Fimg%2Fchrome_light.pngR2i214R3R4R5R170R6tgoR0y44:flixel%2Fflixel-ui%2Fimg%2Fdropdown_mark.pngR2i156R3R4R5R171R6tgoR0y41:flixel%2Fflixel-ui%2Fimg%2Ffinger_big.pngR2i1724R3R4R5R172R6tgoR0y43:flixel%2Fflixel-ui%2Fimg%2Ffinger_small.pngR2i294R3R4R5R173R6tgoR0y38:flixel%2Fflixel-ui%2Fimg%2Fhilight.pngR2i129R3R4R5R174R6tgoR0y36:flixel%2Fflixel-ui%2Fimg%2Finvis.pngR2i128R3R4R5R175R6tgoR0y41:flixel%2Fflixel-ui%2Fimg%2Fminus_mark.pngR2i136R3R4R5R176R6tgoR0y40:flixel%2Fflixel-ui%2Fimg%2Fplus_mark.pngR2i147R3R4R5R177R6tgoR0y36:flixel%2Fflixel-ui%2Fimg%2Fradio.pngR2i191R3R4R5R178R6tgoR0y40:flixel%2Fflixel-ui%2Fimg%2Fradio_dot.pngR2i153R3R4R5R179R6tgoR0y37:flixel%2Fflixel-ui%2Fimg%2Fswatch.pngR2i185R3R4R5R180R6tgoR0y34:flixel%2Fflixel-ui%2Fimg%2Ftab.pngR2i201R3R4R5R181R6tgoR0y39:flixel%2Fflixel-ui%2Fimg%2Ftab_back.pngR2i210R3R4R5R182R6tgoR0y44:flixel%2Fflixel-ui%2Fimg%2Ftooltip_arrow.pngR2i18509R3R4R5R183R6tgoR0y39:flixel%2Fflixel-ui%2Fxml%2Fdefaults.xmlR2i1263R3R8R5R184R6tgoR0y53:flixel%2Fflixel-ui%2Fxml%2Fdefault_loading_screen.xmlR2i1953R3R8R5R185R6tgoR0y44:flixel%2Fflixel-ui%2Fxml%2Fdefault_popup.xmlR2i1848R3R8R5R186R6tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
                    xd.rootPath);
                a = Me.fromManifest(a);
                qa.registerLibrary("default", a);
                a = qa.getLibrary("default");
                null != a ? xd.preloadLibraries.push(a) : xd.preloadLibraryNames.push("default")
            };
            var Gb = function(a) {
                null != a && (this.name = a);
                this.__init || (void 0 == this.ascender && (this.ascender = 0), void 0 == this.descender && (this.descender = 0), void 0 == this.height && (this.height = 0), void 0 == this.numGlyphs && (this.numGlyphs = 0), void 0 == this.underlinePosition && (this.underlinePosition = 0), void 0 == this.underlineThickness && (this.underlineThickness =
                    0), void 0 == this.unitsPerEM && (this.unitsPerEM = 0), null != this.__fontID ? qa.isLocal(this.__fontID) && this.__fromBytes(qa.getBytes(this.__fontID)) : null != this.__fontPath && this.__fromFile(this.__fontPath))
            };
            g["lime.text.Font"] = Gb;
            Gb.__name__ = "lime.text.Font";
            Gb.fromFile = function(a) {
                if (null == a) return null;
                var b = new Gb;
                b.__fromFile(a);
                return b
            };
            Gb.loadFromName = function(a) {
                return (new Gb).__loadFromName(a)
            };
            Gb.__measureFontNode = function(a) {
                var b = window.document.createElement("span");
                b.setAttribute("aria-hidden",
                    "true");
                var c = window.document.createTextNode("BESbswy");
                b.appendChild(c);
                c = b.style;
                c.display = "block";
                c.position = "absolute";
                c.top = "-9999px";
                c.left = "-9999px";
                c.fontSize = "300px";
                c.width = "auto";
                c.height = "auto";
                c.lineHeight = "normal";
                c.margin = "0";
                c.padding = "0";
                c.fontVariant = "normal";
                c.whiteSpace = "nowrap";
                c.fontFamily = a;
                window.document.body.appendChild(b);
                return b
            };
            Gb.prototype = {
                __copyFrom: function(a) {
                    null != a && (this.ascender = a.ascender, this.descender = a.descender, this.height = a.height, this.name = a.name, this.numGlyphs =
                        a.numGlyphs, this.src = a.src, this.underlinePosition = a.underlinePosition, this.underlineThickness = a.underlineThickness, this.unitsPerEM = a.unitsPerEM, this.__fontID = a.__fontID, this.__fontPath = a.__fontPath, this.__init = !0)
                },
                __fromBytes: function(a) {
                    this.__fontPath = null
                },
                __fromFile: function(a) {
                    this.__fontPath = a
                },
                __loadFromName: function(a) {
                    var b = this,
                        c = new cd;
                    this.name = a;
                    var d = C.navigator.userAgent.toLowerCase(),
                        e = 0 <= d.indexOf(" safari/") && 0 > d.indexOf(" chrome/");
                    d = (new ya("(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)",
                        "i")).match(d);
                    if (!e && !d && window.document.fonts && (x = window.document.fonts, r(x, x.load))) window.document.fonts.load("1em '" + a + "'").then(function(a) {
                        c.complete(b)
                    }, function(d) {
                        Aa.warn('Could not load web font "' + a + '"', {
                            fileName: "lime/text/Font.hx",
                            lineNumber: 513,
                            className: "lime.text.Font",
                            methodName: "__loadFromName"
                        });
                        c.complete(b)
                    });
                    else {
                        var f = Gb.__measureFontNode("'" + a + "', sans-serif"),
                            k = Gb.__measureFontNode("'" + a + "', serif"),
                            p = f.offsetWidth,
                            m = k.offsetWidth,
                            ja = -1,
                            h = 0,
                            l, g;
                        ja = window.setInterval(function() {
                            h +=
                                1;
                            l = f.offsetWidth != p || k.offsetWidth != m;
                            g = 3E3 <= 50 * h;
                            if (l || g) window.clearInterval(ja), f.parentNode.removeChild(f), k.parentNode.removeChild(k), k = f = null, g && Aa.warn('Could not load web font "' + a + '"', {
                                fileName: "lime/text/Font.hx",
                                lineNumber: 548,
                                className: "lime.text.Font",
                                methodName: "__loadFromName"
                            }), c.complete(b)
                        }, 50)
                    }
                    return c.future
                },
                __class__: Gb
            };
            var di = t.__ASSET__assets_fonts_vcr_ttf = function() {
                this.ascender = 1800;
                this.descender = 0;
                this.height = 2E3;
                this.numGlyphs = 204;
                this.underlinePosition = -292;
                this.underlineThickness =
                    150;
                this.unitsPerEM = 2048;
                this.name = "VCR OSD Mono";
                Gb.call(this)
            };
            g.__ASSET__assets_fonts_vcr_ttf = di;
            di.__name__ = "__ASSET__assets_fonts_vcr_ttf";
            di.__super__ = Gb;
            di.prototype = n(Gb.prototype, {
                __class__: di
            });
            var ei = t.__ASSET__flixel_fonts_nokiafc22_ttf = function() {
                this.ascender = 2048;
                this.descender = -512;
                this.height = 2816;
                this.numGlyphs = 172;
                this.underlinePosition = -640;
                this.underlineThickness = 256;
                this.unitsPerEM = 2048;
                this.name = "Nokia Cellphone FC Small";
                Gb.call(this)
            };
            g.__ASSET__flixel_fonts_nokiafc22_ttf =
                ei;
            ei.__name__ = "__ASSET__flixel_fonts_nokiafc22_ttf";
            ei.__super__ = Gb;
            ei.prototype = n(Gb.prototype, {
                __class__: ei
            });
            var fi = t.__ASSET__flixel_fonts_monsterrat_ttf = function() {
                this.ascender = 968;
                this.descender = -251;
                this.height = 1219;
                this.numGlyphs = 263;
                this.underlinePosition = -150;
                this.underlineThickness = 50;
                this.unitsPerEM = 1E3;
                this.name = "Monsterrat";
                Gb.call(this)
            };
            g.__ASSET__flixel_fonts_monsterrat_ttf = fi;
            fi.__name__ = "__ASSET__flixel_fonts_monsterrat_ttf";
            fi.__super__ = Gb;
            fi.prototype = n(Gb.prototype, {
                __class__: fi
            });
            var yb = function(a) {
                Gb.call(this, a)
            };
            g["openfl.text.Font"] = yb;
            yb.__name__ = "openfl.text.Font";
            yb.fromFile = function(a) {
                var b = new yb;
                b.__fromFile(a);
                return b
            };
            yb.loadFromName = function(a) {
                return Gb.loadFromName(a).then(function(a) {
                    var b = new yb;
                    b.__fromLimeFont(a);
                    return Sa.withValue(b)
                })
            };
            yb.registerFont = function(a) {
                a = null == oa.getClass(a) ? oa.__cast(Ua.createInstance(a, []), yb) : oa.__cast(a, yb);
                null != a && (yb.__registeredFonts.push(a), yb.__fontByName.h[a.name] = a)
            };
            yb.__super__ = Gb;
            yb.prototype = n(Gb.prototype, {
                __fromLimeFont: function(a) {
                    this.__copyFrom(a)
                },
                __class__: yb
            });
            var ai = t.__ASSET__OPENFL__assets_fonts_vcr_ttf = function() {
                this.__fromLimeFont(new di);
                Gb.call(this, void 0)
            };
            g.__ASSET__OPENFL__assets_fonts_vcr_ttf = ai;
            ai.__name__ = "__ASSET__OPENFL__assets_fonts_vcr_ttf";
            ai.__super__ = yb;
            ai.prototype = n(yb.prototype, {
                __class__: ai
            });
            var bi = t.__ASSET__OPENFL__flixel_fonts_nokiafc22_ttf = function() {
                this.__fromLimeFont(new ei);
                Gb.call(this, void 0)
            };
            g.__ASSET__OPENFL__flixel_fonts_nokiafc22_ttf = bi;
            bi.__name__ =
                "__ASSET__OPENFL__flixel_fonts_nokiafc22_ttf";
            bi.__super__ = yb;
            bi.prototype = n(yb.prototype, {
                __class__: bi
            });
            var ci = t.__ASSET__OPENFL__flixel_fonts_monsterrat_ttf = function() {
                this.__fromLimeFont(new fi);
                Gb.call(this, void 0)
            };
            g.__ASSET__OPENFL__flixel_fonts_monsterrat_ttf = ci;
            ci.__name__ = "__ASSET__OPENFL__flixel_fonts_monsterrat_ttf";
            ci.__super__ = yb;
            ci.prototype = n(yb.prototype, {
                __class__: ci
            });
            Math.__name__ = "Math";
            var gi = function(a, b) {
                null == b && (b = "bf");
                G.call(this, a);
                this.character = b;
                a = Nb.fromSparrow("assets/images/campaign_menu_UI_characters.png",
                    "assets/images/campaign_menu_UI_characters.xml");
                this.set_frames(a);
                this.animation.addByPrefix("bf", "BF idle dance white", 24);
                this.animation.addByPrefix("bfConfirm", "BF HEY!!", 24, !1);
                this.animation.addByPrefix("gf", "GF Dancing Beat WHITE", 24);
                this.animation.addByPrefix("dad", "Dad idle dance BLACK LINE", 24);
                this.animation.addByPrefix("spooky", "spooky dance idle BLACK LINES", 24);
                this.animation.play(b);
                this.updateHitbox()
            };
            g.MenuCharacter = gi;
            gi.__name__ = "MenuCharacter";
            gi.__super__ = G;
            gi.prototype = n(G.prototype, {
                __class__: gi
            });
            var hi = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = 0);
                this.targetY = 0;
                ka.call(this, a, b);
                a = Nb.fromSparrow("assets/images/campaign_menu_UI_assets.png", "assets/images/campaign_menu_UI_assets.xml");
                this.week = new G;
                this.week.set_frames(a);
                this.week.animation.addByPrefix("week0", "WEEK1 select", 24);
                this.week.animation.addByPrefix("week1", "week2 select", 24);
                this.add(this.week);
                this.week.animation.play("week" + c);
                c = this.week.animation;
                null != c._curAnim && c._curAnim.pause();
                this.week.updateHitbox();
                d || this.week.set_alpha(.6)
            };
            g.MenuItem = hi;
            hi.__name__ = "MenuItem";
            hi.__super__ = ka;
            hi.prototype = n(ka.prototype, {
                update: function(a) {
                    ka.prototype.update.call(this, a);
                    a = this.y;
                    this.set_y(a + .17 * (120 * this.targetY + 480 - a))
                },
                __class__: hi
            });
            var Ne = function(a, b, c) {
                kd.trace("connecting to newgrounds", {
                    fileName: "source/NGio.hx",
                    lineNumber: 27,
                    className: "NGio",
                    methodName: "new"
                });
                Ea.createAndCheckSession(a, c);
                Ea.core.verbose = !0;
                Ea.core.initEncryption(b);
                kd.trace(Ea.core.attemptingLogin, {
                    fileName: "source/NGio.hx",
                    lineNumber: 35,
                    className: "NGio",
                    methodName: "new"
                });
                Ea.core.attemptingLogin ? (kd.trace("attempting login", {
                    fileName: "source/NGio.hx",
                    lineNumber: 42,
                    className: "NGio",
                    methodName: "new"
                }), Ea.core.onLogin.add(r(this, this.onNGLogin))) : Ea.core.requestLogin(r(this, this.onNGLogin))
            };
            g.NGio = Ne;
            Ne.__name__ = "NGio";
            Ne.prototype = {
                onNGLogin: function() {
                    kd.trace("logged in! user:" + Ea.core.get_user().name, {
                        fileName: "source/NGio.hx",
                        lineNumber: 56,
                        className: "NGio",
                        methodName: "onNGLogin"
                    });
                    Ne.isLoggedIn = !0;
                    q.save.data.sessionId =
                        Ea.core.sessionId;
                    Ea.core.requestMedals(r(this, this.onNGMedalFetch));
                    Ea.core.requestScoreBoards(r(this, this.onNGBoardsFetch));
                    Ne.ngDataLoaded.dispatch()
                },
                onNGMedalFetch: function() {},
                onNGBoardsFetch: function() {
                    kd.trace("shoulda got score by NOW!", {
                        fileName: "source/NGio.hx",
                        lineNumber: 107,
                        className: "NGio",
                        methodName: "onNGBoardsFetch"
                    })
                },
                __class__: Ne
            };
            var ld = function(a, b, c, d) {
                null == d && (d = !1);
                this.isSustainNote = !1;
                this.sustainLength = 0;
                this.canBeHit = this.tooLate = this.wasGoodHit = !1;
                this.noteData = 0;
                this.mustPress = !1;
                this.strumTime = 0;
                G.call(this);
                null == c && (c = this);
                this.prevNote = c;
                this.isSustainNote = d;
                d = this;
                d.set_x(d.x + 50);
                this.strumTime = a;
                this.noteData = b;
                a = Nb.fromSparrow("assets/images/NOTE_assets.png", "assets/images/NOTE_assets.xml");
                this.set_frames(a);
                this.animation.addByPrefix("greenScroll", "green0");
                this.animation.addByPrefix("redScroll", "red0");
                this.animation.addByPrefix("blueScroll", "blue0");
                this.animation.addByPrefix("purpleScroll", "purple0");
                this.animation.addByPrefix("purpleholdend", "pruple end hold");
                this.animation.addByPrefix("greenholdend", "green hold end");
                this.animation.addByPrefix("redholdend", "red hold end");
                this.animation.addByPrefix("blueholdend", "blue hold end");
                this.animation.addByPrefix("purplehold", "purple hold piece");
                this.animation.addByPrefix("greenhold", "green hold piece");
                this.animation.addByPrefix("redhold", "red hold piece");
                this.animation.addByPrefix("bluehold", "blue hold piece");
                this.setGraphicSize(.7 * this.get_width() | 0);
                this.updateHitbox();
                this.set_antialiasing(!0);
                switch (b) {
                    case 0:
                        d =
                            this;
                        d.set_x(d.x + 0 * ld.swagWidth);
                        this.animation.play("purpleScroll");
                        break;
                    case 1:
                        d = this;
                        d.set_x(d.x + ld.swagWidth);
                        this.animation.play("blueScroll");
                        break;
                    case 2:
                        d = this;
                        d.set_x(d.x + 2 * ld.swagWidth);
                        this.animation.play("greenScroll");
                        break;
                    case 3:
                        d = this, d.set_x(d.x + 3 * ld.swagWidth), this.animation.play("redScroll")
                }
                if (this.isSustainNote && null != c) {
                    this.set_alpha(.6);
                    d = this;
                    d.set_x(d.x + this.get_width() / 2);
                    switch (b) {
                        case 0:
                            this.animation.play("purpleholdend");
                            break;
                        case 1:
                            this.animation.play("blueholdend");
                            break;
                        case 2:
                            this.animation.play("greenholdend");
                            break;
                        case 3:
                            this.animation.play("redholdend")
                    }
                    this.updateHitbox();
                    d = this;
                    d.set_x(d.x - this.get_width() / 2);
                    if (c.isSustainNote) {
                        switch (c.noteData) {
                            case 0:
                                c.animation.play("purplehold");
                                break;
                            case 1:
                                c.animation.play("bluehold");
                                break;
                            case 2:
                                c.animation.play("greenhold");
                                break;
                            case 3:
                                c.animation.play("redhold")
                        }
                        c.offset.set_y(-19);
                        d = c.scale;
                        d.set_y(2.25 * d.y * Ha.SONG.speed)
                    }
                }
            };
            g.Note = ld;
            ld.__name__ = "Note";
            ld.__super__ = G;
            ld.prototype = n(G.prototype, {
                update: function(a) {
                    G.prototype.update.call(this,
                        a);
                    this.mustPress ? (this.canBeHit = this.strumTime > W.songPosition - W.safeZoneOffset && this.strumTime < W.songPosition + .5 * W.safeZoneOffset ? !0 : !1, this.strumTime < W.songPosition - W.safeZoneOffset && (this.tooLate = !0)) : (this.canBeHit = !1, this.strumTime <= W.songPosition && (this.wasGoodHit = !0));
                    this.tooLate && .3 < this.alpha && this.set_alpha(.3)
                },
                __class__: ld
            });
            var ii = function(a, b) {
                Ob.call(this);
                var c = (new G).makeGraphic(q.width, q.height, -16777216);
                c.set_alpha(.6);
                c.scrollFactor.set();
                this.add(c);
                a = new kc(a, b);
                a.scrollFactor.set();
                a.playAnim("firstDeath");
                c.set_cameras([q.cameras.list[1]])
            };
            g.PauseSubState = ii;
            ii.__name__ = "PauseSubState";
            ii.__super__ = Ob;
            ii.prototype = n(Ob.prototype, {
                update: function(a) {
                    Ob.prototype.update.call(this, a);
                    a = q.keys.justPressed;
                    a.keyManager.checkStatus(74, a.status) && Pa.player1.controls.replaceBinding(Da.LEFT, cc.Keys, 74, null);
                    a = q.keys.justPressed;
                    a.keyManager.checkStatus(13, a.status) && this.close()
                },
                __class__: ii
            });
            var Ha = function(a, b) {
                this.lightningOffset = 8;
                this.lightningStrikeBeat = 0;
                this.paused = this.startedCountdown =
                    this.endingSong = !1;
                this.songScore = this.previousFrameTime = this.lastReportedPlayheadPosition = this.songTime = this.debugNum = 0;
                this.talking = !0;
                this.isHalloween = !1;
                this.dialogue = ["blah blah blah", "coolswag"];
                this.generatedMusic = this.startingSong = !1;
                this.combo = 0;
                this.gfSpeed = this.health = 1;
                this.curSong = "";
                this.camZooming = !1;
                this.curSection = 0;
                this.unspawnNotes = [];
                this.halloweenLevel = !1;
                rb.call(this, a, b)
            };
            g.PlayState = Ha;
            Ha.__name__ = "PlayState";
            Ha.__super__ = rb;
            Ha.prototype = n(rb.prototype, {
                create: function() {
                    this.camGame =
                        new Rb;
                    this.camHUD = new Rb;
                    this.camHUD.bgColor &= 16777215;
                    this.camHUD.bgColor |= 0;
                    q.cameras.reset(this.camGame);
                    q.cameras.add(this.camHUD);
                    Rb.defaultCameras = [this.camGame];
                    this.persistentDraw = this.persistentUpdate = !0;
                    null == Ha.SONG && (Ha.SONG = Yg.loadFromJson(Ha.curLevel));
                    W.changeBPM(Ha.SONG.bpm);
                    switch (Ha.SONG.song.toLowerCase()) {
                        case "bopeebo":
                            this.dialogue = ["HEY!", "You think you can just sing\nwith my daughter like that?", "If you want to date her...", "You're going to have to go \nthrough ME first!"];
                            break;
                        case "dadbattle":
                            this.dialogue = ["gah you think you're hot stuff?", "If you can beat me here...", "Only then I will even CONSIDER letting you\ndate my daughter!"];
                            break;
                        case "fresh":
                            this.dialogue = ["Not too shabby boy.", ""];
                            break;
                        case "tutorial":
                            this.dialogue = ["Hey you're pretty cute.", "Use the arrow keys to keep up \nwith me singing."]
                    }
                    if ("spookeez" == Ha.SONG.song.toLowerCase() || "monster" == Ha.SONG.song.toLowerCase() || "south" == Ha.SONG.song.toLowerCase()) {
                        this.halloweenLevel = !0;
                        var a = Nb.fromSparrow("assets/images/halloween_bg.png",
                            "assets/images/halloween_bg.xml");
                        this.halloweenBG = new G(-200, -100);
                        this.halloweenBG.set_frames(a);
                        this.halloweenBG.animation.addByPrefix("idle", "halloweem bg0");
                        this.halloweenBG.animation.addByPrefix("lightning", "halloweem bg lightning strike", 24, !1);
                        this.halloweenBG.animation.play("idle");
                        this.halloweenBG.set_antialiasing(!0);
                        this.add(this.halloweenBG);
                        this.isHalloween = !0
                    } else a = (new G(-600, -200)).loadGraphic("assets/images/stageback.png"), a.set_antialiasing(!0), a.scrollFactor.set(.9, .9), a.set_active(!1),
                        this.add(a), a = (new G(-650, 600)).loadGraphic("assets/images/stagefront.png"), a.setGraphicSize(1.1 * a.get_width() | 0), a.updateHitbox(), a.set_antialiasing(!0), a.scrollFactor.set(.9, .9), a.set_active(!1), this.add(a), a = (new G(-500, -300)).loadGraphic("assets/images/stagecurtains.png"), a.setGraphicSize(.9 * a.get_width() | 0), a.updateHitbox(), a.set_antialiasing(!0), a.scrollFactor.set(1.3, 1.3), a.set_active(!1), this.add(a);
                    this.gf = new Q(400, 130, "gf");
                    this.gf.scrollFactor.set(.95, .95);
                    this.gf.set_antialiasing(!0);
                    this.add(this.gf);
                    this.dad = new Q(100, 100, Ha.SONG.player2);
                    this.add(this.dad);
                    var b = new X(this.dad.getGraphicMidpoint().x, this.dad.getGraphicMidpoint().y);
                    switch (Ha.SONG.player2) {
                        case "dad":
                            a = b;
                            a.set_x(a.x + 400);
                            break;
                        case "gf":
                            this.dad.setPosition(this.gf.x, this.gf.y);
                            this.gf.set_visible(!1);
                            Ha.isStoryMode && (a = b, a.set_x(a.x + 600), this.tweenCamIn());
                            break;
                        case "monster":
                            a = this.dad;
                            a.set_y(a.y + 100);
                            break;
                        case "spooky":
                            a = this.dad, a.set_y(a.y + 200)
                    }
                    this.boyfriend = new kc(770, 450);
                    this.add(this.boyfriend);
                    a = new u(!1, this.dialogue);
                    a.set_y(.5 * q.height);
                    a.scrollFactor.set();
                    a.finishThing = r(this, this.startCountdown);
                    W.songPosition = -5E3;
                    this.strumLine = (new G(0, 50)).makeGraphic(q.width, 10);
                    this.strumLine.scrollFactor.set();
                    this.strumLineNotes = new Ra;
                    this.add(this.strumLineNotes);
                    this.playerStrums = new Ra;
                    this.startingSong = !0;
                    this.generateSong(Ha.SONG.song);
                    this.camFollow = new O(0, 0, 1, 1);
                    this.camFollow.setPosition(b.x, b.y);
                    this.add(this.camFollow);
                    q.camera.follow(this.camFollow, Il.LOCKON, .04);
                    q.camera.set_zoom(1.05);
                    b = q.worldBounds;
                    var c = 0,
                        d = 0,
                        e = q.width,
                        f = q.height;
                    null == f && (f = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    b.x = c;
                    b.y = d;
                    b.width = e;
                    b.height = f;
                    q.fixedTimestep = !1;
                    this.healthBarBG = (new G(0, .9 * q.height)).loadGraphic("assets/images/healthBar.png");
                    this.healthBarBG.screenCenter(vd.X);
                    this.healthBarBG.scrollFactor.set();
                    this.add(this.healthBarBG);
                    this.healthBar = new qf(this.healthBarBG.x + 4, this.healthBarBG.y + 4, af.RIGHT_TO_LEFT, this.healthBarBG.get_width() - 8 | 0, this.healthBarBG.get_height() - 8 | 0, this, "health",
                        0, 2);
                    this.healthBar.scrollFactor.set();
                    this.healthBar.createFilledBar(-65536, -10027213);
                    this.add(this.healthBar);
                    this.healthHeads = new G;
                    b = Nb.fromSparrow("assets/images/healthHeads.png", "assets/images/healthHeads.xml");
                    this.healthHeads.set_frames(b);
                    this.healthHeads.animation.add("healthy", [0]);
                    this.healthHeads.animation.add("unhealthy", [1]);
                    this.healthHeads.set_y(this.healthBar.y - this.healthHeads.get_height() / 2);
                    this.healthHeads.scrollFactor.set();
                    this.healthHeads.set_antialiasing(!0);
                    this.add(this.healthHeads);
                    this.startCountdown();
                    this.strumLineNotes.set_cameras([this.camHUD]);
                    this.notes.set_cameras([this.camHUD]);
                    this.healthBar.set_cameras([this.camHUD]);
                    this.healthBarBG.set_cameras([this.camHUD]);
                    this.healthHeads.set_cameras([this.camHUD]);
                    a.set_cameras([this.camHUD]);
                    rb.prototype.create.call(this)
                },
                startCountdown: function() {
                    var a = this;
                    this.generateStaticArrows(0);
                    this.generateStaticArrows(1);
                    this.talking = !1;
                    this.startedCountdown = !0;
                    W.songPosition = 0;
                    W.songPosition -= 5 * W.crochet;
                    var b = 0;
                    this.startTimer =
                        (new Rc).start(W.crochet / 1E3, function(c) {
                            a.dad.dance();
                            a.gf.dance();
                            a.boyfriend.playAnim("idle");
                            switch (b) {
                                case 0:
                                    q.sound.play("assets/sounds/intro3" + fb.soundExt, .6);
                                    break;
                                case 1:
                                    var d = (new G).loadGraphic("assets/images/ready.png");
                                    d.scrollFactor.set();
                                    d.screenCenter();
                                    a.add(d);
                                    c = d;
                                    Za.tween(d, {
                                        y: c.set_y(c.y + 100),
                                        alpha: 0
                                    }, W.crochet / 1E3, {
                                        ease: mc.cubeInOut,
                                        onComplete: function(a) {
                                            d.destroy()
                                        }
                                    });
                                    q.sound.play("assets/sounds/intro2" + fb.soundExt, .6);
                                    break;
                                case 2:
                                    var e = (new G).loadGraphic("assets/images/set.png");
                                    e.scrollFactor.set();
                                    e.screenCenter();
                                    a.add(e);
                                    c = e;
                                    Za.tween(e, {
                                        y: c.set_y(c.y + 100),
                                        alpha: 0
                                    }, W.crochet / 1E3, {
                                        ease: mc.cubeInOut,
                                        onComplete: function(a) {
                                            e.destroy()
                                        }
                                    });
                                    q.sound.play("assets/sounds/intro1" + fb.soundExt, .6);
                                    break;
                                case 3:
                                    var f = (new G).loadGraphic("assets/images/go.png");
                                    f.scrollFactor.set();
                                    f.screenCenter();
                                    a.add(f);
                                    c = f;
                                    Za.tween(f, {
                                        y: c.set_y(c.y + 100),
                                        alpha: 0
                                    }, W.crochet / 1E3, {
                                        ease: mc.cubeInOut,
                                        onComplete: function(a) {
                                            f.destroy()
                                        }
                                    });
                                    q.sound.play("assets/sounds/introGo" + fb.soundExt, .6)
                            }
                            b += 1
                        }, 5)
                },
                startSong: function() {
                    this.previousFrameTime = q.game.ticks;
                    this.lastReportedPlayheadPosition = 0;
                    this.startingSong = !1;
                    q.sound.playMusic("assets/music/" + Ha.SONG.song + "_Inst" + fb.soundExt, 1, !1);
                    q.sound.music.onComplete = r(this, this.endSong);
                    this.vocals.play()
                },
                generateSong: function(a) {
                    a = Ha.SONG;
                    W.changeBPM(a.bpm);
                    this.curSong = a.song;
                    this.vocals = Ha.SONG.needsVoices ? (new rf).loadEmbedded("assets/music/" + this.curSong + "_Voices" + fb.soundExt) : new rf;
                    q.sound.list.add(this.vocals);
                    this.notes = new Ra;
                    this.add(this.notes);
                    a = a.notes;
                    for (var b = 0, c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        for (var e = 0, f = d.sectionNotes; e < f.length;) {
                            var k = f[e];
                            ++e;
                            var p = k[0],
                                m = k[1] % 4 | 0,
                                ja = d.mustHitSection;
                            3 < k[1] && (ja = !d.mustHitSection);
                            var h = 0 < this.unspawnNotes.length ? this.unspawnNotes[this.unspawnNotes.length - 1 | 0] : null;
                            var l = new ld(p, m, h);
                            l.sustainLength = k[2];
                            l.scrollFactor.set(0, 0);
                            var g = l.sustainLength;
                            g /= W.stepCrochet;
                            this.unspawnNotes.push(l);
                            k = 0;
                            for (g = Math.floor(g); k < g;) {
                                var D = k++;
                                h = this.unspawnNotes[this.unspawnNotes.length - 1 | 0];
                                h = new ld(p +
                                    W.stepCrochet * D + W.stepCrochet, m, h, !0);
                                h.scrollFactor.set();
                                this.unspawnNotes.push(h);
                                h.mustPress = ja;
                                h.mustPress && h.set_x(h.x + q.width / 2)
                            }
                            l.mustPress = ja;
                            l.mustPress && (p = l, p.set_x(p.x + q.width / 2))
                        }++b
                    }
                    kd.trace(this.unspawnNotes.length, {
                        fileName: "source/PlayState.hx",
                        lineNumber: 463,
                        className: "PlayState",
                        methodName: "generateSong"
                    });
                    this.unspawnNotes.sort(r(this, this.sortByShit));
                    this.generatedMusic = !0
                },
                sortByShit: function(a, b) {
                    a = a.strumTime;
                    b = b.strumTime;
                    var c = 0;
                    a < b ? c = -1 : a > b && (c = 1);
                    return c
                },
                generateStaticArrows: function(a) {
                    for (var b =
                            0; 4 > b;) {
                        var c = b++,
                            d = new G(0, this.strumLine.y),
                            e = Nb.fromSparrow("assets/images/NOTE_assets.png", "assets/images/NOTE_assets.xml");
                        d.set_frames(e);
                        d.animation.addByPrefix("green", "arrowUP");
                        d.animation.addByPrefix("blue", "arrowDOWN");
                        d.animation.addByPrefix("purple", "arrowLEFT");
                        d.animation.addByPrefix("red", "arrowRIGHT");
                        d.scrollFactor.set();
                        d.setGraphicSize(.7 * d.get_width() | 0);
                        d.updateHitbox();
                        d.set_antialiasing(!0);
                        e = d;
                        e.set_y(e.y - 10);
                        d.set_alpha(0);
                        Za.tween(d, {
                            y: d.y + 10,
                            alpha: 1
                        }, 1, {
                            ease: mc.circOut,
                            startDelay: .5 + .2 * c
                        });
                        d.ID = c;
                        1 == a && this.playerStrums.add(d);
                        switch (Math.abs(c)) {
                            case 0:
                                c = d;
                                c.set_x(c.x + 0 * ld.swagWidth);
                                d.animation.addByPrefix("static", "arrowLEFT");
                                d.animation.addByPrefix("pressed", "left press", 24, !1);
                                d.animation.addByPrefix("confirm", "left confirm", 24, !1);
                                break;
                            case 1:
                                c = d;
                                c.set_x(c.x + ld.swagWidth);
                                d.animation.addByPrefix("static", "arrowDOWN");
                                d.animation.addByPrefix("pressed", "down press", 24, !1);
                                d.animation.addByPrefix("confirm", "down confirm", 24, !1);
                                break;
                            case 2:
                                c = d;
                                c.set_x(c.x +
                                    2 * ld.swagWidth);
                                d.animation.addByPrefix("static", "arrowUP");
                                d.animation.addByPrefix("pressed", "up press", 24, !1);
                                d.animation.addByPrefix("confirm", "up confirm", 24, !1);
                                break;
                            case 3:
                                c = d, c.set_x(c.x + 3 * ld.swagWidth), d.animation.addByPrefix("static", "arrowRIGHT"), d.animation.addByPrefix("pressed", "right press", 24, !1), d.animation.addByPrefix("confirm", "right confirm", 24, !1)
                        }
                        d.animation.play("static");
                        c = d;
                        c.set_x(c.x + 50);
                        c = d;
                        c.set_x(c.x + q.width / 2 * a);
                        this.strumLineNotes.add(d)
                    }
                },
                tweenCamIn: function() {
                    Za.tween(q.camera, {
                        zoom: 1.3
                    }, 4 * W.stepCrochet / 1E3, {
                        ease: mc.elasticInOut
                    })
                },
                openSubState: function(a) {
                    this.paused && (null != q.sound.music && (q.sound.music.pause(), this.vocals.pause()), this.startTimer.finished || (this.startTimer.active = !1));
                    rb.prototype.openSubState.call(this, a)
                },
                closeSubState: function() {
                    this.paused && (null != q.sound.music && (this.vocals.set_time(q.sound.music._time), q.sound.music.play(), this.vocals.play()), this.startTimer.finished || (this.startTimer.active = !0), this.paused = !1);
                    rb.prototype.closeSubState.call(this)
                },
                update: function(a) {
                    var b = this;
                    rb.prototype.update.call(this, a);
                    a = q.keys.justPressed;
                    a.keyManager.checkStatus(13, a.status) && this.startedCountdown && (this.persistentUpdate = !1, this.paused = this.persistentDraw = !0, this.openSubState(new ii(this.boyfriend.getScreenPosition().x, this.boyfriend.getScreenPosition().y)));
                    a = q.keys.justPressed;
                    a.keyManager.checkStatus(27, a.status);
                    this.healthHeads.setGraphicSize(150 + .5 * (this.healthHeads.get_width() - 150) | 0);
                    this.healthHeads.updateHitbox();
                    this.healthHeads.set_x(this.healthBar.x +
                        .01 * this.healthBar.get_width() * Qg.remapToRange(this.healthBar.get_percent(), 0, 100, 100, 0) - this.healthHeads.get_width() / 2);
                    2 < this.health && (this.health = 2);
                    20 > this.healthBar.get_percent() ? this.healthHeads.animation.play("unhealthy") : this.healthHeads.animation.play("healthy");
                    this.startingSong ? this.startedCountdown && (W.songPosition += 1E3 * q.elapsed, 0 <= W.songPosition && this.startSong()) : (W.songPosition = q.sound.music._time, this.paused || (this.songTime += q.game.ticks - this.previousFrameTime, this.previousFrameTime =
                        q.game.ticks, W.lastSongPos != W.songPosition && (this.songTime = (this.songTime + W.songPosition) / 2, W.lastSongPos = W.songPosition)));
                    this.generatedMusic && null != Ha.SONG.notes[this.curStep / 16 | 0] && (this.camFollow.x == this.dad.getMidpoint().x + 150 || Ha.SONG.notes[this.curStep / 16 | 0].mustHitSection || (this.camFollow.setPosition(this.dad.getMidpoint().x + 150, this.dad.getMidpoint().y - 100), this.vocals.set_volume(1), "tutorial" == Ha.SONG.song.toLowerCase() && this.tweenCamIn()), Ha.SONG.notes[this.curStep / 16 | 0].mustHitSection &&
                        this.camFollow.x != this.boyfriend.getMidpoint().x - 100 && (this.camFollow.setPosition(this.boyfriend.getMidpoint().x - 100, this.boyfriend.getMidpoint().y - 100), "tutorial" == Ha.SONG.song.toLowerCase() && Za.tween(q.camera, {
                            zoom: 1
                        }, 4 * W.stepCrochet / 1E3, {
                            ease: mc.elasticInOut
                        })));
                    this.camZooming && (q.camera.set_zoom(1.05 + .95 * (q.camera.zoom - 1.05)), this.camHUD.set_zoom(1 + .95 * (this.camHUD.zoom - 1)));
                    if ("Fresh" == this.curSong) switch (this.totalBeats) {
                        case 16:
                            this.camZooming = !0;
                            this.gfSpeed = 2;
                            break;
                        case 48:
                            this.gfSpeed =
                                1;
                            break;
                        case 80:
                            this.gfSpeed = 2;
                            break;
                        case 112:
                            this.gfSpeed = 1
                    }
                    0 >= this.health && (this.boyfriend.stunned = !0, this.persistentDraw = this.persistentUpdate = !1, this.paused = !0, a = this.vocals, a.cleanup(a.autoDestroy, !0), a = q.sound.music, a.cleanup(a.autoDestroy, !0), this.openSubState(new $h(this.boyfriend.getScreenPosition().x, this.boyfriend.getScreenPosition().y)));
                    null != this.unspawnNotes[0] && 1500 > this.unspawnNotes[0].strumTime - W.songPosition && (a = this.unspawnNotes[0], this.notes.add(a), a = this.unspawnNotes.indexOf(a),
                        this.unspawnNotes.splice(a, 1));
                    this.generatedMusic && this.notes.forEachAlive(function(a) {
                        a.y > q.height ? (a.set_active(!1), a.set_visible(!1)) : (a.set_visible(!0), a.set_active(!0));
                        if (!a.mustPress && a.wasGoodHit) {
                            "Tutorial" != Ha.SONG.song && (b.camZooming = !0);
                            switch (Math.abs(a.noteData)) {
                                case 0:
                                    b.dad.playAnim("singLEFT", !0);
                                    break;
                                case 1:
                                    b.dad.playAnim("singDOWN", !0);
                                    break;
                                case 2:
                                    b.dad.playAnim("singUP", !0);
                                    break;
                                case 3:
                                    b.dad.playAnim("singRIGHT", !0)
                            }
                            Ha.SONG.needsVoices && b.vocals.set_volume(1);
                            a.kill();
                            b.notes.remove(a, !0);
                            a.destroy()
                        }
                        a.set_y(b.strumLine.y - .45 * (W.songPosition - a.strumTime) * Ha.SONG.speed);
                        a.y < -a.get_height() && (a.tooLate && (b.health -= .04, b.vocals.set_volume(0)), a.set_active(!1), a.set_visible(!1), a.kill(), b.notes.remove(a, !0), a.destroy())
                    });
                    this.keyShit()
                },
                endSong: function() {
                    kd.trace("SONG DONE" + I.string(Ha.isStoryMode), {
                        fileName: "source/PlayState.hx",
                        lineNumber: 821,
                        className: "PlayState",
                        methodName: "endSong"
                    });
                    var a = this.songScore,
                        b = Ha.SONG.song;
                    null == a && (a = 0);
                    if (Ne.isLoggedIn)
                        for (var c = Ea.core.scoreBoards.keys(); c.hasNext();) {
                            var d =
                                c.next();
                            d = Ea.core.scoreBoards.h[d];
                            b == d.name && d.postScore(a, "Uhh meow?")
                        }
                    Ha.isStoryMode ? (Y.remove(Ha.storyPlaylist, Ha.storyPlaylist[0]), 0 >= Ha.storyPlaylist.length ? (q.sound.playMusic("assets/music/freakyMenu" + fb.soundExt), a = new jd, q.game._state.switchTo(a) && (q.game._requestedState = a), jd.weekUnlocked[1] = !0, Ne.isLoggedIn && (a = Ea.core.medals.h[60961], a.unlocked || a.sendUnlock()), q.save.data.weekUnlocked = jd.weekUnlocked, q.save.flush()) : (a = "", 0 == Ha.storyDifficulty && (a = "-easy"), Ha.SONG = Yg.loadFromJson(Ha.storyPlaylist[0].toLowerCase() +
                        a, Ha.storyPlaylist[0]), a = new Ha, q.game._state.switchTo(a) && (q.game._requestedState = a))) : (a = new lg, q.game._state.switchTo(a) && (q.game._requestedState = a))
                },
                popUpScore: function(a) {
                    a = Math.abs(a - W.songPosition);
                    this.vocals.set_volume(1);
                    var b = I.string(this.combo),
                        c = new Fb(0, 0, 0, b, 32);
                    c.screenCenter();
                    c.set_x(.55 * q.width);
                    var d = new G;
                    b = 350;
                    var e = "sick";
                    a > .9 * W.safeZoneOffset ? (e = "shit", b = 50) : a > .75 * W.safeZoneOffset ? (e = "bad", b = 100) : a > .2 * W.safeZoneOffset && (e = "good", b = 200);
                    this.songScore += b;
                    d.loadGraphic("assets/images/" +
                        e + ".png");
                    d.screenCenter();
                    d.set_x(c.x - 40);
                    a = d;
                    a.set_y(a.y - 60);
                    d.acceleration.set_y(550);
                    a = d.velocity;
                    a.set_y(a.y - q.random.int(140, 175));
                    d.setGraphicSize(.7 * d.get_width() | 0);
                    d.updateHitbox();
                    d.set_antialiasing(!0);
                    a = d.velocity;
                    a.set_x(a.x - q.random.int(0, 10));
                    var f = (new G).loadGraphic("assets/images/combo.png");
                    f.screenCenter();
                    f.set_x(c.x);
                    f.acceleration.set_y(600);
                    f.set_antialiasing(!0);
                    a = f.velocity;
                    a.set_y(a.y - 150);
                    f.setGraphicSize(.7 * f.get_width() | 0);
                    f.updateHitbox();
                    a = f.velocity;
                    a.set_x(a.x + q.random.int(1,
                        10));
                    this.add(d);
                    b = [];
                    b.push(Math.floor(this.combo / 100));
                    b.push(Math.floor((this.combo - 100 * b[0]) / 10));
                    b.push(this.combo % 10);
                    for (a = e = 0; a < b.length;) {
                        var k = b[a];
                        ++a;
                        k = [(new G).loadGraphic("assets/images/num" + (k | 0) + ".png")];
                        k[0].screenCenter();
                        k[0].set_x(c.x + 43 * e - 90);
                        var p = k[0];
                        p.set_y(p.y + 80);
                        k[0].set_antialiasing(!0);
                        k[0].setGraphicSize(.5 * k[0].get_width() | 0);
                        k[0].updateHitbox();
                        k[0].acceleration.set_y(q.random.int(200, 300));
                        p = k[0].velocity;
                        p.set_y(p.y - q.random.int(140, 160));
                        k[0].velocity.set_x(q.random.float(-5,
                            5));
                        (10 <= this.combo || 0 == this.combo) && this.add(k[0]);
                        Za.tween(k[0], {
                            alpha: 0
                        }, .2, {
                            onComplete: function(a) {
                                return function(b) {
                                    a[0].destroy()
                                }
                            }(k),
                            startDelay: .002 * W.crochet
                        });
                        ++e
                    }
                    c.set_text(I.string(b));
                    Za.tween(d, {
                        alpha: 0
                    }, .2, {
                        startDelay: .001 * W.crochet
                    });
                    Za.tween(f, {
                        alpha: 0
                    }, .2, {
                        onComplete: function(a) {
                            c.destroy();
                            f.destroy();
                            d.destroy()
                        },
                        startDelay: .001 * W.crochet
                    });
                    this.curSection += 1
                },
                keyShit: function() {
                    var a = this,
                        b = Pa.player1.controls._up.check(),
                        c = Pa.player1.controls._right.check(),
                        d = Pa.player1.controls._down.check(),
                        e = Pa.player1.controls._left.check(),
                        f = Pa.player1.controls._upP.check(),
                        k = Pa.player1.controls._rightP.check(),
                        p = Pa.player1.controls._downP.check(),
                        m = Pa.player1.controls._leftP.check(),
                        ja = Pa.player1.controls._upR.check(),
                        h = Pa.player1.controls._rightR.check(),
                        l = Pa.player1.controls._downR.check(),
                        g = Pa.player1.controls._leftR.check();
                    if ((f || k || p || m) && !this.boyfriend.stunned && this.generatedMusic) {
                        var q = [];
                        this.notes.forEachAlive(function(a) {
                            a.canBeHit && a.mustPress && !a.tooLate && (q.push(a), kd.trace("NOTE-" +
                                a.strumTime + " ADDED", {
                                    fileName: "source/PlayState.hx",
                                    lineNumber: 1017,
                                    className: "PlayState",
                                    methodName: "keyShit"
                                }))
                        });
                        if (0 < q.length)
                            for (var r = 0; r < q.length;) {
                                var D = q[r];
                                ++r;
                                switch (D.noteData) {
                                    case 0:
                                        (f || k || p || m) && this.noteCheck(m, D);
                                        break;
                                    case 1:
                                        (f || k || p || m) && this.noteCheck(p, D);
                                        break;
                                    case 2:
                                        (f || k || p || m) && this.noteCheck(f, D);
                                        break;
                                    case 3:
                                        (f || k || p || m) && this.noteCheck(k, D)
                                }
                                D.wasGoodHit && (D.kill(), this.notes.remove(D, !0), D.destroy())
                            } else this.badNoteCheck()
                    }(b || c || d || e) && !this.boyfriend.stunned && this.generatedMusic &&
                        this.notes.forEachAlive(function(f) {
                            if (f.canBeHit && f.mustPress && f.isSustainNote) switch (f.noteData) {
                                case 0:
                                    e && f.prevNote.wasGoodHit && a.goodNoteHit(f);
                                    break;
                                case 1:
                                    d && f.prevNote.wasGoodHit && a.goodNoteHit(f);
                                    break;
                                case 2:
                                    b && f.prevNote.wasGoodHit && a.goodNoteHit(f);
                                    break;
                                case 3:
                                    c && f.prevNote.wasGoodHit && a.goodNoteHit(f)
                            }
                        });
                    (ja || g || h || l) && K.startsWith(this.boyfriend.animation._curAnim.name, "sing") && this.boyfriend.playAnim("idle");
                    this.playerStrums.forEach(function(a) {
                        switch (a.ID) {
                            case 0:
                                m && "confirm" != a.animation._curAnim.name &&
                                    a.animation.play("pressed");
                                g && a.animation.play("static");
                                break;
                            case 1:
                                p && "confirm" != a.animation._curAnim.name && a.animation.play("pressed");
                                l && a.animation.play("static");
                                break;
                            case 2:
                                f && "confirm" != a.animation._curAnim.name && a.animation.play("pressed");
                                ja && a.animation.play("static");
                                break;
                            case 3:
                                k && "confirm" != a.animation._curAnim.name && a.animation.play("pressed"), h && a.animation.play("static")
                        }
                        if ("confirm" == a.animation._curAnim.name) {
                            a.centerOffsets();
                            var b = a.offset;
                            b.set_x(b.x - 13);
                            b = a.offset;
                            b.set_y(b.y -
                                13)
                        } else a.centerOffsets()
                    })
                },
                noteMiss: function(a) {
                    null == a && (a = 1);
                    var b = this;
                    if (!this.boyfriend.stunned) switch (this.health -= .06, 5 < this.combo && this.gf.playAnim("sad"), this.combo = 0, this.songScore -= 10, q.sound.play("assets/sounds/missnote" + q.random.int(1, 3) + fb.soundExt, q.random.float(.1, .2)), this.boyfriend.stunned = !0, (new Rc).start(.08333333333333333, function(a) {
                        b.boyfriend.stunned = !1
                    }), a) {
                        case 0:
                            this.boyfriend.playAnim("singLEFTmiss", !0);
                            break;
                        case 1:
                            this.boyfriend.playAnim("singDOWNmiss", !0);
                            break;
                        case 2:
                            this.boyfriend.playAnim("singUPmiss", !0);
                            break;
                        case 3:
                            this.boyfriend.playAnim("singRIGHTmiss", !0)
                    }
                },
                badNoteCheck: function() {
                    var a = Pa.player1.controls._upP.check(),
                        b = Pa.player1.controls._rightP.check(),
                        c = Pa.player1.controls._downP.check(),
                        d = Pa.player1.controls._leftP.check(),
                        e = q.gamepads.lastActive;
                    if (null != e) {
                        var f = "DPAD_LEFT";
                        var k = Object.prototype.hasOwnProperty.call(dd.fromStringMap.h, f) ? dd.fromStringMap.h[f] : -1;
                        f = "LEFT_STICK_DIGITAL_LEFT";
                        e.checkButtonArrayState([k, Object.prototype.hasOwnProperty.call(dd.fromStringMap.h,
                            f) ? dd.fromStringMap.h[f] : -1, 2], 2) && (d = !0);
                        f = "DPAD_RIGHT";
                        k = Object.prototype.hasOwnProperty.call(dd.fromStringMap.h, f) ? dd.fromStringMap.h[f] : -1;
                        f = "LEFT_STICK_DIGITAL_RIGHT";
                        e.checkButtonArrayState([k, Object.prototype.hasOwnProperty.call(dd.fromStringMap.h, f) ? dd.fromStringMap.h[f] : -1, 1], 2) && (b = !0);
                        f = "DPAD_UP";
                        k = Object.prototype.hasOwnProperty.call(dd.fromStringMap.h, f) ? dd.fromStringMap.h[f] : -1;
                        f = "LEFT_STICK_DIGITAL_UP";
                        e.checkButtonArrayState([k, Object.prototype.hasOwnProperty.call(dd.fromStringMap.h,
                            f) ? dd.fromStringMap.h[f] : -1, 3], 2) && (a = !0);
                        f = "DPAD_DOWN";
                        k = Object.prototype.hasOwnProperty.call(dd.fromStringMap.h, f) ? dd.fromStringMap.h[f] : -1;
                        f = "LEFT_STICK_DIGITAL_DOWN";
                        e.checkButtonArrayState([k, Object.prototype.hasOwnProperty.call(dd.fromStringMap.h, f) ? dd.fromStringMap.h[f] : -1, 0], 2) && (c = !0)
                    }
                    d && this.noteMiss(0);
                    a && this.noteMiss(2);
                    b && this.noteMiss(3);
                    c && this.noteMiss(1)
                },
                noteCheck: function(a, b) {
                    kd.trace(b.noteData + " note check here " + (null == a ? "null" : "" + a), {
                        fileName: "source/PlayState.hx",
                        lineNumber: 1210,
                        className: "PlayState",
                        methodName: "noteCheck"
                    });
                    a ? this.goodNoteHit(b) : this.badNoteCheck()
                },
                goodNoteHit: function(a) {
                    if (!a.wasGoodHit) {
                        a.isSustainNote || (this.popUpScore(a.strumTime), this.combo += 1);
                        this.health = 0 <= a.noteData ? this.health + .023 : this.health + .004;
                        switch (a.noteData) {
                            case 0:
                                this.boyfriend.playAnim("singLEFT");
                                break;
                            case 1:
                                this.boyfriend.playAnim("singDOWN");
                                break;
                            case 2:
                                this.boyfriend.playAnim("singUP");
                                break;
                            case 3:
                                this.boyfriend.playAnim("singRIGHT")
                        }
                        this.playerStrums.forEach(function(b) {
                            Math.abs(a.noteData) ==
                                b.ID && b.animation.play("confirm", !0)
                        });
                        a.wasGoodHit = !0;
                        this.vocals.set_volume(1);
                        a.kill();
                        this.notes.remove(a, !0);
                        a.destroy()
                    }
                },
                lightningStrikeShit: function() {
                    q.sound.play("assets/sounds/thunder_" + q.random.int(1, 2) + fb.soundExt);
                    this.halloweenBG.animation.play("lightning");
                    this.lightningStrikeBeat = this.curBeat;
                    this.lightningOffset = q.random.int(8, 24);
                    this.boyfriend.playAnim("scared", !0);
                    this.gf.playAnim("scared", !0)
                },
                stepHit: function() {
                    Ha.SONG.needsVoices && (this.vocals._time > W.songPosition + W.stepCrochet ||
                        this.vocals._time < W.songPosition - W.stepCrochet) && (this.vocals.pause(), this.vocals.set_time(W.songPosition), this.vocals.play());
                    rb.prototype.stepHit.call(this)
                },
                beatHit: function() {
                    rb.prototype.beatHit.call(this);
                    if (this.generatedMusic) {
                        var a = 1;
                        null == a && (a = -1);
                        var b = Kl.byY,
                            c = a;
                        a = function(a, e) {
                            return b(c, a, e)
                        };
                        this.notes.members.sort(a)
                    }
                    null != Ha.SONG.notes[Math.floor(this.curStep / 16)] && (Ha.SONG.notes[Math.floor(this.curStep / 16)].changeBPM ? W.changeBPM(Ha.SONG.notes[Math.floor(this.curStep / 16)].bpm) : W.changeBPM(Ha.SONG.bpm),
                        Ha.SONG.notes[Math.floor(this.curStep / 16)].mustHitSection && this.dad.dance());
                    this.camZooming && 1.35 > q.camera.zoom && 0 == this.totalBeats % 4 && (a = q.camera, a.set_zoom(a.zoom + .015), a = this.camHUD, a.set_zoom(a.zoom + .03));
                    this.healthHeads.setGraphicSize(this.healthHeads.get_width() + 30 | 0);
                    this.healthHeads.updateHitbox();
                    0 == this.totalBeats % this.gfSpeed && this.gf.dance();
                    K.startsWith(this.boyfriend.animation._curAnim.name, "sing") || this.boyfriend.playAnim("idle");
                    7 == this.totalBeats % 8 && "Bopeebo" == this.curSong && (this.boyfriend.playAnim("hey", !0), "Tutorial" == Ha.SONG.song && "gf" == this.dad.curCharacter && this.dad.playAnim("cheer", !0));
                    this.isHalloween ? (a = 10, null == a && (a = 50), a = q.random.float(0, 100) < a) : a = !1;
                    a && this.curBeat > this.lightningStrikeBeat + this.lightningOffset && this.lightningStrikeShit()
                },
                __class__: Ha
            });
            var Pa = function(a, b) {
                this.id = a;
                this.controls = new B("player" + a, b)
            };
            g.PlayerSettings = Pa;
            Pa.__name__ = "PlayerSettings";
            Pa.init = function() {
                null == Pa.player1 && (Pa.player1 = new Pa(0, D.Solo), ++Pa.numPlayers);
                var a = q.gamepads.get_numActiveGamepads();
                if (0 < a) {
                    var b = q.gamepads._activeGamepads[0];
                    if (null == b) throw F.thrown("Unexpected null gamepad. id:0");
                    Pa.player1.controls.addDefaultGamepad(0)
                }
                if (1 < a) {
                    null == Pa.player2 && (Pa.player2 = new Pa(1, D.None), ++Pa.numPlayers);
                    b = q.gamepads._activeGamepads[1];
                    if (null == b) throw F.thrown("Unexpected null gamepad. id:0");
                    Pa.player2.controls.addDefaultGamepad(1)
                }
            };
            Pa.prototype = {
                __class__: Pa
            };
            var ea = function() {};
            g.Reflect = ea;
            ea.__name__ = "Reflect";
            ea.field = function(a, b) {
                try {
                    return a[b]
                } catch (c) {
                    return Ca.lastError =
                        c, null
                }
            };
            ea.getProperty = function(a, b) {
                var c;
                if (null == a) return null;
                var d = a.__properties__ ? c = a.__properties__["get_" + b] : !1;
                return d ? a[c]() : a[b]
            };
            ea.setProperty = function(a, b, c) {
                var d;
                var e = a.__properties__ ? d = a.__properties__["set_" + b] : !1;
                if (e) a[d](c);
                else a[b] = c
            };
            ea.fields = function(a) {
                var b = [];
                if (null != a) {
                    var c = Object.prototype.hasOwnProperty,
                        d;
                    for (d in a) "__id__" != d && "hx__closures__" != d && c.call(a, d) && b.push(d)
                }
                return b
            };
            ea.isFunction = function(a) {
                return "function" == typeof a ? !(a.__name__ || a.__ename__) :
                    !1
            };
            ea.compare = function(a, b) {
                return a == b ? 0 : a > b ? 1 : -1
            };
            ea.compareMethods = function(a, b) {
                return a == b ? !0 : ea.isFunction(a) && ea.isFunction(b) ? a.scope == b.scope && a.method == b.method ? null != a.method : !1 : !1
            };
            ea.isObject = function(a) {
                if (null == a) return !1;
                var b = typeof a;
                return "string" == b || "object" == b && null == a.__enum__ ? !0 : "function" == b ? null != (a.__name__ || a.__ename__) : !1
            };
            ea.isEnumValue = function(a) {
                return null != a ? null != a.__enum__ : !1
            };
            ea.deleteField = function(a, b) {
                if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
                delete a[b];
                return !0
            };
            var Yg = function() {};
            g.Song = Yg;
            Yg.__name__ = "Song";
            Yg.loadFromJson = function(a, b) {
                for (a = K.trim(qa.getText("assets/data/" + b.toLowerCase() + "/" + a.toLowerCase() + ".json")); !K.endsWith(a, "}");) a = Y.substr(a, 0, a.length - 1);
                a = JSON.parse(a).song;
                kd.trace(a.notes[0], {
                    fileName: "source/Song.hx",
                    lineNumber: 61,
                    className: "Song",
                    methodName: "loadFromJson"
                });
                return a
            };
            var I = function() {};
            g.Std = I;
            I.__name__ = "Std";
            I.string = function(a) {
                return oa.__string_rec(a, "")
            };
            I.parseInt = function(a) {
                if (null != a)
                    for (var b =
                            0, c = a.length; b < c;) {
                        var d = b++,
                            e = a.charCodeAt(d);
                        if (8 >= e || 14 <= e && 32 != e && 45 != e)
                            if (b = a.charCodeAt(d + 1), a = parseInt(a, 120 == b || 88 == b ? 16 : 10), isNaN(a)) break;
                            else return a
                    }
                return null
            };
            var jd = function(a, b) {
                this.movedBack = this.selectedWeek = !1;
                this.curWeek = 0;
                this.weekCharacters = [
                    ["dad", "bf", "gf"],
                    ["spooky", "bf", "gf"]
                ];
                this.curDifficulty = 1;
                this.weekData = [
                    ["Tutorial", "Bopeebo", "Fresh", "Dadbattle"],
                    ["Spookeez", "South"]
                ];
                rb.call(this, a, b)
            };
            g.StoryMenuState = jd;
            jd.__name__ = "StoryMenuState";
            jd.__super__ = rb;
            jd.prototype =
                n(rb.prototype, {
                    create: function() {
                        null == q.sound.music._channel && q.sound.playMusic("assets/music/freakyMenu" + fb.soundExt);
                        this.persistentUpdate = this.persistentDraw = !0;
                        this.scoreText = new Fb(10, 10, 0, "SCORE: 49324858", 36);
                        this.scoreText.setFormat("VCR OSD Mono", 32);
                        var a = new Fb(0, 10);
                        a.set_text("RANK: GREAT");
                        a.setFormat("assets/fonts/vcr.ttf", 32);
                        a.set_size(this.scoreText._defaultFormat.size | 0);
                        a.screenCenter(vd.X);
                        var b = Nb.fromSparrow("assets/images/campaign_menu_UI_assets.png", "assets/images/campaign_menu_UI_assets.xml"),
                            c = (new G(0, 56)).makeGraphic(q.width, 400, -405679);
                        this.grpWeekText = new Ra;
                        this.add(this.grpWeekText);
                        this.grpWeekCharacters = new Ra;
                        this.grpLocks = new Ra;
                        this.add(this.grpLocks);
                        for (var d = 0, e = this.weekData.length; d < e;) {
                            var f = d++,
                                k = !0;
                            1 == f && (k = !1);
                            var p = new hi(0, c.y + c.get_height() + 10, f, k);
                            k = p;
                            k.set_y(k.y + (p.get_height() + 20) * f);
                            p.targetY = f;
                            this.grpWeekText.add(p);
                            p.screenCenter(vd.X);
                            p.set_antialiasing(!0);
                            jd.weekUnlocked[f] || (k = new G(p.get_width() + 10 + p.x), k.set_frames(b), k.animation.addByPrefix("lock",
                                "lock"), k.animation.play("lock"), k.ID = f, k.set_antialiasing(!0), this.grpLocks.add(k))
                        }
                        for (d = 0; 3 > d;) {
                            e = d++;
                            e = f = new gi(.25 * q.width * (1 + e) - 150, this.weekCharacters[this.curWeek][e]);
                            e.set_y(e.y + 70);
                            f.set_antialiasing(!0);
                            switch (f.character) {
                                case "bf":
                                    f.setGraphicSize(.9 * f.get_width() | 0);
                                    f.updateHitbox();
                                    k = f;
                                    k.set_x(k.x - 80);
                                    break;
                                case "dad":
                                    f.setGraphicSize(.5 * f.get_width() | 0);
                                    f.updateHitbox();
                                    break;
                                case "gf":
                                    f.setGraphicSize(.5 * f.get_width() | 0), f.updateHitbox()
                            }
                            this.grpWeekCharacters.add(f)
                        }
                        this.difficultySelectors =
                            new Ra;
                        this.add(this.difficultySelectors);
                        this.leftArrow = new G(this.grpWeekText.members[0].x + 370, this.grpWeekText.members[0].y + 10);
                        this.leftArrow.set_frames(b);
                        this.leftArrow.animation.addByPrefix("idle", "arrow left");
                        this.leftArrow.animation.addByPrefix("press", "arrow push left");
                        this.leftArrow.animation.play("idle");
                        this.difficultySelectors.add(this.leftArrow);
                        this.sprDifficulty = new G(this.leftArrow.x + 130, this.leftArrow.y);
                        this.sprDifficulty.set_frames(b);
                        this.sprDifficulty.animation.addByPrefix("easy",
                            "EASY");
                        this.sprDifficulty.animation.addByPrefix("normal", "NORMAL");
                        this.sprDifficulty.animation.addByPrefix("hard", "HARD");
                        this.sprDifficulty.animation.play("easy");
                        this.changeDifficulty();
                        this.difficultySelectors.add(this.sprDifficulty);
                        this.rightArrow = new G(this.sprDifficulty.x + this.sprDifficulty.get_width() + 50, this.leftArrow.y);
                        this.rightArrow.set_frames(b);
                        this.rightArrow.animation.addByPrefix("idle", "arrow right");
                        this.rightArrow.animation.addByPrefix("press", "arrow push right", 24, !1);
                        this.rightArrow.animation.play("idle");
                        this.difficultySelectors.add(this.rightArrow);
                        this.add(c);
                        this.add(this.grpWeekCharacters);
                        this.txtTracklist = new Fb(.05 * q.width, c.x + c.get_height() + 100, 0, "Tracks", 32);
                        this.txtTracklist.set_alignment("center");
                        this.txtTracklist.set_font(a._font);
                        this.txtTracklist.set_color(-1747081);
                        this.add(this.txtTracklist);
                        this.updateText();
                        rb.prototype.create.call(this)
                    },
                    update: function(a) {
                        var b = this;
                        this.difficultySelectors.set_visible(jd.weekUnlocked[this.curWeek]);
                        this.grpLocks.forEach(function(a) {
                            a.set_y(b.grpWeekText.members[a.ID].y)
                        });
                        this.movedBack || (this.selectedWeek || (Pa.player1.controls._upP.check() && this.changeWeek(-1), Pa.player1.controls._downP.check() && this.changeWeek(1), Pa.player1.controls._right.check() ? this.rightArrow.animation.play("press") : this.rightArrow.animation.play("idle"), Pa.player1.controls._left.check() ? this.leftArrow.animation.play("press") : this.leftArrow.animation.play("idle"), Pa.player1.controls._rightP.check() && this.changeDifficulty(1), Pa.player1.controls._leftP.check() && this.changeDifficulty(-1)), Pa.player1.controls._accept.check() &&
                            this.selectWeek());
                        if (Pa.player1.controls._back.check() && !this.movedBack && !this.selectedWeek) {
                            q.sound.play("assets/sounds/cancelMenu" + fb.soundExt);
                            this.movedBack = !0;
                            var c = new mg;
                            q.game._state.switchTo(c) && (q.game._requestedState = c)
                        }
                        rb.prototype.update.call(this, a)
                    },
                    selectWeek: function() {
                        if (jd.weekUnlocked[this.curWeek]) {
                            q.sound.play("assets/sounds/confirmMenu" + fb.soundExt);
                            var a = this.grpWeekText.members[this.curWeek].week.animation;
                            null != a._curAnim && (a._curAnim.paused = !1);
                            this.grpWeekCharacters.members[1].animation.play("bfConfirm");
                            Ha.storyPlaylist = this.weekData[this.curWeek];
                            this.selectedWeek = Ha.isStoryMode = !0;
                            a = "";
                            switch (this.curDifficulty) {
                                case 0:
                                    a = "-easy";
                                    break;
                                case 2:
                                    a = "-hard"
                            }
                            Ha.storyDifficulty = this.curDifficulty;
                            Ha.SONG = Yg.loadFromJson(Ha.storyPlaylist[0].toLowerCase() + a, Ha.storyPlaylist[0].toLowerCase());
                            (new Rc).start(1, function(a) {
                                null != q.sound.music && (a = q.sound.music, a.cleanup(a.autoDestroy, !0));
                                a = new Ha;
                                q.game._state.switchTo(a) && (q.game._requestedState = a)
                            })
                        }
                    },
                    changeDifficulty: function(a) {
                        null == a && (a = 0);
                        this.curDifficulty +=
                            a;
                        0 > this.curDifficulty && (this.curDifficulty = 2);
                        2 < this.curDifficulty && (this.curDifficulty = 0);
                        this.sprDifficulty.offset.set_x(0);
                        switch (this.curDifficulty) {
                            case 0:
                                this.sprDifficulty.animation.play("easy");
                                this.sprDifficulty.offset.set_x(20);
                                break;
                            case 1:
                                this.sprDifficulty.animation.play("normal");
                                this.sprDifficulty.offset.set_x(70);
                                break;
                            case 2:
                                this.sprDifficulty.animation.play("hard"), this.sprDifficulty.offset.set_x(20)
                        }
                        this.sprDifficulty.set_alpha(0);
                        this.sprDifficulty.set_y(this.leftArrow.y - 15);
                        Za.tween(this.sprDifficulty, {
                            y: this.leftArrow.y + 15,
                            alpha: 1
                        }, .07)
                    },
                    changeWeek: function(a) {
                        null == a && (a = 0);
                        this.curWeek += a;
                        this.curWeek >= this.weekData.length && (this.curWeek = 0);
                        0 > this.curWeek && (this.curWeek = this.weekData.length - 1);
                        for (var b = a = 0, c = this.grpWeekText.members; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d.targetY = a - this.curWeek;
                            ++a
                        }
                        q.sound.play("assets/sounds/scrollMenu" + fb.soundExt);
                        this.updateText()
                    },
                    updateText: function() {
                        this.grpWeekCharacters.members[0].animation.play(this.weekCharacters[this.curWeek][0]);
                        this.grpWeekCharacters.members[1].animation.play(this.weekCharacters[this.curWeek][1]);
                        this.grpWeekCharacters.members[2].animation.play(this.weekCharacters[this.curWeek][2]);
                        this.txtTracklist.set_text("Tracks\n");
                        for (var a = this.weekData[this.curWeek], b = 0; b < a.length;) {
                            var c = a[b];
                            ++b;
                            var d = this.txtTracklist;
                            d.set_text(d.text + ("\n" + c))
                        }
                        this.txtTracklist.set_text(this.txtTracklist.text.toUpperCase());
                        this.txtTracklist.screenCenter(vd.X);
                        b = this.txtTracklist;
                        b.set_x(b.x - .35 * q.width)
                    },
                    __class__: jd
                });
            var Ll =
                function() {};
            g["_String.String_Impl_"] = Ll;
            Ll.__name__ = "_String.String_Impl_";
            Ll.fromCharCode = function(a) {
                return String.fromCodePoint(a)
            };
            var Oe = function() {
                this.b = ""
            };
            g.StringBuf = Oe;
            Oe.__name__ = "StringBuf";
            Oe.prototype = {
                __class__: Oe
            };
            var K = function() {};
            g.StringTools = K;
            K.__name__ = "StringTools";
            K.htmlEscape = function(a, b) {
                for (var c = "", d = 0, e = a; d < e.length;) {
                    a = e;
                    var f = d++,
                        k = a.charCodeAt(f);
                    55296 <= k && 56319 >= k && (k = k - 55232 << 10 | a.charCodeAt(f + 1) & 1023);
                    a = k;
                    65536 <= a && ++d;
                    switch (a) {
                        case 34:
                            c = b ? c + "&quot;" : c + String.fromCodePoint(a);
                            break;
                        case 38:
                            c += "&amp;";
                            break;
                        case 39:
                            c = b ? c + "&#039;" : c + String.fromCodePoint(a);
                            break;
                        case 60:
                            c += "&lt;";
                            break;
                        case 62:
                            c += "&gt;";
                            break;
                        default:
                            c += String.fromCodePoint(a)
                    }
                }
                return c
            };
            K.startsWith = function(a, b) {
                return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1
            };
            K.endsWith = function(a, b) {
                var c = b.length,
                    d = a.length;
                return d >= c ? a.indexOf(b, d - c) == d - c : !1
            };
            K.isSpace = function(a, b) {
                a = Y.cca(a, b);
                return 8 < a && 14 > a ? !0 : 32 == a
            };
            K.ltrim = function(a) {
                for (var b = a.length, c = 0; c < b && K.isSpace(a, c);) ++c;
                return 0 < c ? Y.substr(a,
                    c, b - c) : a
            };
            K.rtrim = function(a) {
                for (var b = a.length, c = 0; c < b && K.isSpace(a, b - c - 1);) ++c;
                return 0 < c ? Y.substr(a, 0, b - c) : a
            };
            K.trim = function(a) {
                return K.ltrim(K.rtrim(a))
            };
            K.replace = function(a, b, c) {
                return a.split(b).join(c)
            };
            K.hex = function(a, b) {
                for (var c = ""; c = "0123456789ABCDEF".charAt(a & 15) + c, a >>>= 4, 0 < a;);
                if (null != b)
                    for (; c.length < b;) c = "0" + c;
                return c
            };
            var fb = function(a, b) {
                this.danceLeft = this.transitioning = this.skippedIntro = !1;
                this.curWacky = [];
                this.wackyIntros = [
                    ["Shoutouts to tom fulp", "lmao"],
                    ["Ludum dare", "extraordinaire"],
                    ["Cyberzone", "coming soon"],
                    ["love to thriftman", "swag"],
                    ["ULTIMATE RHYTHM GAMING", "probably"],
                    ["DOPE ASS GAME", "playstation magazine"],
                    ["in loving memory of", "henryeyes"],
                    ["dancin", "forever"],
                    ["Ritz dx", "rest in peace"],
                    ["rate five", "pls no blam"],
                    ["rhythm gaming", "ultimate"],
                    ["game of the year", "forever"],
                    ["you already know", "we really out here"],
                    ["rise and grind", "love to luis"],
                    ["like parappa", "but cooler"],
                    ["album of the year", "chuckie finster"],
                    ["free gitaroo man", "with love to wandaboy"],
                    ["better than geometry dash",
                        "fight me robtop"
                    ],
                    ["kiddbrute for president", "vote now"]
                ];
                rb.call(this, a, b)
            };
            g.TitleState = fb;
            fb.__name__ = "TitleState";
            fb.__super__ = rb;
            fb.prototype = n(rb.prototype, {
                create: function() {
                    Pa.init();
                    this.curWacky = q.random.getObject_Array_String(this.wackyIntros);
                    rb.prototype.create.call(this);
                    new Ne(ma.API, ma.EncKey);
                    this.startIntro()
                },
                startIntro: function() {
                    if (!fb.initialized) {
                        var a = zb.fromClass(yd);
                        a.persist = !0;
                        a.set_destroyOnNoUse(!1);
                        gb.defaultTransIn = new ah("fade", -16777216, 1, new X(0, -1), {
                            asset: a,
                            width: 32,
                            height: 32
                        }, new ca(0, 0, q.width, q.height));
                        gb.defaultTransOut = new ah("fade", -16777216, .7, new X(0, 1), {
                            asset: a,
                            width: 32,
                            height: 32
                        }, new ca(0, 0, q.width, q.height));
                        gb.defaultTransIn.tileData = {
                            asset: a,
                            width: 32,
                            height: 32
                        };
                        gb.defaultTransOut.tileData = {
                            asset: a,
                            width: 32,
                            height: 32
                        };
                        this.transIn = gb.defaultTransIn;
                        this.transOut = gb.defaultTransOut;
                        q.sound.playMusic("assets/music/freakyMenu" + fb.soundExt, 0);
                        a = q.sound.music;
                        var b = 4,
                            c = 0,
                            d = .7;
                        null == d && (d = 1);
                        null == c && (c = 0);
                        null == b && (b = 1);
                        null == a._channel && a.play();
                        null !=
                            a.fadeTween && a.fadeTween.cancel();
                        a.fadeTween = Za.num(c, d, b, {
                            onComplete: null
                        }, r(a, a.volumeTween));
                        q.save.bind("funkin", "ninjamuffin99");
                        null != q.save.data.weekUnlocked && (jd.weekUnlocked = q.save.data.weekUnlocked)
                    }
                    W.changeBPM(102);
                    this.persistentUpdate = !0;
                    a = (new G).makeGraphic(q.width, q.height, -16777216);
                    this.add(a);
                    this.logoBl = new G(-150, -100);
                    this.logoBl.set_frames(Nb.fromSparrow("assets/images/logoBumpin.png", "assets/images/logoBumpin.xml"));
                    this.logoBl.set_antialiasing(!0);
                    this.logoBl.animation.addByPrefix("bump",
                        "logo bumpin", 24);
                    this.logoBl.animation.play("bump");
                    this.logoBl.updateHitbox();
                    this.gfDance = new G(.4 * q.width, .07 * q.height);
                    this.gfDance.set_frames(Nb.fromSparrow("assets/images/gfDanceTitle.png", "assets/images/gfDanceTitle.xml"));
                    this.gfDance.animation.addByIndices("danceLeft", "gfDance", [30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "", 24, !1);
                    this.gfDance.animation.addByIndices("danceRight", "gfDance", [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "", 24, !1);
                    this.gfDance.set_antialiasing(!0);
                    this.add(this.gfDance);
                    this.add(this.logoBl);
                    this.titleText = new G(100, .8 * q.height);
                    this.titleText.set_frames(Nb.fromSparrow("assets/images/titleEnter.png", "assets/images/titleEnter.xml"));
                    this.titleText.animation.addByPrefix("idle", "Press Enter to Begin", 24);
                    this.titleText.animation.addByPrefix("press", "ENTER PRESSED", 24);
                    this.titleText.set_antialiasing(!0);
                    this.titleText.animation.play("idle");
                    this.titleText.updateHitbox();
                    this.add(this.titleText);
                    a = (new G).loadGraphic("assets/images/logo.png");
                    a.screenCenter();
                    a.set_antialiasing(!0);
                    this.credGroup = new Ra;
                    this.add(this.credGroup);
                    this.textGroup = new Ra;
                    this.blackScreen = (new G).makeGraphic(q.width, q.height, -16777216);
                    this.credGroup.add(this.blackScreen);
                    this.credTextShit = new pb(0, 0, "ninjamuffin99\nPhantomArcade\nkawaisprite\nevilsk8er", !0);
                    this.credTextShit.screenCenter();
                    this.credTextShit.set_visible(!1);
                    this.ngSpr = (new G(0, .52 * q.height)).loadGraphic("assets/images/newgrounds_logo.png");
                    this.add(this.ngSpr);
                    this.ngSpr.set_visible(!1);
                    this.ngSpr.setGraphicSize(.8 * this.ngSpr.get_width() |
                        0);
                    this.ngSpr.updateHitbox();
                    this.ngSpr.screenCenter(vd.X);
                    this.ngSpr.set_antialiasing(!0);
                    Za.tween(this.credTextShit, {
                        y: this.credTextShit.y + 20
                    }, 2.9, {
                        ease: mc.quadInOut,
                        type: 4
                    });
                    q.mouse.set_visible(!1);
                    fb.initialized ? this.skipIntro() : fb.initialized = !0
                },
                update: function(a) {
                    W.songPosition = q.sound.music._time;
                    var b = q.keys.justPressed,
                        c = b.keyManager.checkStatus(13, b.status),
                        d = q.gamepads.lastActive;
                    if (null != d) {
                        b = d.justPressed;
                        d = b.gamepad;
                        b = b.status;
                        var e = d.mapping.getRawID(7);
                        d = d.buttons[e];
                        null != d && d.hasState(b) &&
                            (c = !0)
                    }
                    c && !this.transitioning && this.skippedIntro && (Ne.isLoggedIn && (d = Ea.core.medals.h[60960], d.unlocked || d.sendUnlock()), this.titleText.animation.play("press"), q.camera.flash(-1, 1), q.sound.play("assets/sounds/confirmMenu" + fb.soundExt, .7), this.transitioning = !0, (new Rc).start(2, function(a) {
                        a = new mg;
                        q.game._state.switchTo(a) && (q.game._requestedState = a)
                    }));
                    c && !this.skippedIntro && this.skipIntro();
                    rb.prototype.update.call(this, a)
                },
                createCoolText: function(a) {
                    for (var b = 0, c = a.length; b < c;) {
                        var d = b++,
                            e = new pb(0,
                                0, a[d], !0, !1);
                        e.screenCenter(vd.X);
                        var f = e;
                        f.set_y(f.y + (60 * d + 200));
                        this.credGroup.add(e);
                        this.textGroup.add(e)
                    }
                },
                addMoreText: function(a) {
                    a = new pb(0, 0, a, !0, !1);
                    a.screenCenter(vd.X);
                    a.set_y(a.y + (60 * this.textGroup.length + 200));
                    this.credGroup.add(a);
                    this.textGroup.add(a)
                },
                deleteCoolText: function() {
                    for (; 0 < this.textGroup.members.length;) this.credGroup.remove(this.textGroup.members[0], !0), this.textGroup.remove(this.textGroup.members[0], !0)
                },
                beatHit: function() {
                    rb.prototype.beatHit.call(this);
                    this.logoBl.animation.play("bump");
                    (this.danceLeft = !this.danceLeft) ? this.gfDance.animation.play("danceRight"): this.gfDance.animation.play("danceLeft");
                    switch (this.curBeat) {
                        case 1:
                            this.createCoolText(["ninjamuffin99", "phantomArcade", "kawaisprite", "evilsk8er"]);
                            break;
                        case 3:
                            this.addMoreText("present");
                            break;
                        case 4:
                            this.deleteCoolText();
                            break;
                        case 5:
                            this.createCoolText(["In association", "with"]);
                            break;
                        case 7:
                            this.addMoreText("newgrounds");
                            this.ngSpr.set_visible(!0);
                            break;
                        case 8:
                            this.deleteCoolText();
                            this.ngSpr.set_visible(!1);
                            break;
                        case 9:
                            this.createCoolText([this.curWacky[0]]);
                            break;
                        case 11:
                            this.addMoreText(this.curWacky[1]);
                            break;
                        case 12:
                            this.deleteCoolText();
                            break;
                        case 13:
                            this.addMoreText("Friday");
                            break;
                        case 14:
                            this.addMoreText("Night");
                            break;
                        case 15:
                            this.addMoreText("Funkin");
                            break;
                        case 16:
                            this.skipIntro()
                    }
                },
                skipIntro: function() {
                    this.skippedIntro || (this.remove(this.ngSpr), q.camera.flash(-1, 4), this.remove(this.credGroup), this.skippedIntro = !0)
                },
                __class__: fb
            });
            var Jd = w.ValueType = {
                    __ename__: "ValueType",
                    __constructs__: "TNull TInt TFloat TBool TObject TFunction TClass TEnum TUnknown".split(" "),
                    TNull: {
                        _hx_index: 0,
                        __enum__: "ValueType",
                        toString: h
                    },
                    TInt: {
                        _hx_index: 1,
                        __enum__: "ValueType",
                        toString: h
                    },
                    TFloat: {
                        _hx_index: 2,
                        __enum__: "ValueType",
                        toString: h
                    },
                    TBool: {
                        _hx_index: 3,
                        __enum__: "ValueType",
                        toString: h
                    },
                    TObject: {
                        _hx_index: 4,
                        __enum__: "ValueType",
                        toString: h
                    },
                    TFunction: {
                        _hx_index: 5,
                        __enum__: "ValueType",
                        toString: h
                    },
                    TClass: (x = function(a) {
                        return {
                            _hx_index: 6,
                            c: a,
                            __enum__: "ValueType",
                            toString: h
                        }
                    }, x.__params__ = ["c"], x),
                    TEnum: (x = function(a) {
                        return {
                            _hx_index: 7,
                            e: a,
                            __enum__: "ValueType",
                            toString: h
                        }
                    }, x.__params__ = ["e"], x),
                    TUnknown: {
                        _hx_index: 8,
                        __enum__: "ValueType",
                        toString: h
                    }
                },
                Ua = function() {};
            g.Type = Ua;
            Ua.__name__ = "Type";
            Ua.resolveEnum = function(a) {
                return w[a]
            };
            Ua.createInstance = function(a, b) {
                return new(Function.prototype.bind.apply(a, [null].concat(b)))
            };
            Ua.createEnum = function(a, b, c) {
                var d = ea.field(a, b);
                if (null == d) throw F.thrown("No such constructor " + b);
                if (ea.isFunction(d)) {
                    if (null == c) throw F.thrown("Constructor " + b + " need parameters");
                    return d.apply(a, c)
                }
                if (null != c && 0 != c.length) throw F.thrown("Constructor " +
                    b + " does not need parameters");
                return d
            };
            Ua.typeof = function(a) {
                switch (typeof a) {
                    case "boolean":
                        return Jd.TBool;
                    case "function":
                        return a.__name__ || a.__ename__ ? Jd.TObject : Jd.TFunction;
                    case "number":
                        return Math.ceil(a) == a % 2147483648 ? Jd.TInt : Jd.TFloat;
                    case "object":
                        if (null == a) return Jd.TNull;
                        var b = a.__enum__;
                        if (null != b) return Jd.TEnum(w[b]);
                        a = oa.getClass(a);
                        return null != a ? Jd.TClass(a) : Jd.TObject;
                    case "string":
                        return Jd.TClass(String);
                    case "undefined":
                        return Jd.TNull;
                    default:
                        return Jd.TUnknown
                }
            };
            Ua.enumParameters =
                function(a) {
                    var b = w[a.__enum__];
                    b = b[b.__constructs__[a._hx_index]].__params__;
                    if (null != b) {
                        for (var c = [], d = 0; d < b.length;) {
                            var e = b[d];
                            ++d;
                            c.push(a[e])
                        }
                        return c
                    }
                    return []
                };
            var wc = {
                    gt: function(a, b) {
                        var c = 0 > a;
                        return c != 0 > b ? c : a > b
                    },
                    toFloat: function(a) {
                        return 0 > a ? 4294967296 + a : a + 0
                    }
                },
                Va = {
                    toString: function(a) {
                        switch (a) {
                            case 0:
                                return "Element";
                            case 1:
                                return "PCData";
                            case 2:
                                return "CData";
                            case 3:
                                return "Comment";
                            case 4:
                                return "DocType";
                            case 5:
                                return "ProcessingInstruction";
                            case 6:
                                return "Document"
                        }
                    }
                },
                S = function(a) {
                    this.nodeType =
                        a;
                    this.children = [];
                    this.attributeMap = new aa
                };
            g.Xml = S;
            S.__name__ = "Xml";
            S.parse = function(a) {
                return sf.parse(a)
            };
            S.createElement = function(a) {
                var b = new S(S.Element);
                if (b.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeName = a;
                return b
            };
            S.createPCData = function(a) {
                var b = new S(S.PCData);
                if (b.nodeType == S.Document || b.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeValue = a;
                return b
            };
            S.createCData = function(a) {
                var b = new S(S.CData);
                if (b.nodeType == S.Document || b.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeValue = a;
                return b
            };
            S.createComment = function(a) {
                var b = new S(S.Comment);
                if (b.nodeType == S.Document || b.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeValue = a;
                return b
            };
            S.createDocType = function(a) {
                var b = new S(S.DocType);
                if (b.nodeType == S.Document || b.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeValue = a;
                return b
            };
            S.createProcessingInstruction = function(a) {
                var b = new S(S.ProcessingInstruction);
                if (b.nodeType == S.Document || b.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeValue = a;
                return b
            };
            S.createDocument = function() {
                return new S(S.Document)
            };
            S.prototype = {
                get: function(a) {
                    if (this.nodeType !=
                        S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    return this.attributeMap.h[a]
                },
                set: function(a, b) {
                    if (this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    this.attributeMap.h[a] = b
                },
                exists: function(a) {
                    if (this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a)
                },
                attributes: function() {
                    if (this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    return aa.keysIterator(this.attributeMap.h)
                },
                elements: function() {
                    if (this.nodeType != S.Document && this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    for (var a = [], b = 0,
                            c = this.children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.nodeType == S.Element && a.push(d)
                    }
                    return new Je(a)
                },
                elementsNamed: function(a) {
                    if (this.nodeType != S.Document && this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    for (var b = [], c = 0, d = this.children; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (e.nodeType == S.Element) {
                            if (e.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == e.nodeType ? "null" :
                                Va.toString(e.nodeType)));
                            var f = e.nodeName == a
                        } else f = !1;
                        f && b.push(e)
                    }
                    return new Je(b)
                },
                firstElement: function() {
                    if (this.nodeType != S.Document && this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    for (var a = 0, b = this.children; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (c.nodeType == S.Element) return c
                    }
                    return null
                },
                addChild: function(a) {
                    if (this.nodeType != S.Document && this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " +
                        (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    null != a.parent && a.parent.removeChild(a);
                    this.children.push(a);
                    a.parent = this
                },
                removeChild: function(a) {
                    if (this.nodeType != S.Document && this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    return Y.remove(this.children, a) ? (a.parent = null, !0) : !1
                },
                insertChild: function(a, b) {
                    if (this.nodeType != S.Document && this.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " +
                        (null == this.nodeType ? "null" : Va.toString(this.nodeType)));
                    null != a.parent && Y.remove(a.parent.children, a);
                    this.children.splice(b, 0, a);
                    a.parent = this
                },
                toString: function() {
                    return tf.print(this)
                },
                __class__: S
            };
            var ji = function() {};
            g["flixel.IFlxBasic"] = ji;
            ji.__name__ = "flixel.IFlxBasic";
            ji.__isInterface__ = !0;
            ji.prototype = {
                __class__: ji,
                __properties__: {
                    set_visible: "set_visible",
                    set_active: "set_active"
                }
            };
            var ki = function(a) {
                this._count = 0;
                this._pool = [];
                this._class = a
            };
            g["flixel.util.FlxPool_flixel_math_FlxPoint"] =
                ki;
            ki.__name__ = "flixel.util.FlxPool_flixel_math_FlxPoint";
            ki.__interfaces__ = [nb];
            ki.prototype = {
                get: function() {
                    return 0 == this._count ? Ua.createInstance(this._class, []) : this._pool[--this._count]
                },
                putUnsafe: function(a) {
                    null != a && (a.destroy(), this._pool[this._count++] = a)
                },
                __class__: ki
            };
            var X = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this._weak = this._inPool = !1;
                this.x = this.y = 0;
                this.set(a, b)
            };
            g["flixel.math.FlxPoint"] = X;
            X.__name__ = "flixel.math.FlxPoint";
            X.__interfaces__ = [z];
            X.prototype = {
                put: function() {
                    this._inPool ||
                        (this._inPool = !0, this._weak = !1, X._pool.putUnsafe(this))
                },
                set: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.set_x(a);
                    this.set_y(b);
                    return this
                },
                addPoint: function(a) {
                    var b = this;
                    b.set_x(b.x + a.x);
                    b = this;
                    b.set_y(b.y + a.y);
                    a._weak && a.put();
                    return this
                },
                subtractPoint: function(a) {
                    var b = this;
                    b.set_x(b.x - a.x);
                    b = this;
                    b.set_y(b.y - a.y);
                    a._weak && a.put();
                    return this
                },
                copyTo: function(a) {
                    null == a && (a = X._pool.get().set(0, 0), a._inPool = !1);
                    a.set_x(this.x);
                    a.set_y(this.y);
                    return a
                },
                distanceTo: function(a) {
                    var b = this.x -
                        a.x,
                        c = this.y - a.y;
                    a._weak && a.put();
                    return Math.sqrt(b * b + c * c)
                },
                rotate: function(a, b) {
                    var c = Math.PI / 180 * b;
                    var d = .3183098862 * c;
                    1 < d ? d -= Math.ceil(d) >> 1 << 1 : -1 > d && (d += Math.ceil(-d) >> 1 << 1);
                    b = 0 < d ? d * (3.1 + d * (.5 + d * (-7.2 + 3.6 * d))) : d * (3.1 - d * (.5 + d * (7.2 + 3.6 * d)));
                    d = .3183098862 * (c + 1.570796327);
                    1 < d ? d -= Math.ceil(d) >> 1 << 1 : -1 > d && (d += Math.ceil(-d) >> 1 << 1);
                    c = 0 < d ? d * (3.1 + d * (.5 + d * (-7.2 + 3.6 * d))) : d * (3.1 - d * (.5 + d * (7.2 + 3.6 * d)));
                    d = this.x - a.x;
                    var e = this.y - a.y;
                    this.set_x(c * d - b * e + a.x);
                    this.set_y(b * d + c * e + a.y);
                    a._weak && a.put();
                    return this
                },
                angleBetween: function(a) {
                    var b = a.x - this.x,
                        c = a.y - this.y,
                        d = 0;
                    if (0 != b || 0 != c) {
                        d = .25 * Math.PI;
                        var e = 0 > c ? -c : c;
                        d = 0 <= b ? d - (b - e) / (b + e) * d : 3 * d - (b + e) / (e - b) * d;
                        d = 180 / Math.PI * (0 > c ? -d : d);
                        d = 90 < d ? d - 270 : d + 90
                    }
                    a._weak && a.put();
                    return d
                },
                destroy: function() {},
                set_x: function(a) {
                    return this.x = a
                },
                set_y: function(a) {
                    return this.y = a
                },
                __class__: X,
                __properties__: {
                    set_y: "set_y",
                    set_x: "set_x"
                }
            };
            var Ml = function(a, b, c, d, e, f) {
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 1);
                this.a = a;
                this.b = b;
                this.c =
                    c;
                this.d = d;
                this.tx = e;
                this.ty = f
            };
            g["lime.math.Matrix3"] = Ml;
            Ml.__name__ = "lime.math.Matrix3";
            Ml.prototype = {
                __class__: Ml
            };
            var xa = function(a, b, c, d, e, f) {
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 1);
                this.a = a;
                this.b = b;
                this.c = c;
                this.d = d;
                this.tx = e;
                this.ty = f
            };
            g["openfl.geom.Matrix"] = xa;
            xa.__name__ = "openfl.geom.Matrix";
            xa.prototype = {
                clone: function() {
                    return new xa(this.a, this.b, this.c, this.d, this.tx, this.ty)
                },
                concat: function(a) {
                    var b = this.a * a.a + this.b * a.c;
                    this.b = this.a *
                        a.b + this.b * a.d;
                    this.a = b;
                    b = this.c * a.a + this.d * a.c;
                    this.d = this.c * a.b + this.d * a.d;
                    this.c = b;
                    b = this.tx * a.a + this.ty * a.c + a.tx;
                    this.ty = this.tx * a.b + this.ty * a.d + a.ty;
                    this.tx = b
                },
                copyFrom: function(a) {
                    this.a = a.a;
                    this.b = a.b;
                    this.c = a.c;
                    this.d = a.d;
                    this.tx = a.tx;
                    this.ty = a.ty
                },
                createGradientBox: function(a, b, c, d, e) {
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    this.a = a / 1638.4;
                    this.d = b / 1638.4;
                    if (0 != c) {
                        var f = Math.cos(c);
                        c = Math.sin(c);
                        this.b = c * this.d;
                        this.c = -c * this.a;
                        this.a *= f;
                        this.d *= f
                    } else this.c = this.b = 0;
                    this.tx = d + a / 2;
                    this.ty = e + b / 2
                },
                equals: function(a) {
                    return null != a && this.tx == a.tx && this.ty == a.ty && this.a == a.a && this.b == a.b && this.c == a.c ? this.d == a.d : !1
                },
                identity: function() {
                    this.a = 1;
                    this.c = this.b = 0;
                    this.d = 1;
                    this.ty = this.tx = 0
                },
                invert: function() {
                    var a = this.a * this.d - this.b * this.c;
                    if (0 == a) this.a = this.b = this.c = this.d = 0, this.tx = -this.tx, this.ty = -this.ty;
                    else {
                        a = 1 / a;
                        var b = this.d * a;
                        this.d = this.a * a;
                        this.a = b;
                        this.b *= -a;
                        this.c *= -a;
                        a = -this.a * this.tx - this.c * this.ty;
                        this.ty = -this.b * this.tx - this.d * this.ty;
                        this.tx = a
                    }
                    return this
                },
                rotate: function(a) {
                    var b =
                        Math.cos(a);
                    a = Math.sin(a);
                    var c = this.a * b - this.b * a;
                    this.b = this.a * a + this.b * b;
                    this.a = c;
                    c = this.c * b - this.d * a;
                    this.d = this.c * a + this.d * b;
                    this.c = c;
                    c = this.tx * b - this.ty * a;
                    this.ty = this.tx * a + this.ty * b;
                    this.tx = c
                },
                scale: function(a, b) {
                    this.a *= a;
                    this.b *= b;
                    this.c *= a;
                    this.d *= b;
                    this.tx *= a;
                    this.ty *= b
                },
                setTo: function(a, b, c, d, e, f) {
                    this.a = a;
                    this.b = b;
                    this.c = c;
                    this.d = d;
                    this.tx = e;
                    this.ty = f
                },
                translate: function(a, b) {
                    this.tx += a;
                    this.ty += b
                },
                __class__: xa
            };
            var wb = function(a, b, c, d, e, f, k, p) {
                null == p && (p = 0);
                null == k && (k = 0);
                null == f && (f =
                    0);
                null == e && (e = 0);
                null == d && (d = 1);
                null == c && (c = 1);
                null == b && (b = 1);
                null == a && (a = 1);
                this.redMultiplier = a;
                this.greenMultiplier = b;
                this.blueMultiplier = c;
                this.alphaMultiplier = d;
                this.redOffset = e;
                this.greenOffset = f;
                this.blueOffset = k;
                this.alphaOffset = p
            };
            g["openfl.geom.ColorTransform"] = wb;
            wb.__name__ = "openfl.geom.ColorTransform";
            wb.prototype = {
                __copyFrom: function(a) {
                    this.redMultiplier = a.redMultiplier;
                    this.greenMultiplier = a.greenMultiplier;
                    this.blueMultiplier = a.blueMultiplier;
                    this.alphaMultiplier = a.alphaMultiplier;
                    this.redOffset = a.redOffset;
                    this.greenOffset = a.greenOffset;
                    this.blueOffset = a.blueOffset;
                    this.alphaOffset = a.alphaOffset
                },
                __combine: function(a) {
                    this.redMultiplier *= a.redMultiplier;
                    this.greenMultiplier *= a.greenMultiplier;
                    this.blueMultiplier *= a.blueMultiplier;
                    this.alphaMultiplier *= a.alphaMultiplier;
                    this.redOffset += a.redOffset;
                    this.greenOffset += a.greenOffset;
                    this.blueOffset += a.blueOffset;
                    this.alphaOffset += a.alphaOffset
                },
                __identity: function() {
                    this.alphaMultiplier = this.blueMultiplier = this.greenMultiplier =
                        this.redMultiplier = 1;
                    this.alphaOffset = this.blueOffset = this.greenOffset = this.redOffset = 0
                },
                __invert: function() {
                    this.redMultiplier = 0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
                    this.greenMultiplier = 0 != this.greenMultiplier ? 1 / this.greenMultiplier : 1;
                    this.blueMultiplier = 0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
                    this.alphaMultiplier = 0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
                    this.redOffset = -this.redOffset;
                    this.greenOffset = -this.greenOffset;
                    this.blueOffset = -this.blueOffset;
                    this.alphaOffset = -this.alphaOffset
                },
                __equals: function(a, b) {
                    return null == a || this.redMultiplier != a.redMultiplier || this.greenMultiplier != a.greenMultiplier || this.blueMultiplier != a.blueMultiplier || !b && this.alphaMultiplier != a.alphaMultiplier || this.redOffset != a.redOffset || this.greenOffset != a.greenOffset || this.blueOffset != a.blueOffset ? !1 : this.alphaOffset == a.alphaOffset
                },
                __isDefault: function(a) {
                    return a ? 1 == this.redMultiplier && 1 == this.greenMultiplier && 1 == this.blueMultiplier && 0 == this.redOffset && 0 == this.greenOffset && 0 == this.blueOffset ? 0 == this.alphaOffset :
                        !1 : 1 == this.redMultiplier && 1 == this.greenMultiplier && 1 == this.blueMultiplier && 1 == this.alphaMultiplier && 0 == this.redOffset && 0 == this.greenOffset && 0 == this.blueOffset ? 0 == this.alphaOffset : !1
                },
                __setArrays: function(a, b) {
                    a[0] = this.redMultiplier;
                    a[1] = this.greenMultiplier;
                    a[2] = this.blueMultiplier;
                    a[3] = this.alphaMultiplier;
                    b[0] = this.redOffset;
                    b[1] = this.greenOffset;
                    b[2] = this.blueOffset;
                    b[3] = this.alphaOffset
                },
                __toLimeColorMatrix: function() {
                    if (null == wb.__limeColorMatrix) {
                        var a = new Float32Array(20);
                        wb.__limeColorMatrix =
                            a
                    }
                    wb.__limeColorMatrix[0] = this.redMultiplier;
                    wb.__limeColorMatrix[4] = this.redOffset / 255;
                    wb.__limeColorMatrix[6] = this.greenMultiplier;
                    wb.__limeColorMatrix[9] = this.greenOffset / 255;
                    wb.__limeColorMatrix[12] = this.blueMultiplier;
                    wb.__limeColorMatrix[14] = this.blueOffset / 255;
                    wb.__limeColorMatrix[18] = this.alphaMultiplier;
                    wb.__limeColorMatrix[19] = this.alphaOffset / 255;
                    return wb.__limeColorMatrix
                },
                __class__: wb
            };
            var Rb = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a =
                    0);
                this._helperPoint = new La;
                this._helperMatrix = new Mf;
                var f = ca._pool.get();
                f.x = 0;
                f.y = 0;
                f.width = 0;
                f.height = 0;
                f._inPool = !1;
                this._bounds = f;
                this._scrollRect = new Z;
                this.initialZoom = 1;
                f = X._pool.get().set(0, 0);
                f._inPool = !1;
                this._point = f;
                this._fxShakeAxes = vd.XY;
                this._fxFadeAlpha = this._fxShakeIntensity = this._fxShakeDuration = 0;
                this._fxFadeCompleted = !0;
                this._fxFadeComplete = null;
                this._fxFadeIn = !1;
                this._fxFadeDuration = 0;
                f = X._pool.get().set(0, 0);
                f._inPool = !1;
                this._scrollTarget = f;
                this._fxFlashAlpha = this._fxFadeColor =
                    0;
                this._fxFlashComplete = null;
                this._fxFlashColor = this._fxFlashDuration = 0;
                f = X._pool.get().set(0, 0);
                f._inPool = !1;
                this._flashOffset = f;
                this._flashPoint = new La;
                this.filtersEnabled = !0;
                f = X._pool.get().set(0, 0);
                f._inPool = !1;
                this.followLead = f;
                this.antialiasing = !1;
                this.color = -1;
                this._useBlitMatrix = !1;
                this._blitMatrix = new Mf;
                this.width = this.height = this.viewOffsetX = this.viewOffsetY = this.viewOffsetWidth = this.viewOffsetHeight = this.viewWidth = this.viewHeight = 0;
                this.flashSprite = new Z;
                this.useBgAlphaBlending = !1;
                f = X._pool.get().set(0,
                    0);
                f._inPool = !1;
                this.scroll = f;
                this.followLerp = 60 / q.updateFramerate;
                f = X._pool.get().set(0, 0);
                f._inPool = !1;
                this.targetOffset = f;
                this.x = this.y = this.scaleX = this.scaleY = 0;
                J.call(this);
                this.set_x(a);
                this.set_y(b);
                this.set_width(0 >= c ? q.width : c);
                this.set_height(0 >= d ? q.height : d);
                this._flashRect = new fa(0, 0, this.width, this.height);
                this.flashSprite.addChild(this._scrollRect);
                this._scrollRect.set_scrollRect(new fa);
                (this.pixelPerfectRender = q.renderBlit) ? (this.screen = new G, this.buffer = new H(this.width, this.height, !0, 0), this.screen.set_pixels(this.buffer), this.screen.origin.set(), this._flashBitmap = new Jb(this.buffer), this._scrollRect.addChild(this._flashBitmap), this._fill = new H(this.width, this.height, !0, 0)) : (this.canvas = new Z, this._scrollRect.addChild(this.canvas));
                this.set_color(-1);
                this.initialZoom = 0 == e ? Rb.defaultZoom : e;
                this.set_zoom(e);
                this.updateScrollRect();
                this.updateFlashOffset();
                this.updateFlashSpritePosition();
                this.updateInternalSpritePositions();
                this.bgColor = q.cameras.get_bgColor()
            };
            g["flixel.FlxCamera"] =
                Rb;
            Rb.__name__ = "flixel.FlxCamera";
            Rb.__super__ = J;
            Rb.prototype = n(J.prototype, {
                startQuadBatch: function(a, b, c, d, e, f) {
                    null == e && (e = !1);
                    null == c && (c = !1);
                    var k = Mc.blendToInt(d);
                    if (null != this._currentDrawItem && this._currentDrawItem.type == em.TILES && this._headTiles.graphics == a && this._headTiles.colored == b && this._headTiles.hasColorOffsets == c && this._headTiles.blending == k && this._headTiles.blend == d && this._headTiles.antialiasing == e && this._headTiles.shader == f) return this._headTiles;
                    if (null != Rb._storageTilesHead) {
                        var p =
                            Rb._storageTilesHead;
                        var m = Rb._storageTilesHead.nextTyped;
                        p.reset();
                        Rb._storageTilesHead = m
                    } else p = new li;
                    p.graphics = a;
                    p.antialiasing = e;
                    p.colored = b;
                    p.hasColorOffsets = c;
                    p.blending = k;
                    p.blend = d;
                    p.shader = f;
                    p.nextTyped = this._headTiles;
                    this._headTiles = p;
                    null == this._headOfDrawStack && (this._headOfDrawStack = p);
                    null != this._currentDrawItem && (this._currentDrawItem.next = p);
                    return this._currentDrawItem = p
                },
                clearDrawStack: function() {
                    for (var a = this._headTiles, b; null != a;) b = a.nextTyped, a.reset(), a.nextTyped = Rb._storageTilesHead,
                        Rb._storageTilesHead = a, a = b;
                    for (a = this._headTriangles; null != a;) b = a.nextTyped, a.reset(), a.nextTyped = Rb._storageTrianglesHead, Rb._storageTrianglesHead = a, a = b;
                    this._headTriangles = this._headTiles = this._headOfDrawStack = this._currentDrawItem = null
                },
                render: function() {
                    for (var a = this._headOfDrawStack; null != a;) a.render(this), a = a.next
                },
                drawPixels: function(a, b, c, d, e, f, k) {
                    null == f && (f = !1);
                    if (q.renderBlit) this._helperMatrix.copyFrom(c), this._useBlitMatrix ? (this._helperMatrix.concat(this._blitMatrix), this.buffer.draw(b,
                        this._helperMatrix, null, null, null, f || this.antialiasing)) : (this._helperMatrix.translate(-this.viewOffsetX, -this.viewOffsetY), this.buffer.draw(b, this._helperMatrix, null, e, null, f || this.antialiasing));
                    else {
                        b = null != d && ie.hasRGBMultipliers(d);
                        var p = null != d && ie.hasRGBAOffsets(d);
                        this.startQuadBatch(a.parent, b, p, e, f, k).addQuad(a, c, d)
                    }
                },
                copyPixels: function(a, b, c, d, e, f, k, p) {
                    null == k && (k = !1);
                    q.renderBlit ? null != b ? this._useBlitMatrix ? (this._helperMatrix.identity(), this._helperMatrix.translate(d.x, d.y), this._helperMatrix.concat(this._blitMatrix),
                        this.buffer.draw(b, this._helperMatrix, null, null, null, k || this.antialiasing)) : (this._helperPoint.x = d.x - (this.viewOffsetX | 0), this._helperPoint.y = d.y - (this.viewOffsetY | 0), this.buffer.copyPixels(b, c, this._helperPoint, null, null, !0)) : null != a && a.paint(this.buffer, d, !0) : (this._helperMatrix.identity(), this._helperMatrix.translate(d.x + a.offset.x, d.y + a.offset.y), b = null != e && ie.hasRGBMultipliers(e), c = null != e && ie.hasRGBAOffsets(e), this.startQuadBatch(a.parent, b, c, f, k, p).addQuad(a, this._helperMatrix, e))
                },
                destroy: function() {
                    V.removeChild(this.flashSprite,
                        this._scrollRect);
                    if (q.renderBlit) V.removeChild(this._scrollRect, this._flashBitmap), this.screen = V.destroy(this.screen), this._flashBitmap = this.buffer = null, this._fill = V.dispose(this._fill);
                    else {
                        V.removeChild(this._scrollRect, this.canvas);
                        if (null != this.canvas) {
                            for (var a = 0, b = this.canvas.get_numChildren(); a < b;) a++, this.canvas.removeChildAt(0);
                            this.canvas = null
                        }
                        null != this._headOfDrawStack && this.clearDrawStack();
                        this._helperPoint = this._helperMatrix = this._blitMatrix = null
                    }
                    this._bounds = null;
                    this.scroll = V.put(this.scroll);
                    this.targetOffset = V.put(this.targetOffset);
                    this.deadzone = V.put(this.deadzone);
                    this._fxShakeComplete = this._fxFadeComplete = this._fxFlashComplete = this._flashPoint = this._flashRect = this._scrollRect = this.flashSprite = this.target = null;
                    J.prototype.destroy.call(this)
                },
                update: function(a) {
                    null != this.target && this.updateFollow();
                    this.updateScroll();
                    this.updateFlash(a);
                    this.updateFade(a);
                    this.flashSprite.set_filters(this.filtersEnabled ? this._filters : null);
                    this.updateFlashSpritePosition();
                    this.updateShake(a)
                },
                updateScroll: function() {
                    var a =
                        this.zoom / q.initialZoom,
                        b = null == this.minScrollX ? null : this.minScrollX - (a - 1) * this.width / (2 * a),
                        c = null == this.maxScrollX ? null : this.maxScrollX + (a - 1) * this.width / (2 * a),
                        d = null == this.minScrollY ? null : this.minScrollY - (a - 1) * this.height / (2 * a);
                    a = null == this.maxScrollY ? null : this.maxScrollY + (a - 1) * this.height / (2 * a);
                    var e = this.scroll.x;
                    c = null != c ? c - this.width : null;
                    b = null != b && e < b ? b : e;
                    this.scroll.set_x(null != c && b > c ? c : b);
                    e = this.scroll.y;
                    c = null != a ? a - this.height : null;
                    b = null != d && e < d ? d : e;
                    this.scroll.set_y(null != c && b > c ? c : b)
                },
                updateFollow: function() {
                    if (null == this.deadzone) {
                        this.target.getMidpoint(this._point);
                        this._point.addPoint(this.targetOffset);
                        var a = this._point;
                        this.scroll.set(a.x - .5 * this.width, a.y - .5 * this.height);
                        a._weak && a.put()
                    } else {
                        var b = this.target.x + this.targetOffset.x;
                        a = this.target.y + this.targetOffset.y;
                        if (this.style == Il.SCREEN_BY_SCREEN) {
                            if (b >= this.scroll.x + this.width) {
                                var c = this._scrollTarget;
                                c.set_x(c.x + this.width)
                            } else b < this.scroll.x && (c = this._scrollTarget, c.set_x(c.x - this.width));
                            a >= this.scroll.y + this.height ?
                                (c = this._scrollTarget, c.set_y(c.y + this.height)) : a < this.scroll.y && (c = this._scrollTarget, c.set_y(c.y - this.height))
                        } else c = b - this.deadzone.x, this._scrollTarget.x > c && this._scrollTarget.set_x(c), c = b + this.target.get_width() - this.deadzone.x - this.deadzone.width, this._scrollTarget.x < c && this._scrollTarget.set_x(c), c = a - this.deadzone.y, this._scrollTarget.y > c && this._scrollTarget.set_y(c), c = a + this.target.get_height() - this.deadzone.y - this.deadzone.height, this._scrollTarget.y < c && this._scrollTarget.set_y(c);
                        this.target instanceof
                        G && (null == this._lastTargetPosition && (a = this.target.x, c = this.target.y, null == c && (c = 0), null == a && (a = 0), a = X._pool.get().set(a, c), a._inPool = !1, this._lastTargetPosition = a), c = this._scrollTarget, c.set_x(c.x + (this.target.x - this._lastTargetPosition.x) * this.followLead.x), c = this._scrollTarget, c.set_y(c.y + (this.target.y - this._lastTargetPosition.y) * this.followLead.y), this._lastTargetPosition.set_x(this.target.x), this._lastTargetPosition.set_y(this.target.y));
                        this.followLerp >= 60 / q.updateFramerate ? (c = this.scroll,
                            a = this._scrollTarget, c.set_x(a.x), c.set_y(a.y), a._weak && a.put()) : (c = this.scroll, c.set_x(c.x + (this._scrollTarget.x - this.scroll.x) * this.followLerp * q.updateFramerate / 60), c = this.scroll, c.set_y(c.y + (this._scrollTarget.y - this.scroll.y) * this.followLerp * q.updateFramerate / 60))
                    }
                },
                updateFlash: function(a) {
                    0 < this._fxFlashAlpha && (this._fxFlashAlpha -= a / this._fxFlashDuration, 0 >= this._fxFlashAlpha && null != this._fxFlashComplete && this._fxFlashComplete())
                },
                updateFade: function(a) {
                    this._fxFadeCompleted || (this._fxFadeIn ?
                        (this._fxFadeAlpha -= a / this._fxFadeDuration, 0 >= this._fxFadeAlpha && (this._fxFadeAlpha = 0, this.completeFade())) : (this._fxFadeAlpha += a / this._fxFadeDuration, 1 <= this._fxFadeAlpha && (this._fxFadeAlpha = 1, this.completeFade())))
                },
                completeFade: function() {
                    this._fxFadeCompleted = !0;
                    null != this._fxFadeComplete && this._fxFadeComplete()
                },
                updateShake: function(a) {
                    0 < this._fxShakeDuration && (this._fxShakeDuration -= a, 0 >= this._fxShakeDuration ? null != this._fxShakeComplete && this._fxShakeComplete() : (this._fxShakeAxes != vd.Y && (a =
                        this.flashSprite, a.set_x(a.get_x() + q.random.float(-this._fxShakeIntensity * this.width, this._fxShakeIntensity * this.width) * this.zoom * q.scaleMode.scale.x)), this._fxShakeAxes != vd.X && (a = this.flashSprite, a.set_y(a.get_y() + q.random.float(-this._fxShakeIntensity * this.height, this._fxShakeIntensity * this.height) * this.zoom * q.scaleMode.scale.y))))
                },
                updateFlashSpritePosition: function() {
                    null != this.flashSprite && (this.flashSprite.set_x(this.x * q.scaleMode.scale.x + this._flashOffset.x), this.flashSprite.set_y(this.y * q.scaleMode.scale.y +
                        this._flashOffset.y))
                },
                updateFlashOffset: function() {
                    this._flashOffset.set_x(.5 * this.width * q.scaleMode.scale.x * this.initialZoom);
                    this._flashOffset.set_y(.5 * this.height * q.scaleMode.scale.y * this.initialZoom)
                },
                updateScrollRect: function() {
                    var a = null != this._scrollRect ? this._scrollRect.get_scrollRect() : null;
                    null != a && (a.x = a.y = 0, a.width = this.width * this.initialZoom * q.scaleMode.scale.x, a.height = this.height * this.initialZoom * q.scaleMode.scale.y, this._scrollRect.set_scrollRect(a), this._scrollRect.set_x(-.5 * a.width),
                        this._scrollRect.set_y(-.5 * a.height))
                },
                updateInternalSpritePositions: function() {
                    q.renderBlit ? null != this._flashBitmap && (this._flashBitmap.set_x(0), this._flashBitmap.set_y(0)) : null != this.canvas && (this.canvas.set_x(-.5 * this.width * (this.scaleX - this.initialZoom) * q.scaleMode.scale.x), this.canvas.set_y(-.5 * this.height * (this.scaleY - this.initialZoom) * q.scaleMode.scale.y), this.canvas.set_scaleX(this.totalScaleX), this.canvas.set_scaleY(this.totalScaleY))
                },
                follow: function(a, b, c) {
                    null == b && (b = Il.LOCKON);
                    null ==
                        c && (c = 60 / q.updateFramerate);
                    this.style = b;
                    this.target = a;
                    this.set_followLerp(c);
                    c = a = 0;
                    this._lastTargetPosition = null;
                    switch (b._hx_index) {
                        case 0:
                            null != this.target && (a = this.target.get_width(), c = this.target.get_height());
                            var d = (this.width - a) / 2;
                            b = (this.height - c) / 2 - .25 * c;
                            var e = c;
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c = ca._pool.get();
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c.x = d;
                            c.y = b;
                            c.width = a;
                            c.height = e;
                            b = c;
                            b._inPool = !1;
                            this.deadzone = b;
                            break;
                        case 1:
                            a = this.width /
                                8;
                            c = this.height / 3;
                            d = (this.width - a) / 2;
                            b = (this.height - c) / 2 - .25 * c;
                            e = c;
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c = ca._pool.get();
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c.x = d;
                            c.y = b;
                            c.width = a;
                            c.height = e;
                            b = c;
                            b._inPool = !1;
                            this.deadzone = b;
                            break;
                        case 2:
                            c = Math.max(this.width, this.height) / 4;
                            d = (this.width - c) / 2;
                            b = (this.height - c) / 2;
                            e = a = c;
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c = ca._pool.get();
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c.x = d;
                            c.y = b;
                            c.width = a;
                            c.height = e;
                            b = c;
                            b._inPool = !1;
                            this.deadzone = b;
                            break;
                        case 3:
                            c = Math.max(this.width, this.height) / 8;
                            d = (this.width - c) / 2;
                            b = (this.height - c) / 2;
                            e = a = c;
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c = ca._pool.get();
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c.x = d;
                            c.y = b;
                            c.width = a;
                            c.height = e;
                            b = c;
                            b._inPool = !1;
                            this.deadzone = b;
                            break;
                        case 4:
                            b = d = 0;
                            a = this.width;
                            e = this.height;
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c = ca._pool.get();
                            null == e && (e = 0);
                            null == a && (a = 0);
                            null == b && (b = 0);
                            null == d && (d = 0);
                            c.x = d;
                            c.y = b;
                            c.width = a;
                            c.height = e;
                            b = c;
                            b._inPool = !1;
                            this.deadzone = b;
                            break;
                        case 5:
                            this.deadzone = null
                    }
                },
                flash: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == b && (b = 1);
                    null == a && (a = -1);
                    !d && 0 < this._fxFlashAlpha || (this._fxFlashColor = a, 0 >= b && (b = 1E-6), this._fxFlashDuration = b, this._fxFlashComplete = c, this._fxFlashAlpha = 1)
                },
                fade: function(a, b, c, d, e) {
                    null == e && (e = !1);
                    null == c && (c = !1);
                    null == b && (b = 1);
                    null == a && (a = -16777216);
                    if (this._fxFadeCompleted || e) this._fxFadeColor = a, 0 >= b && (b =
                        1E-6), this._fxFadeIn = c, this._fxFadeDuration = b, this._fxFadeComplete = d, this._fxFadeAlpha = this._fxFadeIn ? .999999 : 1E-6, this._fxFadeCompleted = !1
                },
                fill: function(a, b, c, d) {
                    null == c && (c = 1);
                    null == b && (b = !0);
                    q.renderBlit ? b ? (this._fill.fillRect(this._flashRect, a), this.buffer.copyPixels(this._fill, this._flashRect, this._flashPoint, null, null, b)) : this.buffer.fillRect(this._flashRect, a) : 0 != c && (b = null == d ? this.canvas.get_graphics() : d, b.beginFill(a, c), b.drawRect(this.viewOffsetX - 1, this.viewOffsetY - 1, this.viewWidth + 2, this.viewHeight +
                        2), b.endFill())
                },
                drawFX: function() {
                    if (0 < this._fxFlashAlpha) {
                        var a = this._fxFlashColor >> 24 & 255;
                        q.renderBlit ? this.fill((((0 >= a ? 255 : a) * this._fxFlashAlpha | 0) << 24) + (this._fxFlashColor & 16777215)) : this.fill(this._fxFlashColor & 16777215, !0, (0 >= a ? 255 : a) * this._fxFlashAlpha / 255, this.canvas.get_graphics())
                    }
                    0 < this._fxFadeAlpha && (a = this._fxFadeColor >> 24 & 255, q.renderBlit ? this.fill((((0 >= a ? 255 : a) * this._fxFadeAlpha | 0) << 24) + (this._fxFadeColor & 16777215)) : this.fill(this._fxFadeColor & 16777215, !0, (0 >= a ? 255 : a) * this._fxFadeAlpha /
                        255, this.canvas.get_graphics()))
                },
                checkResize: function() {
                    if (q.renderBlit) {
                        if (this.width != this.buffer.width || this.height != this.buffer.height) {
                            var a = this.screen.graphic;
                            this.buffer = new H(this.width, this.height, !0, 0);
                            this.screen.set_pixels(this.buffer);
                            this.screen.origin.set();
                            this._flashBitmap.set_bitmapData(this.buffer);
                            this._flashRect.width = this.width;
                            this._flashRect.height = this.height;
                            this._fill = V.dispose(this._fill);
                            this._fill = new H(this.width, this.height, !0, 0);
                            q.bitmap.removeIfNoUse(a)
                        }
                        this._blitMatrix.identity();
                        this._blitMatrix.translate(-this.viewOffsetX, -this.viewOffsetY);
                        this._blitMatrix.scale(this.scaleX, this.scaleY);
                        this._useBlitMatrix = this.scaleX < this.initialZoom || this.scaleY < this.initialZoom
                    }
                },
                setScale: function(a, b) {
                    this.scaleX = a;
                    this.scaleY = b;
                    this.totalScaleX = this.scaleX * q.scaleMode.scale.x;
                    this.totalScaleY = this.scaleY * q.scaleMode.scale.y;
                    q.renderBlit && (this._blitMatrix.identity(), this._blitMatrix.translate(-this.viewOffsetX, -this.viewOffsetY), this._blitMatrix.scale(this.scaleX, this.scaleY), (this._useBlitMatrix =
                        this.scaleX < this.initialZoom || this.scaleY < this.initialZoom) ? (this._flashBitmap.set_scaleX(this.initialZoom * q.scaleMode.scale.x), this._flashBitmap.set_scaleY(this.initialZoom * q.scaleMode.scale.y)) : (this._flashBitmap.set_scaleX(this.totalScaleX), this._flashBitmap.set_scaleY(this.totalScaleY)));
                    this.viewOffsetX = .5 * this.width * (this.scaleX - this.initialZoom) / this.scaleX;
                    this.viewOffsetWidth = this.width - this.viewOffsetX;
                    this.viewWidth = this.width - 2 * this.viewOffsetX;
                    this.viewOffsetY = .5 * this.height * (this.scaleY -
                        this.initialZoom) / this.scaleY;
                    this.viewOffsetHeight = this.height - this.viewOffsetY;
                    this.viewHeight = this.height - 2 * this.viewOffsetY;
                    this.updateScrollRect();
                    this.updateInternalSpritePositions();
                    q.cameras.cameraResized.dispatch(this)
                },
                onResize: function() {
                    this.updateFlashOffset();
                    this.setScale(this.scaleX, this.scaleY)
                },
                set_followLerp: function(a) {
                    var b = 60 / q.updateFramerate;
                    a = 0 > a ? 0 : a;
                    return this.followLerp = null != b && a > b ? b : a
                },
                set_width: function(a) {
                    this.width != a && 0 < a && (this.width = a, this.viewOffsetX = .5 * this.width *
                        (this.scaleX - this.initialZoom) / this.scaleX, this.viewOffsetWidth = this.width - this.viewOffsetX, this.viewWidth = this.width - 2 * this.viewOffsetX, this.updateFlashOffset(), this.updateScrollRect(), this.updateInternalSpritePositions(), q.cameras.cameraResized.dispatch(this));
                    return a
                },
                set_height: function(a) {
                    this.height != a && 0 < a && (this.height = a, this.viewOffsetY = .5 * this.height * (this.scaleY - this.initialZoom) / this.scaleY, this.viewOffsetHeight = this.height - this.viewOffsetY, this.viewHeight = this.height - 2 * this.viewOffsetY,
                        this.updateFlashOffset(), this.updateScrollRect(), this.updateInternalSpritePositions(), q.cameras.cameraResized.dispatch(this));
                    return a
                },
                set_zoom: function(a) {
                    this.zoom = 0 == a ? Rb.defaultZoom : a;
                    this.setScale(this.zoom, this.zoom);
                    return this.zoom
                },
                set_color: function(a) {
                    this.color = a;
                    if (q.renderBlit) {
                        if (null == this._flashBitmap) return a;
                        var b = this._flashBitmap.get_transform().get_colorTransform()
                    } else b = this.canvas.get_transform().get_colorTransform();
                    b.redMultiplier = (this.color >> 16 & 255) / 255;
                    b.greenMultiplier =
                        (this.color >> 8 & 255) / 255;
                    b.blueMultiplier = (this.color & 255) / 255;
                    q.renderBlit ? this._flashBitmap.get_transform().set_colorTransform(b) : this.canvas.get_transform().set_colorTransform(b);
                    return a
                },
                set_x: function(a) {
                    this.x = a;
                    this.updateFlashSpritePosition();
                    return a
                },
                set_y: function(a) {
                    this.y = a;
                    this.updateFlashSpritePosition();
                    return a
                },
                set_visible: function(a) {
                    null != this.flashSprite && this.flashSprite.set_visible(a);
                    return this.visible = a
                },
                __class__: Rb,
                __properties__: n(J.prototype.__properties__, {
                    set_color: "set_color",
                    set_zoom: "set_zoom",
                    set_height: "set_height",
                    set_width: "set_width",
                    set_followLerp: "set_followLerp",
                    set_y: "set_y",
                    set_x: "set_x"
                })
            });
            var Il = w["flixel.FlxCameraFollowStyle"] = {
                    __ename__: "flixel.FlxCameraFollowStyle",
                    __constructs__: "LOCKON PLATFORMER TOPDOWN TOPDOWN_TIGHT SCREEN_BY_SCREEN NO_DEAD_ZONE".split(" "),
                    LOCKON: {
                        _hx_index: 0,
                        __enum__: "flixel.FlxCameraFollowStyle",
                        toString: h
                    },
                    PLATFORMER: {
                        _hx_index: 1,
                        __enum__: "flixel.FlxCameraFollowStyle",
                        toString: h
                    },
                    TOPDOWN: {
                        _hx_index: 2,
                        __enum__: "flixel.FlxCameraFollowStyle",
                        toString: h
                    },
                    TOPDOWN_TIGHT: {
                        _hx_index: 3,
                        __enum__: "flixel.FlxCameraFollowStyle",
                        toString: h
                    },
                    SCREEN_BY_SCREEN: {
                        _hx_index: 4,
                        __enum__: "flixel.FlxCameraFollowStyle",
                        toString: h
                    },
                    NO_DEAD_ZONE: {
                        _hx_index: 5,
                        __enum__: "flixel.FlxCameraFollowStyle",
                        toString: h
                    }
                },
                bh = function(a, b, c) {
                    this.major = a;
                    this.minor = b;
                    this.patch = c
                };
            g["flixel.system.FlxVersion"] = bh;
            bh.__name__ = "flixel.system.FlxVersion";
            bh.prototype = {
                toString: function() {
                    var a = bh.sha;
                    "" != a && (a = "@" + a.substring(0, 7));
                    return "HaxeFlixel " + this.major + "." + this.minor +
                        "." + this.patch + a
                },
                __class__: bh
            };
            var rk = function() {
                this._lastUniqueKeyIndex = 0;
                this.reset()
            };
            g["flixel.system.frontEnds.BitmapFrontEnd"] = rk;
            rk.__name__ = "flixel.system.frontEnds.BitmapFrontEnd";
            rk.prototype = {
                onAssetsReload: function(a) {
                    for (a = aa.keysIterator(this._cache.h); a.hasNext();) {
                        var b = a.next();
                        b = this._cache.h[b];
                        if (null != b && (null != b.assetsClass || null != b.assetsKey)) b.onAssetsReload()
                    }
                },
                onContext: function() {
                    for (var a = aa.keysIterator(this._cache.h); a.hasNext();) {
                        var b = a.next();
                        b = this._cache.h[b];
                        if (null != b && b.isDumped) b.onContext()
                    }
                },
                create: function(a, b, c, d, e) {
                    null == d && (d = !1);
                    return zb.fromRectangle(a, b, c, d, e)
                },
                add: function(a, b, c) {
                    null == b && (b = !1);
                    return a instanceof zb ? zb.fromGraphic(a, b, c) : a instanceof H ? zb.fromBitmapData(a, b, c) : zb.fromAssetKey(I.string(a), b, c)
                },
                findKeyForBitmap: function(a) {
                    for (var b = aa.keysIterator(this._cache.h); b.hasNext();) {
                        var c = b.next(),
                            d = this._cache.h[c];
                        if (null != d && d.bitmap == a) return c
                    }
                    return null
                },
                generateKey: function(a, b, c) {
                    null == c && (c = !1);
                    null == b && (b = a);
                    if (c ||
                        null == b) b = this.getUniqueKey(b);
                    return b
                },
                getUniqueKey: function(a) {
                    null == a && (a = "pixels");
                    if (null == this._cache.h[a]) return a;
                    for (var b = this._lastUniqueKeyIndex, c; ++b, c = a + b, null != this._cache.h[c];);
                    this._lastUniqueKeyIndex = b;
                    return c
                },
                remove: function(a) {
                    if (null != a) {
                        var b = a.key;
                        if (null != b) {
                            ta.cache.removeBitmapData(b);
                            var c = this._cache;
                            Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b]
                        }
                        a.destroy()
                    }
                },
                removeByKey: function(a) {
                    if (null != a) {
                        var b = this._cache.h[a];
                        if (null != a) {
                            ta.cache.removeBitmapData(a);
                            var c = this._cache;
                            Object.prototype.hasOwnProperty.call(c.h, a) && delete c.h[a]
                        }
                        null != b && b.destroy()
                    }
                },
                removeIfNoUse: function(a) {
                    null == a || 0 != a.get_useCount() || a.persist || this.remove(a)
                },
                clearCache: function() {
                    if (null == this._cache) this._cache = new aa;
                    else
                        for (var a = aa.keysIterator(this._cache.h); a.hasNext();) {
                            var b = a.next(),
                                c = this._cache.h[b];
                            if (null != c && !c.persist && 0 >= c.get_useCount()) {
                                if (null != b) {
                                    ta.cache.removeBitmapData(b);
                                    var d = this._cache;
                                    Object.prototype.hasOwnProperty.call(d.h, b) && delete d.h[b]
                                }
                                c.destroy()
                            }
                        }
                },
                reset: function() {
                    if (null == this._cache) this._cache = new aa;
                    else
                        for (var a = aa.keysIterator(this._cache.h); a.hasNext();) {
                            var b = a.next(),
                                c = this._cache.h[b];
                            if (null != b) {
                                ta.cache.removeBitmapData(b);
                                var d = this._cache;
                                Object.prototype.hasOwnProperty.call(d.h, b) && delete d.h[b]
                            }
                            null != c && c.destroy()
                        }
                },
                __class__: rk
            };
            var sk = function() {
                this.useBufferLocking = !1;
                this.cameraResized = new bf;
                this.cameraRemoved = new bf;
                this.cameraAdded = new bf;
                this.list = [];
                Rb.defaultCameras = this.list
            };
            g["flixel.system.frontEnds.CameraFrontEnd"] =
                sk;
            sk.__name__ = "flixel.system.frontEnds.CameraFrontEnd";
            sk.prototype = {
                add: function(a) {
                    q.game.addChildAt(a.flashSprite, q.game.getChildIndex(q.game._inputContainer));
                    q.cameras.list.push(a);
                    a.ID = q.cameras.list.length - 1;
                    this.cameraAdded.dispatch(a);
                    return a
                },
                remove: function(a, b) {
                    null == b && (b = !0);
                    var c = this.list.indexOf(a);
                    if (null != a && -1 != c) {
                        q.game.removeChild(a.flashSprite);
                        this.list.splice(c, 1);
                        if (q.renderTile) {
                            c = 0;
                            for (var d = this.list.length; c < d;) {
                                var e = c++;
                                this.list[e].ID = e
                            }
                        }
                        b && a.destroy();
                        this.cameraRemoved.dispatch(a)
                    }
                },
                reset: function(a) {
                    for (; 0 < this.list.length;) this.remove(this.list[0]);
                    null == a && (a = new Rb(0, 0, q.width, q.height));
                    q.camera = this.add(a);
                    a.ID = 0;
                    Rb.defaultCameras = this.list
                },
                resize: function() {
                    for (var a = 0, b = this.list; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.onResize()
                    }
                },
                get_bgColor: function() {
                    return null == q.camera ? -16777216 : q.camera.bgColor
                },
                set_bgColor: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.bgColor = a
                    }
                    return a
                },
                __class__: sk,
                __properties__: {
                    set_bgColor: "set_bgColor",
                    get_bgColor: "get_bgColor"
                }
            };
            var tk = function() {
                this.visible = !1;
                this.visibilityChanged = new Nc;
                this.precision = 3
            };
            g["flixel.system.frontEnds.DebuggerFrontEnd"] = tk;
            tk.__name__ = "flixel.system.frontEnds.DebuggerFrontEnd";
            tk.prototype = {
                __class__: tk
            };
            var uk = function() {
                this.resetOnStateSwitch = !0;
                this.list = []
            };
            g["flixel.system.frontEnds.InputFrontEnd"] = uk;
            uk.__name__ = "flixel.system.frontEnds.InputFrontEnd";
            uk.prototype = {
                add_flixel_input_gamepad_FlxGamepadManager: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getClassName(a, !0) == ub.getClassName(d, !0)) return a
                    }
                    this.list.push(a);
                    return a
                },
                add_flixel_input_touch_FlxTouchManager: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getClassName(a, !0) == ub.getClassName(d, !0)) return a
                    }
                    this.list.push(a);
                    return a
                },
                add_flixel_input_keyboard_FlxKeyboard: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getClassName(a, !0) == ub.getClassName(d, !0)) return a
                    }
                    this.list.push(a);
                    return a
                },
                replace_flixel_input_mouse_FlxMouse: function(a, b) {
                    for (var c = 0,
                            d = !1, e = 0, f = this.list; e < f.length;) {
                        var k = f[e];
                        ++e;
                        if (k == a) {
                            this.list[c] = b;
                            d = !0;
                            break
                        }++c
                    }
                    return d ? b : null
                },
                add_flixel_input_mouse_FlxMouse: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getClassName(a, !0) == ub.getClassName(d, !0)) return a
                    }
                    this.list.push(a);
                    return a
                },
                reset: function() {
                    for (var a = 0, b = this.list; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.reset()
                    }
                },
                onStateSwitch: function() {
                    this.resetOnStateSwitch && this.reset()
                },
                __class__: uk
            };
            var kd = function() {};
            g["haxe.Log"] = kd;
            kd.__name__ = "haxe.Log";
            kd.formatOutput = function(a, b) {
                var c = I.string(a);
                if (null == b) return c;
                var d = b.fileName + ":" + b.lineNumber;
                if (null != b.customParams) {
                    var e = 0;
                    for (b = b.customParams; e < b.length;) a = b[e], ++e, c += ", " + I.string(a)
                }
                return d + ": " + c
            };
            kd.trace = function(a, b) {
                a = kd.formatOutput(a, b);
                "undefined" != typeof console && null != console.log && console.log(a)
            };
            var oa = function() {};
            g["js.Boot"] = oa;
            oa.__name__ = "js.Boot";
            oa.getClass = function(a) {
                if (null == a) return null;
                if (a instanceof Array) return Array;
                var b = a.__class__;
                if (null != b) return b;
                a = oa.__nativeClassName(a);
                return null != a ? oa.__resolveNativeClass(a) : null
            };
            oa.__string_rec = function(a, b) {
                if (null == a) return "null";
                if (5 <= b.length) return "<...>";
                var c = typeof a;
                "function" == c && (a.__name__ || a.__ename__) && (c = "object");
                switch (c) {
                    case "function":
                        return "<function>";
                    case "object":
                        if (a.__enum__) {
                            var d = w[a.__enum__];
                            c = d.__constructs__[a._hx_index];
                            var e = d[c];
                            if (e.__params__) {
                                b += "\t";
                                d = [];
                                var f = 0;
                                for (e = e.__params__; f < e.length;) {
                                    var k = e[f];
                                    f += 1;
                                    d.push(oa.__string_rec(a[k], b))
                                }
                                return c + "(" + d.join(",") +
                                    ")"
                            }
                            return c
                        }
                        if (a instanceof Array) {
                            c = "[";
                            b += "\t";
                            d = 0;
                            for (f = a.length; d < f;) e = d++, c += (0 < e ? "," : "") + oa.__string_rec(a[e], b);
                            return c + "]"
                        }
                        try {
                            d = a.toString
                        } catch (p) {
                            return Ca.lastError = p, "???"
                        }
                        if (null != d && d != Object.toString && "function" == typeof d && (c = a.toString(), "[object Object]" != c)) return c;
                        c = "{\n";
                        b += "\t";
                        d = null != a.hasOwnProperty;
                        f = null;
                        for (f in a) d && !a.hasOwnProperty(f) || "prototype" == f || "__class__" == f || "__super__" == f || "__interfaces__" == f || "__properties__" == f || (2 != c.length && (c += ", \n"), c += b + f + " : " +
                            oa.__string_rec(a[f], b));
                        b = b.substring(1);
                        return c + ("\n" + b + "}");
                    case "string":
                        return a;
                    default:
                        return String(a)
                }
            };
            oa.__interfLoop = function(a, b) {
                if (null == a) return !1;
                if (a == b) return !0;
                var c = a.__interfaces__;
                if (null != c)
                    for (var d = 0, e = c.length; d < e;) {
                        var f = d++;
                        f = c[f];
                        if (f == b || oa.__interfLoop(f, b)) return !0
                    }
                return oa.__interfLoop(a.__super__, b)
            };
            oa.__instanceof = function(a, b) {
                if (null == b) return !1;
                switch (b) {
                    case Array:
                        return a instanceof Array;
                    case tm:
                        return "boolean" == typeof a;
                    case um:
                        return null != a;
                    case fm:
                        return "number" ==
                            typeof a;
                    case gm:
                        return "number" == typeof a ? (a | 0) === a : !1;
                    case String:
                        return "string" == typeof a;
                    default:
                        if (null != a)
                            if ("function" == typeof b) {
                                if (oa.__downcastCheck(a, b)) return !0
                            } else {
                                if ("object" == typeof b && oa.__isNativeObj(b) && a instanceof b) return !0
                            }
                        else return !1;
                        return b == vk && null != a.__name__ || b == nm && null != a.__ename__ ? !0 : null != a.__enum__ ? w[a.__enum__] == b : !1
                }
            };
            oa.__downcastCheck = function(a, b) {
                return a instanceof b ? !0 : b.__isInterface__ ? oa.__interfLoop(oa.getClass(a), b) : !1
            };
            oa.__implements = function(a, b) {
                return oa.__interfLoop(oa.getClass(a),
                    b)
            };
            oa.__cast = function(a, b) {
                if (null == a || oa.__instanceof(a, b)) return a;
                throw F.thrown("Cannot cast " + I.string(a) + " to " + I.string(b));
            };
            oa.__nativeClassName = function(a) {
                a = oa.__toStr.call(a).slice(8, -1);
                return "Object" == a || "Function" == a || "Math" == a || "JSON" == a ? null : a
            };
            oa.__isNativeObj = function(a) {
                return null != oa.__nativeClassName(a)
            };
            oa.__resolveNativeClass = function(a) {
                return C[a]
            };
            var ch = function(a) {
                this.initialSeed = this.internalSeed = 1;
                null != a ? (a = 1 > a ? 1 : a, a = (2147483646 < a ? 2147483646 : a) | 0) : (a = 2147483647 *
                    Math.random() | 0, a = 1 > a ? 1 : a, a = (2147483646 < a ? 2147483646 : a) | 0, a = 1 > a ? 1 : a, a = (2147483646 < a ? 2147483646 : a) | 0);
                a = 1 > a ? 1 : a;
                this.initialSeed = (this.internalSeed = (2147483646 < a ? 2147483646 : a) | 0) | 0
            };
            g["flixel.math.FlxRandom"] = ch;
            ch.__name__ = "flixel.math.FlxRandom";
            ch.prototype = {
                getObject_Array_String: function(a, b, c, d) {
                    null == c && (c = 0);
                    var e = null;
                    if (0 != a.length) {
                        if (null == b) {
                            e = [];
                            for (var f = 0, k = a.length; f < k;) f++, e.push(1);
                            b = e
                        }
                        null == d && (d = a.length - 1);
                        e = a.length - 1;
                        f = 0 > c ? 0 : c;
                        c = (null != e && f > e ? e : f) | 0;
                        e = a.length - 1;
                        f = 0 > d ? 0 : d;
                        d =
                            (null != e && f > e ? e : f) | 0;
                        d < c && (c += d, d = c - d, c -= d);
                        d > b.length - 1 && (d = b.length - 1);
                        e = [];
                        f = c;
                        for (k = d + 1; f < k;) d = f++, e.push(b[d]);
                        ch._arrayFloatHelper = e;
                        e = a[c + this.weightedPick(ch._arrayFloatHelper)]
                    }
                    return e
                },
                int: function(a, b, c) {
                    null == b && (b = 2147483647);
                    null == a && (a = 0);
                    if (0 == a && 2147483647 == b && null == c) return (this.internalSeed = 48271 * this.internalSeed % 2147483647) | 0;
                    if (a == b) return a;
                    a > b && (a += b, b = a - b, a -= b);
                    if (null == c) return Math.floor(a + (this.internalSeed = 48271 * this.internalSeed % 2147483647) / 2147483647 * (b - a + 1));
                    for (var d; d =
                        Math.floor(a + (this.internalSeed = 48271 * this.internalSeed % 2147483647) / 2147483647 * (b - a + 1)), 0 <= c.indexOf(d););
                    return d
                },
                float: function(a, b, c) {
                    null == b && (b = 1);
                    null == a && (a = 0);
                    if (0 == a && 1 == b && null == c) return (this.internalSeed = 48271 * this.internalSeed % 2147483647) / 2147483647;
                    if (a == b) var d = a;
                    else if (a > b && (a += b, b = a - b, a -= b), null == c) d = a + (this.internalSeed = 48271 * this.internalSeed % 2147483647) / 2147483647 * (b - a);
                    else
                        for (; d = a + (this.internalSeed = 48271 * this.internalSeed % 2147483647) / 2147483647 * (b - a), 0 <= c.indexOf(d););
                    return d
                },
                weightedPick: function(a) {
                    for (var b = 0, c = 0, d = 0; d < a.length;) {
                        var e = a[d];
                        ++d;
                        b += e
                    }
                    b = this.float(0, b);
                    d = 0;
                    for (var f = a.length; d < f;) {
                        e = d++;
                        if (b < a[e]) {
                            c = e;
                            break
                        }
                        b -= a[e]
                    }
                    return c
                },
                __class__: ch
            };
            var mi = function() {
                this._closeRequested = !1
            };
            g["flixel.util.FlxSave"] = mi;
            mi.__name__ = "flixel.util.FlxSave";
            mi.__interfaces__ = [L];
            mi.prototype = {
                destroy: function() {
                    this._onComplete = this.data = this.path = this.name = this._sharedObject = null;
                    this._closeRequested = !1
                },
                bind: function(a, b) {
                    this.destroy();
                    this.name = a;
                    this.path = b;
                    try {
                        this._sharedObject =
                            Cc.getLocal(this.name, this.path)
                    } catch (c) {
                        Ca.lastError = c;
                        if (F.caught(c).unwrap() instanceof cb) return this.destroy(), !1;
                        throw c;
                    }
                    this.data = this._sharedObject.data;
                    return !0
                },
                flush: function(a, b) {
                    if (!this.checkBinding()) return !1;
                    this._onComplete = b;
                    a = null;
                    try {
                        a = this._sharedObject.flush()
                    } catch (c) {
                        Ca.lastError = c;
                        if (F.caught(c).unwrap() instanceof cb) return this.onDone(wk.ERROR);
                        throw c;
                    }
                    return this.onDone(0 == a ? wk.SUCCESS : wk.PENDING)
                },
                onDone: function(a) {
                    null != this._onComplete && this._onComplete(a == wk.SUCCESS);
                    this._closeRequested && this.destroy();
                    return a == wk.SUCCESS
                },
                checkBinding: function() {
                    return null == this._sharedObject ? !1 : !0
                },
                __class__: mi
            };
            var dh = function() {
                this.verticalAlign = vm.CENTER;
                this.horizontalAlign = wm.CENTER;
                var a = X._pool.get().set(0, 0);
                a._inPool = !1;
                this.deviceSize = a;
                a = X._pool.get().set(0, 0);
                a._inPool = !1;
                this.gameSize = a;
                a = X._pool.get().set(0, 0);
                a._inPool = !1;
                this.scale = a;
                a = X._pool.get().set(0, 0);
                a._inPool = !1;
                this.offset = a
            };
            g["flixel.system.scaleModes.BaseScaleMode"] = dh;
            dh.__name__ = "flixel.system.scaleModes.BaseScaleMode";
            dh.prototype = {
                onMeasure: function(a, b) {
                    q.width = q.initialWidth;
                    q.height = q.initialHeight;
                    this.updateGameSize(a, b);
                    this.updateDeviceSize(a, b);
                    this.updateScaleOffset();
                    this.updateGamePosition()
                },
                updateGameSize: function(a, b) {
                    this.gameSize.set(a, b)
                },
                updateDeviceSize: function(a, b) {
                    this.deviceSize.set(a, b)
                },
                updateScaleOffset: function() {
                    this.scale.set_x(this.gameSize.x / (q.width * q.initialZoom));
                    this.scale.set_y(this.gameSize.y / (q.height * q.initialZoom));
                    this.updateOffsetX();
                    this.updateOffsetY()
                },
                updateOffsetX: function() {
                    switch (this.horizontalAlign._hx_index) {
                        case 0:
                            var a =
                                0;
                            break;
                        case 1:
                            a = Math.ceil(.5 * (this.deviceSize.x - this.gameSize.x));
                            break;
                        case 2:
                            a = this.deviceSize.x - this.gameSize.x
                    }
                    this.offset.set_x(a)
                },
                updateOffsetY: function() {
                    switch (this.verticalAlign._hx_index) {
                        case 0:
                            var a = 0;
                            break;
                        case 1:
                            a = Math.ceil(.5 * (this.deviceSize.y - this.gameSize.y));
                            break;
                        case 2:
                            a = this.deviceSize.y - this.gameSize.y
                    }
                    this.offset.set_y(a)
                },
                updateGamePosition: function() {
                    null != q.game && (q.game.set_x(this.offset.x), q.game.set_y(this.offset.y))
                },
                __class__: dh
            };
            var ni = function(a) {
                null == a && (a = !1);
                dh.call(this);
                this.fillScreen = a
            };
            g["flixel.system.scaleModes.RatioScaleMode"] = ni;
            ni.__name__ = "flixel.system.scaleModes.RatioScaleMode";
            ni.__super__ = dh;
            ni.prototype = n(dh.prototype, {
                updateGameSize: function(a, b) {
                    var c = q.width / q.height,
                        d = a / b < c;
                    this.fillScreen && (d = !d);
                    d ? (this.gameSize.set_x(a), this.gameSize.set_y(Math.floor(this.gameSize.x / c))) : (this.gameSize.set_y(b), this.gameSize.set_x(Math.floor(this.gameSize.y * c)))
                },
                __class__: ni
            });
            var xk = function() {
                this.focusLost = new Nc;
                this.focusGained = new Nc;
                this.postDraw =
                    new Nc;
                this.preDraw = new Nc;
                this.postUpdate = new Nc;
                this.preUpdate = new Nc;
                this.postGameStart = new Nc;
                this.preGameStart = new Nc;
                this.postGameReset = new Nc;
                this.preGameReset = new Nc;
                this.gameResized = new oi;
                this.preStateCreate = new bf;
                this.postStateSwitch = new Nc;
                this.preStateSwitch = new Nc
            };
            g["flixel.system.frontEnds.SignalFrontEnd"] = xk;
            xk.__name__ = "flixel.system.frontEnds.SignalFrontEnd";
            xk.prototype = {
                __class__: xk
            };
            var q = function() {};
            g["flixel.FlxG"] = q;
            q.__name__ = "flixel.FlxG";
            q.__properties__ = {
                set_mouse: "set_mouse",
                set_drawFramerate: "set_drawFramerate",
                set_updateFramerate: "set_updateFramerate"
            };
            q.init = function(a, b, c, d) {
                q.game = a;
                q.width = Math.abs(b) | 0;
                q.height = Math.abs(c) | 0;
                q.initRenderMethod();
                q.initialWidth = q.width;
                q.initialHeight = q.height;
                q.initialZoom = Rb.defaultZoom = d;
                b = la.get_current().stage.stageWidth;
                c = la.get_current().stage.stageHeight;
                q.scaleMode.onMeasure(b, c);
                q.keys = q.inputs.add_flixel_input_keyboard_FlxKeyboard(new pi);
                q.set_mouse(q.inputs.add_flixel_input_mouse_FlxMouse(new cf(q.game._inputContainer)));
                q.touches = q.inputs.add_flixel_input_touch_FlxTouchManager(new ng);
                q.gamepads = q.inputs.add_flixel_input_gamepad_FlxGamepadManager(new df);
                q.accelerometer = new yk;
                q.save.bind("flixel");
                q.plugins = new zk;
                q.vcr = new Ak;
                q.sound = new Bk
            };
            q.initRenderMethod = function() {
                q.renderMethod = Ck.BLITTING;
                switch (la.get_current().stage.window.context.type) {
                    case "opengl":
                    case "opengles":
                    case "webgl":
                        var a = Ck.DRAW_TILES;
                        break;
                    default:
                        a = Ck.BLITTING
                }
                q.renderMethod = a;
                q.renderBlit = q.renderMethod == Ck.BLITTING;
                q.renderTile = q.renderMethod ==
                    Ck.DRAW_TILES;
                O.defaultPixelPerfectPosition = q.renderBlit
            };
            q.reset = function() {
                var a = q.random,
                    b = 2147483647 * Math.random() | 0;
                b = 1 > b ? 1 : b;
                b = (2147483646 < b ? 2147483646 : b) | 0;
                b = 1 > b ? 1 : b;
                b = (2147483646 < b ? 2147483646 : b) | 0;
                b = 1 > b ? 1 : b;
                a.initialSeed = (a.internalSeed = (2147483646 < b ? 2147483646 : b) | 0) | 0;
                q.bitmap.reset();
                q.inputs.reset();
                q.sound.destroy(!0);
                q.autoPause = !0;
                q.fixedTimestep = !0;
                q.timeScale = 1;
                q.elapsed = 0;
                q.maxElapsed = .1;
                a = q.worldBounds;
                var c = b = -10,
                    d = q.width + 20,
                    e = q.height + 20;
                null == e && (e = 0);
                null == d && (d = 0);
                null == c &&
                    (c = 0);
                null == b && (b = 0);
                a.x = b;
                a.y = c;
                a.width = d;
                a.height = e;
                q.worldDivisions = 6
            };
            q.set_mouse = function(a) {
                if (null == q.mouse) return q.mouse = q.inputs.add_flixel_input_mouse_FlxMouse(a), q.mouse;
                var b = q.mouse,
                    c = q.inputs.replace_flixel_input_mouse_FlxMouse(b, a);
                return null != c ? (q.mouse = c, b.destroy(), a) : b
            };
            q.set_updateFramerate = function(a) {
                q.updateFramerate = a;
                q.game._stepMS = Math.abs(1E3 / a);
                q.game._stepSeconds = q.game._stepMS / 1E3;
                q.game._maxAccumulation < q.game._stepMS && (q.game._maxAccumulation = q.game._stepMS);
                return a
            };
            q.set_drawFramerate = function(a) {
                q.drawFramerate = Math.abs(a) | 0;
                null != q.game.stage && q.game.stage.set_frameRate(q.drawFramerate);
                q.game._maxAccumulation = 2E3 / q.drawFramerate - 1;
                q.game._maxAccumulation < q.game._stepMS && (q.game._maxAccumulation = q.game._stepMS);
                return a
            };
            var Ck = w["flixel.FlxRenderMethod"] = {
                    __ename__: "flixel.FlxRenderMethod",
                    __constructs__: ["DRAW_TILES", "BLITTING"],
                    DRAW_TILES: {
                        _hx_index: 0,
                        __enum__: "flixel.FlxRenderMethod",
                        toString: h
                    },
                    BLITTING: {
                        _hx_index: 1,
                        __enum__: "flixel.FlxRenderMethod",
                        toString: h
                    }
                },
                Xh = function(a, b, c, d, e, f, k, p) {
                    null == k && (k = !1);
                    null == f && (f = 60);
                    null == e && (e = 60);
                    null == d && (d = 1);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this._skipSplash = this._resetGame = !1;
                    this._customFocusLostScreen = qi;
                    this._customSoundTray = ri;
                    this._lostFocus = !1;
                    this._total = this._startTime = 0;
                    this._gameJustStarted = !1;
                    this.filtersEnabled = !0;
                    this.ticks = 0;
                    this.focusLostFramerate = 10;
                    Z.call(this);
                    this._inputContainer = new Z;
                    0 == a && (a = la.get_current().stage.stageWidth);
                    0 == b && (b = la.get_current().stage.stageHeight);
                    q.init(this,
                        a, b, d);
                    q.set_updateFramerate(e);
                    q.set_drawFramerate(f);
                    this._accumulator = this._stepMS;
                    this._skipSplash = k;
                    this._initialState = null == c ? qb : c;
                    this.addEventListener("addedToStage", r(this, this.create))
                };
            g["flixel.FlxGame"] = Xh;
            Xh.__name__ = "flixel.FlxGame";
            Xh.__super__ = Z;
            Xh.prototype = n(Z.prototype, {
                create: function(a) {
                    null != this.stage && (this.removeEventListener("addedToStage", r(this, this.create)), this._startTime = this.getTimer(), this._total = this.getTimer() - this._startTime, this.stage.set_scaleMode(2), this.stage.align =
                        6, this.stage.set_frameRate(q.drawFramerate), this.addChild(this._inputContainer), this.soundTray = Ua.createInstance(this._customSoundTray, []), this.addChild(this.soundTray), this._focusLostScreen = Ua.createInstance(this._customFocusLostScreen, []), this.addChild(this._focusLostScreen), this.stage.addEventListener("deactivate", r(this, this.onFocusLost)), this.stage.addEventListener("activate", r(this, this.onFocus)), q.signals.preGameReset.dispatch(), this._skipSplash || null != md.nextState ? (this._requestedState = Ua.createInstance(this._initialState, []), null == md.nextState && (this._gameJustStarted = !0)) : (md.nextState = this._initialState, this._requestedState = new md, this._skipSplash = !0), q.reset(), q.signals.postGameReset.dispatch(), this.switchState(), this.stage.addEventListener("enterFrame", r(this, this.onEnterFrame)), this.stage.addEventListener("resize", r(this, this.onResize)), this.resizeGame(la.get_current().stage.stageWidth, la.get_current().stage.stageHeight), ta.addEventListener("change", (x = q.bitmap, r(x, x.onAssetsReload))))
                },
                onFocus: function(a) {
                    this._lostFocus = !1;
                    q.signals.focusGained.dispatch();
                    this._state.onFocus();
                    if (q.autoPause) {
                        null != this._focusLostScreen && this._focusLostScreen.set_visible(!1);
                        this.stage.set_frameRate(q.drawFramerate);
                        q.sound.onFocus();
                        a = 0;
                        for (var b = q.inputs.list; a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.onFocus()
                        }
                    }
                },
                onFocusLost: function(a) {
                    this._lostFocus = !0;
                    q.signals.focusLost.dispatch();
                    this._state.onFocusLost();
                    if (q.autoPause) {
                        null != this._focusLostScreen && this._focusLostScreen.set_visible(!0);
                        this.stage.set_frameRate(this.focusLostFramerate);
                        q.sound.onFocusLost();
                        a = 0;
                        for (var b = q.inputs.list; a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.onFocusLost()
                        }
                    }
                },
                onResize: function(a) {
                    a = la.get_current().stage.stageWidth;
                    var b = la.get_current().stage.stageHeight;
                    if (q.renderTile) q.bitmap.onContext();
                    this.resizeGame(a, b)
                },
                resizeGame: function(a, b) {
                    q.scaleMode.onMeasure(a, b);
                    this._state.onResize(a, b);
                    q.cameras.resize();
                    q.signals.gameResized.dispatch(a, b);
                    null != this._focusLostScreen && this._focusLostScreen.draw();
                    null != this.soundTray && this.soundTray.screenCenter()
                },
                onEnterFrame: function(a) {
                    this.ticks =
                        this.getTimer() - this._startTime;
                    this._elapsedMS = this.ticks - this._total;
                    this._total = this.ticks;
                    null != this.soundTray && this.soundTray.active && this.soundTray.update(this._elapsedMS);
                    if (!this._lostFocus || !q.autoPause) {
                        if (q.vcr.paused)
                            if (q.vcr.stepRequested) q.vcr.stepRequested = !1;
                            else if (this._state == this._requestedState) return;
                        if (q.fixedTimestep)
                            for (this._accumulator += this._elapsedMS, this._accumulator = this._accumulator > this._maxAccumulation ? this._maxAccumulation : this._accumulator; this._accumulator >= this._stepMS;) this.step(),
                                this._accumulator -= this._stepMS;
                        else this.step();
                        this.draw()
                    }
                },
                switchState: function() {
                    q.cameras.reset();
                    q.inputs.onStateSwitch();
                    q.sound.destroy();
                    q.signals.preStateSwitch.dispatch();
                    null != this._state && this._state.destroy();
                    q.bitmap.clearCache();
                    this._state = this._requestedState;
                    this._gameJustStarted && q.signals.preGameStart.dispatch();
                    q.signals.preStateCreate.dispatch(this._state);
                    this._state.create();
                    this._gameJustStarted && this.gameStart();
                    q.signals.postStateSwitch.dispatch()
                },
                gameStart: function() {
                    q.signals.postGameStart.dispatch();
                    this._gameJustStarted = !1
                },
                step: function() {
                    this._resetGame && (q.signals.preGameReset.dispatch(), this._skipSplash || null != md.nextState ? (this._requestedState = Ua.createInstance(this._initialState, []), null == md.nextState && (this._gameJustStarted = !0)) : (md.nextState = this._initialState, this._requestedState = new md, this._skipSplash = !0), q.reset(), q.signals.postGameReset.dispatch(), this._resetGame = !1);
                    this.handleReplayRequests();
                    this.update()
                },
                handleReplayRequests: function() {},
                update: function() {
                    if (this._state.active &&
                        this._state.exists) {
                        this._state != this._requestedState && this.switchState();
                        this.updateElapsed();
                        q.signals.preUpdate.dispatch();
                        this.updateInput();
                        q.sound.update(q.elapsed);
                        for (var a = q.elapsed, b = 0, c = q.plugins.list; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d.exists && d.active && d.update(a)
                        }
                        this._state.tryUpdate(q.elapsed);
                        a = q.elapsed;
                        b = 0;
                        for (c = q.cameras.list; b < c.length;) d = c[b], ++b, null != d && d.exists && d.active && d.update(a);
                        q.signals.postUpdate.dispatch();
                        Tc.clearArray(q.swipes);
                        this.set_filters(this.filtersEnabled ? this._filters :
                            null)
                    }
                },
                updateElapsed: function() {
                    if (q.fixedTimestep) q.elapsed = q.timeScale * this._stepSeconds;
                    else {
                        q.elapsed = this._elapsedMS / 1E3 * q.timeScale;
                        var a = q.maxElapsed * q.timeScale;
                        q.elapsed > a && (q.elapsed = a)
                    }
                },
                updateInput: function() {
                    for (var a = 0, b = q.inputs.list; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.update()
                    }
                },
                draw: function() {
                    if (this._state.visible && this._state.exists) {
                        q.signals.preDraw.dispatch();
                        q.renderTile && (Mc.drawCalls = 0);
                        for (var a = q.cameras, b = 0, c = a.list; b < c.length;) {
                            var d = c[b];
                            ++b;
                            null != d && d.exists && d.visible &&
                                (q.renderBlit && (d.checkResize(), a.useBufferLocking && d.buffer.lock()), q.renderTile && (d.clearDrawStack(), d.canvas.get_graphics().clear()), q.renderBlit ? (d.fill(d.bgColor, d.useBgAlphaBlending), d.screen.dirty = !0) : d.fill(d.bgColor & 16777215, d.useBgAlphaBlending, (d.bgColor >> 24 & 255) / 255))
                        }
                        b = 0;
                        for (c = q.plugins.list; b < c.length;) a = c[b], ++b, a.exists && a.visible && a.draw();
                        this._state.draw();
                        if (q.renderTile && q.renderTile)
                            for (b = 0, c = q.cameras.list; b < c.length;) d = c[b], ++b, null != d && d.exists && d.visible && d.render();
                        a = q.cameras;
                        b = 0;
                        for (c = a.list; b < c.length;) d = c[b], ++b, null != d && d.exists && d.visible && (d.drawFX(), q.renderBlit && (a.useBufferLocking && d.buffer.unlock(), d.screen.dirty = !0));
                        q.signals.postDraw.dispatch()
                    }
                },
                getTimer: function() {
                    return la.getTimer()
                },
                __class__: Xh
            });
            var eh = function() {};
            g["flixel.IFlxSprite"] = eh;
            eh.__name__ = "flixel.IFlxSprite";
            eh.__isInterface__ = !0;
            eh.__interfaces__ = [ji];
            eh.prototype = {
                __class__: eh,
                __properties__: {
                    set_y: "set_y",
                    set_x: "set_x"
                }
            };
            var og = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y =
                    b
            };
            g["lime.math.Vector2"] = og;
            og.__name__ = "lime.math.Vector2";
            og.prototype = {
                offset: function(a, b) {
                    this.x += a;
                    this.y += b
                },
                __toFlashPoint: function() {
                    return null
                },
                __class__: og
            };
            var H = function(a, b, c, d) {
                null == d && (d = -1);
                null == c && (c = !0);
                this.transparent = c;
                null == a && (a = 0);
                null == b && (b = 0);
                0 > a && (a = 0);
                0 > b && (b = 0);
                this.width = a;
                this.height = b;
                this.rect = new fa(0, 0, a, b);
                this.__textureWidth = a;
                this.__textureHeight = b;
                0 < a && 0 < b && (c ? 0 == (d & -16777216) && (d = 0) : d = -16777216 | d & 16777215, this.image = new Ia(null, 0, 0, a, b, d << 8 | d >>> 24 & 255),
                    this.image.set_transparent(c), this.readable = this.__isValid = !0);
                this.__renderTransform = new xa;
                this.__worldAlpha = 1;
                this.__worldTransform = new xa;
                this.__worldColorTransform = new wb;
                this.__renderable = !0
            };
            g["openfl.display.BitmapData"] = H;
            H.__name__ = "openfl.display.BitmapData";
            H.__interfaces__ = [Lc];
            H.fromCanvas = function(a, b) {
                null == b && (b = !0);
                if (null == a) return null;
                var c = new H(0, 0, b, 0);
                c.__fromImage(Ia.fromCanvas(a));
                c.image.set_transparent(b);
                return c
            };
            H.fromImage = function(a, b) {
                null == b && (b = !0);
                if (null == a ||
                    null == a.buffer) return null;
                var c = new H(0, 0, b, 0);
                c.__fromImage(a);
                c.image.set_transparent(b);
                return null != c.image ? c : null
            };
            H.prototype = {
                clone: function() {
                    if (this.__isValid)
                        if (this.readable || null != this.image) var a = H.fromImage(this.image.clone(), this.transparent);
                        else a = new H(0, 0, this.transparent, 0), a.width = this.width, a.height = this.height, a.__textureWidth = this.__textureWidth, a.__textureHeight = this.__textureHeight, a.rect.copyFrom(this.rect), a.__framebuffer = this.__framebuffer, a.__framebufferContext = this.__framebufferContext,
                            a.__texture = this.__texture, a.__textureContext = this.__textureContext, a.__isValid = !0;
                    else a = new H(this.width, this.height, this.transparent, 0);
                    a.__worldTransform.copyFrom(this.__worldTransform);
                    a.__renderTransform.copyFrom(this.__renderTransform);
                    return a
                },
                colorTransform: function(a, b) {
                    this.readable && this.image.colorTransform(a.__toLimeRectangle(), b.__toLimeColorMatrix())
                },
                copyChannel: function(a, b, c, d, e) {
                    if (this.readable) {
                        switch (d) {
                            case 1:
                                d = ef.RED;
                                break;
                            case 2:
                                d = ef.GREEN;
                                break;
                            case 4:
                                d = ef.BLUE;
                                break;
                            case 8:
                                d =
                                    ef.ALPHA;
                                break;
                            default:
                                return
                        }
                        switch (e) {
                            case 1:
                                e = ef.RED;
                                break;
                            case 2:
                                e = ef.GREEN;
                                break;
                            case 4:
                                e = ef.BLUE;
                                break;
                            case 8:
                                e = ef.ALPHA;
                                break;
                            default:
                                return
                        }
                        this.image.copyChannel(a.image, b.__toLimeRectangle(), c.__toLimeVector2(), d, e)
                    }
                },
                copyPixels: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    this.readable && null != a && (null != e && (H.__tempVector.x = e.x, H.__tempVector.y = e.y), this.image.copyPixels(a.image, b.__toLimeRectangle(), c.__toLimeVector2(), null != d ? d.image : null, null != e ? H.__tempVector : null, f))
                },
                dispose: function() {
                    this.image =
                        null;
                    this.height = this.width = 0;
                    this.rect = null;
                    this.readable = this.__isValid = !1;
                    this.__textureContext = this.__texture = this.__framebufferContext = this.__framebuffer = this.__vertexBuffer = this.__surface = null
                },
                draw: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    if (null != a) {
                        a.__update(!1, !0);
                        var k = xa.__pool.get();
                        k.copyFrom(a.__renderTransform);
                        k.invert();
                        null != b && k.concat(b);
                        b = null;
                        null != e && (b = xa.__pool.get(), b.copyFrom(k), b.invert());
                        var p = new wb;
                        p.__copyFrom(a.__worldColorTransform);
                        p.__invert();
                        if (this.readable ||
                            null == la.get_current().stage.context3D) {
                            if (null != c) {
                                var m = fa.__pool.get(),
                                    ja = xa.__pool.get();
                                a.__getBounds(m, ja);
                                var h = Math.ceil(m.width),
                                    l = Math.ceil(m.height);
                                ja.tx = -m.x;
                                ja.ty = -m.y;
                                h = new H(h, l, !0, 0);
                                h.draw(a, ja);
                                h.colorTransform(h.rect, c);
                                h.__renderTransform.identity();
                                h.__renderTransform.tx = m.x;
                                h.__renderTransform.ty = m.y;
                                h.__renderTransform.concat(a.__renderTransform);
                                h.__worldAlpha = a.__worldAlpha;
                                h.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                                a = h;
                                fa.__pool.release(m);
                                xa.__pool.release(ja)
                            }
                            Ma.convertToCanvas(this.image);
                            c = new Le(this.image.buffer.__srcContext);
                            c.__allowSmoothing = f;
                            c.__overrideBlendMode = d;
                            c.__worldTransform = k;
                            c.__worldAlpha = 1 / a.__worldAlpha;
                            c.__worldColorTransform = p;
                            null != e && c.__pushMaskRect(e, b);
                            this.__drawCanvas(a, c)
                        } else null == this.__textureContext && (this.__textureContext = Ga.current.__window.context), null != c && p.__combine(c), c = new Oa(la.get_current().stage.context3D, this), c.__allowSmoothing = f, c.__overrideBlendMode = d, c.__worldTransform = k, c.__worldAlpha = 1 / a.__worldAlpha, c.__worldColorTransform = p,
                            c.__resize(this.width, this.height), null != e && c.__pushMaskRect(e, b), this.__drawGL(a, c);
                        null != e && (c.__popMaskRect(), xa.__pool.release(b));
                        xa.__pool.release(k)
                    }
                },
                fillRect: function(a, b) {
                    this.__fillRect(a, b, !0)
                },
                getIndexBuffer: function(a, b) {
                    if (null == this.__indexBuffer || this.__indexBufferContext != a.__context || null != b && null == this.__indexBufferGrid || null != this.__indexBufferGrid && !this.__indexBufferGrid.equals(b)) {
                        this.__indexBufferContext = a.__context;
                        this.__indexBuffer = null;
                        if (null != b) {
                            null == this.__indexBufferGrid &&
                                (this.__indexBufferGrid = new fa);
                            this.__indexBufferGrid.copyFrom(b);
                            var c = b.width;
                            b = b.height;
                            0 != c && 0 != b ? (this.__indexBufferData = c = new Uint16Array(54), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 0, this.__indexBufferData[8] = 5, this.__indexBufferData[9] = 5, this.__indexBufferData[10] = 0, this.__indexBufferData[11] = 2, this.__indexBufferData[12] =
                                6, this.__indexBufferData[13] = 4, this.__indexBufferData[14] = 7, this.__indexBufferData[15] = 7, this.__indexBufferData[16] = 4, this.__indexBufferData[17] = 5, this.__indexBufferData[18] = 8, this.__indexBufferData[19] = 9, this.__indexBufferData[20] = 0, this.__indexBufferData[21] = 0, this.__indexBufferData[22] = 9, this.__indexBufferData[23] = 1, this.__indexBufferData[24] = 10, this.__indexBufferData[25] = 8, this.__indexBufferData[26] = 4, this.__indexBufferData[27] = 4, this.__indexBufferData[28] = 8, this.__indexBufferData[29] = 0, this.__indexBufferData[30] =
                                11, this.__indexBufferData[31] = 10, this.__indexBufferData[32] = 6, this.__indexBufferData[33] = 6, this.__indexBufferData[34] = 10, this.__indexBufferData[35] = 4, this.__indexBufferData[36] = 12, this.__indexBufferData[37] = 13, this.__indexBufferData[38] = 8, this.__indexBufferData[39] = 8, this.__indexBufferData[40] = 13, this.__indexBufferData[41] = 9, this.__indexBufferData[42] = 14, this.__indexBufferData[43] = 12, this.__indexBufferData[44] = 10, this.__indexBufferData[45] = 10, this.__indexBufferData[46] = 12, this.__indexBufferData[47] =
                                8, this.__indexBufferData[48] = 15, this.__indexBufferData[49] = 14, this.__indexBufferData[50] = 11, this.__indexBufferData[51] = 11, this.__indexBufferData[52] = 14, this.__indexBufferData[53] = 10, this.__indexBuffer = a.createIndexBuffer(54)) : 0 == c && 0 != b ? (this.__indexBufferData = c = new Uint16Array(18), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] =
                                5, this.__indexBufferData[8] = 0, this.__indexBufferData[9] = 0, this.__indexBufferData[10] = 5, this.__indexBufferData[11] = 1, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 7, this.__indexBufferData[14] = 4, this.__indexBufferData[15] = 4, this.__indexBufferData[16] = 7, this.__indexBufferData[17] = 5, this.__indexBuffer = a.createIndexBuffer(18)) : 0 != c && 0 == b && (this.__indexBufferData = c = new Uint16Array(18), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] =
                                2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 0, this.__indexBufferData[8] = 5, this.__indexBufferData[9] = 5, this.__indexBufferData[10] = 0, this.__indexBufferData[11] = 2, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 4, this.__indexBufferData[14] = 7, this.__indexBufferData[15] = 7, this.__indexBufferData[16] = 4, this.__indexBufferData[17] = 5, this.__indexBuffer = a.createIndexBuffer(18))
                        } else this.__indexBufferGrid = null;
                        null == this.__indexBuffer &&
                            (this.__indexBufferData = c = new Uint16Array(6), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBuffer = a.createIndexBuffer(6));
                        this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData)
                    }
                    return this.__indexBuffer
                },
                getVertexBuffer: function(a, b, c) {
                    if (null == this.__vertexBuffer || this.__vertexBufferContext != a.__context || null != b && null == this.__vertexBufferGrid || null != this.__vertexBufferGrid &&
                        !this.__vertexBufferGrid.equals(b) || null != c && (this.__vertexBufferWidth != c.get_width() || this.__vertexBufferHeight != c.get_height() || this.__vertexBufferScaleX != c.get_scaleX() || this.__vertexBufferScaleY != c.get_scaleY())) {
                        this.__uvRect = new fa(0, 0, this.width, this.height);
                        this.__vertexBufferContext = a.__context;
                        this.__vertexBuffer = null;
                        null != c && (this.__vertexBufferWidth = c.get_width(), this.__vertexBufferHeight = c.get_height(), this.__vertexBufferScaleX = c.get_scaleX(), this.__vertexBufferScaleY = c.get_scaleY());
                        if (null != b && null != c) {
                            null == this.__vertexBufferGrid && (this.__vertexBufferGrid = new fa);
                            this.__vertexBufferGrid.copyFrom(b);
                            this.__vertexBufferWidth = c.get_width();
                            this.__vertexBufferHeight = c.get_height();
                            this.__vertexBufferScaleX = c.get_scaleX();
                            this.__vertexBufferScaleY = c.get_scaleY();
                            var d = b.width,
                                e = b.height;
                            if (0 != d && 0 != e) {
                                var f = new Float32Array(224);
                                this.__vertexBufferData = f;
                                var k = b.x,
                                    p = b.y,
                                    m = this.width - d - k,
                                    ja = this.height - e - p;
                                b = k / this.width;
                                f = p / this.height;
                                d /= this.width;
                                e /= this.height;
                                k /= c.get_scaleX();
                                p /= c.get_scaleY();
                                m /= c.get_scaleX();
                                var h = ja / c.get_scaleY();
                                ja = c.get_width() / c.get_scaleX() - k - m;
                                m = c.get_height() / c.get_scaleY() - p - h;
                                this.__vertexBufferData[0] = k;
                                this.__vertexBufferData[1] = p;
                                this.__vertexBufferData[3] = 1 * b;
                                this.__vertexBufferData[4] = 1 * f;
                                this.__vertexBufferData[15] = p;
                                this.__vertexBufferData[18] = 1 * f;
                                this.__vertexBufferData[28] = k;
                                this.__vertexBufferData[31] = 1 * b;
                                this.__vertexBufferData[56] = k + ja;
                                this.__vertexBufferData[57] = p;
                                this.__vertexBufferData[59] = 1 * (b + d);
                                this.__vertexBufferData[60] =
                                    1 * f;
                                this.__vertexBufferData[70] = k + ja;
                                this.__vertexBufferData[73] = 1 * (b + d);
                                this.__vertexBufferData[84] = this.width;
                                this.__vertexBufferData[85] = p;
                                this.__vertexBufferData[87] = 1;
                                this.__vertexBufferData[88] = 1 * f;
                                this.__vertexBufferData[98] = this.width;
                                this.__vertexBufferData[101] = 1;
                                this.__vertexBufferData[112] = k;
                                this.__vertexBufferData[113] = p + m;
                                this.__vertexBufferData[115] = 1 * b;
                                this.__vertexBufferData[116] = 1 * (f + e);
                                this.__vertexBufferData[127] = p + m;
                                this.__vertexBufferData[130] = 1 * (f + e);
                                this.__vertexBufferData[140] =
                                    k + ja;
                                this.__vertexBufferData[141] = p + m;
                                this.__vertexBufferData[143] = 1 * (b + d);
                                this.__vertexBufferData[144] = 1 * (f + e);
                                this.__vertexBufferData[154] = this.width;
                                this.__vertexBufferData[155] = p + m;
                                this.__vertexBufferData[157] = 1;
                                this.__vertexBufferData[158] = 1 * (f + e);
                                this.__vertexBufferData[168] = k;
                                this.__vertexBufferData[169] = this.height;
                                this.__vertexBufferData[171] = 1 * b;
                                this.__vertexBufferData[172] = 1;
                                this.__vertexBufferData[183] = this.height;
                                this.__vertexBufferData[186] = 1;
                                this.__vertexBufferData[196] = k + ja;
                                this.__vertexBufferData[197] =
                                    this.height;
                                this.__vertexBufferData[199] = 1 * (b + d);
                                this.__vertexBufferData[200] = 1;
                                this.__vertexBufferData[210] = this.width;
                                this.__vertexBufferData[211] = this.height;
                                this.__vertexBufferData[213] = 1;
                                this.__vertexBufferData[214] = 1;
                                this.__vertexBuffer = a.createVertexBuffer(16, 14)
                            } else 0 == d && 0 != e ? (this.__vertexBufferData = f = new Float32Array(112), p = b.y, ja = this.height - e - p, f = p / this.height, e /= this.height, p /= c.get_scaleY(), h = ja / c.get_scaleY(), m = c.get_height() / c.get_scaleY() - p - h, c = c.get_width() / c.get_scaleX(), this.__vertexBufferData[0] =
                                c, this.__vertexBufferData[1] = p, this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1 * f, this.__vertexBufferData[15] = p, this.__vertexBufferData[18] = 1 * f, this.__vertexBufferData[28] = c, this.__vertexBufferData[31] = 1, this.__vertexBufferData[56] = c, this.__vertexBufferData[57] = p + m, this.__vertexBufferData[59] = 1, this.__vertexBufferData[60] = 1 * (f + e), this.__vertexBufferData[71] = p + m, this.__vertexBufferData[74] = 1 * (f + e), this.__vertexBufferData[84] = c, this.__vertexBufferData[85] = this.height, this.__vertexBufferData[87] =
                                1, this.__vertexBufferData[88] = 1, this.__vertexBufferData[99] = this.height, this.__vertexBufferData[102] = 1, this.__vertexBuffer = a.createVertexBuffer(8, 14)) : 0 == e && 0 != d && (this.__vertexBufferData = f = new Float32Array(112), k = b.x, m = this.width - d - k, b = k / this.width, d /= this.width, k /= c.get_scaleX(), m /= c.get_scaleX(), ja = c.get_width() / c.get_scaleX() - k - m, c = c.get_height() / c.get_scaleY(), this.__vertexBufferData[0] = k, this.__vertexBufferData[1] = c, this.__vertexBufferData[3] = 1 * b, this.__vertexBufferData[4] = 1, this.__vertexBufferData[15] =
                                c, this.__vertexBufferData[18] = 1, this.__vertexBufferData[28] = k, this.__vertexBufferData[31] = 1 * b, this.__vertexBufferData[56] = k + ja, this.__vertexBufferData[57] = c, this.__vertexBufferData[59] = 1 * (b + d), this.__vertexBufferData[60] = 1, this.__vertexBufferData[70] = k + ja, this.__vertexBufferData[73] = 1 * (b + d), this.__vertexBufferData[84] = this.width, this.__vertexBufferData[85] = c, this.__vertexBufferData[87] = 1, this.__vertexBufferData[88] = 1, this.__vertexBufferData[98] = this.width, this.__vertexBufferData[101] = 1, this.__vertexBuffer =
                                a.createVertexBuffer(8, 14))
                        } else this.__vertexBufferGrid = null;
                        null == this.__vertexBuffer && (this.__vertexBufferData = f = new Float32Array(56), this.__vertexBufferData[0] = this.width, this.__vertexBufferData[1] = this.height, this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1, this.__vertexBufferData[15] = this.height, this.__vertexBufferData[18] = 1, this.__vertexBufferData[28] = this.width, this.__vertexBufferData[31] = 1, this.__vertexBuffer = a.createVertexBuffer(3, 14));
                        this.__vertexBuffer.uploadFromTypedArray(si.toArrayBufferView(this.__vertexBufferData))
                    }
                    return this.__vertexBuffer
                },
                getTexture: function(a) {
                    if (!this.__isValid) return null;
                    if (null == this.__texture || this.__textureContext != a.__context) this.__textureContext = a.__context, this.__texture = a.createRectangleTexture(this.width, this.height, 1, !1), this.__textureVersion = -1;
                    Ma.sync(this.image, !1);
                    null != this.image && this.image.version > this.__textureVersion && (null != this.__surface && xm.flush(this.__surface), a = this.image, jb.__supportsBGRA || 0 == a.get_format() || (a = a.clone(), a.set_format(0)), this.__texture.__uploadFromImage(a), this.__textureVersion =
                        this.image.version, this.__textureWidth = a.buffer.width, this.__textureHeight = a.buffer.height);
                    this.readable || null == this.image || (this.image = this.__surface = null);
                    return this.__texture
                },
                lock: function() {},
                setPixel: function(a, b, c) {
                    this.readable && this.image.setPixel(a, b, c, 1)
                },
                setPixel32: function(a, b, c) {
                    this.readable && this.image.setPixel32(a, b, c, 1)
                },
                unlock: function(a) {},
                __drawCanvas: function(a, b) {
                    var c = this.image.buffer;
                    b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
                    b.__render(a);
                    b.__allowSmoothing ||
                        b.applySmoothing(c.__srcContext, !0);
                    c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
                    c.__srcImageData = null;
                    c.data = null;
                    this.image.dirty = !0;
                    this.image.version++
                },
                __drawGL: function(a, b) {
                    var c = b.__context3D,
                        d = c.__state.renderToTexture,
                        e = c.__state.renderToTextureDepthStencil,
                        f = c.__state.renderToTextureAntiAlias,
                        k = c.__state.renderToTextureSurfaceSelector;
                    c.setRenderToTexture(this.getTexture(c), !0);
                    b.__render(a);
                    null != d ? c.setRenderToTexture(d, e, f, k) : c.setRenderToBackBuffer()
                },
                __fillRect: function(a, b, c) {
                    if (null !=
                        a)
                        if (this.transparent && 0 == (b & -16777216) && (b = 0), c && null != this.__texture && null != this.__texture.__glFramebuffer && "opengl" == la.get_current().stage.__renderer.__type) {
                            c = la.get_current().stage.__renderer.__context3D;
                            var d = !this.rect.equals(a),
                                e = c.__state.renderToTexture,
                                f = c.__state.renderToTextureDepthStencil,
                                k = c.__state.renderToTextureAntiAlias,
                                p = c.__state.renderToTextureSurfaceSelector;
                            c.setRenderToTexture(this.__texture);
                            d && c.setScissorRectangle(a);
                            c.clear((b >>> 16 & 255) / 255, (b >>> 8 & 255) / 255, (b & 255) / 255,
                                this.transparent ? (b >>> 24 & 255) / 255 : 1, 0, 0, 1);
                            d && c.setScissorRectangle(null);
                            null != e ? c.setRenderToTexture(e, f, k, p) : c.setRenderToBackBuffer()
                        } else this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1)
                },
                __fromImage: function(a) {
                    null != a && null != a.buffer && (this.image = a, this.width = a.width, this.height = a.height, this.rect = new fa(0, 0, a.width, a.height), this.__textureWidth = this.width, this.__textureHeight = this.height, this.__isValid = this.readable = !0)
                },
                __getBounds: function(a, b) {
                    var c = fa.__pool.get();
                    this.rect.__transform(c,
                        b);
                    a.__expand(c.x, c.y, c.width, c.height);
                    fa.__pool.release(c)
                },
                __renderCairo: function(a) {},
                __renderCanvas: function(a) {
                    if (this.readable) {
                        this.image.type == Kd.DATA && Ma.convertToCanvas(this.image);
                        var b = a.context;
                        b.globalAlpha = 1;
                        a.setTransform(this.__renderTransform, b);
                        b.drawImage(this.image.get_src(), 0, 0, this.image.width, this.image.height)
                    }
                },
                __renderDOM: function(a) {},
                __renderGL: function(a) {
                    var b = a.__context3D;
                    a.__setBlendMode(10);
                    var c = a.__defaultDisplayShader;
                    a.setShader(c);
                    a.applyBitmapData(this, a.__upscaled);
                    a.applyMatrix(a.__getMatrix(this.__worldTransform, 1));
                    a.applyAlpha(this.__worldAlpha);
                    a.applyColorTransform(this.__worldColorTransform);
                    a.updateShader();
                    var d = this.getVertexBuffer(b);
                    null != c.__position && b.setVertexBufferAt(c.__position.index, d, 0, 3);
                    null != c.__textureCoord && b.setVertexBufferAt(c.__textureCoord.index, d, 3, 2);
                    c = this.getIndexBuffer(b);
                    b.drawTriangles(c);
                    a.__clearShader()
                },
                __setUVRect: function(a, b, c, d, e) {
                    if (null != this.getVertexBuffer(a) && (d != this.__uvRect.width || e != this.__uvRect.height ||
                            b != this.__uvRect.x || c != this.__uvRect.y)) {
                        null == this.__uvRect && (this.__uvRect = new fa);
                        this.__uvRect.setTo(b, c, d, e);
                        a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
                        c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
                        b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
                        var f = 0 < this.__textureHeight ? e / this.__textureHeight : 0;
                        this.__vertexBufferData[0] = d;
                        this.__vertexBufferData[1] = e;
                        this.__vertexBufferData[3] = a + b;
                        this.__vertexBufferData[4] = c + f;
                        this.__vertexBufferData[15] = e;
                        this.__vertexBufferData[17] = a;
                        this.__vertexBufferData[18] =
                            c + f;
                        this.__vertexBufferData[28] = d;
                        this.__vertexBufferData[31] = a + b;
                        this.__vertexBufferData[32] = c;
                        this.__vertexBufferData[45] = a;
                        this.__vertexBufferData[46] = c;
                        this.__vertexBuffer.uploadFromTypedArray(si.toArrayBufferView(this.__vertexBufferData))
                    }
                },
                __update: function(a, b) {
                    this.__updateTransforms()
                },
                __updateTransforms: function(a) {
                    null == a ? this.__worldTransform.identity() : this.__worldTransform.copyFrom(a);
                    this.__renderTransform.copyFrom(this.__worldTransform)
                },
                __class__: H
            };
            var ke = function(a, b, c, d, e) {
                null ==
                    d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ke.preload) this.__fromImage(ke.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ke.resourceName), ke.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ke.preload && (ke.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.addons.transition.GraphicTransTileCircle"] = ke;
            ke.__name__ = "flixel.addons.transition.GraphicTransTileCircle";
            ke.__super__ = H;
            ke.prototype = n(H.prototype, {
                __class__: ke
            });
            var yd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != yd.preload) this.__fromImage(yd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(yd.resourceName), yd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == yd.preload && (yd.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.addons.transition.GraphicTransTileDiamond"] = yd;
            yd.__name__ = "flixel.addons.transition.GraphicTransTileDiamond";
            yd.__super__ = H;
            yd.prototype = n(H.prototype, {
                __class__: yd
            });
            var le = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != le.preload) this.__fromImage(le.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(le.resourceName), le.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == le.preload && (le.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.addons.transition.GraphicTransTileSquare"] = le;
            le.__name__ = "flixel.addons.transition.GraphicTransTileSquare";
            le.__super__ = H;
            le.prototype = n(H.prototype, {
                __class__: le
            });
            var ti = function(a, b, c, d, e, f, k) {
                null == k && (k = 40);
                null == f && (f = 32);
                null == e && (e = 32);
                null == b && (b = 0);
                null == a && (a = 0);
                this._newStatus = -1;
                this.status = 0;
                this._finished = !1;
                this._starting = !0;
                G.call(this, a, b);
                null == d && (d = zb.fromClass(yd), f = e = 32);
                this._delay = c;
                this.loadGraphic(d, !0, e, f);
                this.graphic.persist = !0;
                this.graphic.set_destroyOnNoUse(!1);
                a = [];
                b = 1;
                for (c = this.numFrames - 1; b < c;) d = b++, a.push(d);
                b = a.slice();
                b.reverse();
                this.animation.add("empty", [0], 0, !1);
                this.animation.add("in", a, k, !1);
                this.animation.add("full", [this.numFrames - 1], 0, !1);
                this.animation.add("out", b, k, !1);
                this.setStatus(3)
            };
            g["flixel.addons.transition.FlxTransitionSprite"] = ti;
            ti.__name__ = "flixel.addons.transition.FlxTransitionSprite";
            ti.__super__ = G;
            ti.prototype = n(G.prototype, {
                start: function(a) {
                    this._starting = !0;
                    this._finished = !1;
                    this._count = 0;
                    this._newStatus = a
                },
                setStatus: function(a) {
                    switch (a) {
                        case -1:
                        case 2:
                            var b = "empty";
                            break;
                        case 0:
                            b = "in";
                            break;
                        case 1:
                            b = "out";
                            break;
                        case 3:
                            b = "full"
                    }
                    this.animation.play(b);
                    this.animation.finishCallback = r(this, this.onFinishAnim);
                    this.status = a
                },
                onFinishAnim: function(a) {
                    if (!this._finished) switch (this._finished = !0, this.status) {
                        case 0:
                            this.setStatus(3);
                            break;
                        case 1:
                            this.setStatus(2)
                    }
                },
                update: function(a) {
                    G.prototype.update.call(this, a);
                    if (this._starting && (this._count += a, this._count >= this._delay)) this.onTime()
                },
                onTime: function() {
                    this._starting = !1;
                    this._count = 0;
                    this.setStatus(this._newStatus);
                    this._newStatus = -1
                },
                __class__: ti
            });
            var Vg = function(a) {
                Ob.call(this, 0);
                this._effect =
                    this.createEffect(a);
                this._effect.scrollFactor.set(0, 0);
                this.add(this._effect)
            };
            g["flixel.addons.transition.Transition"] = Vg;
            Vg.__name__ = "flixel.addons.transition.Transition";
            Vg.__super__ = Ob;
            Vg.prototype = n(Ob.prototype, {
                update: function(a) {
                    Ob.prototype.update.call(this, a);
                    this._effect.update(a)
                },
                destroy: function() {
                    Ob.prototype.destroy.call(this);
                    this.set_finishCallback(null);
                    this._effect.destroy();
                    this._effect = null
                },
                start: function(a) {
                    this._effect.start(a)
                },
                setStatus: function(a) {
                    this._effect.setStatus(a)
                },
                createEffect: function(a) {
                    switch (a.type) {
                        case "fade":
                            return new ui(a);
                        case "tiles":
                            return new vi(a);
                        default:
                            return null
                    }
                },
                get_finishCallback: function() {
                    return null != this._effect ? this._effect.finishCallback : null
                },
                set_finishCallback: function(a) {
                    return null != this._effect ? this._effect.finishCallback = a : null
                },
                __class__: Vg,
                __properties__: n(Ob.prototype.__properties__, {
                    set_finishCallback: "set_finishCallback",
                    get_finishCallback: "get_finishCallback"
                })
            });
            var ah = function(a, b, c, d, e, f) {
                null == c && (c = 1);
                null == b && (b = -1);
                null == a && (a = "fade");
                this.duration = 1;
                this.type = a;
                this.tileData = e;
                this.duration = c;
                this.color = b;
                this.direction = d;
                null == this.direction && (this.direction = new X(0, 0));
                this.tweenOptions = {
                    onComplete: null
                };
                this.region = f;
                null == f && (this.region = new ca(0, 0, q.width, q.height))
            };
            g["flixel.addons.transition.TransitionData"] = ah;
            ah.__name__ = "flixel.addons.transition.TransitionData";
            ah.__interfaces__ = [L];
            ah.prototype = {
                destroy: function() {
                    this.direction = this.tileData = null;
                    this.tweenOptions.onComplete = null;
                    this.direction =
                        this.region = this.tweenOptions = this.tweenOptions.ease = null
                },
                __class__: ah
            };
            var ed = function(a) {
                this._finalDelayTime = 0;
                this.finished = this._started = !1;
                this._data = a;
                ka.call(this)
            };
            g["flixel.addons.transition.TransitionEffect"] = ed;
            ed.__name__ = "flixel.addons.transition.TransitionEffect";
            ed.__super__ = ka;
            ed.prototype = n(ka.prototype, {
                destroy: function() {
                    ka.prototype.destroy.call(this);
                    this.finishCallback = null
                },
                start: function(a) {
                    this._started = !0;
                    this._endStatus = 0 == a ? 3 : 2
                },
                setStatus: function(a) {},
                delayThenFinish: function() {
                    (new Rc).start(this._finalDelayTime,
                        r(this, this.onFinish))
                },
                onFinish: function(a) {
                    this.finished = !0;
                    null != this.finishCallback && (this.finishCallback(), this.finishCallback = null)
                },
                __class__: ed
            });
            var Ld = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Ld.preload) this.__fromImage(Ld.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Ld.resourceName), Ld.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Ld.preload && (Ld.preload = a.image);
                        null != e && ea.isFunction(e) &&
                            e(a)
                    })
                }
            };
            g["flixel.addons.transition._TransitionFade.GraphicDiagonalGradient"] = Ld;
            Ld.__name__ = "flixel.addons.transition._TransitionFade.GraphicDiagonalGradient";
            Ld.__super__ = H;
            Ld.prototype = n(H.prototype, {
                __class__: Ld
            });
            var ui = function(a) {
                this.tweenValStart = this.tweenValStart2 = this.tweenValEnd = this.tweenValEnd2 = 0;
                this.tweenStr = this.tweenStr2 = "";
                ed.call(this, a);
                this.back = this.makeSprite(a.direction.x, a.direction.y);
                this.back.scrollFactor.set(0, 0);
                this.add(this.back)
            };
            g["flixel.addons.transition.TransitionFade"] =
                ui;
            ui.__name__ = "flixel.addons.transition.TransitionFade";
            ui.__super__ = ed;
            ui.prototype = n(ed.prototype, {
                destroy: function() {
                    ed.prototype.destroy.call(this);
                    this.back = null
                },
                start: function(a) {
                    ed.prototype.start.call(this, a);
                    this.setTweenValues(a, this._data.direction.x, this._data.direction.y);
                    switch (this.tweenStr) {
                        case "alpha":
                            this.back.set_alpha(this.tweenValStart);
                            break;
                        case "x":
                            this.back.set_x(this.tweenValStart);
                            break;
                        case "y":
                            this.back.set_y(this.tweenValStart)
                    }
                    switch (this.tweenStr2) {
                        case "alpha":
                            this.back.set_alpha(this.tweenValStart2);
                            break;
                        case "x":
                            this.back.set_x(this.tweenValStart2);
                            break;
                        case "y":
                            this.back.set_y(this.tweenValStart2)
                    }
                    a = {};
                    a[this.tweenStr] = this.tweenValEnd;
                    "" != this.tweenStr2 && (a[this.tweenStr2] = this.tweenValEnd2);
                    this._data.tweenOptions.onComplete = r(this, this.finishTween);
                    Za.tween(this.back, a, this._data.duration, this._data.tweenOptions)
                },
                setTweenValues: function(a, b, c) {
                    0 == b && 0 == c ? (this.tweenStr = "alpha", this.tweenValStart = 0 == a ? 0 : 1, this.tweenValEnd = 0 == a ? 1 : 0) : 0 < Math.abs(b) && 0 == c ? (this.tweenStr = "x", 0 < b ? (this.tweenValStart =
                        0 == a ? -this.back.get_width() : 0, this.tweenValEnd = 0 == a ? 0 : -this.back.get_width()) : (this.tweenValStart = 0 == a ? q.width : -this.back.get_width() / 2, this.tweenValEnd = 0 == a ? -this.back.get_width() / 2 : q.width)) : 0 == b && 0 < Math.abs(c) ? (this.tweenStr = "y", 0 < c ? (this.tweenValStart = 0 == a ? -this.back.get_height() : 0, this.tweenValEnd = 0 == a ? 0 : -this.back.get_height()) : (this.tweenValStart = 0 == a ? q.height : -this.back.get_height() / 2, this.tweenValEnd = 0 == a ? -this.back.get_height() / 2 : q.height)) : 0 < Math.abs(b) && 0 < Math.abs(c) && (this.tweenStr = "x",
                        this.tweenStr2 = "y", 0 < b ? (this.tweenValStart = 0 == a ? -this.back.get_width() : 0, this.tweenValEnd = 0 == a ? 0 : -this.back.get_width()) : (this.tweenValStart = 0 == a ? q.width : .6666666666666666 * -this.back.get_width(), this.tweenValEnd = 0 == a ? .6666666666666666 * -this.back.get_width() : q.width), 0 < c ? (this.tweenValStart2 = 0 == a ? -this.back.get_height() : 0, this.tweenValEnd2 = 0 == a ? 0 : -this.back.get_height()) : (this.tweenValStart2 = 0 == a ? q.height : .6666666666666666 * -this.back.get_height(), this.tweenValEnd2 = 0 == a ? .6666666666666666 * -this.back.get_height() :
                            q.height))
                },
                makeSprite: function(a, b) {
                    var c = new G(0, 0);
                    if (0 == a && 0 == b) c.makeGraphic(q.width, q.height, this._data.color);
                    else if (0 == a && 0 < Math.abs(b)) {
                        var d = 0 < b ? q.height : 0;
                        b = 0 < b ? 90 : 270;
                        c.makeGraphic(1, 2 * q.height, this._data.color);
                        a = c.get_pixels();
                        b = fd.createGradientBitmapData(1, q.height, [this._data.color, 0], 1, b);
                        a.copyPixels(b, b.rect, new La(0, d));
                        c.set_pixels(a);
                        c.scale.set(q.width, 1);
                        c.updateHitbox()
                    } else 0 < Math.abs(a) && 0 == b ? (d = 0 < a ? q.width : 0, b = 0 < a ? 0 : 180, c.makeGraphic(2 * q.width, 1, this._data.color), a = c.get_pixels(),
                        b = fd.createGradientBitmapData(q.width, 1, [this._data.color, 0], 1, b), a.copyPixels(b, b.rect, new La(d, 0)), c.set_pixels(a), c.scale.set(1, q.height), c.updateHitbox()) : 0 < Math.abs(a) && 0 < Math.abs(b) && (c.loadGraphic(this.getGradient()), c.set_flipX(0 > a), c.set_flipY(0 > b));
                    return c
                },
                getGradient: function() {
                    var a = new Ld(0, 0),
                        b = new H(2 * q.width, 2 * q.height, !0),
                        c = new xa;
                    c.scale(b.width / a.width, b.height / a.height);
                    b.draw(a, c, null, null, null, !0);
                    c = new H(3 * q.width, 3 * q.height, !0, this._data.color);
                    c.copyChannel(b, b.rect, new La(c.width -
                        b.width, c.height - b.height), 1, 8);
                    a.dispose();
                    b.dispose();
                    return c
                },
                finishTween: function(a) {
                    this.delayThenFinish()
                },
                __class__: ui
            });
            var vi = function(a) {
                this._isCenter = !1;
                ed.call(this, a);
                this._grpSprites = new ka;
                var b = 0;
                null == a.tileData && (a.tileData = {
                    asset: null,
                    width: 32,
                    height: 32
                });
                var c = a.region,
                    d = Math.ceil(c.width / a.tileData.width),
                    e = Math.ceil(c.height / a.tileData.height),
                    f = a.duration / (d > e ? d : e),
                    k = f * Math.abs(a.direction.x);
                f *= Math.abs(a.direction.y);
                var p = a.tileData.width,
                    m = a.tileData.height,
                    ja = c.x | 0;
                var h =
                    c.y | 0;
                0 > a.direction.x && (p *= -1, ja += c.width + p | 0);
                0 > a.direction.y && (m *= -1, h += c.height + m | 0);
                c = ja;
                for (var l = 0; l < e;) {
                    for (var g = l++, q = 0, r = d; q < r;) {
                        q++;
                        var D = 40;
                        null != a.tileData.frameRate && (D = a.tileData.frameRate);
                        D = new ti(c, h, b, a.tileData.asset, a.tileData.width, a.tileData.height, D);
                        D.set_color(a.color);
                        D.scrollFactor.set(0, 0);
                        this._grpSprites.add(D);
                        c += p;
                        b += k
                    }
                    h += m;
                    c = ja;
                    b = (g + 1) * f
                }
                this.add(this._grpSprites);
                this._isCenter = 0 == a.direction.x && 0 == a.direction.y
            };
            g["flixel.addons.transition.TransitionTiles"] = vi;
            vi.__name__ = "flixel.addons.transition.TransitionTiles";
            vi.__super__ = ed;
            vi.prototype = n(ed.prototype, {
                destroy: function() {
                    ed.prototype.destroy.call(this);
                    this._grpSprites = null
                },
                start: function(a) {
                    ed.prototype.start.call(this, a);
                    this._grpSprites.group.forEach(function(b) {
                        b.start(a)
                    }, !1)
                },
                setStatus: function(a) {
                    ed.prototype.setStatus.call(this, a);
                    this._grpSprites.group.forEach(function(b) {
                        b.setStatus(a)
                    }, !1)
                },
                update: function(a) {
                    ed.prototype.update.call(this, a);
                    if (this._started) {
                        a = !0;
                        for (var b = 0, c = this._grpSprites.group.members; b <
                            c.length;) {
                            var d = c[b];
                            ++b;
                            if (-1 != d.status && d.status != this._endStatus) {
                                a = !1;
                                break
                            }
                        }
                        a && (this._started = !1, this.delayThenFinish())
                    }
                },
                __class__: vi
            });
            var uf = function(a, b, c, d, e, f) {
                this.x = new wi(a, c, e);
                this.y = new wi(b, d, f)
            };
            g["flixel.addons.ui.Anchor"] = uf;
            uf.__name__ = "flixel.addons.ui.Anchor";
            uf.__interfaces__ = [L];
            uf.prototype = {
                destroy: function() {
                    this.y = this.x = null
                },
                anchorThing: function(a, b) {
                    switch (this.x.side) {
                        case "center":
                            var c = b.x + b.get_width() / 2;
                            break;
                        case "left":
                            c = b.x;
                            break;
                        case "right":
                            c = b.x + b.get_width();
                            break;
                        default:
                            c = b.x
                    }
                    switch (this.y.side) {
                        case "bottom":
                            b = b.y + b.get_height();
                            break;
                        case "center":
                            b = b.y + b.get_height() / 2;
                            break;
                        case "top":
                            b = b.y;
                            break;
                        default:
                            b = b.y
                    }
                    switch (this.x.flush) {
                        case "center":
                            c -= a.get_width() / 2;
                            break;
                        case "right":
                            c -= a.get_width()
                    }
                    switch (this.y.flush) {
                        case "bottom":
                            b -= a.get_height();
                            break;
                        case "center":
                            b -= a.get_height() / 2
                    }
                    a.set_x(c + this.x.offset);
                    a.set_y(b + this.y.offset)
                },
                getFlipped: function(a, b, c) {
                    var d = a ? -1 * this.x.offset : this.x.offset,
                        e = b ? -1 * this.y.offset : this.y.offset,
                        f = a ? this.flipAnchorSide(this.x.side) :
                        this.x.side,
                        k = b ? this.flipAnchorSide(this.y.side) : this.y.side;
                    a = a ? this.flipAnchorSide(this.x.flush) : this.x.flush;
                    b = b ? this.flipAnchorSide(this.y.flush) : this.y.flush;
                    null == c ? c = new uf(d, e, f, k, a, b) : (c.x.offset = d, c.y.offset = e, c.x.side = f, c.y.side = k, c.x.flush = a, c.y.flush = b);
                    return c
                },
                clone: function() {
                    return new uf(this.x.offset, this.y.offset, this.x.side, this.y.side, this.x.flush, this.y.flush)
                },
                flipAnchorSide: function(a) {
                    return "left" == a ? "right" : "right" == a ? "left" : "top" == a ? "bottom" : "bottom" == a ? "top" : a
                },
                __class__: uf
            };
            var wi = function(a, b, c) {
                this.side = this.flush = "center";
                this.offset = 0;
                this.offset = a;
                this.side = b;
                this.flush = c
            };
            g["flixel.addons.ui.AnchorPoint"] = wi;
            wi.__name__ = "flixel.addons.ui.AnchorPoint";
            wi.prototype = {
                __class__: wi
            };
            var Md = function(a, b, c, d) {
                null == d && (d = 1);
                null == c && (c = 1);
                this.style = a;
                this.color = b;
                this.size = c;
                this.quality = d
            };
            g["flixel.addons.ui.BorderDef"] = Md;
            Md.__name__ = "flixel.addons.ui.BorderDef";
            Md.fromXML = function(a) {
                var b = y.xml_str(a, "border"),
                    c = Oc.NONE,
                    d = y.xml_color(a, "border_color", !0, 0),
                    e = y.xml_f(a,
                        "border_size", 1),
                    f = y.xml_f(a, "border_quality", 0);
                c = new Md(c, d, e, f);
                switch (b) {
                    case "":
                        b = y.xml_str(a, "shadow", !0, "");
                        if ("" != b && "false" != b && "none" != b) {
                            c.style = Oc.SHADOW;
                            a = !0;
                            null == a && (a = !1);
                            d = Pb.fromString(b);
                            if (null == d)
                                if (a) d = 0;
                                else throw F.thrown("U.parseHex() unable to parse hex String " + b);
                            c.color = d
                        } else if (b = y.xml_str(a, "outline", !0, ""), "" != b && "false" != b && "none" != b) {
                            c.style = Oc.OUTLINE;
                            a = !0;
                            null == a && (a = !1);
                            d = Pb.fromString(b);
                            if (null == d)
                                if (a) d = 0;
                                else throw F.thrown("U.parseHex() unable to parse hex String " +
                                    b);
                            c.color = d
                        } else if (b = y.xml_str(a, "outline_fast"), "" != b && "false" != b && "none" != b) {
                            c.style = Oc.OUTLINE_FAST;
                            a = !0;
                            null == a && (a = !1);
                            d = Pb.fromString(b);
                            if (null == d)
                                if (a) d = 0;
                                else throw F.thrown("U.parseHex() unable to parse hex String " + b);
                            c.color = d
                        }
                        break;
                    case "false":
                    case "none":
                        c.style = Oc.NONE;
                        break;
                    case "outline":
                        c.style = Oc.OUTLINE;
                        break;
                    case "outline_fast":
                        c.style = Oc.OUTLINE_FAST;
                        break;
                    case "shadow":
                        c.style = Oc.SHADOW
                }
                return c
            };
            Md.prototype = {
                clone: function() {
                    return new Md(this.style, this.color, this.size,
                        this.quality)
                },
                apply: function(a) {
                    var b = this.color,
                        c = this.size,
                        d = this.quality;
                    null == d && (d = 1);
                    null == c && (c = 1);
                    null == b && (b = 0);
                    a.set_borderStyle(this.style);
                    a.set_borderColor(b);
                    a.set_borderSize(c);
                    a.set_borderQuality(d);
                    return a
                },
                __class__: Md
            };
            var fh = function(a, b, c, d) {
                this.font = this.border = this.color = this.align = null;
                this.font = a;
                this.border = d;
                this.color = c;
                this.align = b
            };
            g["flixel.addons.ui.ButtonLabelStyle"] = fh;
            fh.__name__ = "flixel.addons.ui.ButtonLabelStyle";
            fh.prototype = {
                apply: function(a) {
                    null != this.font &&
                        this.font.apply(null, a);
                    null != this.border && this.border.apply(a);
                    null != this.color && a.set_color(this.color);
                    null != this.align && a.set_alignment(this.align)
                },
                __class__: fh
            };
            var vf = function() {};
            g["flixel.addons.ui.FlxBaseMultiInput"] = vf;
            vf.__name__ = "flixel.addons.ui.FlxBaseMultiInput";
            vf.__interfaces__ = [L];
            vf.prototype = {
                destroy: function() {
                    this.forbiddens = this.combos = null
                },
                checkJustPressed: function() {
                    return !1
                },
                checkPressed: function() {
                    return !1
                },
                justPressed: function() {
                    return this.checkJustPressed() ? this.passCombosAndForbiddens() :
                        !1
                },
                pressed: function() {
                    return this.checkPressed() ? this.passCombosAndForbiddens() : !1
                },
                equals: function(a) {
                    if (null == a || Ua.typeof(a) != Ua.typeof(this) || this.input != a.input || null == this.combos != (null == a.combos) || null == this.forbiddens != (null == a.forbiddens)) return !1;
                    if (null != this.combos && null != a.combos)
                        for (var b = 0, c = this.combos; b < c.length;) {
                            var d = c[b];
                            ++b;
                            if (-1 == a.combos.indexOf(d)) return !1
                        }
                    if (null != this.forbiddens && null != a.forbiddens)
                        for (b = 0, c = this.forbiddens; b < c.length;)
                            if (d = c[b], ++b, -1 == a.forbiddens.indexOf(d)) return !1;
                    return !0
                },
                passCombosAndForbiddens: function(a, b) {
                    null == b && (b = !1);
                    null == a && (a = !0);
                    a = null == this.combos || this.checkCombos(a);
                    b = null == this.forbiddens || this.checkForbiddens(b);
                    return a ? b : !1
                },
                checkCombos: function(a) {
                    return !1
                },
                checkForbiddens: function(a) {
                    return !1
                },
                __class__: vf
            };
            var Fb = function(a, b, c, d, e, f) {
                null == f && (f = !0);
                null == e && (e = 8);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this._hasBorderAlpha = !1;
                this._regen = !0;
                this._formatRanges = [];
                this.borderSize = this.borderQuality = 1;
                this.borderColor = 0;
                this.borderStyle =
                    Oc.NONE;
                this.text = "";
                G.call(this, a, b);
                null == d || "" == d ? (this.set_text(""), d = " ") : this.set_text(d);
                this.textField = new Vb;
                this.textField.set_selectable(!1);
                this.textField.set_multiline(!0);
                this.textField.set_wordWrap(!0);
                this._defaultFormat = new nc(null, e, 16777215);
                this.set_font(zd.FONT_DEFAULT);
                this._formatAdjusted = new nc;
                this.textField.set_defaultTextFormat(this._defaultFormat);
                this.textField.set_text(d);
                this.set_fieldWidth(c);
                this.textField.set_embedFonts(f);
                this.textField.set_sharpness(100);
                this.textField.set_height(0 >=
                    d.length ? 1 : 10);
                this.set_allowCollisions(0);
                this.set_moves(!1);
                this.drawFrame();
                b = a = 1;
                null == b && (b = 0);
                null == a && (a = 0);
                a = X._pool.get().set(a, b);
                a._inPool = !1;
                this.shadowOffset = a
            };
            g["flixel.text.FlxText"] = Fb;
            Fb.__name__ = "flixel.text.FlxText";
            Fb.__super__ = G;
            Fb.prototype = n(G.prototype, {
                destroy: function() {
                    this._formatAdjusted = this._defaultFormat = this._font = this.textField = null;
                    this.shadowOffset = V.put(this.shadowOffset);
                    G.prototype.destroy.call(this)
                },
                drawFrame: function(a) {
                    null == a && (a = !1);
                    this._regen = this._regen ||
                        a;
                    G.prototype.drawFrame.call(this, this._regen)
                },
                setFormat: function(a, b, c, d, e, f, k) {
                    null == k && (k = !0);
                    null == f && (f = 0);
                    null == c && (c = -1);
                    null == b && (b = 8);
                    null == e && (e = Oc.NONE);
                    k ? this.set_font(a) : null != a && this.set_systemFont(a);
                    this.set_size(b);
                    this.set_color(c);
                    null != d && this.set_alignment(d);
                    c = f;
                    null == c && (c = 0);
                    this.set_borderStyle(e);
                    this.set_borderColor(c);
                    this.set_borderSize(1);
                    this.set_borderQuality(1);
                    this.textField.set_defaultTextFormat(this._defaultFormat);
                    this.textField.setTextFormat(this._defaultFormat);
                    this._regen = !0;
                    return this
                },
                updateHitbox: function() {
                    this.regenGraphic();
                    G.prototype.updateHitbox.call(this)
                },
                set_fieldWidth: function(a) {
                    if (null == this.textField) return a;
                    0 >= a ? (this.set_wordWrap(!1), this.set_autoSize(!0)) : (this.set_autoSize(!1), this.set_wordWrap(!0), this.textField.set_width(a));
                    this._regen = !0;
                    return a
                },
                get_fieldWidth: function() {
                    return null != this.textField ? this.textField.get_width() : 0
                },
                set_autoSize: function(a) {
                    null != this.textField && (this.textField.set_autoSize(a ? 1 : 2), this._regen = !0);
                    return a
                },
                set_text: function(a) {
                    this.text = a;
                    if (null != this.textField) {
                        var b = this.textField.get_text();
                        this.textField.set_text(a);
                        this._regen = this.textField.get_text() != b || this._regen
                    }
                    return a
                },
                set_size: function(a) {
                    this._defaultFormat.size = a;
                    this.textField.set_defaultTextFormat(this._defaultFormat);
                    this.textField.setTextFormat(this._defaultFormat);
                    this._regen = !0;
                    return a
                },
                set_color: function(a) {
                    if (this._defaultFormat.color == (a & 16777215)) return a;
                    this._defaultFormat.color = a & 16777215;
                    this.color = a;
                    this.textField.set_defaultTextFormat(this._defaultFormat);
                    this.textField.setTextFormat(this._defaultFormat);
                    this._regen = !0;
                    return a
                },
                set_font: function(a) {
                    this.textField.set_embedFonts(!0);
                    if (null != a) {
                        var b = a;
                        ta.exists(a, "FONT") && (b = ta.getFont(a).name);
                        this._defaultFormat.font = b
                    } else this._defaultFormat.font = zd.FONT_DEFAULT;
                    this.textField.set_defaultTextFormat(this._defaultFormat);
                    this.textField.setTextFormat(this._defaultFormat);
                    this._regen = !0;
                    return this._font = this._defaultFormat.font
                },
                set_systemFont: function(a) {
                    this.textField.set_embedFonts(!1);
                    this._defaultFormat.font =
                        a;
                    this.textField.set_defaultTextFormat(this._defaultFormat);
                    this.textField.setTextFormat(this._defaultFormat);
                    this._regen = !0;
                    return a
                },
                set_wordWrap: function(a) {
                    this.textField.get_wordWrap() != a && (this.textField.set_wordWrap(a), this._regen = !0);
                    return a
                },
                set_alignment: function(a) {
                    this._defaultFormat.align = Dk.toOpenFL(a);
                    this.textField.set_defaultTextFormat(this._defaultFormat);
                    this.textField.setTextFormat(this._defaultFormat);
                    this._regen = !0;
                    return a
                },
                set_borderStyle: function(a) {
                    a != this.borderStyle &&
                        (this._regen = !0);
                    return this.borderStyle = a
                },
                set_borderColor: function(a) {
                    this.borderColor != a && this.borderStyle != Oc.NONE && (this._regen = !0);
                    this._hasBorderAlpha = 1 > (a >> 24 & 255) / 255;
                    return this.borderColor = a
                },
                set_borderSize: function(a) {
                    a != this.borderSize && this.borderStyle != Oc.NONE && (this._regen = !0);
                    return this.borderSize = a
                },
                set_borderQuality: function(a) {
                    a = 0 > a ? 0 : a;
                    a = 1 < a ? 1 : a;
                    a != this.borderQuality && this.borderStyle != Oc.NONE && (this._regen = !0);
                    return this.borderQuality = a
                },
                set_graphic: function(a) {
                    var b = this.graphic;
                    a = G.prototype.set_graphic.call(this, a);
                    q.bitmap.removeIfNoUse(b);
                    return a
                },
                get_width: function() {
                    this.regenGraphic();
                    return G.prototype.get_width.call(this)
                },
                get_height: function() {
                    this.regenGraphic();
                    return G.prototype.get_height.call(this)
                },
                updateColorTransform: function() {
                    null == this.colorTransform && (this.colorTransform = new wb);
                    1 != this.alpha ? (this.colorTransform.alphaMultiplier = this.alpha, this.useColorTransform = !0) : (this.colorTransform.alphaMultiplier = 1, this.useColorTransform = !1);
                    this.dirty = !0
                },
                regenGraphic: function() {
                    if (null !=
                        this.textField && this._regen) {
                        var a = 0,
                            b = 4;
                        null != this.graphic && (a = this.graphic.width, b = this.graphic.height);
                        var c = this.textField.get_width(),
                            d = this.textField.get_textHeight() + 4;
                        0 == this.textField.get_textHeight() && (d = b);
                        a != c || b != d ? (this.set_height(d), a = q.bitmap.getUniqueKey("text"), this.makeGraphic(c | 0, d | 0, 0, !1, a), this._hasBorderAlpha && (this._borderPixels = this.graphic.bitmap.clone()), this.frameHeight = this.get_height() | 0, this.textField.set_height(1.2 * this.get_height()), this._flashRect.x = 0, this._flashRect.y =
                            0, this._flashRect.width = c, this._flashRect.height = d) : (this.graphic.bitmap.fillRect(this._flashRect, 0), this._hasBorderAlpha && (null == this._borderPixels ? this._borderPixels = new H(this.frameWidth, this.frameHeight, !0) : this._borderPixels.fillRect(this._flashRect, 0)));
                        null != this.textField && null != this.textField.get_text() && 0 < this.textField.get_text().length && (this.copyTextFormat(this._defaultFormat, this._formatAdjusted), this._matrix.identity(), this.applyBorderStyle(), this._hasBorderAlpha && (null == this._borderColorTransform &&
                            (this._borderColorTransform = new wb), this._borderColorTransform.alphaMultiplier = (this.borderColor >> 24 & 255) / 255, this._borderPixels.colorTransform(this._borderPixels.rect, this._borderColorTransform), this.graphic.bitmap.draw(this._borderPixels)), this.applyFormats(this._formatAdjusted, !1), this.drawTextFieldTo(this.graphic.bitmap));
                        this._regen = !1;
                        this.set_frame(this.frame)
                    }
                },
                drawTextFieldTo: function(a) {
                    a.draw(this.textField, this._matrix)
                },
                draw: function() {
                    this.regenGraphic();
                    G.prototype.draw.call(this)
                },
                calcFrame: function(a) {
                    null == a && (a = !1);
                    null == this.textField || q.renderTile && !a || (this.regenGraphic(), G.prototype.calcFrame.call(this, a))
                },
                applyBorderStyle: function() {
                    var a = this.borderSize * this.borderQuality | 0;
                    0 >= a && (a = 1);
                    var b = this.borderSize / a;
                    switch (this.borderStyle._hx_index) {
                        case 1:
                            this.applyFormats(this._formatAdjusted, !0);
                            for (var c = 0; c < a;) {
                                c++;
                                var d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap;
                                this._matrix.translate(b, b);
                                this.drawTextFieldTo(d)
                            }
                            this._matrix.translate(-this.shadowOffset.x *
                                this.borderSize, -this.shadowOffset.y * this.borderSize);
                            break;
                        case 2:
                            this.applyFormats(this._formatAdjusted, !0);
                            var e = b;
                            for (c = 0; c < a;) c++, d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(-e, -e), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(e, 0), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(e, 0), this.drawTextFieldTo(d), d = this._hasBorderAlpha ?
                                this._borderPixels : this.graphic.bitmap, this._matrix.translate(0, e), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(0, e), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(-e, 0), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(-e, 0), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(0, -e), this.drawTextFieldTo(d), this._matrix.translate(e, 0), e += b;
                            break;
                        case 3:
                            for (this.applyFormats(this._formatAdjusted, !0), e = b, c = 0; c < a;) c++, d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(-e, -e), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(2 * e, 0), this.drawTextFieldTo(d), d = this._hasBorderAlpha ? this._borderPixels : this.graphic.bitmap, this._matrix.translate(0, 2 * e), this.drawTextFieldTo(d), d = this._hasBorderAlpha ?
                                this._borderPixels : this.graphic.bitmap, this._matrix.translate(2 * -e, 0), this.drawTextFieldTo(d), this._matrix.translate(e, -e), e += b
                    }
                },
                applyFormats: function(a, b) {
                    null == b && (b = !1);
                    this.copyTextFormat(this._defaultFormat, a, !1);
                    a.color = b ? this.borderColor & 16777215 : this._defaultFormat.color;
                    this.textField.setTextFormat(a);
                    for (var c = 0, d = this._formatRanges; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (this.textField.get_text().length - 1 < e.range.start) break;
                        else {
                            var f = e.format.format;
                            this.copyTextFormat(f, a, !1);
                            a.color = b ? e.format.borderColor &
                                16777215 : f.color
                        }
                        this.textField.setTextFormat(a, e.range.start, Math.min(e.range.end, this.textField.get_text().length) | 0)
                    }
                },
                copyTextFormat: function(a, b, c) {
                    null == c && (c = !0);
                    b.font = a.font;
                    b.bold = a.bold;
                    b.italic = a.italic;
                    b.size = a.size;
                    b.color = a.color;
                    c && (b.align = a.align)
                },
                set_frames: function(a) {
                    G.prototype.set_frames.call(this, a);
                    this._regen = !1;
                    return a
                },
                __class__: Fb,
                __properties__: n(G.prototype.__properties__, {
                    set_alignment: "set_alignment",
                    set_wordWrap: "set_wordWrap",
                    set_systemFont: "set_systemFont",
                    set_font: "set_font",
                    set_size: "set_size",
                    set_autoSize: "set_autoSize",
                    set_fieldWidth: "set_fieldWidth",
                    get_fieldWidth: "get_fieldWidth",
                    set_borderQuality: "set_borderQuality",
                    set_borderSize: "set_borderSize",
                    set_borderColor: "set_borderColor",
                    set_borderStyle: "set_borderStyle",
                    set_text: "set_text"
                })
            });
            var wf = function(a, b, c, d, e, f, k, p) {
                null == p && (p = !0);
                null == k && (k = -1);
                null == f && (f = -16777216);
                null == e && (e = 8);
                null == c && (c = 150);
                null == b && (b = 0);
                null == a && (a = 0);
                this.backgroundColor = -1;
                this.fieldBorderThickness = 1;
                this.fieldBorderColor = -16777216;
                this.caretIndex = this.forceCase = this.maxLength = this.filterMode = 0;
                this.hasFocus = !1;
                this.caretWidth = 1;
                this.background = !1;
                Fb.call(this, a, b, c, d, e, p);
                this.set_backgroundColor(k);
                0 != k && (this.background = !0);
                this.set_color(f);
                this.set_caretColor(f);
                this.caret = new G;
                this.caret.makeGraphic(this.caretWidth, e + 2 | 0);
                this._caretTimer = new Rc;
                this.set_caretIndex(0);
                this.set_hasFocus(!1);
                this.background && (this.fieldBorderSprite = new G(a, b), this.backgroundSprite = new G(a, b));
                this.set_lines(1);
                la.get_current().stage.addEventListener("keyDown",
                    r(this, this.onKeyDown));
                null == d && (d = "");
                this.set_text(d);
                this.calcFrame()
            };
            g["flixel.addons.ui.FlxInputText"] = wf;
            wf.__name__ = "flixel.addons.ui.FlxInputText";
            wf.__super__ = Fb;
            wf.prototype = n(Fb.prototype, {
                set_caretColor: function(a) {
                    this.caretColor = a;
                    this.dirty = !0;
                    return this.caretColor
                },
                destroy: function() {
                    la.get_current().stage.removeEventListener("keyDown", r(this, this.onKeyDown));
                    this.backgroundSprite = V.destroy(this.backgroundSprite);
                    this.fieldBorderSprite = V.destroy(this.fieldBorderSprite);
                    this.callback =
                        null;
                    Fb.prototype.destroy.call(this)
                },
                draw: function() {
                    this.drawSprite(this.fieldBorderSprite);
                    this.drawSprite(this.backgroundSprite);
                    Fb.prototype.draw.call(this);
                    this.caretColor == this.caret.color && this.caret.get_height() == (this._defaultFormat.size | 0) + 2 || this.caret.set_color(this.caretColor);
                    this.drawSprite(this.caret)
                },
                drawSprite: function(a) {
                    null != a && a.visible && (a.scrollFactor = this.scrollFactor, a.set_cameras(this.get_cameras()), a.draw())
                },
                update: function(a) {
                    Fb.prototype.update.call(this, a);
                    2 == q.mouse._leftButton.current &&
                        (a = this.hasFocus, q.mouse.overlaps(this) ? (this.set_caretIndex(this.getCaretIndex()), this.set_hasFocus(!0), a || null == this.focusGained || this.focusGained()) : (this.set_hasFocus(!1), a && null != this.focusLost && this.focusLost()))
                },
                onKeyDown: function(a) {
                    var b = a.keyCode;
                    if (this.hasFocus && 16 != b && 17 != b && 220 != b && 27 != b)
                        if (37 == b) 0 < this.caretIndex && (a = this, a.set_caretIndex(a.caretIndex - 1), this.set_text(this.text));
                        else if (39 == b) this.caretIndex < this.text.length && (a = this, a.set_caretIndex(a.caretIndex + 1), this.set_text(this.text));
                    else if (35 == b) this.set_caretIndex(this.text.length), this.set_text(this.text);
                    else if (36 == b) this.set_caretIndex(0), this.set_text(this.text);
                    else if (8 == b) 0 < this.caretIndex && (a = this, a.set_caretIndex(a.caretIndex - 1), this.set_text(this.text.substring(0, this.caretIndex) + this.text.substring(this.caretIndex + 1)), this.onChange("backspace"));
                    else if (46 == b) 0 < this.text.length && this.caretIndex < this.text.length && (this.set_text(this.text.substring(0, this.caretIndex) + this.text.substring(this.caretIndex + 1)), this.onChange("delete"));
                    else if (13 == b) this.onChange("enter");
                    else 0 != a.charCode && (a = this.filter(String.fromCodePoint(a.charCode)), 0 < a.length && (0 == this.maxLength || this.text.length + a.length < this.maxLength) && (this.set_text(this.insertSubstring(this.text, a, this.caretIndex)), a = this, a.set_caretIndex(a.caretIndex + 1), this.onChange("input")))
                },
                onChange: function(a) {
                    null != this.callback && this.callback(this.text, a)
                },
                insertSubstring: function(a, b, c) {
                    return a = c != a.length ? a.substring(0, c) + b + a.substring(c) : a + b
                },
                getCaretIndex: function() {
                    var a =
                        q.mouse.x - this.x,
                        b = q.mouse.y - this.y;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    return this.getCharIndexAtPoint(a.x, a.y)
                },
                getCharBoundaries: function(a) {
                    if (null != this._charBoundaries && 0 <= a && 0 < this._charBoundaries.length) {
                        var b = new fa;
                        if (a >= this._charBoundaries.length) {
                            a = this._charBoundaries[this._charBoundaries.length - 1];
                            var c = b
                        } else a = this._charBoundaries[a], c = b;
                        null == c && (c = new fa);
                        c.x = a.x;
                        c.y = a.y;
                        c.width = a.width;
                        c.height = a.height;
                        return b
                    }
                    return null
                },
                set_text: function(a) {
                    var b =
                        Fb.prototype.set_text.call(this, a);
                    if (null == this.textField) return b;
                    var c = a.length;
                    this.prepareCharBoundaries(c);
                    this.textField.set_text("");
                    for (var d = 0, e, f = 0, k = 0; k < c;) {
                        var p = k++;
                        this.textField.appendText(Y.substr(a, p, 1));
                        e = this.textField.get_textWidth();
                        0 == p && (d = this.textField.get_textHeight());
                        this._charBoundaries[p].x = 2 + f;
                        this._charBoundaries[p].y = 2;
                        this._charBoundaries[p].width = e - f;
                        this._charBoundaries[p].height = d;
                        f = e
                    }
                    this.textField.set_text(a);
                    this.onSetTextCheck();
                    return b
                },
                getCharIndexAtPoint: function(a,
                    b) {
                    b = 0;
                    if (null != this._charBoundaries && 0 < this._charBoundaries.length && this.textField.get_textWidth() <= this.textField.get_width()) switch (this.getAlignStr()) {
                        case "center":
                            a = a - this.textField.get_width() / 2 + this.textField.get_textWidth() / 2;
                            break;
                        case "right":
                            a = a - this.textField.get_width() + this.textField.get_textWidth()
                    }
                    if (null != this._charBoundaries)
                        for (var c = 0, d = this._charBoundaries; c < d.length;) {
                            var e = d[c];
                            ++c;
                            if (a >= e.x && a <= e.x + e.width) return b;
                            ++b
                        }
                    return null != this._charBoundaries && 0 < this._charBoundaries.length &&
                        a > this.textField.get_textWidth() ? this._charBoundaries.length : 0
                },
                prepareCharBoundaries: function(a) {
                    null == this._charBoundaries && (this._charBoundaries = []);
                    if (this._charBoundaries.length > a)
                        for (var b = 0, c = this._charBoundaries.length - a; b < c;) b++, this._charBoundaries.pop();
                    b = 0;
                    for (c = a; b < c;)
                        if (a = b++, this._charBoundaries.length - 1 < a) {
                            a = this._charBoundaries;
                            var d = 0,
                                e = 0,
                                f = 0,
                                k = 0;
                            null == k && (k = 0);
                            null == f && (f = 0);
                            null == e && (e = 0);
                            null == d && (d = 0);
                            var p = ca._pool.get();
                            null == k && (k = 0);
                            null == f && (f = 0);
                            null == e && (e = 0);
                            null == d &&
                                (d = 0);
                            p.x = d;
                            p.y = e;
                            p.width = f;
                            p.height = k;
                            p._inPool = !1;
                            a.push(p)
                        }
                },
                onSetTextCheck: function() {},
                calcFrame: function(a) {
                    null == a && (a = !1);
                    Fb.prototype.calcFrame.call(this, a);
                    null != this.fieldBorderSprite && (0 < this.fieldBorderThickness ? (this.fieldBorderSprite.makeGraphic(this.get_width() + 2 * this.fieldBorderThickness | 0, this.get_height() + 2 * this.fieldBorderThickness | 0, this.fieldBorderColor), this.fieldBorderSprite.set_x(this.x - this.fieldBorderThickness), this.fieldBorderSprite.set_y(this.y - this.fieldBorderThickness)) :
                        0 == this.fieldBorderThickness && this.fieldBorderSprite.set_visible(!1));
                    null != this.backgroundSprite && (this.background ? (this.backgroundSprite.makeGraphic(this.get_width() | 0, this.get_height() | 0, this.backgroundColor), this.backgroundSprite.set_x(this.x), this.backgroundSprite.set_y(this.y)) : this.backgroundSprite.set_visible(!1));
                    if (null != this.caret) {
                        a = this.caretWidth;
                        var b = (this._defaultFormat.size | 0) + 2 | 0,
                            c = -16777216 | this.borderColor & 16777215,
                            d = -16777216 | this.caretColor & 16777215,
                            e = "caret" + a + "x" + b + "c:" + d +
                            "b:" + I.string(this.borderStyle) + "," + this.borderSize + "," + c;
                        switch (this.borderStyle._hx_index) {
                            case 0:
                                this.caret.makeGraphic(a, b, d, !1, e);
                                this.caret.offset.set_x(this.caret.offset.set_y(0));
                                break;
                            case 1:
                                a += this.borderSize | 0;
                                b += this.borderSize | 0;
                                this.caret.makeGraphic(a, b, 0, !1, e);
                                e = new fa(this.borderSize, this.borderSize, this.caretWidth, (this._defaultFormat.size | 0) + 2 | 0);
                                this.caret.get_pixels().fillRect(e, c);
                                e.x = e.y = 0;
                                this.caret.get_pixels().fillRect(e, d);
                                this.caret.offset.set_x(this.caret.offset.set_y(0));
                                break;
                            case 2:
                            case 3:
                                a += 2 * this.borderSize | 0, b += 2 * this.borderSize | 0, this.caret.makeGraphic(a, b, c, !1, e), e = new fa(this.borderSize, this.borderSize, this.caretWidth, (this._defaultFormat.size | 0) + 2 | 0), this.caret.get_pixels().fillRect(e, d), this.caret.offset.set_x(this.caret.offset.set_y(this.borderSize))
                        }
                        this.caret.set_width(a);
                        this.caret.set_height(b);
                        this.set_caretIndex(this.caretIndex)
                    }
                },
                toggleCaret: function(a) {
                    this.caret.set_visible(!this.caret.visible)
                },
                filter: function(a) {
                    1 == this.forceCase ? a = a.toUpperCase() :
                        2 == this.forceCase && (a = a.toLowerCase());
                    if (0 != this.filterMode) {
                        switch (this.filterMode) {
                            case 1:
                                var b = new ya("[^a-zA-Z]*", "g");
                                break;
                            case 2:
                                b = new ya("[^0-9]*", "g");
                                break;
                            case 3:
                                b = new ya("[^a-zA-Z0-9]*", "g");
                                break;
                            case 4:
                                b = this.customFilterPattern;
                                break;
                            default:
                                throw F.thrown(new cb("FlxInputText: Unknown filterMode (" + this.filterMode + ")"));
                        }
                        a = a.replace(b.r, "")
                    }
                    return a
                },
                set_params: function(a) {
                    this.params = a;
                    null == this.params && (this.params = []);
                    this.params.push({
                        name: "value",
                        value: this.text
                    });
                    return a
                },
                set_x: function(a) {
                    null != this.fieldBorderSprite && 0 < this.fieldBorderThickness && this.fieldBorderSprite.set_x(a - this.fieldBorderThickness);
                    null != this.backgroundSprite && this.background && this.backgroundSprite.set_x(a);
                    return Fb.prototype.set_x.call(this, a)
                },
                set_y: function(a) {
                    null != this.fieldBorderSprite && 0 < this.fieldBorderThickness && this.fieldBorderSprite.set_y(a - this.fieldBorderThickness);
                    null != this.backgroundSprite && this.background && this.backgroundSprite.set_y(a);
                    return Fb.prototype.set_y.call(this, a)
                },
                set_hasFocus: function(a) {
                    a ? this.hasFocus != a && (this._caretTimer = (new Rc).start(.5, r(this, this.toggleCaret), 0), this.caret.set_visible(!0), this.set_caretIndex(this.text.length)) : (this.caret.set_visible(!1), null != this._caretTimer && this._caretTimer.cancel());
                    a != this.hasFocus && this.calcFrame();
                    return this.hasFocus = a
                },
                getAlignStr: function() {
                    var a = "left";
                    null != this._defaultFormat && null != this._defaultFormat.align && (a = Dk.fromOpenFL(this._defaultFormat.align));
                    return a
                },
                set_caretIndex: function(a) {
                    var b = 0;
                    switch (this.getAlignStr()) {
                        case "center":
                            1 >=
                                b && (b = 0);
                            break;
                        case "right":
                            b = this.textField.get_width() - 2 - this.textField.get_textWidth() - 2;
                            0 > b && (b = 0);
                            break;
                        default:
                            b = 0
                    }
                    this.caretIndex = a;
                    this.caretIndex > this.text.length + 1 && (this.caretIndex = -1); - 1 != this.caretIndex && (this.caretIndex < this.text.length ? (a = this.getCharBoundaries(this.caretIndex), null != a && (this.caret.set_x(b + a.get_left() + this.x), this.caret.set_y(a.get_top() + this.y))) : (a = this.getCharBoundaries(this.caretIndex - 1), null != a ? (this.caret.set_x(b + a.get_right() + this.x), this.caret.set_y(a.get_top() +
                        this.y)) : 0 == this.text.length && (this.caret.set_x(this.x + b + 2), this.caret.set_y(this.y + 2))));
                    1 == this.lines && this.caret.x + this.caret.get_width() > this.x + this.get_width() && this.caret.set_x(this.x + this.get_width() - 2);
                    return this.caretIndex
                },
                set_forceCase: function(a) {
                    this.forceCase = a;
                    this.set_text(this.filter(this.text));
                    return this.forceCase
                },
                set_size: function(a) {
                    Fb.prototype.set_size.call(this, a);
                    this.caret.makeGraphic(1, (this._defaultFormat.size | 0) + 2 | 0);
                    return a
                },
                set_lines: function(a) {
                    if (0 == a) return 0;
                    1 < a ? (this.textField.set_wordWrap(!0), this.textField.set_multiline(!0)) : (this.textField.set_wordWrap(!1), this.textField.set_multiline(!1));
                    this.lines = a;
                    this.calcFrame();
                    return this.lines
                },
                set_passwordMode: function(a) {
                    this.textField.set_displayAsPassword(a);
                    this.calcFrame();
                    return a
                },
                set_filterMode: function(a) {
                    this.filterMode = a;
                    this.set_text(this.filter(this.text));
                    return this.filterMode
                },
                set_backgroundColor: function(a) {
                    this.backgroundColor = a;
                    this.calcFrame();
                    return this.backgroundColor
                },
                __class__: wf,
                __properties__: n(Fb.prototype.__properties__, {
                    set_passwordMode: "set_passwordMode",
                    set_backgroundColor: "set_backgroundColor",
                    set_filterMode: "set_filterMode",
                    set_lines: "set_lines",
                    set_forceCase: "set_forceCase",
                    set_caretIndex: "set_caretIndex",
                    set_hasFocus: "set_hasFocus",
                    set_params: "set_params",
                    set_caretColor: "set_caretColor"
                })
            });
            var Dc = function(a, b, c, d) {
                this.input = b;
                this.gamepad = a;
                this.combos = c;
                this.forbiddens = d
            };
            g["flixel.addons.ui.FlxMultiGamepad"] = Dc;
            Dc.__name__ = "flixel.addons.ui.FlxMultiGamepad";
            Dc.__super__ = vf;
            Dc.prototype = n(vf.prototype, {
                destroy: function() {
                    vf.prototype.destroy.call(this);
                    this.gamepad = null
                },
                checkJustPressed: function() {
                    if (null == this.gamepad) return !1;
                    var a = this.gamepad,
                        b = this.input;
                    switch (b) {
                        case -2:
                            return a.anyButton(2);
                        case -1:
                            return !a.anyButton(2);
                        default:
                            return b = a.mapping.getRawID(b), a = a.buttons[b], null != a ? a.hasState(2) : !1
                    }
                },
                checkPressed: function() {
                    if (null == this.gamepad) return !1;
                    var a = this.gamepad,
                        b = this.input;
                    switch (b) {
                        case -2:
                            return a.anyButton(1);
                        case -1:
                            return !a.anyButton(1);
                        default:
                            return b = a.mapping.getRawID(b), a = a.buttons[b], null != a ? a.hasState(1) : !1
                    }
                },
                checkCombos: function(a) {
                    return null == this.gamepad ? !1 : this.gamepad.checkButtonArrayState(this.combos, 1) == a
                },
                checkForbiddens: function(a) {
                    return null == this.gamepad ? !1 : this.gamepad.checkButtonArrayState(this.forbiddens, 1) == a
                },
                __class__: Dc
            });
            var me = function(a, b, c, d) {
                this.sInput = b;
                Dc.call(this, a, b.id, c, d)
            };
            g["flixel.addons.ui.FlxMultiGamepadAnalogStick"] = me;
            me.__name__ = "flixel.addons.ui.FlxMultiGamepadAnalogStick";
            me.__super__ =
                Dc;
            me.prototype = n(Dc.prototype, {
                destroy: function() {
                    Dc.prototype.destroy.call(this);
                    this.sInput = null
                },
                checkJustPressed: function() {
                    if (null == this.gamepad) return !1;
                    var a = this.gamepad.get_deadZone();
                    switch (this.sInput.id) {
                        case 19:
                            if (this.sInput.axis == Pe.X) {
                                var b = this.gamepad.analog.justMoved,
                                    c = b.gamepad.mapping.getAnalogStick(19);
                                null == c ? b = !1 : (c = b.gamepad.buttons[c.x], b = null != c && c.hasState(b.status));
                                if (b) {
                                    if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) >
                                        a;
                                    b = this.gamepad.analog.value.gamepad;
                                    return b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) < -a
                                }
                            } else if (b = this.gamepad.analog.justMoved, c = b.gamepad.mapping.getAnalogStick(19), null == c ? b = !1 : (c = b.gamepad.buttons[c.y], b = null != c && c.hasState(b.status)), b) {
                                if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getYAxisRaw(b.mapping.getAnalogStick(19)) > a;
                                b = this.gamepad.analog.value.gamepad;
                                return b.getYAxisRaw(b.mapping.getAnalogStick(19)) < -a
                            }
                            return !1;
                        case 20:
                            if (this.sInput.axis == Pe.X) {
                                if (b =
                                    this.gamepad.analog.justMoved, c = b.gamepad.mapping.getAnalogStick(20), null == c ? b = !1 : (c = b.gamepad.buttons[c.x], b = null != c && c.hasState(b.status)), b) {
                                    if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) > a;
                                    b = this.gamepad.analog.value.gamepad;
                                    return b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) < -a
                                }
                            } else if (b = this.gamepad.analog.justMoved, c = b.gamepad.mapping.getAnalogStick(20), null == c ? b = !1 : (c = b.gamepad.buttons[c.y], b = null != c && c.hasState(b.status)),
                                b) {
                                if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getYAxisRaw(b.mapping.getAnalogStick(20)) > a;
                                b = this.gamepad.analog.value.gamepad;
                                return b.getYAxisRaw(b.mapping.getAnalogStick(20)) < -a
                            }
                            return !1;
                        default:
                            return !1
                    }
                },
                checkPressed: function() {
                    if (null == this.gamepad) return !1;
                    var a = this.gamepad.get_deadZone();
                    switch (this.sInput.id) {
                        case 19:
                            if (this.sInput.axis == Pe.X) {
                                if (this.sInput.positive) {
                                    var b = this.gamepad.analog.value.gamepad;
                                    return b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) >
                                        a
                                }
                                b = this.gamepad.analog.value.gamepad;
                                return b.getAnalogXAxisValue(b.mapping.getAnalogStick(19)) < -a
                            }
                            if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getYAxisRaw(b.mapping.getAnalogStick(19)) > a;
                            b = this.gamepad.analog.value.gamepad;
                            return b.getYAxisRaw(b.mapping.getAnalogStick(19)) < -a;
                        case 20:
                            if (this.sInput.axis == Pe.X) {
                                if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) > a;
                                b = this.gamepad.analog.value.gamepad;
                                return b.getAnalogXAxisValue(b.mapping.getAnalogStick(20)) <
                                    -a
                            }
                            if (this.sInput.positive) return b = this.gamepad.analog.value.gamepad, b.getYAxisRaw(b.mapping.getAnalogStick(20)) > a;
                            b = this.gamepad.analog.value.gamepad;
                            return b.getYAxisRaw(b.mapping.getAnalogStick(20)) < -a;
                        default:
                            return !1
                    }
                },
                checkCombos: function(a) {
                    return null == this.gamepad ? !1 : this.gamepad.checkButtonArrayState(this.combos, 1) == a
                },
                checkForbiddens: function(a) {
                    return null == this.gamepad ? !1 : this.gamepad.checkButtonArrayState(this.forbiddens, 1) == a
                },
                __class__: me
            });
            var Pe = w["flixel.addons.ui.XY"] = {
                    __ename__: "flixel.addons.ui.XY",
                    __constructs__: ["X", "Y"],
                    X: {
                        _hx_index: 0,
                        __enum__: "flixel.addons.ui.XY",
                        toString: h
                    },
                    Y: {
                        _hx_index: 1,
                        __enum__: "flixel.addons.ui.XY",
                        toString: h
                    }
                },
                dc = function(a, b, c) {
                    this.input = a;
                    this.combos = b;
                    this.forbiddens = c
                };
            g["flixel.addons.ui.FlxMultiKey"] = dc;
            dc.__name__ = "flixel.addons.ui.FlxMultiKey";
            dc.__super__ = vf;
            dc.prototype = n(vf.prototype, {
                checkJustPressed: function() {
                    return q.keys.checkStatus(this.input, 2)
                },
                checkPressed: function() {
                    return q.keys.checkStatus(this.input, 1)
                },
                checkCombos: function(a) {
                    return q.keys.checkKeyArrayState(this.combos,
                        1) == a
                },
                checkForbiddens: function(a) {
                    return q.keys.checkKeyArrayState(this.forbiddens, 1) == a
                },
                __class__: dc
            });
            var Ec = function() {};
            g["flixel.addons.ui.interfaces.IFlxUIWidget"] = Ec;
            Ec.__name__ = "flixel.addons.ui.interfaces.IFlxUIWidget";
            Ec.__isInterface__ = !0;
            Ec.__interfaces__ = [eh];
            Ec.prototype = {
                __class__: Ec,
                __properties__: {
                    set_height: "set_height",
                    get_height: "get_height",
                    set_width: "set_width",
                    get_width: "get_width"
                }
            };
            var Ja = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.broadcastToFlxUI = this.autoBounds = !0;
                ka.call(this, a, b)
            };
            g["flixel.addons.ui.FlxUIGroup"] = Ja;
            Ja.__name__ = "flixel.addons.ui.FlxUIGroup";
            Ja.__interfaces__ = [Ec];
            Ja.__super__ = ka;
            Ja.prototype = n(ka.prototype, {
                destroy: function() {
                    ka.prototype.destroy.call(this)
                },
                add: function(a) {
                    a = ka.prototype.add.call(this, a);
                    this.autoBounds && this.calcBounds();
                    return a
                },
                remove: function(a, b) {
                    null == b && (b = !1);
                    a = ka.prototype.remove.call(this, a, b);
                    this.autoBounds && this.calcBounds();
                    return a
                },
                setScrollFactor: function(a, b) {
                    for (var c = 0, d = this.group.members; c < d.length;) {
                        var e =
                            d[c];
                        ++c;
                        null != e && e.scrollFactor.set(a, b)
                    }
                },
                hasThis: function(a) {
                    for (var b = 0, c = this.group.members; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (d == a) return !0
                    }
                    return !1
                },
                calcBounds: function(a) {
                    if (null != this.group.members && 0 < this.group.members.length) {
                        for (var b = Infinity, c = -Infinity, d = Infinity, e = -Infinity, f = 0, k = this.group.members; f < k.length;) {
                            var p = k[f];
                            ++f;
                            null != p && (oa.__implements(p, Ec) ? (p.x < b && (b = p.x), p.x + p.get_width() > c && (c = p.x + p.get_width()), p.y < d && (d = p.y), p.y + p.get_height() > e && (e = p.y + p.get_height())) : p instanceof G && (p.x < b && (b = p.x), p.x > c && (c = p.x), p.y < d && (d = p.y), p.y > e && (e = p.y)))
                        }
                        this.set_width(c - b);
                        this.set_height(e - d);
                        null != a && (a.x = b, a.y = d, a.width = this.get_width(), a.height = this.get_height())
                    } else this.set_width(this.set_height(0))
                },
                __class__: Ja
            });
            var Qa = function(a, b, c, d, e, f) {
                this._scaledAssets = [];
                this._assetsToCleanUp = [];
                this._safe_input_delay_elapsed = 0;
                this._curr_mode = "";
                this._pointX = this._pointY = 1;
                this._postLoaded = !1;
                this.getTextFallback = this.cursorLists = null;
                this.failed_by = 0;
                this.failed = !1;
                this.safe_input_delay_time =
                    .01;
                this.do_safe_input_delay = !0;
                Ja.call(this);
                this._ptr_tongue = d;
                this._ptr = b;
                null != c && this.setSuperIndex(c);
                if (null != f)
                    for (this._variable_index = new aa, b = aa.keysIterator(f.h); b.hasNext();) c = b.next(), this._variable_index.h[c] = f.h[c];
                null != a && this.load(a)
            };
            g["flixel.addons.ui.FlxUI"] = Qa;
            Qa.__name__ = "flixel.addons.ui.FlxUI";
            Qa.__interfaces__ = [je];
            Qa.event = function(a, b, c, d) {
                var e = Qa.getLeafUIState();
                null != e && e.getEvent(a, b, c, d)
            };
            Qa.fontSize = function(a, b) {
                var c = Qa.getLeafUIState()._tongue;
                c = null != c ? c : null;
                null != c && (b = c.getFontSize(a, b));
                return b
            };
            Qa.font = function(a, b, c) {
                null == c && (c = ".ttf");
                null == b && (b = "");
                var d = Qa.getLeafUIState()._tongue;
                d = null != d ? d : null;
                null != d && (a = d.getFont(a));
                return y.font(a, b, c)
            };
            Qa.forceFocus = function(a, b) {
                var c = Qa.getLeafUIState();
                null != c && c.forceFocus(a, b)
            };
            Qa.getLeafUIState = function() {
                var a = q.game._state;
                if (null != a)
                    for (; null != a.subState;) a = a.subState;
                return oa.__implements(a, Yb) ? a : null
            };
            Qa.consolidateData = function(a, b, c) {
                null == c && (c = !1);
                if (null == a && null != b) return b;
                if (null ==
                    b) return a;
                b = S.parse(tf.print(b)).firstElement();
                for (var d = a.attributes(); d.hasNext();) {
                    var e = d.next(),
                        f = Lb.resolve(a, e);
                    b.set(e, f)
                }
                if (a.nodeType == S.Document) f = "Document";
                else {
                    if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                    f = a.nodeName
                }
                if (b.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                b.nodeName = f;
                Db.resolve(a, "name") || Db.resolve(a,
                    "id") ? b.set("name", y.xml_name(a)) : b.set("name", "");
                for (f = a.elements(); f.hasNext();) {
                    var k = f.next();
                    if (k.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == k.nodeType ? "null" : Va.toString(k.nodeType)));
                    d = k.nodeName;
                    var p = !c;
                    if (c) {
                        e = b.elementsNamed(d);
                        var m = e.next();
                        if (1 == tb.resolve(a, d).length && null != m && 0 == e.hasNext())
                            for (d = k.attributes(); d.hasNext();) e = d.next(), m.set(e, k.get(e));
                        else p = !0
                    }
                    p && b.insertChild(S.parse(tf.print(k)).firstElement(), 0)
                }
                if (b.nodeType != S.Document &&
                    b.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == b.nodeType ? "null" : Va.toString(b.nodeType)));
                return b
            };
            Qa.sortParams = function(a, b) {
                return a.sort < b.sort ? -1 : a.sort > b.sort ? 1 : 0
            };
            Qa.__super__ = Ja;
            Qa.prototype = n(Ja.prototype, {
                set_focus: function(a) {
                    if (null != this.focus) this.onFocusLost(this.focus);
                    this.focus = a;
                    if (null != this.focus) this.onFocus(this.focus);
                    return a
                },
                getEvent: function(a, b, c, d) {
                    if (null != this._ptr && (this._ptr.getEvent(a, b, c, d), "post_load" == a))
                        for (a = aa.keysIterator(this._asset_index.h); a.hasNext();) d =
                            a.next(), d = this._asset_index.h[d], d instanceof Qa && d.getEvent("post_load", b, c)
                },
                getRequest: function(a, b, c, d) {
                    return null != this._ptr ? this._ptr.getRequest(a, b, c, d) : null
                },
                onFocus: function(a) {
                    if (a instanceof xf)
                        for (var b = 0, c = this.group.members; b < c.length;) {
                            var d = c[b];
                            ++b;
                            this.setWidgetSuppression(d, a)
                        }
                },
                setWidgetSuppression: function(a, b, c) {
                    null == c && (c = !0);
                    if (oa.__implements(a, ne)) {
                        var d = !1;
                        a instanceof xf && a == b && (d = !0);
                        d || a.set_skipButtonUpdate(c)
                    } else if (a instanceof Ja)
                        for (d = 0, a = a.group.members; d < a.length;) {
                            var e =
                                a[d];
                            ++d;
                            this.setWidgetSuppression(e, b, c)
                        }
                },
                onFocusLost: function(a) {
                    if (a instanceof xf) {
                        a = 0;
                        for (var b = this.group.members; a < b.length;) {
                            var c = b[a];
                            ++a;
                            this.setWidgetSuppression(c, null, !1)
                        }
                    }
                },
                setSuperIndex: function(a) {
                    this._superIndexUI = a
                },
                update: function(a) {
                    if (this.do_safe_input_delay)
                        if (this._safe_input_delay_elapsed += q.elapsed, this._safe_input_delay_elapsed > this.safe_input_delay_time) this.do_safe_input_delay = !1;
                        else return;
                    Ja.prototype.update.call(this, a)
                },
                addAsset: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = "");
                    if (Object.prototype.hasOwnProperty.call(this._asset_index.h, b)) return !1;
                    c = this.getGroup(c, d);
                    null != c ? c.add(a) : this.add(a);
                    this._asset_index.h[b] = a;
                    return !0
                },
                destroy: function() {
                    if (null != this._group_index) {
                        for (var a = aa.keysIterator(this._group_index.h); a.hasNext();) {
                            var b = a.next(),
                                c = this._group_index;
                            Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b]
                        }
                        this._group_index = null
                    }
                    if (null != this._asset_index) {
                        for (a = aa.keysIterator(this._asset_index.h); a.hasNext();) b = a.next(), c = this._asset_index,
                            Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
                        this._asset_index = null
                    }
                    if (null != this._tag_index) {
                        for (a = aa.keysIterator(this._tag_index.h); a.hasNext();) b = a.next(), Tc.clearArray(this._tag_index.h[b]), c = this._tag_index, Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
                        this._tag_index = null
                    }
                    if (null != this._definition_index) {
                        for (a = aa.keysIterator(this._definition_index.h); a.hasNext();) b = a.next(), c = this._definition_index, Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
                        this._definition_index =
                            null
                    }
                    if (null != this._variable_index) {
                        for (a = aa.keysIterator(this._variable_index.h); a.hasNext();) b = a.next(), c = this._variable_index, Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
                        this._variable_index = null
                    }
                    if (null != this._mode_index) {
                        for (a = aa.keysIterator(this._mode_index.h); a.hasNext();) b = a.next(), c = this._mode_index, Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
                        this._mode_index = null
                    }
                    this._ptr_tongue = this._superIndexUI = this._ptr = null;
                    if (null != this.cursorLists) {
                        a = 0;
                        for (b = this.cursorLists; a <
                            b.length;) c = b[a], ++a, Tc.clearArray(c);
                        Tc.clearArray(this.cursorLists)
                    }
                    this.cursorLists = null;
                    Tc.clearArray(this._failure_checks);
                    this._failure_checks = null;
                    Tc.clearArray(this._assetsToCleanUp);
                    this._assetsToCleanUp = null;
                    Tc.clearArray(this._scaledAssets);
                    this._scaledAssets = null;
                    Ja.prototype.destroy.call(this)
                },
                load: function(a) {
                    this._group_index = new aa;
                    this._asset_index = new aa;
                    this._tag_index = new aa;
                    this._definition_index = new aa;
                    null == this._variable_index && (this._variable_index = new aa);
                    this._mode_index =
                        new aa;
                    if (null != a) {
                        if (null == this._superIndexUI) {
                            var b = new Rf(0, 0, q.width, q.height);
                            b.name = "screen";
                            this.addAsset(b, "screen");
                            if (Fa.resolve(a, "screen_override") && this._loadTest(Xa.resolve(a, "screen_override"))) {
                                var c = Xa.resolve(a, "screen_override");
                                this._loadPosition(c, b);
                                b.set_width(this._loadWidth(c, q.width));
                                b.set_height(this._loadHeight(c, q.height))
                            }
                        }
                        this._data = a;
                        if (Fa.resolve(a, "inject"))
                            for (; Fa.resolve(a, "inject");) {
                                var d = Xa.resolve(a, "inject");
                                b = y.xml_name(d);
                                var e = y.xml(b, "xml", !1);
                                if (null !=
                                    e) {
                                    var f = d.parent,
                                        k = 0;
                                    b = 0;
                                    for (c = f.children; b < c.length;) {
                                        var p = c[b];
                                        ++b;
                                        if (p == d) break;
                                        ++k
                                    }
                                    if (f.removeChild(d))
                                        for (b = 0, c = e.elements(); c.hasNext();) d = c.next(), f.insertChild(d, k + b), ++b
                                }
                            }
                        if (Fa.resolve(a, "include"))
                            for (b = 0, c = tb.resolve(a, "include"); b < c.length;)
                                if (f = c[b], ++b, f = y.xml_name(f), f = y.xml(f), null != f) {
                                    e = 0;
                                    for (p = tb.resolve(f, "definition"); e < p.length;) k = p[e], ++e, d = "include:" + y.xml_name(k), this.unparentXML(k), this._definition_index.h[d] = k;
                                    Fa.resolve(f, "point_size") && this._loadPointSize(f);
                                    if (Fa.resolve(f,
                                            "default"))
                                        for (k = 0, f = tb.resolve(f, "default"); k < f.length;) d = f[k], ++k, this._loadTest(d) && (e = y.xml_name(d), this.unparentXML(d), this._definition_index.h["default:" + e] = d)
                                }
                        Fa.resolve(a, "point_size") && this._loadPointSize(a);
                        if (Fa.resolve(a, "definition"))
                            for (b = 0, c = tb.resolve(a, "definition"); b < c.length;) k = c[b], ++b, this._loadTest(k) && (d = y.xml_name(k), f = "", -1 != d.indexOf("default:") && (f = "'default:'"), -1 != d.indexOf("include:") && (f = "'include:'"), "" == f && (this.unparentXML(k), this._definition_index.h[d] = k));
                        if (Fa.resolve(a,
                                "default"))
                            for (b = 0, c = tb.resolve(a, "default"); b < c.length;) d = c[b], ++b, this._loadTest(d) && (e = y.xml_name(d), this.unparentXML(d), this._definition_index.h["default:" + e] = d);
                        if (Fa.resolve(a, "variable"))
                            for (b = 0, c = tb.resolve(a, "variable"); b < c.length;) k = c[b], ++b, this._loadTest(k) && (f = y.xml_name(k), k = y.xml_str(k, "value"), "" != f && (this._variable_index.h[f] = k));
                        if (Fa.resolve(a, "mode"))
                            for (b = 0, c = tb.resolve(a, "mode"); b < c.length;) k = c[b], ++b, this._loadTest(k) && (f = this.applyNodeConditionals(k), k = y.xml_name(k), this.unparentXML(f),
                                this._mode_index.h[k] = f);
                        if (Fa.resolve(a, "group"))
                            for (b = 0, c = tb.resolve(a, "group"); b < c.length;) k = c[b], ++b, this._loadTest(k) && (f = y.xml_name(k), d = y.xml_str(k, "custom"), k = null, "" != d && (d = this._ptr.getRequest("ui_get_group:", this, d), null != d && d instanceof Ja && (k = d)), null == k && (k = new Ja), k.name = f, this._group_index.h[f] = k, this.add(k));
                        if (null != a.firstElement())
                            for (b = a.elements(); b.hasNext();) c = b.next(), this._loadSub(c);
                        this._postLoad(a)
                    } else this._onFinishLoad()
                },
                unparentXML: function(a) {
                    return y.unparentXML(a)
                },
                _loadPointSize: function(a) {
                    var b = Xa.resolve(a, "point_size"),
                        c = -1;
                    null == c && (c = 0);
                    var d = this._loadWidth(b, c, "x");
                    b = Xa.resolve(a, "point_size");
                    c = -1;
                    null == c && (c = 0);
                    b = this._loadHeight(b, c, "y");
                    1 > b && 1 > d && (d = b = this._loadHeight(Xa.resolve(a, "point_size"), -1, "value"));
                    0 < b && (this._pointX = d);
                    0 < d && (this._pointY = b)
                },
                _loadSub: function(a, b) {
                    null == b && (b = 0);
                    if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                    var c = a.nodeName;
                    if (a.nodeType !=
                        S.Document && a.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                    if ("load_if" == c) {
                        if (this._loadTest(a) && null != a.firstElement())
                            for (a = a.elements(); a.hasNext();) {
                                var d = a.next();
                                this._loadSub(d, b + 1)
                            }
                    } else if (d = null, b = y.xml_name(a), Db.resolve(a, "group") && (d = Lb.resolve(a, "group"), d = this.getGroup(d)), c = this._loadThing(c, a), null != c) {
                        this._loadGlobals(a, c);
                        if (null != b && "" != b) {
                            this._asset_index.h[b] = c;
                            c.name = b;
                            var e = y.xml_str(a, "tags");
                            "" != e && (e = e.split(","),
                                this._addTags(e, b))
                        }
                        this._loadTooltip(c, a);
                        null != d ? d.add(c) : this.add(c);
                        this._loadPosition(a, c)
                    }
                },
                _addTags: function(a, b) {
                    for (var c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        Object.prototype.hasOwnProperty.call(this._tag_index.h, d) || (this._tag_index.h[d] = []);
                        d = this._tag_index.h[d]; - 1 == d.indexOf(b) && d.push(b)
                    }
                },
                _loadGlobals: function(a, b) {
                    if (b instanceof J) {
                        var c = y.xml_bool(a, "visible", !0),
                            d = y.xml_bool(a, "active", !0),
                            e = y.xml_i(a, "num_id");
                        b.visible = c;
                        b.active = d;
                        b.ID = e;
                        b instanceof G && (a = y.xml_f(a, "alpha", 1), b.set_alpha(a))
                    }
                },
                _postLoad: function(a) {
                    this._postLoaded = !0;
                    if (null != a.firstElement())
                        for (var b = a.elements(); b.hasNext();) {
                            var c = b.next();
                            if (c.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                            var d = c.nodeName.toLowerCase();
                            if (c.nodeType != S.Document && c.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                            this._postLoadThing(d, c)
                        }
                    if (Fa.resolve(a, "mode"))
                        for (b = 0, c = tb.resolve(a, "mode"); b <
                            c.length;)
                            if (a = c[b], ++b, y.xml_bool(a, "is_default")) {
                                a = y.xml_name(a);
                                this.setMode(a);
                                break
                            }
                    if (null != this._failure_checks) {
                        b = 0;
                        for (c = this._failure_checks; b < c.length;)
                            if (a = c[b], ++b, this._checkFailure(a)) {
                                this.failed = !0;
                                break
                            }
                        y.clearArraySoft(this._failure_checks);
                        this._failure_checks = null
                    }
                    this._onFinishLoad()
                },
                _sendTo: function(a, b) {
                    var c = this.getAssetGroup(null, a);
                    if (null == c)
                        if (-1 != this.group.members.indexOf(a)) c = this;
                        else return;
                    if (-1 == b || 1 == b) switch (Y.remove(c.group.members, a), b) {
                        case -1:
                            c.group.members.splice(0,
                                0, a);
                            break;
                        case 1:
                            c.group.members.push(a)
                    }
                },
                setMode: function(a, b) {
                    null == b && (b = "");
                    if (this._curr_mode != a) {
                        var c = this.getMode(a);
                        this._curr_mode = a;
                        if ("" == b) {
                            if (null != c)
                                for (a = c.elements(); a.hasNext();) {
                                    b = a.next();
                                    c = b = this.applyNodeConditionals(b);
                                    if (c.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                                    var d = c.nodeName,
                                        e = "" == y.xml_str(c, "active") ? null : !0;
                                    null != e && (e = y.xml_bool(c, "active"));
                                    if (this._loadTest(b)) switch (d) {
                                        case "align":
                                            this._alignThing(b);
                                            break;
                                        case "change":
                                            this._changeThing(b);
                                            break;
                                        case "hide":
                                            this.showThing(y.xml_name(c), !1, e);
                                            break;
                                        case "position":
                                            c = y.xml_name(c);
                                            c = this.getAsset(c);
                                            null != c && this._loadPosition(b, c);
                                            break;
                                        case "show":
                                            this.showThing(y.xml_name(c), !0, e)
                                    }
                                }
                        } else b = this.getAsset(b), null != b && b instanceof Qa && oa.__cast(b, Qa).setMode(a, "")
                    }
                },
                showThing: function(a, b, c) {
                    null == b && (b = !0);
                    if (-1 != a.indexOf(",")) {
                        a = a.split(",");
                        for (var d = 0; d < a.length;) {
                            var e = a[d];
                            ++d;
                            var f = this.getAsset(e);
                            null != f ? (f.set_visible(b), null != c && f.set_active(c)) :
                                (f = this.getGroup(e), null != f && (f.set_visible(b), null != c && f.set_active(c)))
                        }
                    } else if ("*" != a) f = this.getAsset(a), null != f ? (f.set_visible(b), null != c && f.set_active(c)) : (f = this.getGroup(a), null != f && (f.set_visible(b), null != c && f.set_active(c)));
                    else
                        for (a = aa.keysIterator(this._asset_index.h); a.hasNext();) d = a.next(), "*" != d && this.showThing(d, b, c)
                },
                getGroup: function(a, b) {
                    null == b && (b = !0);
                    var c = this._group_index.h[a];
                    return null == c && b && null != this._superIndexUI ? this._superIndexUI.getGroup(a, b) : c
                },
                hasAsset: function(a,
                    b) {
                    null == b && (b = !0);
                    return Object.prototype.hasOwnProperty.call(this._asset_index.h, a) ? !0 : b && null != this._superIndexUI ? this._superIndexUI.hasAsset(a, b) : !1
                },
                getAsset: function(a, b) {
                    null == b && (b = !0);
                    var c = this._asset_index.h[a];
                    return null == c && b && null != this._superIndexUI ? this._superIndexUI.getAsset(a, b) : c
                },
                getAssetGroup: function(a, b) {
                    if (null == b && (null == a || "" == a)) return null;
                    null == b && (b = this.getAsset(a));
                    if (null == b) return null;
                    for (a = aa.keysIterator(this._group_index.h); a.hasNext();) {
                        var c = a.next();
                        c = this._group_index.h[c];
                        if (-1 != c.group.members.indexOf(b)) return c
                    }
                    return null
                },
                getMode: function(a, b) {
                    null == b && (b = !0);
                    var c = this._mode_index.h[a];
                    return null == c && b && null != this._superIndexUI ? this._superIndexUI.getMode(a, b) : c
                },
                checkVariable: function(a, b, c, d, e) {
                    null == e && (e = !0);
                    null == d && (d = "==");
                    a = this.getVariable(a, e);
                    return null != a ? y.compareStringVars(a, b, c, d) : y.compareStringVars("", b, c, d)
                },
                setVariable: function(a, b) {
                    this._variable_index.h[a] = b
                },
                getVariable: function(a, b) {
                    null == b && (b = !0);
                    var c = this._variable_index.h[a];
                    null ==
                        c && b && null != this._superIndexUI && (c = this._superIndexUI.getVariable(a, b));
                    return c
                },
                getDefinition: function(a, b) {
                    null == b && (b = !0);
                    var c = this._definition_index.h[a];
                    null == c && b && null != this._superIndexUI && (c = this._superIndexUI.getDefinition(a, b));
                    null == c && -1 == a.indexOf("include:") && (c = this.getDefinition("include:" + a, b));
                    return c
                },
                screenWidth: function() {
                    return this.hasAsset("screen") ? this.getAsset("screen").get_width() | 0 : q.width
                },
                screenHeight: function() {
                    return this.hasAsset("height") ? this.getAsset("screen").get_height() |
                        0 : q.height
                },
                applyNodeConditionals: function(a) {
                    if (Fa.resolve(a, "locale") || Fa.resolve(a, "haxedef")) {
                        a = S.parse(tf.print(a)).firstElement();
                        if (a.nodeType != S.Document && a.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                        Fa.resolve(a, "locale") && (a = this.applyNodeChanges(a, "locale"));
                        Fa.resolve(a, "haxedef") && (a = this.applyNodeChanges(a, "haxedef"));
                        Fa.resolve(a, "window") && (a = this.applyNodeChanges(a, "window"))
                    }
                    return a
                },
                applyNodeChanges: function(a, b) {
                    var c =
                        "";
                    if ("locale" == b) {
                        if (null == this._ptr_tongue) return a;
                        c = this._ptr_tongue.locale.toLowerCase()
                    }
                    var d = !1;
                    "haxedef" == b && (d = !0);
                    "window" == b && (c = q.width + "," + q.height);
                    var e = 0;
                    for (b = tb.resolve(a, b); e < b.length;) {
                        var f = b[e];
                        ++e;
                        var k = y.xml_name(f);
                        d && (c = "", y.checkHaxedef(k) && (c = k));
                        if (k == c && Fa.resolve(f, "change"))
                            for (k = 0, f = tb.resolve(f, "change"); k < f.length;) {
                                var p = f[k];
                                ++k;
                                for (var m = p.attributes(); m.hasNext();) {
                                    var h = m.next(),
                                        g = p.get(h);
                                    a.set(h, g)
                                }
                            }
                    }
                    return a
                },
                _loadThingGetInfo: function(a) {
                    if (a.nodeType !=
                        S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                    var b = this.getDefinition("default:" + a.nodeName),
                        c = null;
                    null != b && (c = Qa.consolidateData(a, b, !0));
                    null == c && (c = a);
                    a = y.xml_str(c, "use_def", !0);
                    b = null;
                    "" != a && (b = this.getDefinition(a));
                    c = Qa.consolidateData(c, b);
                    c = this.applyNodeConditionals(c);
                    return 0 == this._loadTest(c) ? null : c
                },
                _loadTooltip: function(a, b) {
                    if (Fa.resolve(b, "tooltip")) {
                        b = this._loadTooltipData(Xa.resolve(b, "tooltip"));
                        var c =
                            Qa.getLeafUIState();
                        a instanceof oe ? c.tooltips.add(a.button, b) : c.tooltips.add(a, b)
                    }
                },
                _loadTooltipData: function(a) {
                    var b = {
                            title: "",
                            body: "",
                            anchor: null,
                            style: {
                                titleFormat: null,
                                bodyFormat: null,
                                titleBorder: null,
                                bodyBorder: null,
                                titleOffset: null,
                                bodyOffset: null,
                                titleWidth: -1,
                                bodyWidth: -1,
                                background: null,
                                borderSize: -1,
                                borderColor: null,
                                arrow: null,
                                autoSizeVertical: null,
                                autoSizeHorizontal: null,
                                leftPadding: -1,
                                rightPadding: -1,
                                topPadding: -1,
                                bottomPadding: -1
                            }
                        },
                        c = this.getDefinition("default:tooltip");
                    null != c && (a =
                        Qa.consolidateData(a, c, !0));
                    Db.resolve(a, "use_def") && (c = y.xml_str(a, "use_def", !0), c = this.getDefinition(c), null != c && (a = Qa.consolidateData(a, c, !0)));
                    Db.resolve(a, "text") && this._loadTooltipText(a, "text", b);
                    Fa.resolve(a, "title") && this._loadTooltipText(Xa.resolve(a, "title"), "text", b);
                    Fa.resolve(a, "body") && this._loadTooltipText(Xa.resolve(a, "body"), "text", b);
                    b.anchor = this._loadAnchor(a);
                    this._loadTooltipStyle(a, b);
                    return b
                },
                _loadTooltipStyle: function(a, b) {
                    b.style.background = y.xml_color(a, "background");
                    b.style.borderSize = y.xml_i(a, "border", -1);
                    b.style.borderColor = y.xml_color(a, "border_color");
                    if (Db.resolve(a, "arrow")) {
                        var c = "";
                        if (null != a.get("arrow"))
                            if (c = a.get("arrow"), "" == c || null == c) c = "";
                            else {
                                c = y.gfx(c);
                                try {
                                    if (!ta.exists(c, "IMAGE")) throw F.thrown('couldn\'t load bmp "arrow"');
                                } catch (d) {
                                    if (Ca.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
                                }
                            }
                    } else c = null;
                    b.style.arrow = c;
                    b.style.autoSizeHorizontal = y.xml_bool(a, "auto_size_horizontal", !0);
                    b.style.autoSizeVertical = y.xml_bool(a, "auto_size_vertical", !0);
                    c = this._loadHeight(a, -1, "pad_all") | 0; - 1 != c ? b.style.leftPadding = b.style.rightPadding = b.style.topPadding = b.style.bottomPadding = c : (c = this._loadWidth(a, 0, "pad_left") | 0, b.style.leftPadding = c, c = this._loadWidth(a, 0, "pad_right") | 0, b.style.rightPadding = c, c = this._loadHeight(a, 0, "pad_top") | 0, b.style.topPadding = c, c = this._loadHeight(a, 0, "pad_bottom") | 0, b.style.bottomPadding = c)
                },
                _loadTooltipText: function(a, b, c) {
                    if (a.nodeType == S.Document) var d = "Document";
                    else {
                        if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " +
                            (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                        d = a.nodeName
                    }
                    b = this._loadString(a, b);
                    var e = new X(this._loadWidth(a, 0, "x"), this._loadHeight(a, 0, "y"));
                    if (Db.resolve(a, "use_def")) {
                        var f = y.xml_str(a, "use_def", !0);
                        f = this.getDefinition(f);
                        null != f && (a = Qa.consolidateData(a, f))
                    }
                    f = this._loadBorder(a);
                    var k = this._loadFontDef(a),
                        p = y.xml_color(a, "color", !0, -16777216);
                    k.format.color = p;
                    a = this._loadWidth(a, -1, "width") | 0;
                    switch (d) {
                        case "body":
                            "" != b && (c.body = b);
                            c.style.bodyOffset = e;
                            c.style.bodyFormat = k;
                            c.style.bodyWidth =
                                a;
                            c.style.bodyBorder = f;
                            break;
                        case "title":
                        case "tooltip":
                            "" != b && (c.title = b), c.style.titleOffset = e, c.style.titleFormat = k, c.style.titleWidth = a, c.style.titleBorder = f
                    }
                },
                _loadAnchor: function(a) {
                    var b = this._loadWidth(a, 0, "x"),
                        c = this._loadHeight(a, 0, "y");
                    if (Fa.resolve(a, "anchor")) {
                        var d = y.xml_str(Xa.resolve(a, "anchor"), "x", !0, "right"),
                            e = y.xml_str(Xa.resolve(a, "anchor"), "y", !0, "top"),
                            f = y.xml_str(Xa.resolve(a, "anchor"), "x-flush", !0, "left");
                        a = y.xml_str(Xa.resolve(a, "anchor"), "y-flush", !0, "top");
                        return new uf(b,
                            c, d, e, f, a)
                    }
                    return null
                },
                _loadThing: function(a, b) {
                    var c = this._loadThingGetInfo(b);
                    if (null == c) return null;
                    switch (a) {
                        case "align":
                            return this._alignThing(c, !0), null;
                        case "bar":
                            return this._loadBar(c);
                        case "box":
                            return this._loadBox(c);
                        case "button":
                            return this._loadButton(c);
                        case "button_toggle":
                            return this._loadButton(c, !0, !0);
                        case "change":
                            return this._changeThing(c), null;
                        case "checkbox":
                            return this._loadCheckBox(c);
                        case "failure":
                            return null == this._failure_checks && (this._failure_checks = []), this.unparentXML(c),
                                this._failure_checks.push(c), null;
                        case "input_text":
                            return this._loadInputText(c);
                        case "line":
                            return this._loadLine(c);
                        case "default":
                        case "group":
                        case "include":
                        case "inject":
                        case "load_if":
                        case "mode":
                            return null;
                        case "chrome":
                        case "nine_slice":
                        case "nine_slice_sprite":
                        case "nineslice":
                        case "nineslicesprite":
                            return this._load9SliceSprite(c);
                        case "num_stepper":
                        case "numeric_stepper":
                        case "numstepper":
                            return this._loadNumericStepper(c);
                        case "position":
                            return this.name = y.xml_name(c), a = this.getAsset(this.name),
                                null != a && this._loadPosition(c, a), null;
                        case "dropdown":
                        case "dropdown_menu":
                        case "pulldown":
                        case "pulldown_menu":
                            return this._loadDropDownMenu(c);
                        case "radio_group":
                            return this._loadRadioGroup(c);
                        case "region":
                            return this._loadRegion(c);
                        case "sprite":
                            return this._loadSprite(c);
                        case "tab_menu":
                            return this._loadTabMenu(c);
                        case "text":
                            return this._loadText(c);
                        case "tile_test":
                            return this._loadTileTest(c);
                        case "layout":
                        case "ui":
                            return this._loadLayout(c);
                        default:
                            return this._ptr.getRequest("ui_get:" +
                                a, this, c, [b])
                    }
                },
                _loadScale: function(a, b, c) {
                    null == c && (c = "scale");
                    null == b && (b = 1);
                    return this._loadHeight(a, b, c, "none")
                },
                _loadScaleX: function(a, b) {
                    null == b && (b = 1);
                    return this._loadWidth(a, b, "scale_x", "none")
                },
                _loadScaleY: function(a, b) {
                    null == b && (b = 1);
                    return this._loadHeight(a, b, "scale_y", "none")
                },
                _loadWidth: function(a, b, c, d) {
                    null == d && (d = "");
                    null == c && (c = "width");
                    null == b && (b = 10);
                    c = y.xml_str(a, c, !0, null == b ? "null" : "" + b);
                    a = this.getRound(a, d);
                    return this.doRound(this._getDataSize("w", c, b), a)
                },
                _loadHeight: function(a,
                    b, c, d) {
                    null == d && (d = "");
                    null == c && (c = "height");
                    null == b && (b = 10);
                    c = y.xml_str(a, c, !0, null == b ? "null" : "" + b);
                    a = this.getRound(a, d);
                    return this.doRound(this._getDataSize("h", c, b), a)
                },
                _loadCompass: function(a, b) {
                    null == b && (b = "resize_point");
                    a = y.xml_str(a, b, !0, "nw");
                    b = X._pool.get().set(0, 0);
                    b._inPool = !1;
                    switch (a) {
                        case "c":
                        case "center":
                        case "m":
                        case "mid":
                            b.set_x(.5);
                            b.set_y(.5);
                            break;
                        case "ll":
                        case "sw":
                            b.set_x(0);
                            b.set_y(1);
                            break;
                        case "n":
                        case "u":
                            b.set_x(.5);
                            b.set_y(0);
                            break;
                        case "nw":
                        case "ul":
                            b.set_x(0);
                            b.set_y(0);
                            break;
                        case "e":
                        case "r":
                            b.set_x(1);
                            b.set_y(.5);
                            break;
                        case "s":
                            b.set_x(.5);
                            b.set_y(1);
                            break;
                        case "lr":
                        case "se":
                            b.set_x(1);
                            b.set_y(1);
                            break;
                        case "ne":
                        case "ur":
                            b.set_x(1);
                            b.set_y(0);
                            break;
                        case "w":
                            b.set_x(.5), b.set_y(0)
                    }
                    return b
                },
                _changeThing: function(a) {
                    var b = y.xml_name(a);
                    b = this.getAsset(b);
                    if (null != b) {
                        for (var c = -1, d = -1, e, f, k = a.attributes(); k.hasNext();) switch (k.next()) {
                            case "height":
                                d = this._loadHeight(a);
                                break;
                            case "label":
                                var p = y.xml_str(a, "label");
                                e = y.xml_str(a, "context", !0, "ui");
                                f = y.xml_str(a,
                                    "code", !0, "");
                                p = this.getText(p, e, !0, f);
                                oa.__implements(b, pg) && b.getLabel().set_text(p);
                                break;
                            case "text":
                                if (b instanceof Uc) {
                                    p = y.xml_str(a, "text");
                                    e = y.xml_str(a, "context", !0, "ui");
                                    var m = b;
                                    f = y.xml_str(a, "code", !0, "");
                                    m.set_text(this.getText(p, e, !0, f))
                                }
                                break;
                            case "width":
                                c = this._loadWidth(a)
                        }!oa.__implements(b, ec) || -1 == c && -1 == d || (-1 == c && (c = b.get_width()), -1 == d && (d = b.get_height()), b.resize(c, d));
                        if (Fa.resolve(a, "param") && oa.__implements(b, Ad)) {
                            c = null;
                            if (Fa.resolve(a, "param")) {
                                c = [];
                                d = 0;
                                for (a = tb.resolve(a,
                                        "param"); d < a.length;)
                                    if (f = a[d], ++d, Db.resolve(f, "type") && Db.resolve(f, "value")) {
                                        k = Lb.resolve(f, "type");
                                        k = k.toLowerCase();
                                        p = e = Lb.resolve(f, "value");
                                        f = y.xml_i(f, "sort", -1);
                                        switch (k) {
                                            case "bool":
                                            case "boolean":
                                                e = new String(e);
                                                e = e.toLowerCase();
                                                p = "true" == e || "1" == e ? !0 : !1;
                                                break;
                                            case "color":
                                            case "hex":
                                                k = Pb.fromString(e);
                                                if (null == k) throw F.thrown("U.parseHex() unable to parse hex String " + e);
                                                p = k;
                                                break;
                                            case "float":
                                                p = parseFloat(e);
                                                break;
                                            case "int":
                                                p = I.parseInt(e);
                                                break;
                                            case "string":
                                                p = new String(e)
                                        }
                                        c.push({
                                            sort: f,
                                            value: p
                                        })
                                    }
                                c.sort(Qa.sortParams);
                                d = 0;
                                for (a = c.length; d < a;) e = d++, c[e] = c[e].value
                            }
                            b.set_params(c)
                        }
                    }
                },
                _alignThing: function(a, b) {
                    if (Fa.resolve(a, "objects")) {
                        b = 0;
                        for (var c = tb.resolve(a, "objects"); b < c.length;) {
                            var d = c[b];
                            ++b;
                            d = y.xml_str(d, "value", !0, "").split(",");
                            var e = y.xml_str(a, "axis", !0);
                            if ("horizontal" != e && "vertical" != e) throw F.thrown(new cb('FlxUI._alignThing(): axis must be "horizontal" or "vertical"!'));
                            var f = "horizontal" == e ? this._getDataSize("w", y.xml_str(a, "spacing", !0), -1) : this._getDataSize("h",
                                y.xml_str(a, "spacing", !0), -1);
                            var k = y.xml_bool(a, "resize"),
                                p = y.xml_bool(a, "grow", !0),
                                m = y.xml_bool(a, "shrink", !0),
                                h = -1,
                                g = -1;
                            null == g && (g = 0);
                            null == h && (h = 0);
                            h = X._pool.get().set(h, g);
                            h._inPool = !1;
                            g = "";
                            Fa.resolve(a, "bounds") && ("horizontal" == e ? (h.set_x(this._getDataSize("w", y.xml_str(Xa.resolve(a, "bounds"), "left"), -1)), h.set_y(this._getDataSize("w", y.xml_str(Xa.resolve(a, "bounds"), "right"), -1))) : "vertical" == e && (h.set_x(this._getDataSize("h", y.xml_str(Xa.resolve(a, "bounds"), "top"), -1)), h.set_y(this._getDataSize("h",
                                y.xml_str(Xa.resolve(a, "bounds"), "bottom"), -1)))); - 1 != h.x && -1 != h.y ? h.y <= h.x && (g = "bounds max must be > bounds min! (max=" + h.y + " min=" + h.x + ")") : g = "missing bound!";
                            "" == g && this._doAlign(d, e, f, k, h, p, m);
                            if (Fa.resolve(a, "anchor") || Db.resolve(a, "x") || Db.resolve(a, "y"))
                                for (e = 0; e < d.length;) f = d[e], ++e, f = this.getAsset(f), this._loadPosition(a, f)
                        }
                    } else throw F.thrown(new cb("FlxUI._alignThing(): <objects> node not found!"));
                },
                _doAlign: function(a, b, c, d, e, f, k) {
                    null == k && (k = !0);
                    null == f && (f = !0);
                    var p = 0,
                        m = e.y - e.x,
                        h =
                        a.length - 1,
                        g = 0,
                        l = "width",
                        q = "x";
                    "vertical" == b && (l = "height", q = "y");
                    for (var r = 0; r < a.length;) {
                        var D = a[r];
                        ++r;
                        D = this.getAsset(D);
                        if (null != D) {
                            var n = 0;
                            switch (l) {
                                case "height":
                                    n = D.get_height();
                                    break;
                                case "width":
                                    n = D.get_width()
                            }
                            p += n
                        }
                    }
                    0 == d ? p = (m - p) / h : (p = c, g = (m - c * h) / a.length);
                    g |= 0;
                    p |= 0;
                    e = e.x;
                    for (r = 0; r < a.length;)
                        if (D = a[r], ++r, D = this.getAsset(D), null != D) {
                            c = e;
                            if (d) oa.__implements(D, ec) && (e = !0, m = D, "vertical" == b ? (g > m.get_width() ? e = f : g < m.get_width() && (e = k), e && m.resize(m.get_width(), g)) : "horizontal" == b && (g > m.get_height() ?
                                e = f : g < m.get_height() && (e = k), e && m.resize(g, m.get_height())));
                            else switch (l) {
                                case "height":
                                    g = D.get_height();
                                    break;
                                case "width":
                                    g = D.get_width()
                            }
                            e = c + g + p;
                            switch (q) {
                                case "x":
                                    D.set_x(c);
                                    break;
                                case "y":
                                    D.set_y(c)
                            }
                        }
                },
                _checkFailure: function(a) {
                    var b = y.xml_str(a, "target", !0),
                        c = y.xml_str(a, "property", !0),
                        d = y.xml_str(a, "compare", !0);
                    a = y.xml_str(a, "value", !0);
                    var e = this.getAsset(b);
                    if (null == e) return !1;
                    var f = b = 0,
                        k = y.perc_to_float(a);
                    switch (c) {
                        case "h":
                        case "height":
                            b = e.get_height();
                            break;
                        case "w":
                        case "width":
                            b =
                                e.get_width()
                    }
                    if (isNaN(k))
                        if (y.isStrNum(a)) f = parseFloat(a);
                        else return !1;
                    else switch (c) {
                        case "h":
                        case "height":
                            f = k * this.screenHeight();
                            break;
                        case "w":
                        case "width":
                            f = k * this.screenWidth()
                    }
                    c = !1;
                    switch (d) {
                        case "<":
                            b < f && (this.failed_by = f - b, c = !0);
                            break;
                        case "<=":
                            b <= f && (this.failed_by = f - b, c = !0);
                            break;
                        case "=":
                        case "==":
                            b == f && (this.failed_by = Math.abs(b - f), c = !0);
                            break;
                        case ">":
                            b > f && (this.failed_by = b - f, c = !0);
                            break;
                        case ">=":
                            b >= f && (this.failed_by = b - f, c = !0)
                    }
                    return c
                },
                _resizeThing: function(a, b) {
                    var c = !1,
                        d = a.get_width(),
                        e = a.get_height();
                    d < b.min_width ? (c = !0, d = b.min_width) : d > b.max_width && (c = !0, d = b.max_width);
                    e < b.min_height ? (c = !0, e = b.min_height) : e > b.max_height && (c = !0, e = b.max_height);
                    c && a.resize(d, e)
                },
                _postLoadThing: function(a, b) {
                    if ("load_if" == a) {
                        if (this._loadTest(b) && null != b.firstElement())
                            for (var c = b.elements(); c.hasNext();) {
                                var d = c.next();
                                if (d.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" : Va.toString(d.nodeType)));
                                b = d.nodeName.toLowerCase();
                                if (d.nodeType !=
                                    S.Document && d.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == d.nodeType ? "null" : Va.toString(d.nodeType)));
                                this._postLoadThing(b, d)
                            }
                    } else if (0 != this._loadTest(b)) {
                        var e = y.xml_name(b);
                        c = this.getAsset(e);
                        (d = "group" == a) && (c = this.getGroup(e));
                        "align" == a && this._alignThing(b);
                        "change" == a && this._changeThing(b);
                        if ("position" == a) this._loadPosition(b, c);
                        else if ("cursor" == a && this._loadCursor(b), null != c || d) {
                            if (!d) {
                                a = y.xml_str(b, "use_def", !0);
                                "" != a && this.getDefinition(a);
                                if (oa.__implements(c, ec)) {
                                    a =
                                        this._getDataSize("w", y.xml_str(b, "width"));
                                    e = this._getDataSize("h", y.xml_str(b, "height"));
                                    if (0 == a || a == c.get_width()) a = null;
                                    if (0 == e || e == c.get_height()) e = null;
                                    var f = this.calcMaxMinSize(b);
                                    null != f && (null != a && (a < f.min_width && (a = f.min_width), a > f.max_width && (a = f.max_width), f.min_width = f.max_width = a), null != e && (e < f.min_height && (e = f.min_height), e > f.max_height && (e = f.max_height), f.min_height = f.max_height = e), this._resizeThing(oa.__cast(c, ec), f))
                                }
                                a = -c.x;
                                e = -c.y;
                                null == e && (e = 0);
                                null == a && (a = 0);
                                f = c;
                                f.set_x(f.x + a);
                                f = c;
                                f.set_y(f.y + e);
                                this._loadPosition(b, c)
                            }
                            b = y.xml_str(b, "send_to", !0, "");
                            if ("" != b) switch (b) {
                                case "back":
                                case "bottom":
                                    this._sendTo(c, -1);
                                    break;
                                case "front":
                                case "top":
                                    this._sendTo(c, 1)
                            }!d && c instanceof Qa && 0 == c._postLoaded && c.getEvent("post_load", this, null)
                        }
                    }
                },
                _loadTileTest: function(a) {
                    var b = y.xml_i(a, "tiles_w", 2),
                        c = y.xml_i(a, "tiles_h", 2),
                        d = this._loadWidth(a),
                        e = this._loadHeight(a),
                        f = this.calcMaxMinSize(a);
                    d < f.min_width && (d = f.min_width);
                    e < f.min_height && (e = f.min_height);
                    d = d / b | 0;
                    e = e / c | 0;
                    d < e ? e = d : e < d &&
                        (d = e);
                    d * b > f.max_width && (d = f.max_width / b | 0);
                    e * c > f.max_height && (e = f.max_height / c | 0);
                    d < e ? e = d : e < d && (d = e);
                    2 > d && (d = 2);
                    2 > e && (e = 2);
                    var k = Pb.fromString(y.xml_str(a, "color1", !0, "0x808080")),
                        p = Pb.fromString(y.xml_str(a, "color2", !0, "0xc4c4c4"));
                    f = y.xml_i(a, "base_tile_size", -1);
                    a = y.xml_bool(a, "floor_to_even", !1);
                    b = new gh(0, 0, d, e, b, c, k, p, a);
                    b.baseTileSize = f;
                    return b
                },
                _loadString: function(a, b) {
                    b = y.xml_str(a, b);
                    var c = y.xml_str(a, "context", !0, "ui");
                    a = y.xml_str(a, "code", !0, "");
                    return b = this.getText(b, c, !0, a)
                },
                _loadText: function(a) {
                    var b =
                        y.xml_str(a, "text"),
                        c = y.xml_str(a, "context", !0, "ui"),
                        d = y.xml_str(a, "code", !0, "");
                    b = this.getText(b, c, !0, d);
                    d = this._loadWidth(a, 100) | 0;
                    c = this._loadHeight(a, -1) | 0;
                    var e = this._loadFontFace(a);
                    if (y.xml_bool(a, "input")) throw F.thrown(new cb("FlxUI._loadText(): <text> with input has been deprecated. Use <input_text> instead."));
                    var f = y.xml_str(a, "align");
                    "" == f && (f = null);
                    var k = this._loadHeight(a, 8, "size", "floor") | 0,
                        p = this._loadColor(a),
                        m = this._loadBorder(a);
                    d = new Uc(0, 0, d, b, k);
                    d.setFormat(e, k, p, f);
                    m.apply(d);
                    d.drawFrame();
                    if (Fa.resolve(a, "param")) {
                        e = null;
                        if (Fa.resolve(a, "param")) {
                            e = [];
                            f = 0;
                            for (a = tb.resolve(a, "param"); f < a.length;)
                                if (p = a[f], ++f, Db.resolve(p, "type") && Db.resolve(p, "value")) {
                                    m = Lb.resolve(p, "type");
                                    m = m.toLowerCase();
                                    var h = k = Lb.resolve(p, "value");
                                    p = y.xml_i(p, "sort", -1);
                                    switch (m) {
                                        case "bool":
                                        case "boolean":
                                            k = new String(k);
                                            k = k.toLowerCase();
                                            h = "true" == k || "1" == k ? !0 : !1;
                                            break;
                                        case "color":
                                        case "hex":
                                            m = Pb.fromString(k);
                                            if (null == m) throw F.thrown("U.parseHex() unable to parse hex String " + k);
                                            h = m;
                                            break;
                                        case "float":
                                            h = parseFloat(k);
                                            break;
                                        case "int":
                                            h = I.parseInt(k);
                                            break;
                                        case "string":
                                            h = new String(k)
                                    }
                                    e.push({
                                        sort: p,
                                        value: h
                                    })
                                }
                            e.sort(Qa.sortParams);
                            f = 0;
                            for (a = e.length; f < a;) k = f++, e[k] = e[k].value
                        }
                        d.set_params(e)
                    }
                    0 < c && d.get_height() != c && oa.__implements(d, ec) && d.resize(d.get_width(), c);
                    d.set_text(" ");
                    d.set_text(b);
                    return d
                },
                _loadInputText: function(a) {
                    var b = y.xml_str(a, "text"),
                        c = y.xml_str(a, "context", !0, "ui"),
                        d = y.xml_str(a, "code", !0, "");
                    b = this.getText(b, c, !0, d);
                    var e = this._loadWidth(a, 100) | 0;
                    c = this._loadHeight(a, -1) | 0;
                    d = this._loadFontFace(a);
                    var f = y.xml_str(a, "align");
                    "" == f && (f = null);
                    var k = this._loadHeight(a, 8, "size") | 0,
                        p = this._loadColor(a),
                        m = this._loadBorder(a),
                        h = y.xml_str(a, "background", !0, "0x00000000"),
                        g = !0,
                        l = 0;
                    null == l && (l = 0);
                    null == g && (g = !1);
                    var q = Pb.fromString(h);
                    if (null == q)
                        if (g) q = l;
                        else throw F.thrown("U.parseHex() unable to parse hex String " + h);
                    h = q;
                    q = y.xml_bool(a, "password_mode");
                    b = new yf(0, 0, e, b, k, p, h);
                    b.set_passwordMode(q);
                    switch (y.xml_str(a, "force_case", !0, "")) {
                        case "lower":
                        case "lower_case":
                        case "lowercase":
                            q =
                                2;
                            break;
                        case "l":
                        case "u":
                            throw F.thrown(new cb("FlxUI._loadInputText(): 1 letter values have been deprecated (force_case attribute)."));
                        case "upper":
                        case "upper_case":
                        case "uppercase":
                            q = 1;
                            break;
                        default:
                            q = 0
                    }
                    for (h = y.xml_str(a, "filter", !0, ""); - 1 != h.indexOf("_");) h = K.replace(h, "_", "");
                    switch (h) {
                        case "a":
                        case "an":
                        case "n":
                            throw F.thrown(new cb("FlxUI._loadInputText(): 1 letter values have been deprecated (filter attribute)."));
                        case "alpha":
                        case "onlyalpha":
                            h = 1;
                            break;
                        case "alphanum":
                        case "alphanumeric":
                        case "onlyalphanumeric":
                            h =
                                3;
                            break;
                        case "num":
                        case "numeric":
                        case "onlynumeric":
                            h = 2;
                            break;
                        default:
                            h = 0
                    }
                    b.setFormat(d, k, p, f);
                    b.set_forceCase(q);
                    b.set_filterMode(h);
                    m.apply(b);
                    b.drawFrame();
                    if (Fa.resolve(a, "param")) {
                        d = null;
                        if (Fa.resolve(a, "param")) {
                            d = [];
                            f = 0;
                            for (a = tb.resolve(a, "param"); f < a.length;)
                                if (p = a[f], ++f, Db.resolve(p, "type") && Db.resolve(p, "value")) {
                                    m = Lb.resolve(p, "type");
                                    m = m.toLowerCase();
                                    q = k = Lb.resolve(p, "value");
                                    p = y.xml_i(p, "sort", -1);
                                    switch (m) {
                                        case "bool":
                                        case "boolean":
                                            h = new String(k);
                                            h = h.toLowerCase();
                                            q = "true" == h ||
                                                "1" == h ? !0 : !1;
                                            break;
                                        case "color":
                                        case "hex":
                                            q = Pb.fromString(k);
                                            if (null == q) throw F.thrown("U.parseHex() unable to parse hex String " + k);
                                            break;
                                        case "float":
                                            q = parseFloat(k);
                                            break;
                                        case "int":
                                            q = I.parseInt(k);
                                            break;
                                        case "string":
                                            q = new String(k)
                                    }
                                    d.push({
                                        sort: p,
                                        value: q
                                    })
                                }
                            d.sort(Qa.sortParams);
                            f = 0;
                            for (a = d.length; f < a;) k = f++, d[k] = d[k].value
                        }
                        b.set_params(d)
                    }
                    0 < c && b.get_height() != c && oa.__implements(b, ec) && b.resize(b.get_width(), c);
                    return b
                },
                _loadRadioGroup: function(a) {
                    var b = y.xml_str(a, "dot_src", !0),
                        c = y.xml_str(a,
                            "radio_src", !0);
                    var d = [];
                    for (var e = [], f = this._loadWidth(a, 11, "radio_width"), k = this._loadHeight(a, 11, "radio_height"), p = this._loadHeight(a, 0, "height"), m = this._loadHeight(a, 0, "width"), h = this._loadWidth(a, 100, "label_width"), g = 0, l = tb.resolve(a, "radio"); g < l.length;) {
                        var q = l[g];
                        ++g;
                        var r = y.xml_name(q),
                            D = y.xml_str(q, "label"),
                            n = y.xml_str(q, "context", !0, "ui");
                        q = y.xml_str(q, "code", !0, "");
                        D = this.getText(D, n, !0, q);
                        e.push(r);
                        d.push(D)
                    }
                    e.reverse();
                    d.reverse();
                    q = this._loadHeight(a, 25, "y_space");
                    n = null;
                    if (Fa.resolve(a,
                            "param")) {
                        n = [];
                        g = 0;
                        for (l = tb.resolve(a, "param"); g < l.length;)
                            if (r = l[g], ++g, Db.resolve(r, "type") && Db.resolve(r, "value")) {
                                var w = Lb.resolve(r, "type");
                                w = w.toLowerCase();
                                var x = D = Lb.resolve(r, "value");
                                r = y.xml_i(r, "sort", -1);
                                switch (w) {
                                    case "bool":
                                    case "boolean":
                                        D = new String(D);
                                        D = D.toLowerCase();
                                        x = "true" == D || "1" == D ? !0 : !1;
                                        break;
                                    case "color":
                                    case "hex":
                                        w = Pb.fromString(D);
                                        if (null == w) throw F.thrown("U.parseHex() unable to parse hex String " + D);
                                        x = w;
                                        break;
                                    case "float":
                                        x = parseFloat(D);
                                        break;
                                    case "int":
                                        x = I.parseInt(D);
                                        break;
                                    case "string":
                                        x = new String(D)
                                }
                                n.push({
                                    sort: r,
                                    value: x
                                })
                            }
                        n.sort(Qa.sortParams);
                        g = 0;
                        for (l = n.length; g < l;) D = g++, n[D] = n[D].value
                    }
                    D = n;
                    n = null;
                    "" != c ? n = y.gfx(c) : Fa.resolve(a, "box") && (n = "" != y.xml_str(Xa.resolve(a, "box"), "slice9") ? this._load9SliceSprite(Xa.resolve(a, "box")) : this._loadSprite(Xa.resolve(a, "box")));
                    c = null;
                    "" != b ? c = y.gfx(b) : Fa.resolve(a, "dot") && (c = "" != y.xml_str(Xa.resolve(a, "dot"), "slice9") ? this._load9SliceSprite(Xa.resolve(a, "dot")) : this._loadSprite(Xa.resolve(a, "dot")));
                    w = b = null;
                    if (Fa.resolve(a,
                            "button"))
                        for (g = 0, l = tb.resolve(a, "button"); g < l.length;) x = l[g], ++g, r = y.xml_name(x), "previous" == r || "prev" == r ? (b = y.xml_f(x, "x"), r = y.xml_f(x, "y"), null == r && (r = 0), null == b && (b = 0), b = X._pool.get().set(b, r), b._inPool = !1) : "next" == r && (r = y.xml_f(x, "x"), w = y.xml_f(x, "y"), null == w && (w = 0), null == r && (r = 0), r = X._pool.get().set(r, w), r._inPool = !1, w = r);
                    d = new hh(0, 0, e, d, null, q, f, k, h, null, b, w);
                    d.set_params(D);
                    "" != n && null != n && d.loadGraphics(n, c);
                    e = this._loadWidth(a, 0, "text_x") | 0;
                    f = this._loadHeight(a, 0, "text_y") | 0;
                    k = d.getRadios();
                    D = 0;
                    b = !1;
                    h = a.elementsNamed("radio");
                    g = 0;
                    for (l = k.length; g < l;)
                        if (q = g++, c = k[k.length - 1 - q], q = h.hasNext() ? h.next() : null, null != c && c instanceof oe && (c = oa.__cast(c, oe), n = this.formatButtonText(a, c), null != n && 0 == b && (b = oc.copyFromFlxText(n), r = new Md(n.borderStyle, n.borderColor, n.borderSize, n.borderQuality), d.set_activeStyle(new ih(16777215, b, Dk.fromOpenFL(n._defaultFormat.align), n.color, r)), b = !0), c.set_textX(e), c.set_textY(f), ++D, null != q)) {
                            if (q.nodeType != S.Document && q.nodeType != S.Element) throw F.thrown("Invalid nodeType " +
                                (null == q.nodeType ? "null" : Va.toString(q.nodeType)));
                            this._loadTooltip(c, q)
                        }
                    0 != m && (d.fixedSize = !0, d.set_width(m));
                    0 != p && (d.fixedSize = !0, d.set_height(p));
                    return d
                },
                _loadCheckBox: function(a) {
                    var b = y.xml_str(a, "label");
                    var c = y.xml_str(a, "context", !0, "ui");
                    var d = y.xml_str(a, "code", !0, ""),
                        e = y.xml_bool(a, "checked", !1);
                    b = this.getText(b, c, !0, d);
                    c = this._loadWidth(a, 100, "label_width");
                    d = y.xml_str(a, "check_src", !0);
                    var f = y.xml_str(a, "box_src", !0),
                        k = null;
                    if (Fa.resolve(a, "param")) {
                        k = [];
                        for (var p = 0, m = tb.resolve(a,
                                "param"); p < m.length;) {
                            var h = m[p];
                            ++p;
                            if (Db.resolve(h, "type") && Db.resolve(h, "value")) {
                                var g = Lb.resolve(h, "type");
                                g = g.toLowerCase();
                                var l = Lb.resolve(h, "value"),
                                    q = l;
                                h = y.xml_i(h, "sort", -1);
                                switch (g) {
                                    case "bool":
                                    case "boolean":
                                        l = new String(l);
                                        l = l.toLowerCase();
                                        q = "true" == l || "1" == l ? !0 : !1;
                                        break;
                                    case "color":
                                    case "hex":
                                        g = Pb.fromString(l);
                                        if (null == g) throw F.thrown("U.parseHex() unable to parse hex String " + l);
                                        q = g;
                                        break;
                                    case "float":
                                        q = parseFloat(l);
                                        break;
                                    case "int":
                                        q = I.parseInt(l);
                                        break;
                                    case "string":
                                        q = new String(l)
                                }
                                k.push({
                                    sort: h,
                                    value: q
                                })
                            }
                        }
                        k.sort(Qa.sortParams);
                        p = 0;
                        for (m = k.length; p < m;) l = p++, k[l] = k[l].value
                    }
                    m = p = null;
                    "" != f ? p = y.gfx(f) : Fa.resolve(a, "box") && (p = "" != y.xml_str(Xa.resolve(a, "box"), "slice9") ? this._load9SliceSprite(Xa.resolve(a, "box")) : this._loadSprite(Xa.resolve(a, "box")));
                    "" != d ? m = y.gfx(d) : Fa.resolve(a, "check") && (m = "" != y.xml_str(Xa.resolve(a, "check"), "slice9") ? this._load9SliceSprite(Xa.resolve(a, "check")) : this._loadSprite(Xa.resolve(a, "check")));
                    c = new oe(0, 0, p, m, b, c, k);
                    this.formatButtonText(a, c);
                    d = this._loadWidth(a,
                        0, "text_x") | 0;
                    a = this._loadHeight(a, 0, "text_y") | 0;
                    c.set_textX(d);
                    c.set_textY(a);
                    c.set_text(b);
                    c.set_checked(e);
                    return c
                },
                _loadDropDownMenu: function(a) {
                    var b = y.xml_str(a, "label"),
                        c = y.xml_str(a, "context", !0, "ui"),
                        d = y.xml_str(a, "code", !0, "");
                    b = this.getText(b, c, !0, d);
                    var e = y.xml_str(a, "back_def", !0),
                        f = y.xml_str(a, "panel_def", !0),
                        k = y.xml_str(a, "button_def", !0),
                        p = y.xml_str(a, "label_def", !0),
                        m = c = d = null,
                        h = null;
                    "" != e && (d = this._loadSprite(this.getDefinition(e)));
                    "" != f && (c = this._load9SliceSprite(this.getDefinition(f)));
                    if ("" != k) try {
                        m = this._loadButton(this.getDefinition(k), !1, !1)
                    } catch (l) {
                        if (Ca.lastError = l, F.caught(l).unwrap() instanceof cb) m = null;
                        else throw l;
                    }
                    if ("" != p) {
                        try {
                            h = this._loadText(this.getDefinition(p))
                        } catch (l) {
                            if (Ca.lastError = l, F.caught(l).unwrap() instanceof cb) h = null;
                            else throw l;
                        }
                        null != h && "" != b && h.set_text(b)
                    }
                    e = b = null;
                    if (Fa.resolve(a, "data"))
                        for (f = 0, a = tb.resolve(a, "data"); f < a.length;) k = a[f], ++f, null == e && (e = []), k = new Ek(y.xml_str(k, "name", !0), y.xml_str(k, "label")), e.push(k);
                    else if (Fa.resolve(a, "asset"))
                        for (f =
                            0, a = tb.resolve(a, "asset"); f < a.length;) {
                            p = a[f];
                            ++f;
                            null == b && (b = []);
                            k = y.xml_str(p, "def", !0);
                            p = y.xml_name(p);
                            var g = null;
                            try {
                                g = this._loadButton(this.getDefinition(k), !1)
                            } catch (l) {
                                if (Ca.lastError = l, !(F.caught(l).unwrap() instanceof cb)) throw l;
                            }
                            null != g && (g.name = p, null == b && (b = []), b.push(g))
                        }
                    d = new jh(120, d, h, m);
                    return new xf(0, 0, e, null, d, c, b)
                },
                _loadTest: function(a) {
                    var b = !0;
                    if (a.nodeType == S.Document) var c = "Document";
                    else {
                        if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " +
                            (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                        c = a.nodeName
                    }
                    if ("load_if" == c && (b = this._loadTestSub(a), 0 == b)) return !1;
                    if (Fa.resolve(a, "load_if"))
                        for (c = 0, a = tb.resolve(a, "load_if"); c < a.length;) {
                            var d = a[c];
                            ++c;
                            var e = d;
                            if (e.nodeType != S.Document && e.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == e.nodeType ? "null" : Va.toString(e.nodeType)));
                            if (null == e.children[0] && (b = this._loadTestSub(d), 0 == b)) return !1
                        }
                    return b
                },
                _loadTestSub: function(a) {
                    var b = y.xml_bool(a,
                            "is", !0),
                        c = y.xml_f(a, "aspect_ratio", -1);
                    if (-1 != c) {
                        var d = !0;
                        var e = oa.__cast(q.width, fm) / oa.__cast(q.height, fm),
                            f = Math.abs(e - c);
                        if (Db.resolve(a, "tolerance")) c = y.xml_f(a, "tolerance", .1), f > c && (d = !1);
                        else if (Db.resolve(a, "tolerance_plus") || Db.resolve(a, "tolerance_minus")) {
                            var k = y.xml_f(a, "tolerance_minus", -1),
                                p = y.xml_f(a, "tolerance_plus", -1);
                            e > c && -1 != p && f > p && (d = !1);
                            e < c && -1 != k && f > k && (d = !1)
                        }
                        if (d != b) return !1
                    }
                    f = y.xml_pt(a, "resolution", null);
                    if (null != f) {
                        d = !0;
                        c = y.xml_pt(a, "tolerance", null);
                        null == c && (c = new X(0,
                            0));
                        e = Math.abs(f.y - q.height);
                        if (Math.abs(f.x - q.width) > c.x || e > c.y) d = !1;
                        if (d != b) return !1
                    }
                    d = y.xml_str(a, "haxedef", !0, "");
                    f = y.xml_bool(a, "value", !0);
                    if ("" != d && y.checkHaxedef(d) == f != b) return !1;
                    f = y.xml_str(a, "variable", !1, "");
                    a = y.xml_str(a, "type", !0, "string");
                    return "" != f && (d = !0, f = this.parseVarValue(f), null != f && (d = this.checkVariable(f.variable, f.value, a, f.op)), d != b) ? !1 : !0
                },
                parseVarValue: function(a) {
                    for (var b = "== = != !== < > <= >=".split(" "), c, d = 0; d < b.length;) {
                        var e = b[d];
                        ++d;
                        if (-1 != a.indexOf(e) && (c = a.split(e),
                                null != c && 2 == c.length)) return {
                            variable: c[0],
                            value: c[1],
                            op: e
                        }
                    }
                    return null
                },
                _loadLayout: function(a) {
                    var b = y.xml_str(a, "name", !0),
                        c = this._loadWidth(a, 0, "x"),
                        d = this._loadHeight(a, 0, "y");
                    a = this.createUI(a);
                    a.set_x(c);
                    a.set_y(d);
                    a.name = b;
                    return a
                },
                addToCleanup: function(a) {
                    null != this._assetsToCleanUp && -1 == this._assetsToCleanUp.indexOf(a) && this._assetsToCleanUp.push(a)
                },
                addToScaledAssets: function(a) {
                    null != this._scaledAssets && -1 == this._scaledAssets.indexOf(a) && this._scaledAssets.push(a)
                },
                cleanup: function() {
                    for (var a =
                            0, b = this._assetsToCleanUp; a < b.length;) {
                        var c = b[a];
                        ++a;
                        q.bitmap.removeByKey(c)
                    }
                    this._scaledAssets = this._assetsToCleanUp = null
                },
                createUI: function(a) {
                    return new Qa(a, this, this, this._ptr_tongue, this.liveFilePath)
                },
                _loadTabMenu: function(a) {
                    var b = y.xml_str(a, "back_def");
                    b = this.getDefinition(b);
                    null == b && (b = a);
                    b = Qa.consolidateData(b, a);
                    switch (y.xml_str(a, "back_type", !0, "chrome")) {
                        case "region":
                            b = new Rf;
                            break;
                        case "sprite":
                            b = this._loadSprite(b);
                            break;
                        default:
                            b = this._load9SliceSprite(b, "tab_menu")
                    }
                    var c = null,
                        d = y.xml_bool(a, "stretch_tabs", !1),
                        e = "front",
                        f = "back";
                    Fa.resolve(a, "stacking") && (e = y.xml_str(Xa.resolve(a, "stacking"), "toggled", !0, "front"), f = y.xml_str(Xa.resolve(a, "stacking"), "untoggled", !0, "back"));
                    var k = null;
                    "" != y.xml_str(a, "spacing", !0, "") && (k = this._loadWidth(a, 0, "spacing"));
                    var p = this._loadWidth(a, 0, "tab_x"),
                        m = this._loadHeight(a, 0, "tab_y");
                    null == m && (m = 0);
                    null == p && (p = 0);
                    var h = X._pool.get().set(p, m);
                    h._inPool = !1;
                    var g = "";
                    if (Fa.resolve(a, "tab")) {
                        m = 0;
                        for (p = tb.resolve(a, "tab"); m < p.length;) c = p[m],
                            ++m, c = y.xml_str(c, "use_def"), "" != c && (g = c);
                        c = "" != g ? this.getDefinition(g) : Xa.resolve(a, "tab")
                    }
                    g = [];
                    if (Fa.resolve(a, "tab"))
                        for (m = 0, p = tb.resolve(a, "tab"); m < p.length;) {
                            var l = p[m];
                            ++m;
                            var q = y.xml_name(l);
                            if ("" != q) {
                                var r = y.xml_str(l, "label"),
                                    D = y.xml_str(l, "context", !0, "ui"),
                                    n = y.xml_str(l, "code", !0, "");
                                r = this.getText(r, D, !0, n);
                                this.getText(r, D, !0, n);
                                l = Qa.consolidateData(l, c);
                                r = this._loadButton(l, !0, !0, "tab_menu");
                                r.name = q;
                                g.push(r);
                                this._loadTooltip(r, l)
                            }
                        }
                    if (0 < g.length) {
                        if (null == c || !Fa.resolve(c, "text"))
                            for (m =
                                0; m < g.length;) p = g[m], ++m, p instanceof Qb && (p.label.set_color(16777215), p.label instanceof Uc && (p = p.label, p.set_borderStyle(Oc.OUTLINE), p.set_borderColor(0), p.set_borderSize(1), p.set_borderQuality(1)));
                        null != c && Db.resolve(c, "width") || (d = !0)
                    }
                    b = new kh(b, g, null, h, d, k, [e, f]);
                    if (Fa.resolve(a, "group"))
                        for (m = 0, p = tb.resolve(a, "group"); m < p.length;) a = p[m], ++m, q = y.xml_name(a), a = new Qa(a, b, this, this._ptr_tongue), null != g && 0 < g.length && (d = a, d.set_y(d.y + g[0].get_height())), a.name = q, b.addGroup(a);
                    return b
                },
                _loadNumericStepper: function(a,
                    b) {
                    null == b && (b = !0);
                    var c = y.xml_f(a, "step", 1),
                        d = y.xml_f(a, "value", 0),
                        e = y.xml_f(a, "min", 0),
                        f = y.xml_f(a, "max", 10),
                        k = y.xml_i(a, "decimals", 0),
                        p = y.xml_bool(a, "percent"),
                        m = y.xml_str(a, "stack", !0, "");
                    "" == m && (m = y.xml_str(a, "stacking", !0, ""));
                    m = m.toLowerCase();
                    switch (m) {
                        case "h":
                        case "horizontal":
                        case "horz":
                            m = 1;
                            break;
                        case "v":
                        case "vert":
                        case "vertical":
                            m = 0;
                            break;
                        default:
                            m = 1
                    }
                    var h = null,
                        g = null,
                        l = null;
                    Fa.resolve(a, "text") && (h = this._loadThing("text", Xa.resolve(a, "text")));
                    Fa.resolve(a, "plus") && (g = this._loadThing("button",
                        Xa.resolve(a, "plus")));
                    Fa.resolve(a, "minus") && (l = this._loadThing("button", Xa.resolve(a, "minus")));
                    c = new lh(0, 0, c, d, e, f, k, m, h, g, l, p);
                    if (b) {
                        b = null;
                        if (Fa.resolve(a, "param")) {
                            b = [];
                            d = 0;
                            for (a = tb.resolve(a, "param"); d < a.length;)
                                if (f = a[d], ++d, Db.resolve(f, "type") && Db.resolve(f, "value")) {
                                    k = Lb.resolve(f, "type");
                                    k = k.toLowerCase();
                                    p = e = Lb.resolve(f, "value");
                                    f = y.xml_i(f, "sort", -1);
                                    switch (k) {
                                        case "bool":
                                        case "boolean":
                                            e = new String(e);
                                            e = e.toLowerCase();
                                            p = "true" == e || "1" == e ? !0 : !1;
                                            break;
                                        case "color":
                                        case "hex":
                                            k = Pb.fromString(e);
                                            if (null == k) throw F.thrown("U.parseHex() unable to parse hex String " + e);
                                            p = k;
                                            break;
                                        case "float":
                                            p = parseFloat(e);
                                            break;
                                        case "int":
                                            p = I.parseInt(e);
                                            break;
                                        case "string":
                                            p = new String(e)
                                    }
                                    b.push({
                                        sort: f,
                                        value: p
                                    })
                                }
                            b.sort(Qa.sortParams);
                            d = 0;
                            for (a = b.length; d < a;) e = d++, b[e] = b[e].value
                        }
                        c.set_params(b)
                    }
                    return c
                },
                getResizeRatio: function(a, b) {
                    null == b && (b = 1);
                    var c = y.xml_str(a, "resize_ratio_x", !0);
                    return "" == c ? (c = y.xml_str(a, "resize_ratio_y", !0), "" == c ? (a = y.xml_f(a, "resize_ratio", -1), new X(a, b)) : new X(parseFloat(c), 1)) :
                        new X(parseFloat(c), 0)
                },
                _loadButton: function(a, b, c, d) {
                    null == d && (d = "");
                    null == c && (c = !1);
                    null == b && (b = !0);
                    var e = this._loadColor(a);
                    var f = y.xml_f(a, "resize_ratio", -1),
                        k = this._loadCompass(a, "resize_point"),
                        p = y.xml_bool(a, "resize_label", !1),
                        m = y.xml_str(a, "label"),
                        h = null,
                        g = null;
                    if (Fa.resolve(a, "sprite"))
                        for (var l = 0, q = tb.resolve(a, "sprite"); l < q.length;) {
                            var r = q[l];
                            ++l;
                            c && y.xml_bool(r, "toggle") ? g = this._loadThing("sprite", r) : h = this._loadThing("sprite", r)
                        }
                    l = y.xml_str(a, "context", !0, "ui");
                    r = y.xml_str(a, "code", !0, "");
                    m = this.getText(m, l, !0, r);
                    r = this._loadWidth(a, 0, "width") | 0;
                    var D = this._loadHeight(a, 0, "height") | 0,
                        n = null;
                    if (Fa.resolve(a, "param")) {
                        n = [];
                        l = 0;
                        for (q = tb.resolve(a, "param"); l < q.length;) {
                            var w = q[l];
                            ++l;
                            if (Db.resolve(w, "type") && Db.resolve(w, "value")) {
                                var x = Lb.resolve(w, "type");
                                x = x.toLowerCase();
                                var u = Lb.resolve(w, "value"),
                                    B = u;
                                w = y.xml_i(w, "sort", -1);
                                switch (x) {
                                    case "bool":
                                    case "boolean":
                                        u = new String(u);
                                        u = u.toLowerCase();
                                        B = "true" == u || "1" == u ? !0 : !1;
                                        break;
                                    case "color":
                                    case "hex":
                                        x = Pb.fromString(u);
                                        if (null ==
                                            x) throw F.thrown("U.parseHex() unable to parse hex String " + u);
                                        B = x;
                                        break;
                                    case "float":
                                        B = parseFloat(u);
                                        break;
                                    case "int":
                                        B = I.parseInt(u);
                                        break;
                                    case "string":
                                        B = new String(u)
                                }
                                n.push({
                                    sort: w,
                                    value: B
                                })
                            }
                        }
                        n.sort(Qa.sortParams);
                        l = 0;
                        for (q = n.length; l < q;) u = l++, n[u] = n[u].value
                    }
                    l = n;
                    null == h ? (q = 0 == Fa.resolve(a, "graphic"), e = new Pc(0, 0, m, null, q, !1, e), e._autoCleanup = !1) : "" != m ? (q = new Uc(0, 0, 80, m, 8), q.setFormat(null, 8, 3355443, "center"), e = new ka, e.add(h), e.add(q), e = new pe(0, 0, e)) : e = new pe(0, 0, h);
                    e.resize_ratio = f;
                    e.resize_point =
                        k;
                    e.autoResizeLabel = p;
                    b && e.set_params(l);
                    if (Fa.resolve(a, "graphic"))
                        if (y.xml_bool(Xa.resolve(a, "graphic"), "blank")) e.loadGraphicSlice9(["", "", ""], r, D, null, 0, f);
                        else {
                            p = null;
                            c ? (b = "     ".split(" "), k = [null, null, null, null, null, null]) : (b = ["", "", ""], k = [null, null, null]);
                            n = y.xml_i(Xa.resolve(a, "graphic"), "src_w", 0);
                            u = y.xml_i(Xa.resolve(a, "graphic"), "src_h", 0);
                            w = y.xml_str(Xa.resolve(a, "graphic"), "tile", !0, "");
                            var v = 0;
                            switch (w) {
                                case "h":
                                case "horizontal":
                                    v = 16;
                                    break;
                                case "v":
                                case "vertical":
                                    v = 1;
                                    break;
                                case "all":
                                case "both":
                                case "hv":
                                case "true":
                                case "vh":
                                    v =
                                        17
                            }
                            w = v;
                            l = y.xml_str(Xa.resolve(a, "graphic"), "frames", !0);
                            if ("" != l)
                                for (p = [], q = l.split(","), l = 0; l < q.length;) x = q[l], ++l, p.push(I.parseInt(x));
                            l = 0;
                            for (q = tb.resolve(a, "graphic"); l < q.length;) {
                                x = q[l];
                                ++l;
                                var A = y.xml_name(x);
                                B = y.xml_str(x, "image");
                                var t = ub.toIntArray(y.xml_str(x, "slice9"));
                                w = y.xml_str(x, "tile", !0, "");
                                v = 0;
                                switch (w) {
                                    case "h":
                                    case "horizontal":
                                        v = 16;
                                        break;
                                    case "v":
                                    case "vertical":
                                        v = 1;
                                        break;
                                    case "all":
                                    case "both":
                                    case "hv":
                                    case "true":
                                    case "vh":
                                        v = 17
                                }
                                w = v;
                                var J = y.xml_bool(x, "toggle");
                                J = J && c;
                                v = y.gfx(B);
                                switch (A) {
                                    case "all":
                                        A = c ? 6 : 3;
                                        0 != u && (A = y.getBmp(v).height / u | 0);
                                        "" != B && (b = [this.loadScaledSrc(x, "image", "scale_src", 1, A)]);
                                        k = [this.load9SliceSprite_scaleSub(t, x, b[0], "image")];
                                        u = y.getBmp(b[0]);
                                        n = u.width;
                                        u = u.height / A | 0;
                                        break;
                                    case "active":
                                    case "highlight":
                                    case "hilight":
                                    case "hover":
                                    case "over":
                                        "" != B && (J ? b[4] = this.loadScaledSrc(x, "image", "scale_src") : b[1] = this.loadScaledSrc(x, "image", "scale_src"));
                                        J ? k[4] = this.load9SliceSprite_scaleSub(t, x, b[4], "image") : k[1] = this.load9SliceSprite_scaleSub(t, x, b[1], "image");
                                        break;
                                    case "down":
                                    case "pressed":
                                    case "pushed":
                                        "" != B && (J ? b[5] = this.loadScaledSrc(x, "image", "scale_src") : b[2] = this.loadScaledSrc(x, "image", "scale_src"));
                                        J ? k[5] = this.load9SliceSprite_scaleSub(t, x, b[5], "image") : k[2] = this.load9SliceSprite_scaleSub(t, x, b[2], "image");
                                        break;
                                    case "":
                                    case "inactive":
                                    case "normal":
                                    case "up":
                                        "" != B && (J ? b[3] = this.loadScaledSrc(x, "image", "scale_src") : b[0] = this.loadScaledSrc(x, "image", "scale_src")), J ? k[3] = this.load9SliceSprite_scaleSub(t, x, b[3], "image") : k[0] = this.load9SliceSprite_scaleSub(t,
                                            x, b[0], "image")
                                }
                                "" != b[0] && 3 <= b.length && ("" == b[1] && (b[1] = b[0]), "" == b[2] && (b[2] = b[1]), 6 <= b.length && ("" == b[3] && (b[3] = b[0]), "" == b[4] && (b[4] = b[1]), "" == b[5] && (b[5] = b[2])))
                            }
                            e.loadGraphicSlice9(b, r, D, k, w, f, c, n, u, p)
                        }
                    else "tab_menu" == d ? (b = "flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png".split(" "), l = ub.toIntArray("6,6,11,11"), k = [l, l, l, l, l, l], e.loadGraphicSlice9(b, r, D,
                        k, 0, f, c)) : (0 >= r && (r = 80), 0 >= D && (D = 20), e.loadGraphicSlice9(null, r, D, null, 0, f, c));
                    null == h ? null != a && Fa.resolve(a, "text") ? this.formatButtonText(a, e) : "tab_menu" == d ? (e.up_color = 16777215, e.down_color = 16777215, e.over_color = 16777215, e.up_toggle_color = 16777215, e.down_toggle_color = 16777215, e.over_toggle_color = 16777215) : e.autoCenterLabel() : e.autoCenterLabel();
                    null != h && "" != m && null != a && Fa.resolve(a, "text") && this.formatButtonText(a, e);
                    c = d = 0;
                    null != a.get("text_x") ? d = this._loadWidth(a, 0, "text_x") | 0 : null != a.get("label_x") &&
                        (d = this._loadWidth(a, 0, "label_x") | 0);
                    null != a.get("text_y") ? c = this._loadHeight(a, 0, "text_y") | 0 : null != a.get("label_y") && (c = this._loadHeight(a, 0, "label_y") | 0);
                    if (e instanceof pe)
                        if (a = e, a.label instanceof ka)
                            for (a = a.label, l = 0, q = a.group.members; l < q.length;) {
                                if (a = q[l], ++l, a instanceof Uc) {
                                    f = a.offset;
                                    f.set_x(f.x - d);
                                    a = a.offset;
                                    a.set_y(a.y - c);
                                    break
                                }
                            } else l = a.label.offset, l.set_x(l.x - d), l = a.label.offset, l.set_y(l.y - c), null != g && (l = g.offset, l.set_x(l.x - d), l = g.offset, l.set_y(l.y - c));
                        else a = e, l = a.label.offset,
                            l.set_x(l.x - d), l = a.label.offset, l.set_y(l.y - c);
                    null != h && null != g && e.set_toggle_label(g);
                    if (e instanceof Qb && (h = e, null != h._assetsToCleanup))
                        for (l = 0, q = h._assetsToCleanup; l < q.length;) h = q[l], ++l, this.addToCleanup(h);
                    return e
                },
                _loadRegion: function(a) {
                    var b = this.calcMaxMinSize(a),
                        c = this._loadWidth(a) | 0,
                        d = this._loadHeight(a) | 0;
                    null != b && (d = y.conformToBounds(new La(c, d), b), c = d.x | 0, d = d.y | 0);
                    a = y.xml_bool(a, "visible", !0);
                    c = new Rf(0, 0, c, d);
                    c.set_visible(a);
                    return c
                },
                _load9SliceSprite: function(a, b) {
                    null == b && (b =
                        "");
                    var c = this.getResizeRatio(a),
                        d = this._loadColor(a),
                        e = c.x,
                        f = this._loadCompass(a, "resize_point");
                    c = c.y | 0;
                    var k = this.calcMaxMinSize(a);
                    var p = "";
                    if (null != a.get("src"))
                        if (p = a.get("src"), "" == p || null == p) p = "";
                        else {
                            p = y.gfx(p);
                            try {
                                if (!ta.exists(p, "IMAGE")) throw F.thrown('couldn\'t load bmp "src"');
                            } catch (l) {
                                if (Ca.lastError = l, "string" != typeof F.caught(l).unwrap()) throw l;
                            }
                        }
                    var m = Fa.resolve(a, "scale_src");
                    if (m) {
                        var h = p;
                        p = this.loadScaledSrc(a, "src", "scale_src");
                        p != h && this.addToCleanup(h)
                    }
                    "" == p && (p = null);
                    null ==
                        p && "tab_menu" == b && (p = "flixel/flixel-ui/img/chrome_flat.png");
                    b = this._loadWidth(a) | 0;
                    h = this._loadHeight(a) | 0;
                    null != k && (b < k.min_width ? b = k.min_width | 0 : b > k.max_width && (b = k.max_width), h < k.min_height ? h = k.min_height | 0 : h > k.max_height && (h = k.max_height | 0));
                    if (0 == b || 0 == h) return null;
                    k = new fa(0, 0, b, h);
                    b = ub.toIntArray(y.xml_str(a, "slice9"));
                    h = "";
                    var g = p;
                    m && (b = this.load9SliceSprite_scaleSub(b, a, p), h = p, g = q.bitmap._cache.h[p]);
                    p = y.xml_bool(a, "smooth", !1);
                    m = 0;
                    switch (y.xml_str(a, "tile", !0, "")) {
                        case "h":
                        case "horizontal":
                            m =
                                16;
                            break;
                        case "v":
                        case "vertical":
                            m = 1;
                            break;
                        case "all":
                        case "both":
                        case "hv":
                        case "true":
                        case "vh":
                            m = 17
                    }
                    return new M(0, 0, g, k, b, m, p, h, e, f, c, !1, d)
                },
                load9SliceSprite_scaleSub: function(a, b, c, d) {
                    null == d && (d = "src");
                    var e = "";
                    if (null != b.get(d))
                        if (e = b.get(d), "" == e || null == e) e = "";
                        else {
                            e = y.gfx(e);
                            try {
                                if (!ta.exists(e, "IMAGE")) throw F.thrown("couldn't load bmp \"" + d + '"');
                            } catch (k) {
                                if (Ca.lastError = k, "string" != typeof F.caught(k).unwrap()) throw k;
                            }
                        }
                    b = e;
                    if (c == b) return a;
                    c = null != q.bitmap._cache.h[c] ? q.bitmap._cache.h[c].bitmap :
                        null;
                    null == c && (c = ta.getBitmapData(b));
                    b = ta.getBitmapData(b, !1);
                    d = c.width / b.width;
                    e = c.height / b.height;
                    if (.001 >= Math.abs(1 - d) && .001 >= Math.abs(1 - e)) return a;
                    if (null != a) {
                        a[0] = a[0] * d | 0;
                        a[1] = a[1] * e | 0;
                        var f = b.height - a[3];
                        a[2] = c.width - ((b.width - a[2]) * d | 0) | 0;
                        a[3] = c.height - (f * e | 0) | 0
                    }
                    return a
                },
                _loadBox: function(a) {
                    var b = this._loadWidth(a, 1, "thickness") | 0,
                        c = this.calcMaxMinSize(a);
                    null == c && (c = {
                        min_width: -Infinity,
                        min_height: -Infinity,
                        max_width: Infinity,
                        max_height: Infinity
                    });
                    var d = this._loadWidth(a) | 0,
                        e = this._loadHeight(a) |
                        0;
                    null != c && (d < c.min_width ? d = c.min_width | 0 : d > c.max_width && (d = c.max_width | 0), e < c.min_height ? e = c.max_height | 0 : e > c.max_height && (e = c.max_height | 0));
                    a = y.xml_str(a, "color", !0, "0xff000000");
                    c = 0;
                    if ("" != a && (c = Pb.fromString(a), null == c)) throw F.thrown("U.parseHex() unable to parse hex String " + a);
                    a = new Hb(0, 0);
                    var f = d + "x" + e + ":" + c + ":" + b;
                    null != q.bitmap._cache.h[f] ? a.loadGraphic(f) : (a.makeGraphic(d, e, c, !1, f), b = new fa(b, b, d - 2 * b, e - 2 * b), a.graphic.bitmap.fillRect(b, 0));
                    return a
                },
                _loadLine: function(a) {
                    var b = y.xml_str(a,
                            "axis", !0, "horizontal"),
                        c = this._loadWidth(a, -1, "thickness") | 0,
                        d = this.calcMaxMinSize(a);
                    null == d && (d = {
                        min_width: 1,
                        min_height: 1,
                        max_width: Infinity,
                        max_height: Infinity
                    });
                    switch (b) {
                        case "h":
                        case "horizontal":
                        case "horz":
                            d.max_height = c;
                            d.min_height = c;
                            break;
                        case "v":
                        case "vert":
                        case "vertical":
                            d.max_width = c, d.min_width = c
                    }
                    var e = this._loadWidth(a) | 0,
                        f = this._loadHeight(a) | 0;
                    null != d && (e < d.min_width ? e = d.min_width | 0 : e > d.max_width && (e = d.max_width | 0), f < d.min_height ? f = d.max_height | 0 : f > d.max_height && (f = d.max_height |
                        0));
                    a = y.xml_str(a, "color", !0, "0xff000000");
                    d = 0;
                    if ("" != a && (d = Pb.fromString(a), null == d)) throw F.thrown("U.parseHex() unable to parse hex String " + a);
                    b = "horizontal" == b ? mh.HORIZONTAL : mh.VERTICAL;
                    return new nh(0, 0, b, b == mh.HORIZONTAL ? e : f, -1 != c ? c : b == mh.HORIZONTAL ? f : e, d)
                },
                _loadBar: function(a) {
                    var b = {
                            filledColors: null,
                            emptyColors: null,
                            chunkSize: null,
                            gradRotation: null,
                            filledColor: null,
                            emptyColor: null,
                            borderColor: null,
                            filledImgSrc: "",
                            emptyImgSrc: ""
                        },
                        c = this._loadWidth(a, -1) | 0,
                        d = this._loadHeight(a, -1) | 0;
                    switch (y.xml_str(a,
                        "fill_direction", !0)) {
                        case "bottom_to_top":
                            var e = af.BOTTOM_TO_TOP;
                            break;
                        case "horizontal_inside_out":
                            e = af.HORIZONTAL_INSIDE_OUT;
                            break;
                        case "horizontal_outside_in":
                            e = af.HORIZONTAL_OUTSIDE_IN;
                            break;
                        case "left_to_right":
                            e = af.LEFT_TO_RIGHT;
                            break;
                        case "right_to_left":
                            e = af.RIGHT_TO_LEFT;
                            break;
                        case "top_to_bottom":
                            e = af.TOP_TO_BOTTOM;
                            break;
                        case "vertical_inside_out":
                            e = af.VERTICAL_INSIDE_OUT;
                            break;
                        case "vertical_outside_in":
                            e = af.VERTICAL_OUTSIDE_IN;
                            break;
                        default:
                            e = af.LEFT_TO_RIGHT
                    }
                    var f = y.xml_str(a, "parent_ref", !0),
                        k = "" != f ? this.getAsset(f) : null,
                        p = y.xml_str(a, "variable");
                    f = y.xml_f(a, "value", -1);
                    var m = y.xml_f(a, "min", 0),
                        h = y.xml_f(a, "max", 100); - 1 == f && (f = h);
                    b.borderColor = y.xml_color(a, "border_color");
                    var g = null != b.borderColor;
                    b.filledColor = y.xml_color(a, "filled_color");
                    null == b.filledColor && (b.filledColor = y.xml_color(a, "color"));
                    b.emptyColor = y.xml_color(a, "empty_color");
                    b.filledColors = y.xml_colorArray(a, "filled_colors");
                    b.emptyColors = y.xml_colorArray(a, "empty_colors");
                    null == b.filledColors && (b.filledColors = y.xml_colorArray(a,
                        "colors"));
                    b.filledImgSrc = this.loadScaledSrc(a, "src_filled");
                    b.emptyImgSrc = this.loadScaledSrc(a, "src_empty");
                    "" == b.filledImgSrc && (b.filledImgSrc = this.loadScaledSrc(a, "src"));
                    b.chunkSize = y.xml_i(a, "chunk_size", 1);
                    b.gradRotation = y.xml_i(a, "rotation", 90);
                    "" == b.filledImgSrc && null == b.filledColor && null == b.filledColors && (b.filledColor = -65536);
                    a = -1 == c && -1 == d ? new qg(0, 0, e, 100, 10, k, p, m, h, g) : new qg(0, 0, e, c, d, k, p, m, h, g);
                    a.set_style(b);
                    a.resize(a.barWidth, a.barHeight);
                    a.set_value(f);
                    return a
                },
                _loadSprite: function(a) {
                    var b =
                        this.loadScaledSrc(a);
                    var c = this.calcMaxMinSize(a),
                        d = this.getResizeRatio(a, -1),
                        e = d.x;
                    d = d.y | 0;
                    var f = this._loadCompass(a, "resize_point"),
                        k = this._loadWidth(a, -1) | 0,
                        p = this._loadHeight(a, -1) | 0;
                    null != c && (k < c.min_width ? k = c.min_width | 0 : k > c.max_width && (k = c.max_width | 0), p < c.min_height ? p = c.max_height | 0 : p > c.max_height && (p = c.max_height | 0));
                    if ("" != b) - 1 == k && -1 == p ? a = new Hb(0, 0, b) : (-1 == e || -1 != k && -1 != p || (-1 == d && (-1 == k && (d = 0), -1 == p && (d = 1)), 1 == d ? p = 1 / e * k : 0 == d && (k = 1 / e * p)), b = this.loadSmooth(a, !0), a = new Hb(0, 0, y.loadScaledImage(y.xml_str(a,
                        "src"), k, p, b)));
                    else {
                        a = y.xml_str(a, "color");
                        b = 0;
                        if ("" != a && (b = Pb.fromString(a), null == b)) throw F.thrown("U.parseHex() unable to parse hex String " + a);
                        a = new Hb(0, 0);
                        a.makeGraphic(k, p, b)
                    }
                    a.set_resize_point(f);
                    a.set_resize_ratio(e);
                    a.resize_ratio_axis = d;
                    return a
                },
                loadSmooth: function(a, b) {
                    b = b ? "true" : "false";
                    var c = y.xml_str(a, "smooth", !0, b);
                    "" == c && (c = y.xml_str(a, "antialias", !0, b));
                    return y.boolify(c)
                },
                loadScaledSrc: function(a, b, c, d, e) {
                    null == e && (e = 1);
                    null == d && (d = 1);
                    null == c && (c = "scale");
                    null == b && (b = "src");
                    var f = y.xml_str(a, b);
                    if (Fa.resolve(a, c))
                        for (var k = 0, p = tb.resolve(a, c); k < p.length;) {
                            c = p[k];
                            ++k;
                            var m = y.xml_f(c, "screen_ratio", -1),
                                h = y.xml_f(c, "tolerance", .1),
                                g = q.width / q.height;
                            if (0 > m || 0 < m && Math.abs(m - g) <= h) {
                                k = y.xml_str(c, "suffix");
                                k = f + k;
                                h = -1;
                                p = this.loadSmooth(c, !0);
                                m = this._loadHeight(c, -1, "to_height"); - 1 != m ? (g = y.getBmp(y.gfx(f)), null != g && (h = m / g.height)) : (h = this._loadScale(c, -1), -1 == h && (h = this._loadScale(c, -1, "value")));
                                m = -1 != h ? h : this._loadScaleX(c, -1);
                                h = -1 != h ? h : this._loadScaleY(c, -1);
                                if (0 < m && 0 < h) {
                                    0 >=
                                        m && (m = 1);
                                    0 >= h && (h = 1);
                                    g = this._loadWidth(c, -1);
                                    var l = this._loadHeight(c, -1);
                                    if (-1 == g || -1 == l) c = ta.getBitmapData(y.gfx(f)), g = c.width, l = c.height;
                                    g *= m;
                                    l *= h
                                } else g = this._loadWidth(c, -1), l = this._loadHeight(c, -1);
                                if (0 != g && 0 != l) {
                                    if (1 < e || 1 < d) return c = ta.getBitmapData(y.gfx(f)), d = y.scaleAndStoreTileset(y.gfx(k), h, c.width / d | 0, c.height / e | 0, g | 0, l / e | 0, p), this.addToScaledAssets(d), d;
                                    a = y.loadScaledImage(k, g, l, p);
                                    this.addToScaledAssets(a);
                                    return a
                                }
                                break
                            }
                        }
                    d = "";
                    if (null != a.get(b))
                        if (d = a.get(b), "" == d || null == d) d = "";
                        else {
                            d =
                                y.gfx(d);
                            try {
                                if (!ta.exists(d, "IMAGE")) throw F.thrown("couldn't load bmp \"" + b + '"');
                            } catch (mk) {
                                if (Ca.lastError = mk, "string" != typeof F.caught(mk).unwrap()) throw mk;
                            }
                        }
                    return d
                },
                _getAnchorPos: function(a, b, c) {
                    switch (c) {
                        case "":
                            break;
                        case "bottom":
                        case "down":
                            return this.screenHeight();
                        case "center":
                            if ("x" == b) return this.screenWidth() / 2;
                            if ("y" == b) return this.screenHeight() / 2;
                            break;
                        case "left":
                            break;
                        case "right":
                            return this.screenWidth();
                        case "top":
                        case "up":
                            break;
                        default:
                            if (a = y.perc_to_float(c), !isNaN(a)) {
                                if ("x" ==
                                    b) return a * this.screenWidth();
                                if ("y" == b) return a * this.screenHeight()
                            } else if ((new ya("[\\w]+\\.[\\w]+", "")).match(c)) return a = "", "x" == b && (a = "w"), "y" == b && (a = "h"), this._getStretch(1, a, c)
                    }
                    return 0
                },
                getRound: function(a, b) {
                    null == b && (b = "");
                    switch (y.xml_str(a, "round", !0, b)) {
                        case "-1":
                        case "down":
                        case "floor":
                            return Nl.Floor;
                        case "1":
                        case "ceil":
                        case "ceiling":
                        case "up":
                            return Nl.Ceil;
                        case "0":
                        case "round":
                        case "true":
                            return Nl.Round
                    }
                    return Nl.None
                },
                doRound: function(a, b) {
                    switch (b._hx_index) {
                        case 0:
                            return Math.floor(a);
                        case 1:
                            return Math.ceil(a);
                        case 2:
                            return Math.round(a);
                        case 3:
                            return a
                    }
                },
                calcMaxMinSize: function(a, b, c) {
                    var d = 0,
                        e = 0,
                        f = Infinity,
                        k = Infinity;
                    if (Fa.resolve(a, "exact_size")) {
                        var p = 0;
                        for (a = tb.resolve(a, "exact_size"); p < a.length;) {
                            f = a[p];
                            ++p;
                            d = y.xml_str(f, "width");
                            e = y.xml_str(f, "height");
                            var m = this.getRound(f);
                            d = this.doRound(this._getDataSize("w", d, 0), m);
                            e = this.doRound(this._getDataSize("h", e, 0), m);
                            f = this.doRound(d, m);
                            k = this.doRound(e, m)
                        }
                    } else if (Fa.resolve(a, "min_size"))
                        for (p = 0, a = tb.resolve(a, "min_size"); p <
                            a.length;) {
                            m = a[p];
                            ++p;
                            var h = y.xml_str(m, "width");
                            var g = y.xml_str(m, "height");
                            m = this.getRound(m);
                            h = this.doRound(this._getDataSize("w", h, 0), m);
                            m = this.doRound(this._getDataSize("h", g, 0), m);
                            h > d && (d = h);
                            m > e && (e = m)
                        } else if (Fa.resolve(a, "max_size"))
                            for (p = 0, a = tb.resolve(a, "max_size"); p < a.length;) m = a[p], ++p, h = y.xml_str(m, "width"), g = y.xml_str(m, "height"), m = this.getRound(m), h = this.doRound(this._getDataSize("w", h, Infinity), m), m = this.doRound(this._getDataSize("h", g, Infinity), m), h < f && (f = h), m < k && (k = m);
                        else return null;
                    null != b && (b > d && (d = b), b < f && (f = b));
                    null != c && (c > e && (e = c), c < k && (k = c));
                    0 >= f && (f = Infinity);
                    0 >= k && (k = Infinity);
                    return {
                        min_width: d,
                        min_height: e,
                        max_width: f,
                        max_height: k
                    }
                },
                _getDataSize: function(a, b, c) {
                    null == c && (c = 0);
                    if (y.isStrNum(b)) return parseFloat(b);
                    var d = y.perc_to_float(b);
                    if (isNaN(d)) {
                        if (0 == b.indexOf("stretch:")) return b = K.replace(b, "stretch:", ""), d = b.split(","), b = this._getStretch(0, a, d[0]), a = this._getStretch(1, a, d[1]), -1 != b && -1 != a ? a - b : c;
                        if (0 == b.indexOf("asset:")) return b = K.replace(b, "asset:", ""), c =
                            this._getStretch(1, a, b);
                        if ((new ya("[\\w]+\\.[\\w]+", "")).match(b)) return c = this._getStretch(1, a, b);
                        d = "";
                        b.indexOf("pt") == b.length - 2 && (d = Y.substr(b, 0, b.length - 2));
                        if ("" != d && y.isStrNum(d)) switch (b = parseFloat(d), a) {
                            case "h":
                            case "height":
                                return this._pointY * b;
                            case "w":
                            case "width":
                                return this._pointX * b
                        }
                    } else switch (a) {
                        case "h":
                        case "height":
                            return this.screenHeight() * d;
                        case "scale":
                        case "scale_x":
                        case "scale_y":
                            return d;
                        case "w":
                        case "width":
                            return this.screenWidth() * d
                    }
                    return c
                },
                _getOperation: function(a) {
                    for (var b = ["+", "-", "*", "/", "^"], c = "", d = Infinity, e = 0; e < b.length;) {
                        var f = b[e];
                        ++e;
                        var k = a.indexOf(f); - 1 != k && k < d && (d = k, c = f)
                    }
                    d = !1;
                    return "" != c && -1 != a.indexOf(c) && (e = a.indexOf(c), e != a.length - 1 && (b = Y.substr(a, 0, e), a = Y.substr(a, e + 1, a.length - (e + 1)), e = a.indexOf("pt"), -1 != e && e == a.length - 2 ? (d = K.replace(a, "pt", ""), e = parseFloat(d), d = !0) : e = parseFloat(a), isNaN(e) && (e = this.getAssetProperty(1, "", a)), 0 != e || "0" == a)) ? [b, c, e, d] : null
                },
                _doOperation: function(a, b, c) {
                    switch (b) {
                        case "*":
                            return a * c;
                        case "+":
                            return a + c;
                        case "-":
                            return a -
                                c;
                        case "/":
                            return a / c;
                        case "^":
                            return Math.pow(a, c)
                    }
                    return a
                },
                _getStretch: function(a, b, c) {
                    var d = "",
                        e = 0;
                    var f = this._getOperation(c);
                    if (null != f && (c = f[0], d = f[1], e = f[2], f = f[3])) switch (b) {
                        case "h":
                        case "height":
                            e *= this._pointY;
                            break;
                        case "w":
                        case "width":
                            e *= this._pointX;
                            break;
                        default:
                            e *= this._pointY
                    }
                    a = this.getAssetProperty(a, b, c); - 1 != a && "" != d && (a = this._doOperation(a, d, e));
                    return a
                },
                getAssetProperty: function(a, b, c) {
                    var d = ""; - 1 != c.indexOf(".") && (d = c.split("."), c = d[0], d = d[1]);
                    var e = this.getAsset(c),
                        f = 0;
                    if (null ==
                        e) switch (c) {
                        case "bottom":
                        case "down":
                            f = this.screenHeight();
                            break;
                        case "left":
                            f = 0;
                            break;
                        case "right":
                            f = this.screenWidth();
                            break;
                        case "top":
                        case "up":
                            f = 0;
                            break;
                        default:
                            f = y.isStrNum(c) ? parseFloat(c) : -1
                    } else switch (b) {
                        case "h":
                        case "height":
                            if ("" == d) 0 == a && (f = e.y + e.get_height()), 1 == a && (f = e.y);
                            else switch (d) {
                                case "bottom":
                                case "down":
                                    f = e.y + e.get_height();
                                    break;
                                case "center":
                                    f = e.y + e.get_height() / 2;
                                    break;
                                case "halfheight":
                                    f = e.get_height() / 2;
                                    break;
                                case "halfwidth":
                                    f = e.get_width() / 2;
                                    break;
                                case "height":
                                    f =
                                        e.get_height();
                                    break;
                                case "right":
                                    f = e.x + e.get_width();
                                    break;
                                case "top":
                                case "up":
                                case "y":
                                    f = e.y;
                                    break;
                                case "width":
                                    f = e.get_width();
                                    break;
                                case "left":
                                case "x":
                                    f = e.x
                            }
                            break;
                        case "w":
                        case "width":
                            if ("" == d) 0 == a && (f = e.x + e.get_width()), 1 == a && (f = e.x);
                            else switch (d) {
                                case "bottom":
                                case "down":
                                    f = e.y + e.get_height();
                                    break;
                                case "center":
                                    f = e.x + e.get_width() / 2;
                                    break;
                                case "halfheight":
                                    f = e.get_height() / 2;
                                    break;
                                case "halfwidth":
                                    f = e.get_width() / 2;
                                    break;
                                case "height":
                                    f = e.get_height();
                                    break;
                                case "right":
                                    f = e.x + e.get_width();
                                    break;
                                case "top":
                                case "up":
                                case "y":
                                    f = e.y;
                                    break;
                                case "width":
                                    f = e.get_width();
                                    break;
                                case "left":
                                case "x":
                                    f = e.x
                            }
                            break;
                        default:
                            switch (d) {
                                case "bottom":
                                case "down":
                                    f = e.y + e.get_height();
                                    break;
                                case "centerx":
                                    f = e.x + e.get_width() / 2;
                                    break;
                                case "centery":
                                    f = e.y + e.get_height() / 2;
                                    break;
                                case "halfheight":
                                    f = e.get_height() / 2;
                                    break;
                                case "halfwidth":
                                    f = e.get_width() / 2;
                                    break;
                                case "height":
                                    f = e.get_height();
                                    break;
                                case "right":
                                    f = e.x + e.get_width();
                                    break;
                                case "top":
                                case "up":
                                case "y":
                                    f = e.y;
                                    break;
                                case "width":
                                    f = e.get_width();
                                    break;
                                case "left":
                                case "x":
                                    f = e.x
                            }
                    }
                    return f
                },
                _loadCursor: function(a) {
                    if (Fa.resolve(a, "list")) {
                        null == this.cursorLists && (this.cursorLists = []);
                        var b = 0;
                        for (a = tb.resolve(a, "list"); b < a.length;) {
                            var c = a[b];
                            ++b;
                            c = y.xml_str(c, "ids").split(",");
                            if (null != c && 0 < c.length) {
                                for (var d = [], e = 0; e < c.length;) {
                                    var f = c[e];
                                    ++e;
                                    f = this.getAsset(f);
                                    null != f && d.push(f)
                                }
                                this.cursorLists.push(d)
                            }
                        }
                    }
                },
                _loadPosition: function(a, b) {
                    var c = this._loadWidth(a, 0, "x"),
                        d = this._loadHeight(a, 0, "y"),
                        e = y.xml_bool(a, "center_x"),
                        f = y.xml_bool(a, "center_y"),
                        k = y.xml_str(a, "center_on"),
                        p = y.xml_str(a, "center_on_x"),
                        m = y.xml_str(a, "center_on_y"),
                        h = "",
                        g = "",
                        l = 0,
                        r = 0,
                        D = "",
                        n = "";
                    Fa.resolve(a, "anchor") && (h = y.xml_str(Xa.resolve(a, "anchor"), "x"), g = y.xml_str(Xa.resolve(a, "anchor"), "y"), D = this.getRound(Xa.resolve(a, "anchor")), l = this._getAnchorPos(b, "x", h), r = this._getAnchorPos(b, "y", g), l = this.doRound(l, D), r = this.doRound(r, D), D = y.xml_str(Xa.resolve(a, "anchor"), "x-flush", !0), n = y.xml_str(Xa.resolve(a, "anchor"), "y-flush", !0));
                    if ("" != h || "" != g) {
                        switch (D) {
                            case "center":
                                l -=
                                    b.get_width() / 2;
                                break;
                            case "right":
                                l -= b.get_width()
                        }
                        switch (n) {
                            case "bottom":
                            case "down":
                                r -= b.get_height();
                                break;
                            case "center":
                                r -= b.get_height() / 2
                        }
                        "" != h && b.set_x(l);
                        "" != g && b.set_y(r)
                    }
                    if (e || f) a = e, null == f && (f = !0), null == a && (a = !0), a && b.set_x((q.width - b.get_width()) / 2), f && b.set_y((q.height - b.get_height()) / 2);
                    "" != k ? (k = this.getAsset(k), null != k && (k = oa.__cast(k, O), p = oa.__cast(b, O), p.set_x(k.x + (k.get_width() - p.get_width()) / 2), p.set_y(k.y + (k.get_height() - p.get_height()) / 2))) : ("" != p && (k = this.getAsset(p), null !=
                        k && (k = oa.__cast(k, O), p = oa.__cast(b, O), f = !0, a = !1, null == a && (a = !0), null == f && (f = !0), f && p.set_x(k.x + (k.get_width() - p.get_width()) / 2), a && p.set_y(k.y + (k.get_height() - p.get_height()) / 2))), "" != m && (k = this.getAsset(m), null != k && (k = oa.__cast(k, O), p = oa.__cast(b, O), f = !1, a = !0, null == a && (a = !0), null == f && (f = !0), f && p.set_x(k.x + (k.get_width() - p.get_width()) / 2), a && p.set_y(k.y + (k.get_height() - p.get_height()) / 2))));
                    a = c;
                    f = d;
                    null == f && (f = 0);
                    null == a && (a = 0);
                    c = b;
                    c.set_x(c.x + a);
                    c = b;
                    c.set_y(c.y + f)
                },
                _loadBorder: function(a) {
                    var b =
                        Md.fromXML(a),
                        c = this.getRound(a, "floor");
                    a = this._getDataSize("h", y.xml_str(a, "border_size"), 1);
                    c = this.doRound(a, c) | 0;
                    b.size = c;
                    return b
                },
                _loadColor: function(a, b, c) {
                    null == c && (c = -1);
                    null == b && (b = "color");
                    var d = y.xml_str(a, b);
                    if ("" == d) {
                        if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                        b = a.nodeName == b
                    } else b = !1;
                    b && (d = y.xml_str(a, "value"));
                    a = c;
                    if ("" != d && (a = Pb.fromString(d), null == a)) throw F.thrown("U.parseHex() unable to parse hex String " +
                        d);
                    return a
                },
                _loadFontDef: function(a) {
                    var b = oc.fromXML(a);
                    a = this._loadHeight(a, 8, "size") | 0;
                    b.format.size = Qa.fontSize(b.file, a);
                    b.set_size(a);
                    return b
                },
                _loadFontFace: function(a) {
                    var b = y.xml_str(a, "font");
                    a = y.xml_str(a, "style");
                    var c = null;
                    "" != b && (c = Qa.font(b, a));
                    return c
                },
                _onFinishLoad: function() {
                    null != this._ptr && this._ptr.getEvent("finish_load", this, null)
                },
                getText: function(a, b, c, d) {
                    null == d && (d = "");
                    null == c && (c = !0);
                    null == b && (b = "data");
                    return null != this._ptr_tongue ? (a = this._ptr_tongue.get(a, b, c), this.formatFromCode(a,
                        d)) : null != this.getTextFallback ? (a = this.getTextFallback(a, b, c), this.formatFromCode(a, d)) : a
                },
                formatFromCode: function(a, b) {
                    switch (b) {
                        case "fu":
                            return y.FU(a);
                        case "fu_":
                            return y.FU_(a);
                        case "l":
                            return a.toLowerCase();
                        case "u":
                            return a.toUpperCase()
                    }
                    return a
                },
                formatButtonText: function(a, b) {
                    if (null != a && Fa.resolve(a, "text")) {
                        a = Xa.resolve(a, "text");
                        var c = y.xml_str(a, "use_def", !0),
                            d = null;
                        "" != c && (d = this.getDefinition(c));
                        var e = Qa.consolidateData(a, d),
                            f = this._loadFontFace(e),
                            k = this._loadHeight(e, 8, "size", "floor") |
                            0;
                        a = this._loadColor(e);
                        var p = y.xml_f(e, "width"),
                            m = this._loadBorder(e),
                            h = y.xml_str(e, "align", !0);
                        "" == h && (h = null);
                        var g = c = null,
                            l = null;
                        if (0 == b instanceof oe) {
                            if ("" == h || null == h) h = "center"
                        } else b = b.button, h = "left";
                        if (null != b) {
                            if (b instanceof Pc) g = b, c = g.label;
                            else if (b instanceof pe)
                                if (l = b, l.label instanceof Fb) c = l.label;
                                else if (l.label instanceof ka) {
                                d = 0;
                                for (var q = l.label.group.members; d < q.length;) {
                                    var r = q[d];
                                    ++d;
                                    if (r instanceof Fb) {
                                        c = r;
                                        break
                                    }
                                }
                            }
                            b.up_color = a;
                            b.down_color = 0;
                            b.over_color = 0
                        }
                        null != c && (0 != p &&
                            (c.set_width(p), c.resetHelpers()), null != g ? g.setLabelFormat(f, k, a, h) : c.setFormat(f, k, a, h), c.set_borderStyle(m.style), c.set_borderColor(m.color), c.set_borderSize(m.size), c.set_borderQuality(m.quality), c instanceof Uc && c.drawFrame(), null != g && g.autoCenterLabel(), null != l && l.autoCenterLabel());
                        d = 0;
                        for (q = tb.resolve(e, "color"); d < q.length;) switch (k = q[d], ++d, a = this._loadColor(k), e = y.xml_bool(k, "visible", !0), f = y.xml_name(k), k = y.xml_bool(k, "toggle"), f) {
                            case "active":
                            case "hilight":
                            case "hover":
                            case "over":
                                k ?
                                    (b.over_toggle_color = a, b.over_toggle_visible = e) : (b.over_color = a, b.over_visible = e);
                                break;
                            case "down":
                            case "pressed":
                            case "pushed":
                                k ? (b.down_toggle_color = a, b.down_toggle_visible = e) : (b.down_color = a, b.down_visible = e);
                                break;
                            case "":
                            case "inactive":
                            case "normal":
                            case "up":
                                k ? (b.up_toggle_color = a, b.up_toggle_visible = e) : (b.up_color = a, b.up_visible = e)
                        }
                        0 == b.over_color && (b.over_color = b.up_color);
                        0 == b.down_color && (b.down_color = b.over_color);
                        0 == b.up_toggle_color && (b.up_toggle_color = b.up_color);
                        0 == b.over_toggle_color &&
                            (b.over_toggle_color = b.over_color);
                        0 == b.down_toggle_color && (b.down_toggle_color = b.down_color);
                        null != c && (c.set_visible(b.up_visible), c.set_color(b.up_color));
                        return c
                    }
                    return null
                },
                __class__: Qa,
                __properties__: n(Ja.prototype.__properties__, {
                    set_focus: "set_focus"
                })
            });
            var Nl = w["flixel.addons.ui.Rounding"] = {
                    __ename__: "flixel.addons.ui.Rounding",
                    __constructs__: ["Floor", "Ceil", "Round", "None"],
                    Floor: {
                        _hx_index: 0,
                        __enum__: "flixel.addons.ui.Rounding",
                        toString: h
                    },
                    Ceil: {
                        _hx_index: 1,
                        __enum__: "flixel.addons.ui.Rounding",
                        toString: h
                    },
                    Round: {
                        _hx_index: 2,
                        __enum__: "flixel.addons.ui.Rounding",
                        toString: h
                    },
                    None: {
                        _hx_index: 3,
                        __enum__: "flixel.addons.ui.Rounding",
                        toString: h
                    }
                },
                ec = function() {};
            g["flixel.addons.ui.interfaces.IResizable"] = ec;
            ec.__name__ = "flixel.addons.ui.interfaces.IResizable";
            ec.__isInterface__ = !0;
            ec.prototype = {
                __class__: ec,
                __properties__: {
                    get_height: "get_height",
                    get_width: "get_width"
                }
            };
            var Hb = function(a, b, c) {
                null == b && (b = 0);
                null == a && (a = 0);
                this._originalKey = "";
                this.resize_ratio_axis = 1;
                this.ptr_owner = null;
                G.call(this,
                    a, b, c)
            };
            g["flixel.addons.ui.FlxUISprite"] = Hb;
            Hb.__name__ = "flixel.addons.ui.FlxUISprite";
            Hb.__interfaces__ = [ec, Ec];
            Hb.__super__ = G;
            Hb.prototype = n(G.prototype, {
                set_resize_ratio: function(a) {
                    return this.resize_ratio = a
                },
                set_resize_point: function(a) {
                    if (null != a) {
                        var b = X._pool.get().set(0, 0);
                        b._inPool = !1;
                        this.resize_point = b;
                        this.resize_point.set_x(a.x);
                        this.resize_point.set_y(a.y)
                    }
                    return this.resize_point
                },
                resize: function(a, b) {
                    var c = this.get_width(),
                        d = this.get_height();
                    0 < this.resize_ratio && 1E-4 < Math.abs(a /
                        b - this.resize_ratio) && (1 == this.resize_ratio_axis ? b = 1 / this.resize_ratio * a : a = 1 / this.resize_ratio * b);
                    "" != this._originalKey && null != this._originalKey && (a = y.loadScaledImage(this._originalKey, a, b), "" != a && null != a && this.loadFromScaledGraphic(a));
                    c = this.get_width() - c;
                    d = this.get_height() - d;
                    null != this.resize_point && (d *= this.resize_point.y, a = this, a.set_x(a.x - c * this.resize_point.x), a = this, a.set_y(a.y - d))
                },
                loadGraphic: function(a, b, c, d, e, f) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = !1);
                    a = G.prototype.loadGraphic.call(this,
                        a, b, c, d, e, f);
                    this._originalKey = this.graphic.assetsKey;
                    null == this._originalKey && (this._originalKey = this.graphic.key);
                    return a
                },
                destroy: function() {
                    this.ptr_owner = null;
                    G.prototype.destroy.call(this)
                },
                loadFromScaledGraphic: function(a, b, c, d, e, f) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = !1);
                    G.prototype.loadGraphic.call(this, a, b, c, d, e, f)
                },
                __class__: Hb,
                __properties__: n(G.prototype.__properties__, {
                    set_resize_point: "set_resize_point",
                    set_resize_ratio: "set_resize_ratio"
                })
            });
            var La = function(a,
                b) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b
            };
            g["openfl.geom.Point"] = La;
            La.__name__ = "openfl.geom.Point";
            La.prototype = {
                copyFrom: function(a) {
                    this.x = a.x;
                    this.y = a.y
                },
                setTo: function(a, b) {
                    this.x = a;
                    this.y = b
                },
                __toLimeVector2: function() {
                    null == La.__limeVector2 && (La.__limeVector2 = new og);
                    var a = La.__limeVector2;
                    a.x = this.x;
                    a.y = this.y;
                    return La.__limeVector2
                },
                __class__: La
            };
            var fa = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.x = a;
                this.y = b;
                this.width = c;
                this.height = d
            };
            g["openfl.geom.Rectangle"] =
                fa;
            fa.__name__ = "openfl.geom.Rectangle";
            fa.prototype = {
                clone: function() {
                    return new fa(this.x, this.y, this.width, this.height)
                },
                contains: function(a, b) {
                    return a >= this.x && b >= this.y && a < this.get_right() ? b < this.get_bottom() : !1
                },
                containsPoint: function(a) {
                    return this.contains(a.x, a.y)
                },
                copyFrom: function(a) {
                    this.x = a.x;
                    this.y = a.y;
                    this.width = a.width;
                    this.height = a.height
                },
                equals: function(a) {
                    return a == this ? !0 : null != a && this.x == a.x && this.y == a.y && this.width == a.width ? this.height == a.height : !1
                },
                inflate: function(a, b) {
                    this.x -=
                        a;
                    this.width += 2 * a;
                    this.y -= b;
                    this.height += 2 * b
                },
                setTo: function(a, b, c, d) {
                    this.x = a;
                    this.y = b;
                    this.width = c;
                    this.height = d
                },
                __contract: function(a, b, c, d) {
                    if (0 != this.width || 0 != this.height) {
                        var e = 0,
                            f = 0,
                            k = 0,
                            p = 0;
                        this.x < a && (e = a - this.x);
                        this.y < b && (f = b - this.y);
                        this.get_right() > a + c && (k = a + c - this.get_right());
                        this.get_bottom() > b + d && (p = b + d - this.get_bottom());
                        this.x += e;
                        this.y += f;
                        this.width += k - e;
                        this.height += p - f
                    }
                },
                __expand: function(a, b, c, d) {
                    if (0 == this.width && 0 == this.height) this.x = a, this.y = b, this.width = c, this.height = d;
                    else {
                        var e = this.get_right(),
                            f = this.get_bottom();
                        this.x > a && (this.x = a, this.width = e - a);
                        this.y > b && (this.y = b, this.height = f - b);
                        e < a + c && (this.width = a + c - this.x);
                        f < b + d && (this.height = b + d - this.y)
                    }
                },
                __toLimeRectangle: function() {
                    null == fa.__limeRectangle && (fa.__limeRectangle = new Nd);
                    fa.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
                    return fa.__limeRectangle
                },
                __transform: function(a, b) {
                    var c = b.a * this.x + b.c * this.y,
                        d = c,
                        e = b.b * this.x + b.d * this.y,
                        f = e,
                        k = b.a * (this.x + this.width) + b.c * this.y,
                        p = b.b * (this.x + this.width) +
                        b.d * this.y;
                    k < c && (c = k);
                    p < e && (e = p);
                    k > d && (d = k);
                    p > f && (f = p);
                    k = b.a * (this.x + this.width) + b.c * (this.y + this.height);
                    p = b.b * (this.x + this.width) + b.d * (this.y + this.height);
                    k < c && (c = k);
                    p < e && (e = p);
                    k > d && (d = k);
                    p > f && (f = p);
                    k = b.a * this.x + b.c * (this.y + this.height);
                    p = b.b * this.x + b.d * (this.y + this.height);
                    k < c && (c = k);
                    p < e && (e = p);
                    k > d && (d = k);
                    p > f && (f = p);
                    a.setTo(c + b.tx, e + b.ty, d - c, f - e)
                },
                get_bottom: function() {
                    return this.y + this.height
                },
                get_left: function() {
                    return this.x
                },
                get_right: function() {
                    return this.x + this.width
                },
                get_top: function() {
                    return this.y
                },
                __class__: fa,
                __properties__: {
                    get_top: "get_top",
                    get_right: "get_right",
                    get_left: "get_left",
                    get_bottom: "get_bottom"
                }
            };
            var M = function(a, b, c, d, e, f, k, p, m, h, g, l, q) {
                null == q && (q = -1);
                null == l && (l = !1);
                null == g && (g = 1);
                null == m && (m = -1);
                null == p && (p = "");
                null == k && (k = !1);
                null == f && (f = 0);
                this._asset_id = "";
                this._smooth = !1;
                this._tile = 0;
                this._slice9 = null;
                this.paintScale9_id = "";
                Hb.call(this, a, b, null);
                this.set_color(q);
                this._slice9 = e;
                this._tile = f;
                this._smooth = k;
                this._asset_id = "";
                null == c && (c = "flixel/flixel-ui/img/chrome.png");
                "string" == typeof c ? (this._asset_id = c, this._raw_pixels = null) : c instanceof H ? (this._asset_id = p, this._raw_pixels = c) : c instanceof zb && (a = c, this._asset_id = a.key, this._raw_pixels = a.bitmap);
                this.set_resize_ratio(m);
                this.resize_ratio_axis = g;
                null != h && this.set_resize_point(h);
                l ? (d = y.applyResize(this.resize_ratio, this.resize_ratio_axis, d.width, d.height), this.set_width(d.x), this.set_height(d.y)) : this.resize(d.width, d.height)
            };
            g["flixel.addons.ui.FlxUI9SliceSprite"] = M;
            M.__name__ = "flixel.addons.ui.FlxUI9SliceSprite";
            M.__interfaces__ = [Ec, ec];
            M.paintScale9 = function(a, b, c, d, e, f, k) {
                null == f && (f = !1);
                null == e && (e = 0);
                if (null != c) {
                    if (null == k) {
                        var p = y.getBmp(b);
                        if (null != p) {
                            var m = p.width;
                            p = p.height
                        } else p = q.bitmap._cache.h[b], m = p.width, p = p.height
                    } else m = k.width, p = k.height;
                    var h = c[0],
                        g = c[1],
                        l = c[2],
                        r = c[3];
                    if (null == M._staticRects) {
                        M._staticRects = new aa;
                        var D = M._staticRects,
                            n = ca._pool.get(),
                            w = 0,
                            x = 0,
                            u = 0,
                            B = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h["top.left"] =
                            n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h.top = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h["top.right"] = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h.left = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h.middle = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h.right = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h["bottom.left"] = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h.bottom = n;
                        D = M._staticRects;
                        n = ca._pool.get();
                        B = u = x = w = 0;
                        null == B && (B = 0);
                        null == u && (u = 0);
                        null == x && (x = 0);
                        null == w && (w = 0);
                        n.x = w;
                        n.y = x;
                        n.width = u;
                        n.height = B;
                        n._inPool = !1;
                        D.h["bottom.right"] = n
                    }
                    n = M._staticRects.h["top.left"];
                    x = w = 0;
                    u = h;
                    B = g;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h.top;
                    w = h;
                    x = 0;
                    u = l - h;
                    B = g;
                    null == B && (B = 0);
                    null ==
                        u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h["top.right"];
                    w = l;
                    x = 0;
                    u = m - l;
                    B = g;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h.left;
                    w = 0;
                    x = g;
                    u = h;
                    B = r - g;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h.middle;
                    w = h;
                    x = g;
                    u = l - h;
                    B = r - g;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h.right;
                    w = l;
                    x = g;
                    u = m - l;
                    B = r - g;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h["bottom.left"];
                    w = 0;
                    x = r;
                    u = h;
                    B = p - r;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h.bottom;
                    w = h;
                    x = r;
                    u = l - h;
                    B = p - r;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null == w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    n = M._staticRects.h["bottom.right"];
                    w = l;
                    x = r;
                    u = m - l;
                    B = p - r;
                    null == B && (B = 0);
                    null == u && (u = 0);
                    null == x && (x = 0);
                    null ==
                        w && (w = 0);
                    n.x = w;
                    n.y = x;
                    n.width = u;
                    n.height = B;
                    null == M.cacheCounter && (M.cacheCounter = new aa);
                    c = M.makePaintScale9Id(b, c, d);
                    m = M.cacheCounter.h[c];
                    if (null == m) {
                        m = {
                            useCount: 0,
                            subKeys: []
                        };
                        for (p = 0; 9 > p;) {
                            switch (p++) {
                                case 0:
                                    n = M._staticRects.h["top.left"];
                                    break;
                                case 1:
                                    n = M._staticRects.h.top;
                                    break;
                                case 2:
                                    n = M._staticRects.h["top.right"];
                                    break;
                                case 3:
                                    n = M._staticRects.h.left;
                                    break;
                                case 4:
                                    n = M._staticRects.h.middle;
                                    break;
                                case 5:
                                    n = M._staticRects.h.right;
                                    break;
                                case 6:
                                    n = M._staticRects.h["bottom.left"];
                                    break;
                                case 7:
                                    n = M._staticRects.h.bottom;
                                    break;
                                case 8:
                                    n = M._staticRects.h["bottom.right"];
                                    break;
                                default:
                                    n = M._staticRects.h["top.left"]
                            }
                            m.subKeys.push(b + "_" + n.x + "_" + n.y + "_" + n.width + "_" + n.height + "_")
                        }
                        M.cacheCounter.h[c] = m
                    }
                    M.paintCompoundBitmap(a, b, M._staticRects, d, e, f, k);
                    return c
                }
                return ""
            };
            M.makePaintScale9Id = function(a, b, c) {
                a = a + "_" + b.join(",") + "_";
                b = c.x;
                var d = Xb._pool.get();
                d.label = "x";
                d.value = b;
                b = c.y;
                var e = Xb._pool.get();
                e.label = "y";
                e.value = b;
                b = c.width;
                var f = Xb._pool.get();
                f.label = "w";
                f.value = b;
                b = c.height;
                c = Xb._pool.get();
                c.label = "h";
                c.value =
                    b;
                return a + ub.getDebugString([d, e, f, c])
            };
            M.paintCompoundBitmap = function(a, b, c, d, e, f, k) {
                null == f && (f = !1);
                null == e && (e = 0);
                d.x |= 0;
                d.y |= 0;
                d.width |= 0;
                d.height |= 0;
                var p = c.h["top.left"];
                if (null != p) {
                    var m = M._staticFlxRect2,
                        h = 0,
                        g = 0,
                        l = p.width,
                        q = p.height;
                    null == q && (q = 0);
                    null == l && (l = 0);
                    null == g && (g = 0);
                    null == h && (h = 0);
                    m.x = h;
                    m.y = g;
                    m.width = l;
                    m.height = q;
                    M.paintBitmapSection(a, b, p, M._staticFlxRect2, null, 0, f, k)
                }
                var n = c.h["top.right"];
                null != n && (m = M._staticFlxRect2, h = d.width - n.width, g = 0, l = n.width, q = n.height, null == q && (q = 0),
                    null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, n, M._staticFlxRect2, null, 0, f, k));
                var r = c.h.top;
                null != r && (m = M._staticFlxRect2, h = p.width, g = 0, l = d.width - p.width - n.width, q = r.height, null == q && (q = 0), null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, r, M._staticFlxRect2, null, e & 16, f, k));
                var D = c.h["bottom.left"];
                null != D && (m = M._staticFlxRect2, h = 0, g = d.height - D.height, l = D.width, q = D.height, null == q && (q = 0), null ==
                    l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, D, M._staticFlxRect2, null, 0, f, k));
                var w = c.h["bottom.right"];
                null != w && (m = M._staticFlxRect2, h = d.width - w.width, g = d.height - w.height, l = w.width, q = w.height, null == q && (q = 0), null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, w, M._staticFlxRect2, null, 0, f, k));
                var x = c.h.bottom;
                null != x && (m = M._staticFlxRect2, h = D.width, g = d.height - x.height, l = d.width - D.width - w.width, q =
                    x.height, null == q && (q = 0), null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, x, M._staticFlxRect2, null, e & 16, f, k));
                w = c.h.left;
                null != w && (m = M._staticFlxRect2, h = 0, g = p.height, l = w.width, q = d.height - p.height - D.height, null == q && (q = 0), null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, w, M._staticFlxRect2, null, e & 1, f, k));
                var u = c.h.right;
                null != u && (m = M._staticFlxRect2, h = d.width - u.width, g = n.height, l = u.width, q = d.height -
                    p.height - D.height, null == q && (q = 0), null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, u, M._staticFlxRect2, null, e & 1, f, k));
                c = c.h.middle;
                null != c && (m = M._staticFlxRect2, h = w.width, g = r.height, l = d.width - w.width - u.width, q = d.height - r.height - x.height, null == q && (q = 0), null == l && (l = 0), null == g && (g = 0), null == h && (h = 0), m.x = h, m.y = g, m.width = l, m.height = q, M.paintBitmapSection(a, b, c, M._staticFlxRect2, null, e, f, k))
            };
            M.paintBitmapSection = function(a, b, c, d, e, f, k, p) {
                null == k && (k = !1);
                null == f && (f = 0);
                null == e && (e = null != p ? p : y.getBmp(b));
                c.x |= 0;
                c.y |= 0;
                c.width |= 0;
                c.height |= 0;
                d.x |= 0;
                d.y |= 0;
                d.width |= 0;
                d.height |= 0;
                var m = p = null;
                1 == M.useSectionCache && null != b && (null == M.sectionCache && (M.sectionCache = new aa), m = b + "_" + c.x + "_" + c.y + "_" + c.width + "_" + c.height + "_", p = M.sectionCache.h[m]);
                null == p && (p = new H(c.width | 0, c.height | 0, !0, 16777215), M._staticRect2.x = c.x, M._staticRect2.y = c.y, M._staticRect2.width = c.width, M._staticRect2.height = c.height, p.copyPixels(e, M._staticRect2, M._staticPointZero), 1 == M.useSectionCache &&
                    null != m && (M.sectionCache.h[m] = p), M.bitmapsCreated++);
                0 < d.width && 0 < d.height && (M._staticRect2.x = d.x, M._staticRect2.y = d.y, M._staticRect2.width = d.width, M._staticRect2.height = d.height, M.bitmapFillRect(a, M._staticRect2, p, f, k))
            };
            M.bitmapFillRect = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = 0);
                var f = new H(b.width | 0, b.height | 0, !0, 0);
                M._staticMatrix.identity();
                M._staticRect.x = 0;
                M._staticRect.y = 0;
                M._staticRect.width = c.width;
                M._staticRect.height = c.height;
                0 == (d & 16) && (M._staticMatrix.scale(b.width / c.width, 1),
                    M._staticRect.width = b.width);
                0 == (d & 1) && (M._staticMatrix.scale(1, b.height / c.height), M._staticRect.height = b.height);
                c.width == b.width && c.height == b.height ? (M._staticPoint.x = 0, M._staticPoint.y = 0, f.copyPixels(c, c.rect, M._staticPoint)) : e ? f.draw(c, M._staticMatrix, null, null, null, !0) : f.draw(c, M._staticMatrix, null, null, null, !1);
                if (0 != d) {
                    if (16 == (d & 16))
                        for (M._staticPoint.x = 0, M._staticPoint.y = 0; M._staticPoint.x < b.width;) M._staticPoint.x += M._staticRect.width, f.copyPixels(f, M._staticRect, M._staticPoint);
                    if (1 == (d &
                            1))
                        for (M._staticPoint.x = 0, M._staticPoint.y = 0, M._staticRect.width = f.width; M._staticPoint.y < b.height;) M._staticPoint.y += M._staticRect.height, f.copyPixels(f, M._staticRect, M._staticPoint)
                }
                M._staticPoint.x = b.x;
                M._staticPoint.y = b.y;
                a.copyPixels(f, f.rect, M._staticPoint);
                V.dispose(f)
            };
            M.__super__ = Hb;
            M.prototype = n(Hb.prototype, {
                destroy: function() {
                    this.noLongerUsingCachedID(this.paintScale9_id);
                    Hb.prototype.destroy.call(this)
                },
                resize: function(a, b) {
                    1 > (a | 0) && (a = 1);
                    1 > (b | 0) && (b = 1);
                    var c = this.get_width(),
                        d = this.get_height(),
                        e = y.applyResize(this.resize_ratio, this.resize_ratio_axis, a, b);
                    a = e.x;
                    b = e.y;
                    var f = e.x | 0,
                        k = e.y | 0;
                    if (null == this._slice9 || this._slice9 == []) this._slice9 = [4, 4, 7, 7];
                    e = this._asset_id + "_" + this._slice9.join(",") + "_" + f + "x" + k + "_" + this._tile + "_" + I.string(this._smooth);
                    null != q.bitmap._cache.h[e] ? this.loadGraphic(e, !1, f, k) : (f = new H(a | 0, b | 0), M._staticFlxRect.x = 0, M._staticFlxRect.y = 0, M._staticFlxRect.width = a, M._staticFlxRect.height = b, a = this.paintScale9_id, M.makePaintScale9Id(this._asset_id, this._slice9, M._staticFlxRect) !=
                        a && (this.paintScale9_id = M.paintScale9(f, this._asset_id, this._slice9, M._staticFlxRect, this._tile, this._smooth, this._raw_pixels), M.cacheCounter.h[this.paintScale9_id].useCount++, this.noLongerUsingCachedID(a)), this.loadGraphic(f, !1, f.width, f.height, !1, e));
                    c = this.get_width() - c;
                    d = this.get_height() - d;
                    null != this.resize_point && (d *= this.resize_point.y, a = this, a.set_x(a.x - c * this.resize_point.x), a = this, a.set_y(a.y - d))
                },
                noLongerUsingCachedID: function(a) {
                    if (Object.prototype.hasOwnProperty.call(M.cacheCounter.h,
                            a)) {
                        var b = M.cacheCounter.h[a];
                        b.useCount--;
                        0 >= b.useCount && this.purgeSections(a)
                    }
                },
                purgeSections: function(a) {
                    var b = M.cacheCounter.h[a];
                    if (null != b) {
                        for (var c = 0, d = b.subKeys; c < d.length;) {
                            var e = d[c];
                            ++c;
                            var f = M.sectionCache;
                            Object.prototype.hasOwnProperty.call(f.h, e) && delete f.h[e]
                        }
                        b.subKeys = null;
                        f = M.cacheCounter;
                        Object.prototype.hasOwnProperty.call(f.h, a) && delete f.h[a]
                    }
                },
                __class__: M
            });
            var qf = function(a, b, c, d, e, f, k, p, m, h) {
                null == h && (h = !1);
                null == m && (m = 100);
                null == p && (p = 0);
                null == k && (k = "");
                null == e && (e = 10);
                null == d && (d = 100);
                null == b && (b = 0);
                null == a && (a = 0);
                this.numDivisions = this._maxPercent = 100;
                this.killOnEmpty = !1;
                this.fixedPosition = !0;
                G.call(this, a, b);
                null == c && (c = af.LEFT_TO_RIGHT);
                this.barWidth = d;
                this.barHeight = e;
                this._filledBarPoint = new La;
                this._filledBarRect = new fa;
                if (q.renderBlit) this._zeroOffset = new La, this._emptyBarRect = new fa, this.makeGraphic(d, e, 0, !0);
                else {
                    a = ca._pool.get();
                    var g = e = d = b = 0;
                    null == g && (g = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == b && (b = 0);
                    a.x = b;
                    a.y = d;
                    a.width = e;
                    a.height = g;
                    a._inPool = !1;
                    this._filledFlxRect =
                        a
                }
                null != f && (this.parent = f, this.parentVariable = k);
                this.set_fillDirection(c);
                this.createFilledBar(-16756480, -16714752, h);
                this.setRange(p, m)
            };
            g["flixel.ui.FlxBar"] = qf;
            qf.__name__ = "flixel.ui.FlxBar";
            qf.__super__ = G;
            qf.prototype = n(G.prototype, {
                destroy: function() {
                    this.positionOffset = V.put(this.positionOffset);
                    q.renderBlit ? (this._frontFrame = null, this._filledFlxRect = V.put(this._filledFlxRect)) : (this._zeroOffset = this._emptyBarRect = null, this._emptyBar = V.dispose(this._emptyBar), this._filledBar = V.dispose(this._filledBar));
                    this.filledCallback = this.emptyCallback = this.positionOffset = this.parent = this._filledBarPoint = this._filledBarRect = null;
                    G.prototype.destroy.call(this)
                },
                setRange: function(a, b) {
                    if (b <= a) throw F.thrown("FlxBar: max cannot be less than or equal to min");
                    this.min = a;
                    this.max = b;
                    this.range = b - a;
                    this.pct = this.range / this._maxPercent;
                    this.pxPerPercent = this._fillHorizontal ? this.barWidth / this._maxPercent : this.barHeight / this._maxPercent;
                    var c = this.get_value();
                    isNaN(c) ? this.set_value(a) : this.set_value(Math.max(a, Math.min(this.get_value(),
                        b)))
                },
                createFilledBar: function(a, b, c, d) {
                    null == d && (d = -1);
                    null == c && (c = !1);
                    this.createColoredEmptyBar(a, c, d);
                    this.createColoredFilledBar(b, c, d);
                    return this
                },
                createColoredEmptyBar: function(a, b, c) {
                    null == c && (c = -1);
                    null == b && (b = !1);
                    if (q.renderTile) {
                        var d = "empty: " + this.barWidth + "x" + this.barHeight + ":" + ("0x" + K.hex(a >> 24 & 255, 2) + K.hex(a >> 16 & 255, 2) + K.hex(a >> 8 & 255, 2) + K.hex(a & 255, 2));
                        b && (d += ",border: " + ("0x" + K.hex(c >> 24 & 255, 2) + K.hex(c >> 16 & 255, 2) + K.hex(c >> 8 & 255, 2) + K.hex(c & 255, 2)));
                        null == q.bitmap._cache.h[d] && (b ?
                            (b = new H(this.barWidth, this.barHeight, !0, c), b.fillRect(new fa(1, 1, this.barWidth - 2, this.barHeight - 2), a)) : b = new H(this.barWidth, this.barHeight, !0, a), q.bitmap.add(b, !1, d));
                        this.set_frames(q.bitmap._cache.h[d].get_imageFrame())
                    } else b ? (this._emptyBar = new H(this.barWidth, this.barHeight, !0, c), this._emptyBar.fillRect(new fa(1, 1, this.barWidth - 2, this.barHeight - 2), a)) : this._emptyBar = new H(this.barWidth, this.barHeight, !0, a), this._emptyBarRect.setTo(0, 0, this.barWidth, this.barHeight), this.updateEmptyBar();
                    return this
                },
                createColoredFilledBar: function(a, b, c) {
                    null == c && (c = -1);
                    null == b && (b = !1);
                    if (q.renderTile) {
                        var d = "filled: " + this.barWidth + "x" + this.barHeight + ":" + ("0x" + K.hex(a >> 24 & 255, 2) + K.hex(a >> 16 & 255, 2) + K.hex(a >> 8 & 255, 2) + K.hex(a & 255, 2));
                        b && (d += ",border: " + ("0x" + K.hex(c >> 24 & 255, 2) + K.hex(c >> 16 & 255, 2) + K.hex(c >> 8 & 255, 2) + K.hex(c & 255, 2)));
                        null == q.bitmap._cache.h[d] && (b ? (b = new H(this.barWidth, this.barHeight, !0, c), b.fillRect(new fa(1, 1, this.barWidth - 2, this.barHeight - 2), a)) : b = new H(this.barWidth, this.barHeight, !0, a), q.bitmap.add(b, !1, d));
                        this.set_frontFrames(q.bitmap._cache.h[d].get_imageFrame())
                    } else b ? (this._filledBar = new H(this.barWidth, this.barHeight, !0, c), this._filledBar.fillRect(new fa(1, 1, this.barWidth - 2, this.barHeight - 2), a)) : this._filledBar = new H(this.barWidth, this.barHeight, !0, a), this._filledBarRect.setTo(0, 0, this.barWidth, this.barHeight), this.updateFilledBar();
                    return this
                },
                createGradientBar: function(a, b, c, d, e, f) {
                    null == f && (f = -1);
                    null == e && (e = !1);
                    null == d && (d = 180);
                    null == c && (c = 1);
                    this.createGradientEmptyBar(a, c, d, e, f);
                    this.createGradientFilledBar(b, c, d, e, f);
                    return this
                },
                createGradientEmptyBar: function(a, b, c, d, e) {
                    null == e && (e = -1);
                    null == d && (d = !1);
                    null == c && (c = 180);
                    null == b && (b = 1);
                    if (q.renderTile) {
                        for (var f = "Gradient:" + this.barWidth + "x" + this.barHeight + ",colors:[", k = 0; k < a.length;) {
                            var p = a[k];
                            ++k;
                            f += "0x" + K.hex(p >> 24 & 255, 2) + K.hex(p >> 16 & 255, 2) + K.hex(p >> 8 & 255, 2) + K.hex(p & 255, 2) + ","
                        }
                        f += "],chunkSize: " + b + ",rotation: " + c;
                        d && (f += ",border: " + ("0x" + K.hex(e >> 24 & 255, 2) + K.hex(e >> 16 & 255, 2) + K.hex(e >> 8 & 255, 2) + K.hex(e & 255, 2)));
                        null == q.bitmap._cache.h[f] &&
                            (d ? (d = new H(this.barWidth, this.barHeight, !0, e), fd.overlayGradientOnBitmapData(d, this.barWidth - 2, this.barHeight - 2, a, 1, 1, b, c)) : d = fd.createGradientBitmapData(this.barWidth, this.barHeight, a, b, c), q.bitmap.add(d, !1, f));
                        this.set_frames(q.bitmap._cache.h[f].get_imageFrame())
                    } else d ? (this._emptyBar = new H(this.barWidth, this.barHeight, !0, e), fd.overlayGradientOnBitmapData(this._emptyBar, this.barWidth - 2, this.barHeight - 2, a, 1, 1, b, c)) : this._emptyBar = fd.createGradientBitmapData(this.barWidth, this.barHeight, a, b, c),
                        this._emptyBarRect.setTo(0, 0, this.barWidth, this.barHeight), this.updateEmptyBar();
                    return this
                },
                createGradientFilledBar: function(a, b, c, d, e) {
                    null == e && (e = -1);
                    null == d && (d = !1);
                    null == c && (c = 180);
                    null == b && (b = 1);
                    if (q.renderTile) {
                        for (var f = "Gradient:" + this.barWidth + "x" + this.barHeight + ",colors:[", k = 0; k < a.length;) {
                            var p = a[k];
                            ++k;
                            f += "0x" + K.hex(p >> 24 & 255, 2) + K.hex(p >> 16 & 255, 2) + K.hex(p >> 8 & 255, 2) + K.hex(p & 255, 2) + ","
                        }
                        f += "],chunkSize: " + b + ",rotation: " + c;
                        d && (f += ",border: " + ("0x" + K.hex(e >> 24 & 255, 2) + K.hex(e >> 16 & 255, 2) +
                            K.hex(e >> 8 & 255, 2) + K.hex(e & 255, 2)));
                        null == q.bitmap._cache.h[f] && (d ? (d = new H(this.barWidth, this.barHeight, !0, e), fd.overlayGradientOnBitmapData(d, this.barWidth - 2, this.barHeight - 2, a, 1, 1, b, c)) : d = fd.createGradientBitmapData(this.barWidth, this.barHeight, a, b, c), q.bitmap.add(d, !1, f));
                        this.set_frontFrames(q.bitmap._cache.h[f].get_imageFrame())
                    } else d ? (this._filledBar = new H(this.barWidth, this.barHeight, !0, e), fd.overlayGradientOnBitmapData(this._filledBar, this.barWidth - 2, this.barHeight - 2, a, 1, 1, b, c)) : this._filledBar =
                        fd.createGradientBitmapData(this.barWidth, this.barHeight, a, b, c), this._filledBarRect.setTo(0, 0, this.barWidth, this.barHeight), this.updateFilledBar();
                    return this
                },
                createImageBar: function(a, b, c, d) {
                    null == d && (d = -16711936);
                    null == c && (c = -16777216);
                    this.createImageEmptyBar(a, c);
                    this.createImageFilledBar(b, d);
                    return this
                },
                createImageEmptyBar: function(a, b) {
                    null == b && (b = -16777216);
                    null != a ? (a = q.bitmap.add(a), q.renderTile ? this.set_frames(a.get_imageFrame()) : (this._emptyBar = a.bitmap.clone(), this.barWidth = this._emptyBar.width,
                        this.barHeight = this._emptyBar.height, this._emptyBarRect.setTo(0, 0, this.barWidth, this.barHeight), null != this.graphic && this.frame.sourceSize.x == this.barWidth && this.frame.sourceSize.y == this.barHeight || this.makeGraphic(this.barWidth, this.barHeight, 0, !0), this.updateEmptyBar())) : this.createColoredEmptyBar(b);
                    return this
                },
                createImageFilledBar: function(a, b) {
                    null == b && (b = -16711936);
                    null != a ? (a = q.bitmap.add(a), q.renderTile ? this.set_frontFrames(a.get_imageFrame()) : (this._filledBar = a.bitmap.clone(), this._filledBarRect.setTo(0,
                        0, this.barWidth, this.barHeight), null != this.graphic && this.frame.sourceSize.x == this.barWidth && this.frame.sourceSize.y == this.barHeight || this.makeGraphic(this.barWidth, this.barHeight, 0, !0), this.pxPerPercent = this._fillHorizontal ? this.barWidth / this._maxPercent : this.barHeight / this._maxPercent, this.updateFilledBar())) : this.createColoredFilledBar(b);
                    return this
                },
                set_fillDirection: function(a) {
                    this.fillDirection = a;
                    switch (a._hx_index) {
                        case 2:
                        case 3:
                        case 6:
                        case 7:
                            this._fillHorizontal = !1;
                            break;
                        case 0:
                        case 1:
                        case 4:
                        case 5:
                            this._fillHorizontal = !0
                    }
                    return this.fillDirection
                },
                updateValueFromParent: function() {
                    this.set_value(ea.getProperty(this.parent, this.parentVariable))
                },
                updateBar: function() {
                    this.updateEmptyBar();
                    this.updateFilledBar()
                },
                updateEmptyBar: function() {
                    q.renderBlit && (this.get_pixels().copyPixels(this._emptyBar, this._emptyBarRect, this._zeroOffset), this.dirty = !0)
                },
                updateFilledBar: function() {
                    this._filledBarRect.width = this.barWidth;
                    this._filledBarRect.height = this.barHeight;
                    var a = (this.get_value() - this.min) / this.range,
                        b = a * this._maxPercent,
                        c = this._fillHorizontal ? this.barWidth : this.barHeight,
                        d = c / this.numDivisions;
                    a = Math.round((a * c / d | 0) * d);
                    this._fillHorizontal ? this._filledBarRect.width = a | 0 : this._filledBarRect.height = a | 0;
                    if (0 < b) {
                        switch (this.fillDirection._hx_index) {
                            case 1:
                                this._filledBarRect.x = this.barWidth - this._filledBarRect.width;
                                this._filledBarPoint.x = this.barWidth - this._filledBarRect.width;
                                break;
                            case 3:
                                this._filledBarRect.y = this.barHeight - this._filledBarRect.height;
                                this._filledBarPoint.y = this.barHeight - this._filledBarRect.height;
                                break;
                            case 4:
                                this._filledBarRect.x = this.barWidth / 2 - this._filledBarRect.width / 2 | 0;
                                this._filledBarPoint.x = this.barWidth / 2 - this._filledBarRect.width / 2 | 0;
                                break;
                            case 5:
                                this._filledBarRect.width = c - a | 0;
                                this._filledBarPoint.x = (this.barWidth - this._filledBarRect.width) / 2 | 0;
                                break;
                            case 6:
                                this._filledBarRect.y = this.barHeight / 2 - this._filledBarRect.height / 2 | 0;
                                this._filledBarPoint.y = this.barHeight / 2 - this._filledBarRect.height / 2 | 0;
                                break;
                            case 7:
                                this._filledBarRect.height = c - a | 0, this._filledBarPoint.y = (this.barHeight -
                                    this._filledBarRect.height) / 2 | 0
                        }
                        q.renderBlit ? this.get_pixels().copyPixels(this._filledBar, this._filledBarRect, this._filledBarPoint, null, null, !0) : null != this.get_frontFrames() && (c = this._filledFlxRect, a = this._filledBarRect, c.x = a.x, c.y = a.y, c.width = a.width, c.height = a.height, c.x = Math.round(c.x), c.y = Math.round(c.y), c.width = Math.round(c.width), c.height = Math.round(c.height), 0 < (b | 0) && (this._frontFrame = this.get_frontFrames().get_frame().clipTo(this._filledFlxRect, this._frontFrame)))
                    }
                    q.renderBlit && (this.dirty = !0)
                },
                update: function(a) {
                    null != this.parent && (ea.getProperty(this.parent, this.parentVariable) != this.get_value() && this.updateValueFromParent(), this.fixedPosition || (this.set_x(this.parent.x + this.positionOffset.x), this.set_y(this.parent.y + this.positionOffset.y)));
                    G.prototype.update.call(this, a)
                },
                draw: function() {
                    G.prototype.draw.call(this);
                    if (q.renderTile && 0 != this.alpha && 0 < this.get_percent() && 2 != this._frontFrame.type)
                        for (var a = 0, b = this.get_cameras(); a < b.length;) {
                            var c = b[a];
                            ++a;
                            if (c.visible && c.exists && this.isOnScreen(c)) {
                                this.getScreenPosition(this._point,
                                    c).subtractPoint(this.offset);
                                this._frontFrame.prepareMatrix(this._matrix, 0, this.flipX, this.flipY);
                                this._matrix.translate(-this.origin.x, -this.origin.y);
                                this._matrix.scale(this.scale.x, this.scale.y);
                                if (0 != this.angle) {
                                    var d = this._matrix,
                                        e = this._cosAngle,
                                        f = this._sinAngle,
                                        k = d.a * e - d.b * f;
                                    d.b = d.a * f + d.b * e;
                                    d.a = k;
                                    k = d.c * e - d.d * f;
                                    d.d = d.c * f + d.d * e;
                                    d.c = k;
                                    k = d.tx * e - d.ty * f;
                                    d.ty = d.tx * f + d.ty * e;
                                    d.tx = k
                                }
                                e = this._point;
                                f = this.origin.x;
                                d = this.origin.y;
                                null == d && (d = 0);
                                null == f && (f = 0);
                                k = e;
                                k.set_x(k.x + f);
                                e.set_y(e.y + d);
                                this.isPixelPerfectRender(c) &&
                                    (d = this._point, d.set_x(Math.floor(d.x)), d.set_y(Math.floor(d.y)));
                                this._matrix.translate(this._point.x, this._point.y);
                                c.drawPixels(this._frontFrame, null, this._matrix, this.colorTransform, this.blend, this.antialiasing, this.shader)
                            }
                        }
                },
                set_pixels: function(a) {
                    return q.renderTile ? a : G.prototype.set_pixels.call(this, a)
                },
                toString: function() {
                    var a = this.min,
                        b = Xb._pool.get();
                    b.label = "min";
                    b.value = a;
                    a = this.max;
                    var c = Xb._pool.get();
                    c.label = "max";
                    c.value = a;
                    a = this.range;
                    var d = Xb._pool.get();
                    d.label = "range";
                    d.value =
                        a;
                    a = this.pct;
                    var e = Xb._pool.get();
                    e.label = "%";
                    e.value = a;
                    a = this.pxPerPercent;
                    var f = Xb._pool.get();
                    f.label = "px/%";
                    f.value = a;
                    a = this.get_value();
                    var k = Xb._pool.get();
                    k.label = "value";
                    k.value = a;
                    return ub.getDebugString([b, c, d, e, f, k])
                },
                get_percent: function() {
                    return this.get_value() > this.max ? this._maxPercent : Math.floor((this.get_value() - this.min) / this.range * this._maxPercent)
                },
                set_value: function(a) {
                    this.value = Math.max(this.min, Math.min(a, this.max));
                    this.get_value() == this.min && null != this.emptyCallback && this.emptyCallback();
                    this.get_value() == this.max && null != this.filledCallback && this.filledCallback();
                    this.get_value() == this.min && this.killOnEmpty && this.kill();
                    this.updateBar();
                    return a
                },
                get_value: function() {
                    return this.value
                },
                get_frontFrames: function() {
                    return q.renderTile ? this.frontFrames : null
                },
                set_frontFrames: function(a) {
                    q.renderTile ? (this.frontFrames = a, this._frontFrame = null != a ? a.get_frame().copyTo(this._frontFrame) : null) : this.createImageFilledBar(a.get_frame().paint());
                    return a
                },
                __class__: qf,
                __properties__: n(G.prototype.__properties__, {
                    set_fillDirection: "set_fillDirection",
                    set_frontFrames: "set_frontFrames",
                    get_frontFrames: "get_frontFrames",
                    set_value: "set_value",
                    get_value: "get_value",
                    get_percent: "get_percent"
                })
            });
            var Ad = function() {};
            g["flixel.addons.ui.interfaces.IHasParams"] = Ad;
            Ad.__name__ = "flixel.addons.ui.interfaces.IHasParams";
            Ad.__isInterface__ = !0;
            Ad.prototype = {
                __class__: Ad,
                __properties__: {
                    set_params: "set_params"
                }
            };
            var qg = function(a, b, c, d, e, f, k, p, m, h) {
                null == h && (h = !1);
                null == m && (m = 100);
                null == p && (p = 0);
                null == k && (k = "");
                null == e &&
                    (e = 10);
                null == d && (d = 100);
                null == b && (b = 0);
                null == a && (a = 0);
                qf.call(this, a, b, c, d, e, f, k, p, m, h)
            };
            g["flixel.addons.ui.FlxUIBar"] = qg;
            qg.__name__ = "flixel.addons.ui.FlxUIBar";
            qg.__interfaces__ = [Ad, Ec, ec];
            qg.__super__ = qf;
            qg.prototype = n(qf.prototype, {
                set_style: function(a) {
                    this.style = a;
                    this.resize(this.barWidth, this.barHeight);
                    return this.style
                },
                resize: function(a, b) {
                    this.set_width(a);
                    this.set_height(b);
                    this.barWidth = this.get_width() | 0;
                    this.barHeight = this.get_height() | 0;
                    q.renderBlit && this.makeGraphic(this.barWidth,
                        this.barHeight, 0, !0);
                    a = null != this.style.borderColor;
                    b = null == this.style.emptyColor ? -16777216 : this.style.emptyColor;
                    var c = null == this.style.filledColor ? -65536 : this.style.filledColor,
                        d = null == this.style.borderColor ? -16777216 : this.style.borderColor;
                    null != this.style.filledColor && this.createFilledBar(b, c, a, d);
                    null != this.style.filledColors && this.createGradientBar(null == this.style.emptyColors ? [-16777216] : this.style.emptyColors, null == this.style.filledColors ? [-65536] : this.style.filledColors, null == this.style.chunkSize ?
                        1 : this.style.chunkSize, null == this.style.emptyImgSrc ? 180 : this.style.gradRotation, a, d);
                    "" != this.style.filledImgSrc && this.createImageBar(this.style.emptyImgSrc, this.style.filledImgSrc, b, c);
                    this.setRange(this.min, this.max);
                    this.set_value(this.get_value())
                },
                set_params: function(a) {
                    return this.params = a
                },
                __class__: qg,
                __properties__: n(qf.prototype.__properties__, {
                    set_params: "set_params",
                    set_style: "set_style"
                })
            });
            var Sf = function() {};
            g["flixel.input.IFlxInput"] = Sf;
            Sf.__name__ = "flixel.input.IFlxInput";
            Sf.__isInterface__ = !0;
            Sf.prototype = {
                __class__: Sf,
                __properties__: {
                    get_justPressed: "get_justPressed",
                    get_pressed: "get_pressed",
                    get_justReleased: "get_justReleased"
                }
            };
            var fc = function(a, b, c) {
                null == b && (b = 0);
                null == a && (a = 0);
                this.lastStatus = -1;
                this.maxInputMovement = Infinity;
                this.mouseButtons = [-1];
                this.allowSwiping = !0;
                this.statusAnimations = ["normal", "highlight", "pressed"];
                this.labelAlphas = [.8, 1, .5];
                var d = X._pool.get().set(0, 0);
                d._inPool = !1;
                var e = X._pool.get().set(0, 0);
                e._inPool = !1;
                var f = X._pool.get().set(0, 1);
                f._inPool = !1;
                this.labelOffsets = [d, e, f];
                G.call(this, a, b);
                this.loadDefaultGraphic();
                this.onUp = new qe(c);
                this.onDown = new qe;
                this.onOver = new qe;
                this.onOut = new qe;
                this.set_status(0);
                this.scrollFactor.set();
                la.get_current().stage.addEventListener("mouseUp", r(this, this.onUpEventListener));
                this.input = new Vc(0)
            };
            g["flixel.ui.FlxTypedButton"] = fc;
            fc.__name__ = "flixel.ui.FlxTypedButton";
            fc.__interfaces__ = [Sf];
            fc.__super__ = G;
            fc.prototype = n(G.prototype, {
                graphicLoaded: function() {
                    G.prototype.graphicLoaded.call(this);
                    this.setupAnimation("normal",
                        0);
                    this.setupAnimation("highlight", 1);
                    this.setupAnimation("pressed", 2)
                },
                loadDefaultGraphic: function() {
                    this.loadGraphic("flixel/images/ui/button.png", !0, 80, 20)
                },
                setupAnimation: function(a, b) {
                    b = Math.min(b, this.animation._sprite.numFrames - 1) | 0;
                    this.animation.add(a, [b])
                },
                destroy: function() {
                    this.set_label(V.destroy(this.label));
                    this._spriteLabel = null;
                    this.onUp = V.destroy(this.onUp);
                    this.onDown = V.destroy(this.onDown);
                    this.onOver = V.destroy(this.onOver);
                    this.onOut = V.destroy(this.onOut);
                    this.labelOffsets = V.putArray(this.labelOffsets);
                    this.input = this.currentInput = this.labelAlphas = null;
                    la.get_current().stage.removeEventListener("mouseUp", r(this, this.onUpEventListener));
                    G.prototype.destroy.call(this)
                },
                update: function(a) {
                    G.prototype.update.call(this, a);
                    this.visible && (this.updateButton(), this.lastStatus != this.status && (this.updateStatusAnimation(), this.lastStatus = this.status));
                    this.input.update()
                },
                updateStatusAnimation: function() {
                    this.animation.play(this.statusAnimations[this.status])
                },
                draw: function() {
                    G.prototype.draw.call(this);
                    null !=
                        this._spriteLabel && this._spriteLabel.visible && (this._spriteLabel.set_cameras(this.get_cameras()), this._spriteLabel.draw())
                },
                updateButton: function() {
                    var a = this.checkMouseOverlap();
                    a || (a = this.checkTouchOverlap());
                    if (null != this.currentInput && this.currentInput.get_justReleased() && a) this.onUpHandler();
                    if (0 != this.status && (!a || null != this.currentInput && this.currentInput.get_justReleased())) this.onOutHandler()
                },
                checkMouseOverlap: function() {
                    for (var a = !1, b = 0, c = this.get_cameras(); b < c.length;) {
                        var d = c[b];
                        ++b;
                        for (var e = 0, f = this.mouseButtons; e < f.length;) {
                            var k = f[e];
                            ++e;
                            k = Qe.getByID(k);
                            null != k && this.checkInput(q.mouse, k, k.justPressedPosition, d) && (a = !0)
                        }
                    }
                    return a
                },
                checkTouchOverlap: function() {
                    for (var a = !1, b = 0, c = this.get_cameras(); b < c.length;) {
                        var d = c[b];
                        ++b;
                        for (var e = 0, f = q.touches.list; e < f.length;) {
                            var k = f[e];
                            ++e;
                            this.checkInput(k, k, k.justPressedPosition, d) && (a = !0)
                        }
                    }
                    return a
                },
                checkInput: function(a, b, c, d) {
                    if (Infinity != this.maxInputMovement) {
                        var e = 0,
                            f = 0;
                        null == f && (f = 0);
                        null == e && (e = 0);
                        e = X._pool.get().set(e, f);
                        e._inPool = !1;
                        e._weak = !0;
                        c = c.distanceTo(a.getScreenPosition(null, e)) > this.maxInputMovement
                    } else c = !1;
                    if (c && b == this.currentInput) this.currentInput = null;
                    else if (this.overlapsPoint(a.getWorldPosition(d, this._point), !0, d)) return this.updateStatus(b), !0;
                    return !1
                },
                updateStatus: function(a) {
                    if (a.get_justPressed()) this.currentInput = a, this.onDownHandler();
                    else if (0 == this.status)
                        if (this.allowSwiping && a.get_pressed()) this.onDownHandler();
                        else this.onOverHandler()
                },
                updateLabelPosition: function() {
                    null != this._spriteLabel &&
                        (this._spriteLabel.set_x((this.pixelPerfectPosition ? Math.floor(this.x) : this.x) + this.labelOffsets[this.status].x), this._spriteLabel.set_y((this.pixelPerfectPosition ? Math.floor(this.y) : this.y) + this.labelOffsets[this.status].y))
                },
                updateLabelAlpha: function() {
                    null != this._spriteLabel && this.labelAlphas.length > this.status && this._spriteLabel.set_alpha(this.alpha * this.labelAlphas[this.status])
                },
                onUpEventListener: function(a) {
                    if (this.visible && this.exists && this.active && 2 == this.status) this.onUpHandler()
                },
                onUpHandler: function() {
                    this.set_status(0);
                    this.input.release();
                    this.currentInput = null;
                    var a = this.onUp;
                    null != a.callback && a.callback();
                    null != a.sound && a.sound.play(!0)
                },
                onDownHandler: function() {
                    this.set_status(2);
                    this.input.press();
                    var a = this.onDown;
                    null != a.callback && a.callback();
                    null != a.sound && a.sound.play(!0)
                },
                onOverHandler: function() {
                    if (q.mouse.enabled) {
                        this.set_status(1);
                        var a = this.onOver;
                        null != a.callback && a.callback();
                        null != a.sound && a.sound.play(!0)
                    } else this.set_status(0)
                },
                onOutHandler: function() {
                    this.set_status(0);
                    this.input.release();
                    var a = this.onOut;
                    null != a.callback && a.callback();
                    null != a.sound && a.sound.play(!0)
                },
                set_label: function(a) {
                    null != a && (a.scrollFactor.put(), a.scrollFactor = this.scrollFactor);
                    this._spriteLabel = this.label = a;
                    this.updateLabelPosition();
                    return a
                },
                set_status: function(a) {
                    this.status = a;
                    this.updateLabelAlpha();
                    return this.status
                },
                set_alpha: function(a) {
                    G.prototype.set_alpha.call(this, a);
                    this.updateLabelAlpha();
                    return this.alpha
                },
                set_x: function(a) {
                    G.prototype.set_x.call(this, a);
                    this.updateLabelPosition();
                    return this.x
                },
                set_y: function(a) {
                    G.prototype.set_y.call(this, a);
                    this.updateLabelPosition();
                    return this.y
                },
                get_justReleased: function() {
                    return -1 == this.input.current
                },
                get_pressed: function() {
                    var a = this.input;
                    return 1 != a.current ? 2 == a.current : !0
                },
                get_justPressed: function() {
                    return 2 == this.input.current
                },
                __class__: fc,
                __properties__: n(G.prototype.__properties__, {
                    get_justPressed: "get_justPressed",
                    get_pressed: "get_pressed",
                    get_justReleased: "get_justReleased",
                    set_status: "set_status",
                    set_label: "set_label"
                })
            });
            var oh = function() {};
            g["flixel.addons.ui.interfaces.ICursorPointable"] = oh;
            oh.__name__ = "flixel.addons.ui.interfaces.ICursorPointable";
            oh.__isInterface__ = !0;
            var ne = function() {};
            g["flixel.addons.ui.interfaces.IFlxUIClickable"] = ne;
            ne.__name__ = "flixel.addons.ui.interfaces.IFlxUIClickable";
            ne.__isInterface__ = !0;
            ne.prototype = {
                __class__: ne,
                __properties__: {
                    set_skipButtonUpdate: "set_skipButtonUpdate"
                }
            };
            var zf = function() {};
            g["flixel.addons.ui.interfaces.IFlxUIButton"] = zf;
            zf.__name__ = "flixel.addons.ui.interfaces.IFlxUIButton";
            zf.__isInterface__ = !0;
            zf.__interfaces__ = [L, Ad, Ec];
            zf.prototype = {
                __class__: zf,
                __properties__: {
                    get_justMousedOut: "get_justMousedOut",
                    get_mouseIsOut: "get_mouseIsOut",
                    get_mouseIsOver: "get_mouseIsOver",
                    get_justMousedOver: "get_justMousedOver",
                    set_toggle_label: "set_toggle_label",
                    set_toggled: "set_toggled"
                }
            };
            var Qb = function(a, b, c) {
                null == b && (b = 0);
                null == a && (a = 0);
                this._centerLabelOffset = null;
                this._src_w = this._src_h = 0;
                this._no_graphic = !1;
                this._assetsToCleanup = [];
                this._autoCleanup = !0;
                this.skipButtonUpdate = this.autoResizeLabel = !1;
                this.up_visible = this.over_visible = this.down_visible = this.up_toggle_visible = this.over_toggle_visible = this.down_toggle_visible = this.round_labels = !0;
                this.up_color = this.over_color = this.down_color = this.up_toggle_color = this.over_toggle_color = this.down_toggle_color = null;
                this.broadcastToFlxUI = !0;
                this.has_toggle = this.toggled = !1;
                this.tile = 0;
                this.resize_point = null;
                this.resize_ratio_axis = 1;
                this.resize_ratio = -1;
                fc.call(this, a, b, c);
                b = a = 0;
                null == b && (b = 0);
                null == a && (a = 0);
                a = X._pool.get().set(a, b);
                a._inPool = !1;
                this._centerLabelOffset =
                    a;
                this.statusAnimations[3] = "normal_toggled";
                this.statusAnimations[4] = "highlight_toggled";
                this.statusAnimations[5] = "pressed_toggled";
                a = [];
                a.push(1);
                a.push(1);
                a.push(1);
                this.labelAlphas = a;
                this.inputOver = new Vc(0)
            };
            g["flixel.addons.ui.FlxUITypedButton"] = Qb;
            Qb.__name__ = "flixel.addons.ui.FlxUITypedButton";
            Qb.__interfaces__ = [oh, Ad, ne, Ec, ec, zf];
            Qb.__super__ = fc;
            Qb.prototype = n(fc.prototype, {
                set_toggled: function(a) {
                    this.toggled = a;
                    this.updateStatusAnimation();
                    return this.toggled
                },
                get_justMousedOver: function() {
                    return 2 ==
                        this.inputOver.current
                },
                get_justMousedOut: function() {
                    return -1 == this.inputOver.current
                },
                get_mouseIsOver: function() {
                    var a = this.inputOver;
                    return 1 != a.current ? 2 == a.current : !0
                },
                get_mouseIsOut: function() {
                    var a = this.inputOver;
                    return 0 != a.current ? -1 == a.current : !0
                },
                set_toggle_label: function(a) {
                    return null != this.label ? this.toggle_label = a : null
                },
                set_visible: function(a) {
                    this.visible && 0 == a && this.inputOver.release();
                    return fc.prototype.set_visible.call(this, a)
                },
                set_skipButtonUpdate: function(a) {
                    return this.skipButtonUpdate =
                        a
                },
                set_params: function(a) {
                    return this.params = a
                },
                destroy: function() {
                    this.resize_point = V.put(this.resize_point);
                    fc.prototype.destroy.call(this)
                },
                graphicLoaded: function() {
                    fc.prototype.graphicLoaded.call(this);
                    this.setupAnimation("normal_toggled", 3);
                    this.setupAnimation("highlight_toggled", 4);
                    this.setupAnimation("pressed_toggled", 5);
                    this._autoCleanup && this.cleanup()
                },
                copyStyle: function(a) {
                    this.up_color = a.up_color;
                    this.over_color = a.over_color;
                    this.down_color = a.down_color;
                    this.up_toggle_color = a.up_toggle_color;
                    this.down_toggle_color = this.over_toggle_color = a.over_toggle_color;
                    this.up_visible = a.up_visible;
                    this.over_visible = a.over_visible;
                    this.down_visible = a.down_visible;
                    this.up_toggle_visible = a.up_toggle_visible;
                    this.over_toggle_visible = a.over_toggle_visible;
                    this.down_toggle_visible = a.down_toggle_visible;
                    var b = a.getCenterLabelOffset();
                    this.setCenterLabelOffset(b.x, b.y);
                    for (var c = b = 0, d = a.labelOffsets; c < d.length;) {
                        var e = d[c];
                        ++c;
                        this.labelOffsets[b].set_x(e.x);
                        this.labelOffsets[b].set_y(e.y);
                        ++b
                    }
                    c = b = 0;
                    for (d =
                        a.labelAlphas; c < d.length;) a = d[c], ++c, this.labelAlphas[b] = a, ++b
                },
                setAllLabelOffsets: function(a, b) {
                    for (var c = 0, d = this.labelOffsets; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.set(a, b)
                    }
                },
                update: function(a) {
                    fc.prototype.update.call(this, a);
                    0 == this.status ? (a = this.inputOver, a = 1 == a.current || 2 == a.current) : a = !1;
                    a && -1 == this.input.current == 0 && this.inputOver.release();
                    this.inputOver.update();
                    null != this.label && (a = this.fetchAndShowCorrectLabel(), a.set_x(this.x + this._centerLabelOffset.x + this.labelOffsets[this.status].x), a.set_y(this.y +
                        this._centerLabelOffset.y + this.labelOffsets[this.status].y), this.round_labels && (a.set_x(a.x + .5 | 0), a.set_y(a.y + .5 | 0)), a.scrollFactor = this.scrollFactor)
                },
                updateStatusAnimation: function() {
                    this.has_toggle && this.toggled ? this.animation.play(this.statusAnimations[this.status + 3]) : fc.prototype.updateStatusAnimation.call(this)
                },
                draw: function() {
                    fc.prototype.draw.call(this);
                    this.has_toggle && this.toggled && null != this.toggle_label && 1 == this.toggle_label.visible && (this.toggle_label.set_cameras(this.get_cameras()),
                        this.toggle_label.draw())
                },
                resize: function(a, b) {
                    this.doResize(a, b)
                },
                doResize: function(a, b, c) {
                    null == c && (c = !0);
                    var d = this.get_width(),
                        e = this.get_height(),
                        f = 0,
                        k = 0;
                    null != this.label && (f = this.get_width() - this._spriteLabel.get_width(), k = this.get_height() - this._spriteLabel.get_height());
                    0 >= a && (a = 80);
                    0 >= b && (b = 20);
                    c && (null != this._slice9_assets ? this.loadGraphicSlice9(this._slice9_assets, a | 0, b | 0, this._slice9_arrays, this.tile, this.resize_ratio, this.has_toggle, this._src_w, this._src_h, this._frame_indeces) : this._no_graphic ?
                        (c = this.has_toggle ? new H(a | 0, 6 * b | 0, !0, 0) : new H(a | 0, 3 * b | 0, !0, 0), this.loadGraphicsUpOverDown(c)) : this.loadGraphicSlice9(null, a | 0, b | 0, null, this.tile));
                    null != this.label && this.autoResizeLabel && oa.__implements(this.label, ec) && this.label.resize(a - f, b - k);
                    this.autoCenterLabel();
                    a = this.get_width() - d;
                    e = this.get_height() - e;
                    null != this.resize_point && (e *= this.resize_point.y, b = this, b.set_x(b.x - a * this.resize_point.x), b = this, b.set_y(b.y - e))
                },
                getBmp: function(a) {
                    return y.getBmp(a)
                },
                loadGraphicsUpOverDown: function(a,
                    b, c) {
                    null == b && (b = !1);
                    this._slice9_arrays = this._slice9_assets = null;
                    this.resize_ratio = -1;
                    b && (this.has_toggle = !0);
                    b = null;
                    a instanceof H ? b = a : "string" == typeof a && (b = this.getBmp(a));
                    a = this.grabButtonFrame(b, 0, this.has_toggle, 0, 0, c);
                    var d = this.grabButtonFrame(b, 1, this.has_toggle, 0, 0, c);
                    var e = this.grabButtonFrame(b, 2, this.has_toggle, 0, 0, c);
                    var f = c;
                    if (null == c || "" == c || null != q.bitmap._cache.h[c] == 0) f = this.assembleButtonFrames(a, d, e);
                    this.has_toggle ? (f = this.assembleButtonFrames(a, d, e), a = this.grabButtonFrame(b,
                        3, !0, 0, 0, c), d = this.grabButtonFrame(b, 4, !0, 0, 0, c), e = this.grabButtonFrame(b, 5, !0, 0, 0, c), b = this.assembleButtonFrames(a, d, e), d = this.combineToggleBitmaps(f, b), V.dispose(f), V.dispose(b), this.loadGraphic(d, !0, a.width, a.height, !1, c)) : this.loadGraphic(f, !0, a.width, a.height, !1, c)
                },
                loadGraphicSlice9: function(a, b, c, d, e, f, k, p, m, h) {
                    null == m && (m = 0);
                    null == p && (p = 0);
                    null == k && (k = !1);
                    null == f && (f = -1);
                    null == e && (e = 0);
                    null == c && (c = 20);
                    null == b && (b = 80);
                    0 != p && (this._src_w = p);
                    0 != m && (this._src_h = m);
                    this.tile = e;
                    this.has_toggle =
                        k;
                    this.resize_ratio = f;
                    this._slice9_assets = a;
                    this._slice9_arrays = d;
                    e = "";
                    if (null == h) h = this.has_toggle ? [0, 1, 2, 3, 4, 5] : [0, 1, 2];
                    else {
                        f = 2;
                        for (this.has_toggle && (f = 5); h.length < f + 1;) h.push(h.length - 1);
                        for (var g = 0, l = h.length; g < l;) {
                            var n = g++;
                            5 < h[n] ? h[n] = 5 : 0 > h[n] && (h[n] = 0)
                        }
                    }
                    this._frame_indeces = h;
                    0 == b && (b = 80);
                    0 == c && (c = 20);
                    c = y.applyResize(this.resize_ratio, this.resize_ratio_axis, b, c);
                    b = c.x | 0;
                    c = c.y | 0;
                    null == a && (k ? (a = ["flixel/flixel-ui/img/button_toggle.png"], d = [ub.toIntArray("6,6,11,11")], k = this.getBmp(a[0]), this._src_w =
                        k.width | 0, this._src_h = k.height / 6 | 0) : (a = ["flixel/flixel-ui/img/button.png"], d = [ub.toIntArray("6,6,11,11")], k = this.getBmp(a[0]), this._src_w = k.width | 0, this._src_h = k.height / 3 | 0));
                    !this.has_toggle && 3 >= a.length ? (k = [null, null, null], f = [null, null, null]) : (this.has_toggle = !0, k = [null, null, null, null, null, null], f = [null, null, null, null, null, null]);
                    this._flashRect2.width = b;
                    this._flashRect2.height = c;
                    p = e += I.string(a) + "_slice9=" + I.string(d) + "_src=" + this._src_w + "x" + this._src_h;
                    e += "_final=" + b + "x" + c + "_fi=" + I.string(this._frame_indeces);
                    if (1 == a.length) {
                        m = this.getBmp(a[0]);
                        g = "_all";
                        if (0 == this._src_w || 0 == this._src_h) throw F.thrown(new cb("Ambiguous situation! If you only provide one asset, you MUST provide src_w and src_h. Otherwise I can't tell if it's a stacked set of frames or a single frame."));
                        l = m.height > this._src_h;
                        g += l ? "_multiframe" : "";
                        e += g;
                        p += g;
                        if (null != q.bitmap._cache.h[e]) {
                            this.loadGraphic(e, !0, b, c);
                            return
                        }
                        if (l) {
                            g = 0;
                            for (l = k.length; g < l;) n = g++, k[n] = this.grabButtonFrame(m, n, this.has_toggle, this._src_w, this._src_h, p);
                            if (null !=
                                d && d[0] != []) {
                                g = 0;
                                for (l = k.length; g < l;) n = g++, f[n] = new M(0, 0, k[n], this._flashRect2, d[0], this.tile, !1, a[0] + ":" + n, this.resize_ratio), f[n].set_resize_point(this.resize_point);
                                g = 0;
                                for (l = k.length; g < l;) n = g++, k[n] = f[n].get_pixels();
                                b = k[0].width;
                                c = k[0].height
                            }
                        } else k[0] = m
                    } else {
                        if (null != q.bitmap._cache.h[e]) {
                            this.loadGraphic(e, !0, b, c);
                            return
                        }
                        if (this.has_toggle)
                            for (; 6 > a.length;) a.push("");
                        else
                            for (; 3 > a.length;) a.push("");
                        if ("" != a[0]) {
                            if (null != d && 0 < d.length && null != d[0] && 0 < d[0].length) {
                                for (; d.length < a.length;) d.push(null);
                                f[0] = null != d[0] ? new M(0, 0, a[0], this._flashRect2, d[0], this.tile, !1, "", this.resize_ratio) : new Hb(0, 0, a[0]);
                                k[0] = f[0].get_pixels();
                                g = 1;
                                for (l = a.length; g < l;) n = g++, "" != a[n] && (f[n] = null != d[n] ? new M(0, 0, a[n], this._flashRect2, d[n], this.tile, !1, "", this.resize_ratio) : new Hb(0, 0, a[n]), k[n] = f[n].get_pixels())
                            } else
                                for (g = 0, l = a.length; g < l;) n = g++, k[n] = this.getBmp(a[n]);
                            b = k[0].width;
                            c = k[0].height
                        } else 0 == b && (b = 80), 0 == c && (c = 20), k[0] = new H(b, 3 * c, !0, 0), this._no_graphic = !0
                    }
                    this.has_toggle ? (a = this.assembleButtonFrames(k[h[0]],
                        k[h[1]], k[h[2]]), h = this.assembleButtonFrames(k[h[3]], k[h[4]], k[h[5]]), d = this.combineToggleBitmaps(a, h), V.dispose(a), V.dispose(h), q.bitmap.add(d, !0, e)) : (a = this.assembleButtonFrames(k[h[0]], k[h[1]], k[h[2]]), q.bitmap.add(a, !0, e));
                    this.loadGraphic(e, !0, b, c);
                    g = 0;
                    for (l = f.length; g < l;) n = g++, null != f[n] && (f[n].destroy(), f[n] = null);
                    for (; 0 < f.length;) f.pop();
                    for (; 0 < k.length;) k.pop()
                },
                autoCenterLabel: function() {
                    if (null != this.label) {
                        this.get_width();
                        this._spriteLabel.get_width();
                        if (this.label instanceof Uc) {
                            var a =
                                this.label;
                            var b = (this.get_width() - a.get_fieldWidth()) / 2;
                            a = (this.get_height() - a.get_height()) / 2
                        } else b = (this.get_width() - this._spriteLabel.get_width()) / 2, a = (this.get_height() - this._spriteLabel.get_height()) / 2;
                        this._centerLabelOffset.set_x(b);
                        this._centerLabelOffset.set_y(a)
                    }
                },
                setCenterLabelOffset: function(a, b) {
                    this._centerLabelOffset.set_x(a);
                    this._centerLabelOffset.set_y(b)
                },
                getCenterLabelOffset: function() {
                    var a = this._centerLabelOffset.x,
                        b = this._centerLabelOffset.y;
                    null == b && (b = 0);
                    null == a && (a = 0);
                    a = X._pool.get().set(a, b);
                    a._inPool = !1;
                    return a
                },
                forceStateHandler: function(a) {
                    switch (a) {
                        case "click_button":
                            this.onUpHandler();
                            break;
                        case "down_button":
                            this.onDownHandler();
                            break;
                        case "out_button":
                            this.onOutHandler();
                            break;
                        case "over_button":
                            this.onOverHandler()
                    }
                },
                grabButtonFrame: function(a, b, c, d, e, f) {
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == c && (c = !1);
                    0 == e && (e = c ? a.height / 6 | 0 : a.height / 3 | 0);
                    c = d;
                    0 == c && (c = a.width);
                    this._flashRect.x = 0;
                    this._flashRect.y = b * e;
                    this._flashRect.width = c;
                    this._flashRect.height = e;
                    this._flashRect.y >=
                        a.height && 4 == (a.height / e | 0) && (4 == b ? this._flashRect.y = 3 * e : 5 == b && (this._flashRect.y = 2 * e));
                    b = f + "{x:" + this._flashRect.x + "y:" + this._flashRect.y + "w:" + this._flashRect.width + "h:" + this._flashRect.height + "}";
                    if (null != b && null != q.bitmap._cache.h[b]) return q.bitmap._cache.h[b].bitmap;
                    e = new H(c, e);
                    e.copyPixels(a, this._flashRect, this._flashPointZero);
                    null != f && (q.bitmap.add(e, !0, b), this.addToCleanup(b));
                    return e
                },
                combineToggleBitmaps: function(a, b) {
                    var c = new H(a.width, a.height + b.height);
                    c.copyPixels(a, a.rect, this._flashPointZero);
                    this._flashPoint.x = 0;
                    this._flashPoint.y = a.height;
                    c.copyPixels(b, b.rect, this._flashPoint);
                    return c
                },
                assembleButtonFrames: function(a, b, c) {
                    var d = null != b ? null != c ? new H(a.width, 3 * a.height) : new H(a.width, 2 * a.height) : new H(a.width, a.height);
                    d.copyPixels(a, a.rect, this._flashPointZero);
                    null != b && (this._flashPoint.x = 0, this._flashPoint.y = a.height, d.copyPixels(b, b.rect, this._flashPoint), null != c && (this._flashPoint.y = 2 * a.height, d.copyPixels(c, c.rect, this._flashPoint)));
                    return d
                },
                updateButton: function() {
                    this.skipButtonUpdate ||
                        fc.prototype.updateButton.call(this)
                },
                addToCleanup: function(a) {
                    null == this._assetsToCleanup && (this._assetsToCleanup = []); - 1 == this._assetsToCleanup.indexOf(a) && this._assetsToCleanup.push(a)
                },
                cleanup: function() {
                    if (null != this._assetsToCleanup) {
                        for (var a = 0, b = this._assetsToCleanup; a < b.length;) {
                            var c = b[a];
                            ++a;
                            q.bitmap.removeByKey(c)
                        }
                        this._assetsToCleanup = null
                    }
                },
                fetchAndShowCorrectLabel: function() {
                    if (this.has_toggle) {
                        if (this.toggled && null != this.toggle_label) return this._spriteLabel.set_visible(!1), this.toggle_label.set_visible(!0),
                            this.toggle_label;
                        null != this.toggle_label && this.toggle_label.set_visible(!1);
                        this._spriteLabel.set_visible(!0)
                    }
                    return this.label
                },
                onUpHandler: function() {
                    this.has_toggle && this.set_toggled(!this.toggled);
                    fc.prototype.onUpHandler.call(this);
                    if (null != this.label) {
                        var a = this.fetchAndShowCorrectLabel();
                        a.set_visible(this.toggled ? this.up_toggle_visible : this.up_visible);
                        var b = this.toggled ? this.up_toggle_color : this.up_color;
                        null != b && a.set_color(b)
                    }
                    this.broadcastToFlxUI && Qa.event("click_button", this, null, this.params)
                },
                onDownHandler: function() {
                    fc.prototype.onDownHandler.call(this);
                    if (null != this.label) {
                        var a = this.fetchAndShowCorrectLabel();
                        a.set_visible(this.toggled ? this.down_toggle_visible : this.down_visible);
                        var b = this.toggled ? this.down_toggle_color : this.down_color;
                        null != b && a.set_color(b)
                    }
                    this.broadcastToFlxUI && Qa.event("down_button", this, null, this.params)
                },
                onOverHandler: function() {
                    fc.prototype.onOverHandler.call(this);
                    this.inputOver.press();
                    if (null != this.label) {
                        var a = this.fetchAndShowCorrectLabel();
                        a.set_visible(this.toggled ?
                            this.over_toggle_visible : this.over_visible);
                        var b = this.toggled ? this.over_toggle_color : this.over_color;
                        null != b && a.set_color(b)
                    }
                    this.broadcastToFlxUI && Qa.event("over_button", this, null, this.params)
                },
                onOutHandler: function() {
                    fc.prototype.onOutHandler.call(this);
                    this.inputOver.release();
                    if (null != this.label) {
                        var a = this.fetchAndShowCorrectLabel();
                        a.set_visible(this.toggled ? this.up_toggle_visible : this.up_visible);
                        var b = this.toggled ? this.up_toggle_color : this.up_color;
                        null != b && a.set_color(b)
                    }
                    this.broadcastToFlxUI &&
                        Qa.event("out_button", this, null, this.params)
                },
                set_x: function(a) {
                    fc.prototype.set_x.call(this, a);
                    null != this._spriteLabel && (this._spriteLabel.set_x(this.x + this._centerLabelOffset.x + this.labelOffsets[this.status].x), this.round_labels && this._spriteLabel.set_x(this._spriteLabel.x + .5 | 0), this.has_toggle && null != this.toggle_label && this.toggle_label.set_x(this._spriteLabel.x));
                    return a
                },
                set_y: function(a) {
                    fc.prototype.set_y.call(this, a);
                    null != this.label && (this._spriteLabel.set_y(this.y + this._centerLabelOffset.y +
                        this.labelOffsets[this.status].y), this.round_labels && this._spriteLabel.set_y(this._spriteLabel.y + .5 | 0), this.has_toggle && null != this.toggle_label && this.toggle_label.set_y(this._spriteLabel.y));
                    return a
                },
                __class__: Qb,
                __properties__: n(fc.prototype.__properties__, {
                    set_params: "set_params",
                    set_skipButtonUpdate: "set_skipButtonUpdate",
                    set_toggle_label: "set_toggle_label",
                    get_justMousedOut: "get_justMousedOut",
                    get_mouseIsOut: "get_mouseIsOut",
                    get_mouseIsOver: "get_mouseIsOver",
                    get_justMousedOver: "get_justMousedOver",
                    set_toggled: "set_toggled"
                })
            });
            var pg = function() {};
            g["flixel.addons.ui.interfaces.ILabeled"] = pg;
            pg.__name__ = "flixel.addons.ui.interfaces.ILabeled";
            pg.__isInterface__ = !0;
            pg.prototype = {
                __class__: pg
            };
            var Pc = function(a, b, c, d, e, f, k) {
                null == k && (k = -1);
                null == f && (f = !1);
                null == e && (e = !0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.up_style = this.over_style = this.down_style = this.up_toggle_style = this.over_toggle_style = this.down_toggle_style = null;
                Qb.call(this, a, b, d);
                this.set_color(k);
                null != c && (this.set_label(new Uc(0, 0, 80, c,
                    8)), this.label.setFormat(null, 8, 3355443, "center"));
                f && (this._no_graphic = !0);
                e ? this.resize(this.get_width(), this.get_height()) : 0 == this._no_graphic ? this.doResize(this.get_width(), this.get_height(), !1) : this.doResize(this.get_width(), this.get_height(), !0)
            };
            g["flixel.addons.ui.FlxUIButton"] = Pc;
            Pc.__name__ = "flixel.addons.ui.FlxUIButton";
            Pc.__interfaces__ = [zf, pg];
            Pc.__super__ = Qb;
            Pc.prototype = n(Qb.prototype, {
                setLabelFormat: function(a, b, c, d, e, f, k) {
                    null == k && (k = !0);
                    null == f && (f = 0);
                    null == c && (c = -1);
                    null == b && (b =
                        8);
                    return null != this.label ? (this.label.setFormat(a, b, c, d, e, f, k), this.label) : null
                },
                autoCenterLabel: function() {
                    Qb.prototype.autoCenterLabel.call(this)
                },
                copyStyle: function(a) {
                    Qb.prototype.copyStyle.call(this, a);
                    if (a instanceof Pc) {
                        this.up_style = a.up_style;
                        this.over_style = a.over_style;
                        this.down_style = a.down_style;
                        this.up_toggle_style = a.up_toggle_style;
                        this.over_toggle_style = a.over_toggle_style;
                        this.down_toggle_style = a.down_toggle_style;
                        a = a.label;
                        var b = a.textField.get_defaultTextFormat();
                        if (-1 == a._font.indexOf(zd.FONT_DEFAULT)) oc.copyFromFlxText(a).apply(null,
                            this.label);
                        else {
                            var c = Dk.fromOpenFL(b.align);
                            this.label.setFormat(null, b.size | 0, b.color, c, a.borderStyle, a.borderColor, a.textField.set_embedFonts(!0))
                        }
                    }
                },
                getLabel: function() {
                    return this.label
                },
                resize: function(a, b) {
                    Qb.prototype.resize.call(this, a, b)
                },
                destroy: function() {
                    this._noIconGraphicsBkup = V.dispose(this._noIconGraphicsBkup);
                    Qb.prototype.destroy.call(this)
                },
                loadDefaultGraphic: function() {},
                resetHelpers: function() {
                    Qb.prototype.resetHelpers.call(this);
                    if (null != this.label) {
                        var a = this.label,
                            b = this.get_width() |
                            0;
                        a.set_width(this.label.frameWidth = b);
                        this.label.set_fieldWidth(this.label.get_width());
                        this.label.set_size(this.label._defaultFormat.size | 0)
                    }
                },
                onDownHandler: function() {
                    Qb.prototype.onDownHandler.call(this);
                    null != this.label && (this.toggled && null != this.down_toggle_style ? (this.label.set_color(this.down_toggle_style.color), null != this.down_toggle_style.border && (this.label.set_borderStyle(this.down_toggle_style.border.style), this.label.set_borderColor(this.down_toggle_style.border.color), this.label.set_borderSize(this.down_toggle_style.border.size),
                        this.label.set_borderQuality(this.down_toggle_style.border.quality))) : this.toggled || null == this.down_style || (this.label.set_color(this.down_style.color), null != this.down_style.border && (this.label.set_borderStyle(this.down_style.border.style), this.label.set_borderColor(this.down_style.border.color), this.label.set_borderSize(this.down_style.border.size), this.label.set_borderQuality(this.down_style.border.quality))))
                },
                onOverHandler: function() {
                    Qb.prototype.onOverHandler.call(this);
                    null != this.label && (this.toggled &&
                        null != this.over_toggle_style ? (this.label.set_color(this.over_toggle_style.color), null != this.over_toggle_style.border && (this.label.set_borderStyle(this.over_toggle_style.border.style), this.label.set_borderColor(this.over_toggle_style.border.color), this.label.set_borderSize(this.over_toggle_style.border.size), this.label.set_borderQuality(this.over_toggle_style.border.quality))) : this.toggled || null == this.over_style || (this.label.set_color(this.over_style.color), null != this.over_style.border && (this.label.set_borderStyle(this.over_style.border.style),
                            this.label.set_borderColor(this.over_style.border.color), this.label.set_borderSize(this.over_style.border.size), this.label.set_borderQuality(this.over_style.border.quality))))
                },
                onOutHandler: function() {
                    Qb.prototype.onOutHandler.call(this);
                    null != this.label && (this.toggled && null != this.up_toggle_style ? (this.label.set_color(this.up_toggle_style.color), null != this.up_toggle_style.border && (this.label.set_borderStyle(this.up_toggle_style.border.style), this.label.set_borderColor(this.up_toggle_style.border.color),
                        this.label.set_borderSize(this.up_toggle_style.border.size), this.label.set_borderQuality(this.up_toggle_style.border.quality))) : this.toggled || null == this.up_style || (this.label.set_color(this.up_style.color), null != this.up_style.border && (this.label.set_borderStyle(this.up_style.border.style), this.label.set_borderColor(this.up_style.border.color), this.label.set_borderSize(this.up_style.border.size), this.label.set_borderQuality(this.up_style.border.quality))))
                },
                onUpHandler: function() {
                    Qb.prototype.onUpHandler.call(this);
                    null != this.label && (this.toggled && null != this.up_toggle_style ? (this.label.set_color(this.up_toggle_style.color), null != this.up_toggle_style.border && (this.label.set_borderStyle(this.up_toggle_style.border.style), this.label.set_borderColor(this.up_toggle_style.border.color), this.label.set_borderSize(this.up_toggle_style.border.size), this.label.set_borderQuality(this.up_toggle_style.border.quality))) : this.toggled || null == this.up_style || (this.label.set_color(this.up_style.color), null != this.up_style.border &&
                        (this.label.set_borderStyle(this.up_style.border.style), this.label.set_borderColor(this.up_style.border.color), this.label.set_borderSize(this.up_style.border.size), this.label.set_borderQuality(this.up_style.border.quality))))
                },
                __class__: Pc
            });
            var oe = function(a, b, c, d, e, f, k, p) {
                null == f && (f = 100);
                null == b && (b = 0);
                null == a && (a = 0);
                this.skipButtonUpdate = !1;
                this.box_space = 2;
                this.textX = this.textY = 0;
                this.checked = this.checkbox_dirty = !1;
                this.max_width = -1;
                Ja.call(this);
                this.callback = p;
                this.set_params(k);
                null == c && (c =
                    "flixel/flixel-ui/img/check_box.png");
                c instanceof G ? this.box = c : (this.box = new G, this.box.loadGraphic(c, !0));
                this.button = new Pc(0, 0, e, r(this, this._clickCheck));
                this.button.label.setFormat(null, 8, 16777215, "left", Oc.OUTLINE);
                this.button.label.set_fieldWidth(f);
                this.button.up_color = 16777215;
                this.button.down_color = 16777215;
                this.button.over_color = 16777215;
                this.button.up_toggle_color = 16777215;
                this.button.down_toggle_color = 16777215;
                this.button.over_toggle_color = 16777215;
                this.button.loadGraphicSlice9(["",
                    "", ""
                ], this.box.get_width() + this.box_space + f | 0, this.box.get_height() | 0);
                this.max_width = this.box.get_width() + this.box_space + f | 0;
                this.button.onUp.callback = r(this, this._clickCheck);
                null == d && (d = "flixel/flixel-ui/img/check_mark.png");
                d instanceof G ? this.mark = d : (this.mark = new G, this.mark.loadGraphic(d));
                this.add(this.box);
                this.add(this.mark);
                this.add(this.button);
                this.anchorLabelX();
                this.anchorLabelY();
                this.set_checked(!1);
                this.button.setAllLabelOffsets(0, 0);
                this.set_x(a);
                this.set_y(b);
                this.set_textX(0);
                this.set_textY(0)
            };
            g["flixel.addons.ui.FlxUICheckBox"] = oe;
            oe.__name__ = "flixel.addons.ui.FlxUICheckBox";
            oe.__interfaces__ = [oh, Ad, ne, pg];
            oe.__super__ = Ja;
            oe.prototype = n(Ja.prototype, {
                set_skipButtonUpdate: function(a) {
                    this.skipButtonUpdate = a;
                    this.button.set_skipButtonUpdate(this.skipButtonUpdate);
                    return this.skipButtonUpdate
                },
                set_params: function(a) {
                    this.params = a;
                    null == this.params && (this.params = []);
                    this.params.push({
                        name: "checked",
                        value: !1
                    });
                    return this.params
                },
                set_color: function(a) {
                    null != this.button &&
                        this.button.label.set_color(a);
                    return Ja.prototype.set_color.call(this, a)
                },
                getLabel: function() {
                    return null == this.button ? null : this.button.label
                },
                set_visible: function(a) {
                    return this.visible = a
                },
                set_textX: function(a) {
                    this.textX = a;
                    this.anchorLabelX();
                    return this.textX
                },
                set_textY: function(a) {
                    this.textY = a;
                    this.anchorLabelY();
                    return this.textY
                },
                anchorLabelX: function() {
                    null != this.button && this.button.label.offset.set_x(-(this.box.get_width() + this.box_space + this.textX))
                },
                anchorLabelY: function() {
                    null != this.button &&
                        this.button.set_y(this.box.y + (this.box.get_height() - this.button.get_height()) / 2 + this.textY)
                },
                destroy: function() {
                    Ja.prototype.destroy.call(this);
                    null != this.mark && (this.mark.destroy(), this.mark = null);
                    null != this.box && (this.box.destroy(), this.box = null);
                    null != this.button && (this.button.destroy(), this.button = null)
                },
                set_text: function(a) {
                    this.button.label.set_text(a);
                    this.checkbox_dirty = !0;
                    return a
                },
                update: function(a) {
                    Ja.prototype.update.call(this, a);
                    this.checkbox_dirty && null != this.button.label && (this.button.label instanceof Uc && this.button.label.drawFrame(), this.anchorLabelX(), this.anchorLabelY(), this.button.set_width(this.box.frameWidth + this.box_space + this.button.label.textField.get_textWidth()), this.checkbox_dirty = !1)
                },
                set_checked: function(a) {
                    this.mark.set_visible(a);
                    return this.checked = a
                },
                _clickCheck: function() {
                    this.visible && (this.set_checked(!this.checked), null != this.callback && this.callback(), this.broadcastToFlxUI && Qa.event("click_check_box", this, this.checked, this.params))
                },
                __class__: oe,
                __properties__: n(Ja.prototype.__properties__, {
                    set_text: "set_text",
                    set_skipButtonUpdate: "set_skipButtonUpdate",
                    set_textY: "set_textY",
                    set_textX: "set_textX",
                    set_params: "set_params",
                    set_checked: "set_checked"
                })
            });
            var Xg = function(a, b, c, d) {
                null == c && (c = 1);
                null == b && (b = 1);
                this._clickTime = 0;
                this._clickPressed = !1;
                this.inputMethod = this.lastMouseX = this.lastMouseY = 0;
                this.dispatchEvents = !0;
                this.gamepadAutoConnect = ym.FirstActive;
                this.listIndex = 0;
                this.location = -1;
                this.wrap = !0;
                null == d && (d = 400 > q.height ? "flixel/flixel-ui/img/finger_small.png" : "flixel/flixel-ui/img/finger_big.png");
                Hb.call(this, 0, 0, d);
                this.inputMethod = b;
                this._lists = [{
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0,
                    widgets: []
                }];
                this._widgets = this._lists[0].widgets;
                this.anchor = new uf(-2, 0, "left", "center", "right", "center");
                this.setDefaultKeys(c);
                this.callback = a;
                this.scrollFactor.set(0, 0);
                null != q.mouse && 0 == q.mouse instanceof ph ? (this._newMouse = new ph(q.mouse.cursorContainer), q.set_mouse(this._newMouse)) : this._newMouse = q.mouse
            };
            g["flixel.addons.ui.FlxUICursor"] = Xg;
            Xg.__name__ = "flixel.addons.ui.FlxUICursor";
            Xg.__super__ = Hb;
            Xg.prototype =
                n(Hb.prototype, {
                    findVisibleLocation: function(a, b, c) {
                        null == c && (c = !0);
                        null == b && (b = !0);
                        this.set_location(a);
                        if (-1 != this.location)
                            for (a = !1; null == this._widgets[this.location] || 0 == this._widgets[this.location].visible;)
                                if (b)
                                    if (this.location == this._widgets.length - 1)
                                        if (c)
                                            if (a) {
                                                this.set_location(-1);
                                                break
                                            } else a = !0, this.set_location(0);
                        else {
                            this.set_location(-1);
                            break
                        } else this.set_location(this.location + 1);
                        else if (0 == this.location)
                            if (c)
                                if (a) {
                                    this.set_location(-1);
                                    break
                                } else a = !0, this.set_location(this._widgets.length -
                                    1);
                        else {
                            this.set_location(-1);
                            break
                        } else this.set_location(this.location - 1)
                    },
                    set_listIndex: function(a) {
                        a >= this._lists.length ? a = this._lists.length - 1 : 0 > a && (a = 0);
                        this.listIndex = a;
                        this.set_location(0);
                        this._updateCursor();
                        return this.listIndex
                    },
                    set_visible: function(a) {
                        return a = Hb.prototype.set_visible.call(this, a)
                    },
                    set_location: function(a) {
                        a >= this._widgets.length && (a = this._widgets.length - 1);
                        this.location = a;
                        this._updateCursor();
                        return this.location
                    },
                    set_gamepad: function(a) {
                        this._gamepad = a;
                        this.setDefaultKeys(this._defaultCode);
                        for (var b = [this.keysUp, this.keysDown, this.keysLeft, this.keysRight, this.keysClick], c = 0; c < b.length;) {
                            var d = b[c];
                            ++c;
                            if (null != d)
                                for (var e = 0; e < d.length;) {
                                    var f = d[e];
                                    ++e;
                                    f instanceof Dc && (f.gamepad = this._gamepad)
                                }
                        }
                        return a
                    },
                    get_gamepad: function() {
                        return this._gamepad
                    },
                    destroy: function() {
                        Hb.prototype.destroy.call(this);
                        q.mouse == this._newMouse && (this._newMouse = null);
                        this.keysUp = V.destroyArray(this.keysUp);
                        this.keysDown = V.destroyArray(this.keysDown);
                        this.keysLeft = V.destroyArray(this.keysLeft);
                        this.keysRight =
                            V.destroyArray(this.keysRight);
                        this.keysClick = V.destroyArray(this.keysClick);
                        this.anchor = V.destroy(this.anchor);
                        for (var a = 0, b = this._lists; a < b.length;) {
                            var c = b[a];
                            ++a;
                            y.clearArraySoft(c.widgets)
                        }
                        y.clearArraySoft(this._lists);
                        this._widgets = null
                    },
                    update: function(a) {
                        if (null == this.get_gamepad()) {
                            var b = this.getGamepad(!1);
                            null != b && this.set_gamepad(b)
                        }
                        if (this.lastMouseX != q.mouse.x || this.lastMouseY != q.mouse.y) b = this.visible, this.jumpToXY(q.mouse.x, q.mouse.y), this.set_visible(b), this.lastMouseX = q.mouse.x,
                            this.lastMouseY = q.mouse.y;
                        this._checkKeys();
                        this._clickTime += a;
                        Hb.prototype.update.call(this, a)
                    },
                    addWidgetsFromUI: function(a) {
                        if (null != a.cursorLists) {
                            var b = 0;
                            for (a = a.cursorLists; b < a.length;) {
                                var c = a[b];
                                ++b;
                                this.addWidgetList(c)
                            }
                            this._widgets = this._lists[0].widgets;
                            this.set_location(0);
                            this.set_listIndex(0)
                        } else
                            for (b = 0, a = a.group.members; b < a.length;) c = a[b], ++b, (oa.__implements(c, oh) || c instanceof Ja) && this.addWidget(c)
                    },
                    jumpToXY: function(a, b) {
                        var c = 0,
                            d = Infinity,
                            e = -1,
                            f = -1;
                        if (null != this._lists) {
                            for (var k =
                                    0, p = this._lists; k < p.length;) {
                                var m = p[k];
                                ++k;
                                for (var h = 0, g = m.widgets.length; h < g;) {
                                    var l = h++,
                                        q = m.widgets[l];
                                    if (1 == q.visible && a >= q.x && b >= q.y && a <= q.x + q.get_width() && b <= q.y + q.get_height()) {
                                        var n = q.x + q.get_width() / 2 - a;
                                        q = q.y + q.get_height() / 2 - b;
                                        n = n * n + q * q;
                                        n < d && (d = n, e = c, f = l)
                                    }
                                }++c
                            }
                            if (-1 != e && -1 != f) return this.set_listIndex(e), this.set_location(f), !0
                        } else {
                            k = 0;
                            for (p = this._widgets.length; k < p;) l = k++, q = this._widgets[l], 1 == q.visible && a >= q.x && b >= q.y && a <= q.x + q.get_width() && b <= q.y + q.get_height() && (n = q.x + q.get_width() /
                                2 - a, q = q.y + q.get_height() / 2 - b, n = n * n + q * q, n < d && (d = n, f = l));
                            if (-1 != f) return this.set_location(f), !0
                        }
                        return !1
                    },
                    addWidgetList: function(a) {
                        for (var b = 0, c = this._lists; b < c.length;) {
                            var d = c[b];
                            ++b;
                            if (Tc.equals(d.widgets, a)) return
                        }
                        d = c = Infinity;
                        var e = -Infinity,
                            f = -Infinity;
                        for (b = 0; b < a.length;) {
                            var k = a[b];
                            ++b;
                            k.x < c && (c = k.x);
                            k.y < d && (d = k.y);
                            k.x + k.get_width() > e && (e = k.x);
                            k.y + k.get_height() > f && (f = k.y)
                        }
                        1 == this._lists.length && null != this._lists[0].widgets && 0 == this._lists[0].widgets.length ? (this._lists[0].widgets = [], this._lists[0].x =
                            c | 0, this._lists[0].y = d | 0, this._lists[0].width = e - c | 0, this._lists[0].height = f - d | 0, b = this._lists[0]) : (this._lists.push({
                            x: c | 0,
                            y: d | 0,
                            width: e - c | 0,
                            height: f - d | 0,
                            widgets: []
                        }), b = this._lists[this._lists.length - 1]);
                        c = this._widgets;
                        this._widgets = b.widgets;
                        for (b = 0; b < a.length;) d = a[b], ++b, this.addWidget(d);
                        this._widgets = c;
                        this._lists.sort(r(this, this._sortXYWidgetList));
                        b = 0;
                        for (c = this._lists; b < c.length;) a = c[b], ++b, a.widgets.sort(r(this, this._sortXYVisible))
                    },
                    addWidget: function(a) {
                        if (oa.__implements(a, oh)) this._widgets.push(a);
                        else if (a instanceof Ja) {
                            var b = 0;
                            for (a = a.group.members; b < a.length;) {
                                var c = a[b];
                                ++b;
                                oa.__implements(c, Ec) && this.addWidget(c)
                            }
                        }
                        this._widgets.sort(r(this, this._sortXYVisible))
                    },
                    setDefaultKeys: function(a) {
                        this._defaultCode = a;
                        this._clearKeys();
                        this._newKeys();
                        1 == (a & 1) && (this._addToKeys(this.keysRight, new dc(9, null, [16])), this._addToKeys(this.keysLeft, new dc(9, [16])), this._addToKeys(this.keysClick, new dc(13)));
                        256 == (a & 256) && (this._addToKeys(this.keysRight, new dc(39)), this._addToKeys(this.keysLeft, new dc(37)),
                            this._addToKeys(this.keysDown, new dc(40)), this._addToKeys(this.keysUp, new dc(38)), this._addToKeys(this.keysClick, new dc(13)));
                        16 == (a & 16) && (this._addToKeys(this.keysRight, new dc(68)), this._addToKeys(this.keysLeft, new dc(65)), this._addToKeys(this.keysDown, new dc(83)), this._addToKeys(this.keysUp, new dc(87)), this._addToKeys(this.keysClick, new dc(13)));
                        4096 == (a & 4096) && (this._addToKeys(this.keysRight, new dc(102)), this._addToKeys(this.keysLeft, new dc(100)), this._addToKeys(this.keysDown, new dc(98)), this._addToKeys(this.keysUp,
                            new dc(104)), this._addToKeys(this.keysClick, new dc(13)));
                        null == this.get_gamepad() && (this._gamepad = this.getGamepad());
                        65536 == (a & 65536) && (this._addToKeys(this.keysLeft, new Dc(this.get_gamepad(), 13)), this._addToKeys(this.keysRight, new Dc(this.get_gamepad(), 14)), this._addToKeys(this.keysDown, new Dc(this.get_gamepad(), 12)), this._addToKeys(this.keysUp, new Dc(this.get_gamepad(), 11)), this._addToKeys(this.keysClick, new Dc(this.get_gamepad(), 0)));
                        268435456 == (a & 268435456) && (this._addToKeys(this.keysLeft, new Dc(this.get_gamepad(),
                            4)), this._addToKeys(this.keysRight, new Dc(this.get_gamepad(), 5)), this._addToKeys(this.keysClick, new Dc(this.get_gamepad(), 0)));
                        1048576 == (a & 1048576) && (this._addToKeys(this.keysLeft, new me(this.get_gamepad(), {
                                id: 19,
                                axis: Pe.X,
                                positive: !1
                            })), this._addToKeys(this.keysRight, new me(this.get_gamepad(), {
                                id: 19,
                                axis: Pe.X,
                                positive: !0
                            })), this._addToKeys(this.keysUp, new me(this.get_gamepad(), {
                                id: 19,
                                axis: Pe.Y,
                                positive: !1
                            })), this._addToKeys(this.keysDown, new me(this.get_gamepad(), {
                                id: 19,
                                axis: Pe.Y,
                                positive: !0
                            })),
                            this._addToKeys(this.keysClick, new Dc(this.get_gamepad(), 0)));
                        16777216 == (a & 16777216) && (this._addToKeys(this.keysLeft, new me(this.get_gamepad(), {
                            id: 20,
                            axis: Pe.X,
                            positive: !1
                        })), this._addToKeys(this.keysRight, new me(this.get_gamepad(), {
                            id: 20,
                            axis: Pe.X,
                            positive: !0
                        })), this._addToKeys(this.keysUp, new me(this.get_gamepad(), {
                            id: 20,
                            axis: Pe.Y,
                            positive: !1
                        })), this._addToKeys(this.keysDown, new me(this.get_gamepad(), {
                            id: 20,
                            axis: Pe.Y,
                            positive: !0
                        })), this._addToKeys(this.keysClick, new Dc(this.get_gamepad(), 0)))
                    },
                    getGamepad: function(a) {
                        null == a && (a = !0);
                        var b = this.gamepadAutoConnect;
                        switch (b._hx_index) {
                            case 0:
                                var c = null;
                                break;
                            case 1:
                                c = q.gamepads.getFirstActiveGamepad();
                                break;
                            case 2:
                                c = q.gamepads.lastActive;
                                break;
                            case 3:
                                c = b.i, c = q.gamepads._activeGamepads[c]
                        }
                        if (null == c && a)
                            for (b = 0, a = q.gamepads.get_numActiveGamepads(); b < a && (c = b++, c = q.gamepads._activeGamepads[c], null == c););
                        return c
                    },
                    _sortXYWidgetList: function(a, b) {
                        return a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0
                    },
                    _sortXYVisible: function(a, b) {
                        return a.visible && !b.visible ?
                            -1 : b.visible && !a.visible ? 1 : a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0
                    },
                    _addToKeys: function(a, b) {
                        for (var c = !1, d = 0; d < a.length;) {
                            var e = a[d];
                            ++d;
                            if (b.equals(e)) {
                                c = !0;
                                break
                            }
                        }
                        c || a.push(b)
                    },
                    _clearKeys: function() {
                        y.clearArray(this.keysUp);
                        this.keysUp = null;
                        y.clearArray(this.keysDown);
                        this.keysDown = null;
                        y.clearArray(this.keysLeft);
                        this.keysLeft = null;
                        y.clearArray(this.keysRight);
                        this.keysRight = null;
                        y.clearArray(this.keysClick);
                        this.keysClick = null
                    },
                    _newKeys: function() {
                        this.keysUp = [];
                        this.keysDown = [];
                        this.keysLeft = [];
                        this.keysRight = [];
                        this.keysClick = []
                    },
                    _checkKeys: function() {
                        for (var a = 0 == this.visible, b = this.location, c = 0, d = this.keysUp; c < d.length;) {
                            var e = d[c];
                            ++c;
                            if (e.justPressed()) {
                                this._doInput(0, -1);
                                break
                            }
                        }
                        c = 0;
                        for (d = this.keysDown; c < d.length;)
                            if (e = d[c], ++c, e.justPressed()) {
                                this._doInput(0, 1);
                                break
                            }
                        c = 0;
                        for (d = this.keysLeft; c < d.length;)
                            if (e = d[c], ++c, e.justPressed()) {
                                this._doInput(-1, 0);
                                break
                            }
                        c = 0;
                        for (d = this.keysRight; c < d.length;)
                            if (e = d[c], ++c, e.justPressed()) {
                                this._doInput(1, 0);
                                break
                            }
                        a && this.visible && -1 != b && this.set_location(b);
                        this._clickKeysJustPressed() && (this.ignoreNextInput ? this.ignoreNextInput = !1 : (this._clickPressed = !0, this._clickTime = 0, this._doPress()));
                        this._clickKeysPressed() ? (this._clickPressed = !0, this._doMouseMove()) : 0 < this._clickTime && this._clickPressed && (this._doRelease(), this._clickPressed = !1)
                    },
                    _clickKeysJustPressed: function() {
                        for (var a = 0, b = this.keysClick; a < b.length;) {
                            var c = b[a];
                            ++a;
                            if (c.justPressed()) return !0
                        }
                        return !1
                    },
                    _clickKeysPressed: function() {
                        for (var a = 0, b = this.keysClick; a < b.length;) {
                            var c = b[a];
                            ++a;
                            if (c.pressed()) return !0
                        }
                        return !1
                    },
                    _getWidgetPoint: function(a) {
                        null == a && (a = q.camera);
                        var b = this._widgets[this.location];
                        if (null == b) return null;
                        var c = null;
                        b instanceof O && (c = b.getScreenPosition());
                        var d = c;
                        d.set_x(d.x * a.totalScaleX);
                        d = c;
                        d.set_y(d.y * a.totalScaleY);
                        null == c && (a = b.x, c = b.y, null == c && (c = 0), null == a && (a = 0), a = X._pool.get().set(a, c), a._inPool = !1, c = a);
                        d = c;
                        d.set_x(d.x + b.get_width() / 2);
                        d = c;
                        d.set_y(d.y + b.get_height() / 2);
                        return c
                    },
                    _doMouseMove: function(a) {
                        var b = !1;
                        if (null == a) {
                            a = this._getWidgetPoint();
                            if (null == a) return;
                            b = !0
                        }
                        if (this.dispatchEvents) {
                            var c =
                                q.mouse;
                            c._globalScreenX = a.x / q.scaleMode.scale.x | 0;
                            c._globalScreenY = a.y / q.scaleMode.scale.y | 0;
                            c.updatePositions();
                            null != this._newMouse && (this._newMouse.updateGlobalScreenPosition = !1);
                            var d = la.get_current().stage,
                                e = a.x,
                                f = a.y,
                                k = la.get_current().stage;
                            c = q.keys.pressed;
                            var p = c.keyManager.checkStatus(17, c.status);
                            c = q.keys.pressed;
                            var m = c.keyManager.checkStatus(18, c.status);
                            c = q.keys.pressed;
                            d.dispatchEvent(new eb("mouseMove", !0, !1, e, f, k, p, m, c.keyManager.checkStatus(16, c.status)))
                        }
                        b && a.put()
                    },
                    _doPress: function(a) {
                        var b =
                            this._widgets[this.location];
                        if (null != b) {
                            var c = !1;
                            if (null == a) {
                                a = this._getWidgetPoint();
                                if (null == a) return;
                                c = !0
                            }
                            if (this.dispatchEvents) {
                                var d = a.x * q.camera.zoom,
                                    e = a.y * q.camera.zoom,
                                    f = la.get_current().stage,
                                    k = la.get_current().stage,
                                    p = q.keys.pressed,
                                    m = p.keyManager.checkStatus(17, p.status);
                                p = q.keys.pressed;
                                var h = p.keyManager.checkStatus(18, p.status);
                                p = q.keys.pressed;
                                f.dispatchEvent(new eb("mouseDown", !0, !1, d, e, k, m, h, p.keyManager.checkStatus(16, p.status)))
                            }
                            null != this.callback && this.callback("cursor_down",
                                b);
                            c && a.put()
                        }
                    },
                    _doRelease: function(a) {
                        var b = this._widgets[this.location];
                        if (null != b) {
                            var c = !1;
                            if (null == a) {
                                a = this._getWidgetPoint();
                                if (null == a) return;
                                c = !0
                            }
                            var d = a.x * q.camera.zoom,
                                e = a.y * q.camera.zoom;
                            if (this.dispatchEvents) {
                                var f = la.get_current().stage,
                                    k = la.get_current().stage,
                                    p = q.keys.pressed,
                                    m = p.keyManager.checkStatus(17, p.status);
                                p = q.keys.pressed;
                                var h = p.keyManager.checkStatus(18, p.status);
                                p = q.keys.pressed;
                                f.dispatchEvent(new eb("mouseUp", !0, !1, d, e, k, m, h, p.keyManager.checkStatus(16, p.status)));
                                this._clickPressed && (f = la.get_current().stage, k = la.get_current().stage, p = q.keys.pressed, m = p.keyManager.checkStatus(17, p.status), p = q.keys.pressed, h = p.keyManager.checkStatus(18, p.status), p = q.keys.pressed, f.dispatchEvent(new eb("click", !0, !1, d, e, k, m, h, p.keyManager.checkStatus(16, p.status))))
                            }
                            null != this.callback && this.callback("cursor_click", b);
                            c && a.put();
                            null != this._newMouse && (this._newMouse.updateGlobalScreenPosition = !0, p = this._newMouse, a = q.game.get_mouseX() | 0, b = q.game.get_mouseY() | 0, p._globalScreenX =
                                a / q.scaleMode.scale.x | 0, p._globalScreenY = b / q.scaleMode.scale.y | 0, p.updatePositions())
                        }
                    },
                    _findNextY: function(a, b, c, d) {
                        var e = 0,
                            f = 0,
                            k = 0;
                        null != c ? (e = c[b].x | 0, f = c[b].y | 0, k = c.length) : null != d && (e = d[b].x, f = d[b].y, k = d.length);
                        for (var p = 0, m = 0, h = Infinity, g = Infinity, l = h, q = g, n = -1, r = 0; r < k;) {
                            var D = r++;
                            D != b && (null != c ? (p = c[D].x | 0, m = c[D].y | 0) : null != d && (p = d[D].x, m = d[D].y), g = m - f, (0 > g ? -1 : 1) == (0 > a ? -1 : 1) && 0 != g && (g = Math.abs(g), g < q ? (q = g, l = Math.abs(e - p), n = D) : g == q && (h = Math.abs(e - p), h < l && (l = h, n = D))))
                        }
                        return n
                    },
                    _wrapX: function(a,
                        b, c) {
                        0 > b + a ? b = b + a + c : b + a >= c && (b = b + a - c);
                        return b
                    },
                    _wrapY: function(a, b, c, d) {
                        var e, f, k = -1;
                        var p = Infinity;
                        var m = f = 0,
                            h = 0,
                            g = 0;
                        null != c && (m = c.length, h = c[b].x | 0, g = c[b].y | 0);
                        null != d && (m = d.length, h = d[b].x, g = d[b].y);
                        for (var l = 0; l < m;) {
                            var q = l++;
                            if (q != this.location) {
                                var n = e = 0;
                                null != c ? (e = c[q].x | 0, n = c[q].y | 0) : null != d && (e = d[q].x | 0, n = d[q].y | 0);
                                n -= g;
                                (0 > n ? -1 : 1) == (0 > a ? -1 : 1) == 0 && 0 != n && (n = Math.abs(n), n > f ? (f = n, p = Math.abs(h - e), k = q) : n == f && (e = Math.abs(h - e), e < p && (p = e, k = q)))
                            }
                        } - 1 != k && (b = k);
                        return b
                    },
                    _doInput: function(a, b, c) {
                        null ==
                            c && (c = 0);
                        if (this.ignoreNextInput) this.ignoreNextInput = !1;
                        else {
                            var d = null;
                            if (0 == b) 0 <= this.location + a && this.location + a < this._widgets.length ? this.set_location(this.location + a) : this.wrap && (1 == this._lists.length ? this.set_location(this._wrapX(a, this.location, this._widgets.length)) : (0 <= this.listIndex + a && this.listIndex + a < this._lists.length ? this.set_listIndex(this.listIndex + a) : this.set_listIndex(this._wrapX(a, this.listIndex, this._lists.length)), -1 == a && this.set_location(this._widgets.length - 1))), d = this._widgets[this.location];
                            else {
                                var e = this._findNextY(b, this.location, this._widgets, null); - 1 != e ? (this.set_location(e), d = this._widgets[this.location]) : this.wrap && (1 == this._lists.length ? this.set_location(this._wrapY(b, this.location, this._widgets, null)) : (d = this._findNextY(b, this.listIndex, null, this._lists), -1 != d ? this.set_listIndex(d) : this.set_listIndex(this._wrapY(b, this.listIndex, null, this._lists)), -1 == b && this.set_location(this._widgets.length - 1)), d = this._widgets[this.location])
                            }
                            null != d && null != this._widgets && 0 == d.visible && c <
                                this._widgets.length ? this._doInput(a, b, c + 1) : null != this.callback && this.callback("cursor_jump", d)
                        }
                    },
                    _updateCursor: function() {
                        this._widgets = this._lists[this.listIndex].widgets;
                        if (0 > this.location || null == this._lists || null == this._widgets) this.set_visible(!1);
                        else {
                            this.set_visible(this.set_active(!0));
                            var a = this._widgets[this.location],
                                b = !1,
                                c = !1;
                            if (null != a) {
                                var d = a;
                                if (d instanceof G) {
                                    var e = d;
                                    null != e && null != e.scrollFactor && this.scrollFactor.set(e.scrollFactor.x, e.scrollFactor.y)
                                }
                                a instanceof oe && (d = d.box);
                                this.anchor.anchorThing(this, d);
                                0 > this.x ? (this._flipAnchor("left", d), b = !0) : this.x > q.width + this.get_width() && (this._flipAnchor("right", d), b = !0);
                                0 > this.y ? (this._flipAnchor("top", d), c = !0) : this.y > q.height + this.get_height() && (this._flipAnchor("bottom", d), c = !0);
                                this.set_flipX(b);
                                this.set_flipY(c)
                            }
                        }
                    },
                    _flipAnchor: function(a, b) {
                        var c = null;
                        switch (a) {
                            case "bottom":
                                "bottom" == this.anchor.y.side && (c = this._bottomAnchor = this.anchor.getFlipped(!0, !1, this._bottomAnchor));
                                break;
                            case "left":
                                "left" == this.anchor.x.side &&
                                    (c = this._leftAnchor = this.anchor.getFlipped(!0, !1, this._leftAnchor));
                                break;
                            case "right":
                                "right" == this.anchor.x.side && (this._topAnchor = this.anchor.getFlipped(!0, !1, this._rightAnchor), c = this._rightAnchor);
                                break;
                            case "top":
                                "top" == this.anchor.y.side && (c = this._topAnchor = this.anchor.getFlipped(!0, !1, this._topAnchor))
                        }
                        null != c && c.anchorThing(this, b)
                    },
                    __class__: Xg,
                    __properties__: n(Hb.prototype.__properties__, {
                        set_gamepad: "set_gamepad",
                        get_gamepad: "get_gamepad",
                        set_listIndex: "set_listIndex",
                        set_location: "set_location"
                    })
                });
            var ym = w["flixel.addons.ui.GamepadAutoConnectPreference"] = {
                    __ename__: "flixel.addons.ui.GamepadAutoConnectPreference",
                    __constructs__: ["Never", "FirstActive", "LastActive", "GamepadID"],
                    Never: {
                        _hx_index: 0,
                        __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
                        toString: h
                    },
                    FirstActive: {
                        _hx_index: 1,
                        __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
                        toString: h
                    },
                    LastActive: {
                        _hx_index: 2,
                        __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
                        toString: h
                    },
                    GamepadID: (x = function(a) {
                        return {
                            _hx_index: 3,
                            i: a,
                            __enum__: "flixel.addons.ui.GamepadAutoConnectPreference",
                            toString: h
                        }
                    }, x.__params__ = ["i"], x)
                },
                xf = function(a, b, c, d, e, f, k, p) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.dropDirection = hm.Automatic;
                    this.list = [];
                    Ja.call(this, a, b);
                    this.callback = d;
                    this.header = e;
                    this.dropPanel = f;
                    null == this.header && (this.header = new jh);
                    null == this.dropPanel && (a = new fa(0, 0, this.header.background.get_width(), this.header.background.get_height()), this.dropPanel = new M(0, 0, "flixel/flixel-ui/img/box.png", a, [1, 1, 14, 14]));
                    if (null != c) {
                        a = 0;
                        for (k =
                            c.length; a < k;) b = a++, d = c[b], this.list.push(this.makeListButton(b, d.label, d.name));
                        this.selectSomething(c[0].name, c[0].label)
                    } else if (null != k)
                        for (a = 0; a < k.length;) c = k[a], ++a, this.list.push(c), c.resize(this.header.background.get_width(), this.header.background.get_height()), c.set_x(1);
                    this.updateButtonPositions();
                    this.dropPanel.resize(this.header.background.get_width(), this.getPanelHeight());
                    this.dropPanel.set_visible(!1);
                    this.add(this.dropPanel);
                    a = 0;
                    for (k = this.list; a < k.length;) c = k[a], ++a, this.add(c),
                        c.set_visible(!1);
                    this.header.button.onUp.callback = r(this, this.onDropdown);
                    this.add(this.header)
                };
            g["flixel.addons.ui.FlxUIDropDownMenu"] = xf;
            xf.__name__ = "flixel.addons.ui.FlxUIDropDownMenu";
            xf.__interfaces__ = [Ad, ne, Ec];
            xf.__super__ = Ja;
            xf.prototype = n(Ja.prototype, {
                set_skipButtonUpdate: function(a) {
                    this.skipButtonUpdate = a;
                    this.header.button.set_skipButtonUpdate(a);
                    return a
                },
                set_selectedId: function(a) {
                    if (this._selectedId == a) return a;
                    for (var b = 0, c = 0, d = this.list; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (null != e &&
                            e.name == a) {
                            b = this.list[b];
                            this._selectedId = a;
                            null != b.label ? (this._selectedLabel = b.label.text, this.header.text.set_text(b.label.text)) : (this._selectedLabel = "", this.header.text.set_text(""));
                            break
                        }++b
                    }
                    return a
                },
                set_selectedLabel: function(a) {
                    if (this._selectedLabel == a) return a;
                    for (var b = 0, c = 0, d = this.list; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (e.label.text == a) {
                            this._selectedId = this.list[b].name;
                            this._selectedLabel = a;
                            this.header.text.set_text(a);
                            break
                        }++b
                    }
                    return a
                },
                set_params: function(a) {
                    return this.params = a
                },
                updateButtonPositions: function() {
                    var a = this.header.background.get_height();
                    this.dropPanel.set_y(this.header.background.y);
                    if (this.dropsUp()) {
                        var b = this.dropPanel;
                        b.set_y(b.y - this.getPanelHeight())
                    } else b = this.dropPanel, b.set_y(b.y + a);
                    var c = this.dropPanel.y;
                    b = 0;
                    for (var d = this.list; b < d.length;) {
                        var e = d[b];
                        ++b;
                        e.set_y(c);
                        c += a
                    }
                },
                set_visible: function(a) {
                    for (var b = this.dropPanel.visible, c = [], d = 0, e = this.list.length; d < e;) {
                        var f = d++;
                        null != this.list[f] ? c.push(this.list[f].visible) : c.push(!1)
                    }
                    Ja.prototype.set_visible.call(this,
                        a);
                    this.dropPanel.set_visible(b);
                    d = 0;
                    for (e = this.list.length; d < e;) f = d++, null != this.list[f] && this.list[f].set_visible(c[f]);
                    return a
                },
                dropsUp: function() {
                    return this.dropDirection != hm.Up ? this.dropDirection == hm.Automatic ? this.exceedsHeight() : !1 : !0
                },
                exceedsHeight: function() {
                    return this.y + this.getPanelHeight() + this.header.background.get_height() > q.height
                },
                getPanelHeight: function() {
                    return this.list.length * this.header.background.get_height()
                },
                selectSomething: function(a, b) {
                    this.header.text.set_text(b);
                    this.set_selectedId(a);
                    this.set_selectedLabel(b)
                },
                makeListButton: function(a, b, c) {
                    b = new Pc(0, 0, b);
                    b.broadcastToFlxUI = !1;
                    var d = r(this, this.onClickItem);
                    b.onUp.callback = function() {
                        d(a)
                    };
                    b.name = c;
                    b.loadGraphicSlice9(["flixel/flixel-ui/img/invis.png", "flixel/flixel-ui/img/hilight.png", "flixel/flixel-ui/img/hilight.png"], this.header.background.get_width() | 0, this.header.background.get_height() | 0, [
                        [1, 1, 3, 3],
                        [1, 1, 3, 3],
                        [1, 1, 3, 3]
                    ], 0);
                    c = b.labelOffsets[2];
                    c.set_y(c.y - 1);
                    b.up_color = -16777216;
                    b.over_color = -1;
                    b.down_color = -1;
                    b.resize(this.header.background.get_width() -
                        2, this.header.background.get_height() - 1);
                    b.label.set_alignment("left");
                    b.autoCenterLabel();
                    b.set_x(1);
                    c = 0;
                    for (var e = b.labelOffsets; c < e.length;) {
                        var f = e[c];
                        ++c;
                        f.set_x(f.x + 2)
                    }
                    return b
                },
                update: function(a) {
                    Ja.prototype.update.call(this, a);
                    this.dropPanel.visible && 2 == q.mouse._leftButton.current && (q.mouse.overlaps(this) || this.showList(!1))
                },
                destroy: function() {
                    Ja.prototype.destroy.call(this);
                    this.dropPanel = V.destroy(this.dropPanel);
                    this.list = V.destroyArray(this.list);
                    this.callback = null
                },
                showList: function(a) {
                    for (var b =
                            0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.set_visible(a);
                        d.set_active(a)
                    }
                    this.dropPanel.set_visible(a);
                    Qa.forceFocus(a, this)
                },
                onDropdown: function() {
                    this.dropPanel.visible ? this.showList(!1) : this.showList(!0)
                },
                onClickItem: function(a) {
                    a = this.list[a];
                    this.selectSomething(a.name, a.label.text);
                    this.showList(!1);
                    null != this.callback && this.callback(a.name);
                    this.broadcastToFlxUI && Qa.event("click_dropdown", this, a.name, this.params)
                },
                __class__: xf,
                __properties__: n(Ja.prototype.__properties__, {
                    set_params: "set_params",
                    set_selectedLabel: "set_selectedLabel",
                    set_selectedId: "set_selectedId",
                    set_skipButtonUpdate: "set_skipButtonUpdate"
                })
            });
            var jh = function(a, b, c, d) {
                null == a && (a = 120);
                Ja.call(this);
                this.background = b;
                this.text = c;
                this.button = d;
                null == this.background && (this.background = new M(0, 0, "flixel/flixel-ui/img/box.png", new fa(0, 0, a, 20), [1, 1, 14, 14]));
                null == this.button && (this.button = new pe(0, 0, new G(0, 0, "flixel/flixel-ui/img/dropdown_mark.png")), this.button.loadGraphicSlice9(["flixel/flixel-ui/img/button_thin.png"], 80, 20, [ub.toIntArray("6,6,11,11")], 0, -1, !1, 18, 18));
                this.button.resize(this.background.get_height(), this.background.get_height());
                this.button.set_x(this.background.x + this.background.get_width() - this.button.get_width());
                this.button.set_width(a);
                b = this.button.offset;
                b.set_x(b.x - (a - this.button.frameWidth));
                this.button.set_x(this.offset.x);
                b = this.button.label.offset;
                b.set_x(b.x + this.button.offset.x);
                null == this.text && (this.text = new Uc(0, 0, this.background.get_width() | 0));
                this.text.setPosition(2, 4);
                this.text.set_color(-16777216);
                this.add(this.background);
                this.add(this.button);
                this.add(this.text)
            };
            g["flixel.addons.ui.FlxUIDropDownHeader"] = jh;
            jh.__name__ = "flixel.addons.ui.FlxUIDropDownHeader";
            jh.__super__ = Ja;
            jh.prototype = n(Ja.prototype, {
                destroy: function() {
                    Ja.prototype.destroy.call(this);
                    this.background = V.destroy(this.background);
                    this.text = V.destroy(this.text);
                    this.button = V.destroy(this.button)
                },
                __class__: jh
            });
            var hm = w["flixel.addons.ui.FlxUIDropDownMenuDropDirection"] = {
                    __ename__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
                    __constructs__: ["Automatic", "Down", "Up"],
                    Automatic: {
                        _hx_index: 0,
                        __enum__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
                        toString: h
                    },
                    Down: {
                        _hx_index: 1,
                        __enum__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
                        toString: h
                    },
                    Up: {
                        _hx_index: 2,
                        __enum__: "flixel.addons.ui.FlxUIDropDownMenuDropDirection",
                        toString: h
                    }
                },
                yf = function(a, b, c, d, e, f, k, p) {
                    this.broadcastToFlxUI = !0;
                    wf.call(this, a, b, c, d, e, f, k, p)
                };
            g["flixel.addons.ui.FlxUIInputText"] = yf;
            yf.__name__ = "flixel.addons.ui.FlxUIInputText";
            yf.__interfaces__ = [Ad, Ec, ec];
            yf.__super__ = wf;
            yf.prototype = n(wf.prototype, {
                resize: function(a, b) {
                    this.set_width(a);
                    this.set_height(b);
                    this.calcFrame()
                },
                onChange: function(a) {
                    wf.prototype.onChange.call(this, a);
                    if (this.broadcastToFlxUI) switch (a) {
                        case "backspace":
                        case "delete":
                            Qa.event("delete_input_text", this, this.text, this.params);
                            Qa.event("change_input_text", this, this.text, this.params);
                            break;
                        case "enter":
                            Qa.event("enter_input_text", this, this.text, this.params);
                            break;
                        case "input":
                            Qa.event("input_input_text", this, this.text,
                                this.params), Qa.event("change_input_text", this, this.text, this.params)
                    }
                },
                __class__: yf
            });
            var nh = function(a, b, c, d, e, f) {
                this.thickness = 1;
                this.length = 10;
                this.axis = mh.HORIZONTAL;
                Hb.call(this, a, b);
                this.makeGraphic(2, 2, -1);
                this.set_color(f);
                this.set_axis(c);
                this.set_length(d);
                this.set_thickness(e)
            };
            g["flixel.addons.ui.FlxUILine"] = nh;
            nh.__name__ = "flixel.addons.ui.FlxUILine";
            nh.__interfaces__ = [ec];
            nh.__super__ = Hb;
            nh.prototype = n(Hb.prototype, {
                set_axis: function(a) {
                    this.axis = a;
                    this.refresh();
                    return a
                },
                set_length: function(a) {
                    this.length =
                        a;
                    this.refresh();
                    return a
                },
                set_thickness: function(a) {
                    this.thickness = a;
                    this.refresh();
                    return a
                },
                refresh: function() {
                    this.axis == mh.HORIZONTAL ? this.scale.set(.5 * this.length, .5 * this.thickness) : this.scale.set(.5 * this.thickness, .5 * this.length);
                    this.updateHitbox()
                },
                resize: function(a, b) {
                    this.axis == mh.HORIZONTAL ? (this.set_length(a), this.set_thickness(b)) : (this.set_length(b), this.set_thickness(a))
                },
                __class__: nh,
                __properties__: n(Hb.prototype.__properties__, {
                    set_thickness: "set_thickness",
                    set_length: "set_length",
                    set_axis: "set_axis"
                })
            });
            var mh = w["flixel.addons.ui.LineAxis"] = {
                    __ename__: "flixel.addons.ui.LineAxis",
                    __constructs__: ["HORIZONTAL", "VERTICAL"],
                    HORIZONTAL: {
                        _hx_index: 0,
                        __enum__: "flixel.addons.ui.LineAxis",
                        toString: h
                    },
                    VERTICAL: {
                        _hx_index: 1,
                        __enum__: "flixel.addons.ui.LineAxis",
                        toString: h
                    }
                },
                xi = function(a, b, c, d, e, f, k, p, m, h, g, l) {
                    null == p && (p = 0);
                    null == k && (k = 1);
                    null == f && (f = "<X> more...");
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this._skipRefresh = !1;
                    this.scrollIndex = 0;
                    this._skipRefresh = !0;
                    Ja.call(this, a, b);
                    this.set_stacking(k);
                    this.set_spacing(p);
                    if (null != c)
                        for (var q = 0; q < c.length;) a = c[q], ++q, this.add(a);
                    this.prevButton = g;
                    this.nextButton = l;
                    this.prevButtonOffset = m;
                    this.nextButtonOffset = h;
                    this.set_moreString(f);
                    if (null == this.prevButton) q = r(this, this.onClick), c = new Pc(0, 0, " ", function() {
                        q(-1)
                    }), 0 == this.stacking ? (c.loadGraphicsUpOverDown("flixel/flixel-ui/img/button_arrow_left.png"), c.label.set_width(c.label.set_fieldWidth(100)), c.label.set_text(this.getMoreString(0)), c.setAllLabelOffsets(c.get_width() -
                        c.label.get_width(), c.get_height() + 2), c.label.set_alignment("right")) : (c.loadGraphicsUpOverDown("flixel/flixel-ui/img/button_arrow_up.png"), c.label.set_width(c.label.set_fieldWidth(100)), c.label.set_text(this.getMoreString(0)), c.setAllLabelOffsets(0, 0), c.setCenterLabelOffset(c.get_width() + 2, c.get_height() - c.label.get_height()), c.label.set_alignment("left")), this.prevButton = c;
                    else {
                        if (this.prevButton instanceof Pc) {
                            c = this.prevButton;
                            var n = r(this, this.onClick);
                            c.onUp.callback = function() {
                                n(-1)
                            }
                        }
                        if (this.prevButton instanceof pe) {
                            c = this.prevButton;
                            var ja = r(this, this.onClick);
                            c.onUp.callback = function() {
                                ja(-1)
                            }
                        }
                    }
                    if (null == this.nextButton) {
                        var D = r(this, this.onClick);
                        c = new Pc(0, 0, " ", function() {
                            D(1)
                        });
                        0 == this.stacking ? (c.loadGraphicsUpOverDown("flixel/flixel-ui/img/button_arrow_right.png"), c.label.set_width(c.label.set_fieldWidth(100)), c.label.set_text(this.getMoreString(0)), c.setAllLabelOffsets(0, c.get_height() + 2)) : (c.loadGraphicsUpOverDown("flixel/flixel-ui/img/button_arrow_down.png"), c.label.set_width(c.label.set_fieldWidth(100)),
                            c.label.set_text(this.getMoreString(0)), c.setAllLabelOffsets(0, 0), c.setCenterLabelOffset(c.get_width() + 2, 0));
                        c.label.set_alignment("left");
                        this.nextButton = c
                    } else {
                        if (this.nextButton instanceof Pc) {
                            c = this.nextButton;
                            var w = r(this, this.onClick);
                            c.onUp.callback = function() {
                                w(1)
                            }
                        }
                        if (this.nextButton instanceof pe) {
                            c = this.nextButton;
                            var x = r(this, this.onClick);
                            c.onUp.callback = function() {
                                x(1)
                            }
                        }
                    }
                    null == this.prevButtonOffset && (b = a = 0, null == b && (b = 0), null == a && (a = 0), c = X._pool.get().set(a, b), c._inPool = !1, this.prevButtonOffset =
                        c);
                    null == this.nextButtonOffset && (b = a = 0, null == b && (b = 0), null == a && (a = 0), c = X._pool.get().set(a, b), c._inPool = !1, this.nextButtonOffset = c);
                    this._skipRefresh = !1;
                    this.setSize(d, e)
                };
            g["flixel.addons.ui.FlxUIList"] = xi;
            xi.__name__ = "flixel.addons.ui.FlxUIList";
            xi.__super__ = Ja;
            xi.prototype = n(Ja.prototype, {
                set_scrollIndex: function(a) {
                    this.scrollIndex = a;
                    this.refreshList();
                    return a
                },
                set_stacking: function(a) {
                    this.stacking = a;
                    this.refreshList();
                    return a
                },
                set_spacing: function(a) {
                    this.spacing = a;
                    this.refreshList();
                    return a
                },
                set_moreString: function(a) {
                    this.moreString = a;
                    this.refreshList();
                    return this.moreString
                },
                destroy: function() {
                    this.nextButton = this.prevButton = null;
                    this.prevButtonOffset.put();
                    this.nextButtonOffset.put();
                    this.nextButtonOffset = this.prevButtonOffset = null;
                    Ja.prototype.destroy.call(this)
                },
                setSize: function(a, b) {
                    var c = !1;
                    0 == this._skipRefresh && (c = this._skipRefresh = !0);
                    this.set_width(a);
                    this.set_height(b);
                    c && (this._skipRefresh = !1);
                    this.refreshList()
                },
                add: function(a) {
                    Ja.prototype.add.call(this, a);
                    this.refreshList();
                    return a
                },
                safeAdd: function(a) {
                    return Ja.prototype.add.call(this, a)
                },
                getMoreString: function(a) {
                    for (var b = this.moreString; - 1 != b.indexOf("<X>");) b = K.replace(b, "<X>", null == a ? "null" : "" + a);
                    return b
                },
                set_visible: function(a) {
                    Ja.prototype.set_visible.call(this, a);
                    this.refreshList();
                    return a
                },
                onClick: function(a) {
                    this.set_scrollIndex(this.scrollIndex + a);
                    this.refreshList()
                },
                refreshList: function() {
                    if (!this._skipRefresh) {
                        this.autoBounds = !1; - 1 != this.group.members.indexOf(this.prevButton) && this.remove(this.prevButton, !0); - 1 != this.group.members.indexOf(this.nextButton) && this.remove(this.nextButton, !0);
                        var a = 0,
                            b = 0,
                            c = 0;
                        0 == this.stacking ? (this.prevButton.set_x(this.prevButtonOffset.x - this.prevButton.get_width() - 2), this.prevButton.set_y(this.prevButtonOffset.y), this.nextButton.set_x(this.nextButtonOffset.x + this.get_width() + 2), this.nextButton.set_y(this.nextButtonOffset.y)) : (this.prevButton.set_x(this.prevButtonOffset.x), this.prevButton.set_y(this.prevButtonOffset.y - this.prevButton.get_height() - 2), this.nextButton.set_x(this.nextButtonOffset.x),
                            this.nextButton.set_y(this.nextButtonOffset.y + this.get_height() + 2));
                        this.prevButton.set_x(this.prevButton.x | 0);
                        this.prevButton.set_y(this.prevButton.y | 0);
                        this.nextButton.set_x(this.nextButton.x | 0);
                        this.nextButton.set_y(this.nextButton.y | 0);
                        for (var d = 0, e = 0, f = this.group.members; e < f.length;) {
                            var k = f[e];
                            ++e;
                            var p = !1;
                            c >= this.scrollIndex && (p = 1 == this.stacking ? b + k.get_height() <= this.get_height() || 0 >= this.get_height() : a + k.get_width() <= this.get_width() || 0 >= this.get_width());
                            p ? (d = c, k.set_visible(k.set_active(!0)),
                                k.set_x(this.x + a), k.set_y(this.y + b), 1 == this.stacking ? b += k.get_height() + this.spacing : a += k.get_width() + this.spacing) : (k.set_x(k.set_y(0)), k.set_visible(k.set_active(!1)));
                            ++c
                        }
                        this.amountPrevious = this.scrollIndex;
                        this.amountNext = this.group.members.length - (d + 1);
                        0 < this.amountPrevious && (this.safeAdd(this.prevButton), this.prevButton instanceof Pc && (a = this.prevButton, a.label.set_text(this.getMoreString(this.amountPrevious))));
                        0 < this.amountNext && (this.safeAdd(this.nextButton), this.nextButton instanceof Pc &&
                            (a = this.nextButton, a.label.set_text(this.getMoreString(this.amountNext))))
                    }
                },
                get_width: function() {
                    return this.width
                },
                get_height: function() {
                    return this.height
                },
                set_width: function(a) {
                    this.width = a;
                    this.refreshList();
                    return a
                },
                set_height: function(a) {
                    this.height = a;
                    this.refreshList();
                    return a
                },
                __class__: xi,
                __properties__: n(Ja.prototype.__properties__, {
                    set_moreString: "set_moreString",
                    set_spacing: "set_spacing",
                    set_stacking: "set_stacking",
                    set_scrollIndex: "set_scrollIndex"
                })
            });
            var gc = function() {
                this.x = this.y =
                    this.screenX = this.screenY = this._globalScreenX = this._globalScreenY = 0
            };
            g["flixel.input.FlxPointer"] = gc;
            gc.__name__ = "flixel.input.FlxPointer";
            gc.prototype = {
                getWorldPosition: function(a, b) {
                    null == a && (a = q.camera);
                    null == b && (b = X._pool.get().set(0, 0), b._inPool = !1);
                    this.getScreenPosition(a, gc._cachedPoint);
                    b.set_x(gc._cachedPoint.x + a.scroll.x);
                    b.set_y(gc._cachedPoint.y + a.scroll.y);
                    return b
                },
                getScreenPosition: function(a, b) {
                    null == a && (a = q.camera);
                    null == b && (b = X._pool.get().set(0, 0), b._inPool = !1);
                    b.set_x((this._globalScreenX -
                        a.x + .5 * a.width * (a.zoom - a.initialZoom)) / a.zoom);
                    b.set_y((this._globalScreenY - a.y + .5 * a.height * (a.zoom - a.initialZoom)) / a.zoom);
                    return b
                },
                getPosition: function(a) {
                    null == a && (a = X._pool.get().set(0, 0), a._inPool = !1);
                    return a.set(this.x, this.y)
                },
                overlaps: function(a, b) {
                    var c = this,
                        d = !1,
                        e = Ra.resolveGroup(a);
                    null != e ? e.forEachExists(function(a) {
                        c.overlaps(a, b) && (d = !0)
                    }) : (this.getPosition(gc._cachedPoint), d = a.overlapsPoint(gc._cachedPoint, !0, b));
                    return d
                },
                updatePositions: function() {
                    this.getScreenPosition(q.camera,
                        gc._cachedPoint);
                    this.screenX = gc._cachedPoint.x | 0;
                    this.screenY = gc._cachedPoint.y | 0;
                    this.getWorldPosition(q.camera, gc._cachedPoint);
                    this.x = gc._cachedPoint.x | 0;
                    this.y = gc._cachedPoint.y | 0
                },
                __class__: gc
            };
            var Af = function() {};
            g["flixel.input.IFlxInputManager"] = Af;
            Af.__name__ = "flixel.input.IFlxInputManager";
            Af.__isInterface__ = !0;
            Af.__interfaces__ = [L];
            Af.prototype = {
                __class__: Af
            };
            var cf = function(a) {
                this._prevX = this._prevY = 0;
                this._visibleWhenFocusLost = !0;
                this._wheelUsed = !1;
                this._cursor = null;
                this.useSystemCursor = !1;
                this.visible = !0;
                this.wheel = 0;
                this.enabled = !0;
                gc.call(this);
                this.cursorContainer = a;
                this.cursorContainer.mouseChildren = !1;
                this.cursorContainer.mouseEnabled = !1;
                this._leftButton = new Qe(-1);
                this._stage = la.get_current().stage;
                this._stage.addEventListener("mouseDown", (x = this._leftButton, r(x, x.onDown)));
                this._stage.addEventListener("mouseUp", (x = this._leftButton, r(x, x.onUp)));
                this._middleButton = new Qe(-2);
                this._rightButton = new Qe(-3);
                this._stage.addEventListener("middleMouseDown", (x = this._middleButton,
                    r(x, x.onDown)));
                this._stage.addEventListener("middleMouseUp", (x = this._middleButton, r(x, x.onUp)));
                this._stage.addEventListener("rightMouseDown", (x = this._rightButton, r(x, x.onDown)));
                this._stage.addEventListener("rightMouseUp", (x = this._rightButton, r(x, x.onUp)));
                this._stage.addEventListener("mouseLeave", r(this, this.onMouseLeave));
                this._stage.addEventListener("mouseWheel", r(this, this.onMouseWheel));
                q.signals.postGameStart.add(r(this, this.onGameStart));
                hc.hide()
            };
            g["flixel.input.mouse.FlxMouse"] = cf;
            cf.__name__ =
                "flixel.input.mouse.FlxMouse";
            cf.__interfaces__ = [Af];
            cf.__super__ = gc;
            cf.prototype = n(gc.prototype, {
                load: function(a, b, c, d) {
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = 1);
                    null != this._cursor && V.removeChild(this.cursorContainer, this._cursor);
                    null == a && (a = new Bd(0, 0));
                    oa.__instanceof(a, vk) ? this._cursor = Ua.createInstance(a, []) : this._cursor = a instanceof H ? new Jb(a) : "string" == typeof a ? new Jb(ta.exists(a) ? ta.getBitmapData(a, !1) : null) : new Jb(new Bd(0, 0));
                    this._cursor.set_x(c);
                    this._cursor.set_y(d);
                    this._cursor.set_scaleX(b);
                    this._cursor.set_scaleY(b);
                    this.cursorContainer.addChild(this._cursor)
                },
                destroy: function() {
                    null != this._stage && (this._stage.removeEventListener("mouseDown", (x = this._leftButton, r(x, x.onDown))), this._stage.removeEventListener("mouseUp", (x = this._leftButton, r(x, x.onUp))), this._stage.removeEventListener("middleMouseDown", (x = this._middleButton, r(x, x.onDown))), this._stage.removeEventListener("middleMouseUp", (x = this._middleButton, r(x, x.onUp))), this._stage.removeEventListener("rightMouseDown", (x = this._rightButton,
                        r(x, x.onDown))), this._stage.removeEventListener("rightMouseUp", (x = this._rightButton, r(x, x.onUp))), this._stage.removeEventListener("mouseLeave", r(this, this.onMouseLeave)), this._stage.removeEventListener("mouseWheel", r(this, this.onMouseWheel)));
                    this._cursor = this.cursorContainer = null;
                    this._leftButton = V.destroy(this._leftButton);
                    this._middleButton = V.destroy(this._middleButton);
                    this._rightButton = V.destroy(this._rightButton);
                    this._cursorBitmapData = V.dispose(this._cursorBitmapData);
                    q.signals.postGameStart.remove(r(this,
                        this.onGameStart))
                },
                reset: function() {
                    this._leftButton.reset();
                    this._middleButton.reset();
                    this._rightButton.reset()
                },
                update: function() {
                    this._prevX = this.x;
                    this._prevY = this.y;
                    var a = q.game.get_mouseX(),
                        b = q.game.get_mouseY();
                    this._globalScreenX = a / q.scaleMode.scale.x | 0;
                    this._globalScreenY = b / q.scaleMode.scale.y | 0;
                    this.updatePositions();
                    this.visible && (this.cursorContainer.set_x(q.game.get_mouseX()), this.cursorContainer.set_y(q.game.get_mouseY()));
                    this._leftButton.update();
                    this._middleButton.update();
                    this._rightButton.update();
                    this._wheelUsed || (this.wheel = 0);
                    this._wheelUsed = !1
                },
                onFocus: function() {
                    this.reset();
                    this.set_useSystemCursor(this.useSystemCursor);
                    this.set_visible(this._visibleWhenFocusLost)
                },
                onFocusLost: function() {
                    (this._visibleWhenFocusLost = this.visible) && this.set_visible(!1);
                    hc.show()
                },
                onGameStart: function() {
                    this.set_visible(this.visible)
                },
                onMouseWheel: function(a) {
                    this.enabled && (this._wheelUsed = !0, this.wheel = a.delta)
                },
                onMouseLeave: function(a) {
                    this._rightButton.onUp();
                    this._middleButton.onUp()
                },
                showSystemCursor: function() {
                    this.cursorContainer.set_visible(!1);
                    hc.show()
                },
                hideSystemCursor: function() {
                    hc.hide();
                    this.visible && this.cursorContainer.set_visible(!0)
                },
                set_useSystemCursor: function(a) {
                    a ? this.showSystemCursor() : this.hideSystemCursor();
                    return this.useSystemCursor = a
                },
                showCursor: function() {
                    this.useSystemCursor ? hc.show() : (null == this._cursor && this.load(), this.cursorContainer.set_visible(!0), hc.hide())
                },
                hideCursor: function() {
                    this.cursorContainer.set_visible(!1);
                    hc.hide()
                },
                set_visible: function(a) {
                    a ? this.showCursor() : this.hideCursor();
                    return this.visible =
                        a
                },
                __class__: cf,
                __properties__: {
                    set_useSystemCursor: "set_useSystemCursor",
                    set_visible: "set_visible"
                }
            });
            var ph = function(a) {
                this.updateGlobalScreenPosition = !0;
                cf.call(this, a)
            };
            g["flixel.addons.ui.FlxUIMouse"] = ph;
            ph.__name__ = "flixel.addons.ui.FlxUIMouse";
            ph.__super__ = cf;
            ph.prototype = n(cf.prototype, {
                update: function() {
                    var a = this._globalScreenX,
                        b = this._globalScreenY;
                    cf.prototype.update.call(this);
                    this.updateGlobalScreenPosition || (this._globalScreenX = a, this._globalScreenY = b)
                },
                __class__: ph
            });
            var lh = function(a,
                b, c, d, e, f, k, p, m, h, g, l) {
                null == l && (l = !1);
                null == p && (p = 1);
                null == k && (k = 0);
                null == f && (f = 999);
                null == e && (e = -999);
                null == d && (d = 0);
                null == c && (c = 1);
                null == b && (b = 0);
                null == a && (a = 0);
                this.isPercent = !1;
                this.stack = 1;
                this.value = 0;
                this.max = 10;
                this.stepSize = this.decimals = this.min = 0;
                Ja.call(this, a, b);
                null == m && (m = new yf(0, 0, 25));
                m.set_x(0);
                m.set_y(0);
                this.text_field = m;
                this.text_field.set_text(null == d ? "null" : "" + d);
                this.text_field instanceof yf && (a = this.text_field, a.set_lines(1), a.callback = r(this, this._onInputTextEvent), a.broadcastToFlxUI = !1);
                this.stepSize = c;
                this.set_decimals(k);
                this.set_min(e);
                this.set_max(f);
                this.set_value(d);
                this.set_isPercent(l);
                c = 1 + m.get_height();
                null == h && (h = new Qb(0, 0), h.loadGraphicSlice9(["flixel/flixel-ui/img/button_thin.png"], c, c, [ub.toIntArray("2,2,15,15")], 0, -1, !1, 18, 18), h.set_label(new G(0, 0, "flixel/flixel-ui/img/plus_mark.png")));
                null == g && (g = new Qb(0, 0), g.loadGraphicSlice9(["flixel/flixel-ui/img/button_thin.png"], c, c, [ub.toIntArray("2,2,15,15")], 0, -1, !1, 18, 18), g.set_label(new G(0, 0, "flixel/flixel-ui/img/minus_mark.png")));
                this.button_plus = h;
                this.button_minus = g;
                this.add(this.text_field);
                this.add(this.button_plus);
                this.add(this.button_minus);
                this.button_plus.onUp.callback = r(this, this._onPlus);
                this.button_plus.broadcastToFlxUI = !1;
                this.button_minus.onUp.callback = r(this, this._onMinus);
                this.button_minus.broadcastToFlxUI = !1;
                this.set_stack(p)
            };
            g["flixel.addons.ui.FlxUINumericStepper"] = lh;
            lh.__name__ = "flixel.addons.ui.FlxUINumericStepper";
            lh.__interfaces__ = [Ad, ne, Ec];
            lh.__super__ = Ja;
            lh.prototype = n(Ja.prototype, {
                set_params: function(a) {
                    return this.params =
                        a
                },
                set_skipButtonUpdate: function(a) {
                    this.skipButtonUpdate = a;
                    this.button_plus.set_skipButtonUpdate(a);
                    this.button_minus.set_skipButtonUpdate(a);
                    return a
                },
                set_color: function(a) {
                    this.color = a;
                    this.button_plus.set_color(a);
                    this.button_minus.set_color(a);
                    this.text_field instanceof wf ? this.text_field.set_backgroundColor(a) : this.text_field.set_color(a);
                    return a
                },
                set_min: function(a) {
                    this.min = a;
                    this.value < this.min && this.set_value(this.min);
                    return this.min
                },
                set_max: function(a) {
                    this.max = a;
                    this.value > this.max &&
                        this.set_value(this.max);
                    return this.max
                },
                set_value: function(a) {
                    this.value = a;
                    this.value < this.min && (this.value = this.min);
                    this.value > this.max && (this.value = this.max);
                    if (null != this.text_field)
                        if (a = this.value, this.isPercent) {
                            var b = Math.pow(10, this.decimals);
                            this.text_field.set_text(I.string(I.string(Math.round(100 * a * b) / b)) + "%")
                        } else b = Math.pow(10, this.decimals), this.text_field.set_text(I.string(Math.round(a * b) / b));
                    return this.value
                },
                set_decimals: function(a) {
                    this.decimals = a;
                    0 > a && (this.decimals = 0);
                    this.set_value(this.value);
                    return this.decimals
                },
                set_isPercent: function(a) {
                    this.isPercent = a;
                    this.set_value(this.value);
                    return this.isPercent
                },
                set_stack: function(a) {
                    this.stack = a;
                    var b = 0,
                        c = 0;
                    this.text_field instanceof yf && (c = b = 1);
                    switch (this.stack) {
                        case 0:
                            a = 1 + this.text_field.get_height() / 2;
                            this.button_plus.get_height() != a && this.button_plus.resize(a, a);
                            this.button_minus.get_height() != a && this.button_minus.resize(a, a);
                            this.button_plus.set_x(b + this.text_field.x + this.text_field.get_width());
                            this.button_plus.set_y(-c + this.text_field.y);
                            this.button_minus.set_x(b + this.text_field.x + this.text_field.get_width());
                            this.button_minus.set_y(c + this.text_field.y + (this.text_field.get_height() - this.button_minus.get_height()));
                            break;
                        case 1:
                            a = 2 + this.text_field.get_height(), this.button_plus.get_height() != a && this.button_plus.resize(a, a), this.button_minus.get_height() != a && this.button_minus.resize(a, a), this.button_plus.set_x(b + this.text_field.x + this.text_field.get_width()), this.button_plus.set_y(-c + this.text_field.y), this.button_minus.set_x(this.button_plus.x +
                                this.button_plus.get_width()), this.button_minus.set_y(this.button_plus.y)
                    }
                    return this.stack
                },
                _onInputTextEvent: function(a, b) {
                    "" == a && (a = I.string(this.min));
                    for (var c = b = 0, d = a.length; c < d;) {
                        var e = c++;
                        "." == a.charAt(e) && ++b
                    }
                    if (1 != b || a.indexOf(".") != a.length - 1) this.set_value(parseFloat(a)), this._doCallback("edit_numeric_stepper"), this._doCallback("change_numeric_stepper")
                },
                _onPlus: function() {
                    this.set_value(this.value + this.stepSize);
                    this._doCallback("click_numeric_stepper");
                    this._doCallback("change_numeric_stepper")
                },
                _onMinus: function() {
                    this.set_value(this.value - this.stepSize);
                    this._doCallback("click_numeric_stepper");
                    this._doCallback("change_numeric_stepper")
                },
                _doCallback: function(a) {
                    this.broadcastToFlxUI && Qa.event(a, this, this.value, this.params)
                },
                __class__: lh,
                __properties__: n(Ja.prototype.__properties__, {
                    set_skipButtonUpdate: "set_skipButtonUpdate",
                    set_params: "set_params",
                    set_isPercent: "set_isPercent",
                    set_stack: "set_stack",
                    set_value: "set_value",
                    set_max: "set_max",
                    set_min: "set_min",
                    set_decimals: "set_decimals"
                })
            });
            var hh = function(a, b, c, d, e, f, k, p, m, h, g, l, q, n) {
                null == h && (h = "<X> more...");
                null == m && (m = 100);
                null == p && (p = 20);
                null == k && (k = 100);
                null == f && (f = 25);
                this._clickable = !0;
                this._selected = 0;
                this._y_space = 25;
                this._height = 20;
                this._label_width = this._width = 100;
                this.fixedSize = !1;
                Ja.call(this);
                this._y_space = f;
                this._width = k;
                this._height = p;
                this._label_width = m;
                null == c && (c = []);
                null == d && (d = []);
                this.callback = e;
                this._list_radios = [];
                this._list_active = [];
                this._list = new xi(0, 0, null, 0, 0, h, 1, 0, g, l, q, n);
                this.add(this._list);
                this.updateRadios(c,
                    d);
                this.loadGraphics(null, null);
                this.set_x(a);
                this.set_y(b)
            };
            g["flixel.addons.ui.FlxUIRadioGroup"] = hh;
            hh.__name__ = "flixel.addons.ui.FlxUIRadioGroup";
            hh.__interfaces__ = [Ad, ne];
            hh.__super__ = Ja;
            hh.prototype = n(Ja.prototype, {
                set_activeStyle: function(a) {
                    this.activeStyle = a;
                    this.updateActives();
                    return this.activeStyle
                },
                set_skipButtonUpdate: function(a) {
                    this.skipButtonUpdate = a;
                    for (var b = 0, c = this._list_radios; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.set_skipButtonUpdate(a)
                    }
                    return this.skipButtonUpdate
                },
                set_params: function(a) {
                    return this.params =
                        a
                },
                set_width: function(a) {
                    Ja.prototype.set_width.call(this, a);
                    this.fixedSize && null != this._list && this._list.set_width(a);
                    return a
                },
                set_height: function(a) {
                    Ja.prototype.set_height.call(this, a);
                    this.fixedSize && null != this._list && this._list.set_height(a);
                    return a
                },
                loadGraphics: function(a, b) {
                    this._box_asset = null != a ? a : "flixel/flixel-ui/img/radio.png";
                    this._dot_asset = null != b ? b : "flixel/flixel-ui/img/radio_dot.png";
                    this._box_asset instanceof G && (a = this._box_asset, this._box_asset = a.graphic.key);
                    this._dot_asset instanceof
                    G && (a = this._dot_asset, this._dot_asset = a.graphic.key);
                    a = 0;
                    for (b = this._list_radios; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.box.loadGraphic(this._box_asset, !0);
                        c.mark.loadGraphic(this._dot_asset)
                    }
                    this._refreshRadios()
                },
                destroy: function() {
                    null != this._list_radios && y.clearArray(this._list_radios);
                    null != this._list_active && y.clearArray(this._list_active);
                    this._labels = this._ids = this._list = this._list_radios = this._list_active = null;
                    Ja.prototype.destroy.call(this)
                },
                updateRadios: function(a, b) {
                    this._ids = a;
                    this._labels = b;
                    a = 0;
                    for (b = this._list_radios; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.set_visible(!1)
                    }
                    this._refreshRadios()
                },
                getRadios: function() {
                    return this._list_radios
                },
                get_selectedId: function() {
                    return this._ids[this._selected]
                },
                _refreshRadios: function() {
                    var a = this.x,
                        b = this.y,
                        c = 0,
                        d = 0,
                        e = 0;
                    this._list._skipRefresh = !0;
                    for (var f = 0, k = this._ids; f < k.length;) {
                        var p = k[f];
                        ++f;
                        var m = "";
                        m = null != this._labels && this._labels.length > c ? this._labels[c] : "<" + p + ">";
                        this._list_radios.length > c ? (p = this._list_radios[c], p.set_visible(!0), p.set_text(m),
                            0 == c ? (a = p.x, b = p.y) : (p.set_x(a | 0), p.set_y(b | 0))) : (p = new oe(0, 0, this._box_asset, this._dot_asset, m, this._label_width, [p, !1]), p.broadcastToFlxUI = !1, p.callback = function(a, b) {
                            return function() {
                                a[0](b[0])
                            }
                        }([r(this, this._onCheckBoxEvent)], [p]), this._list.add(p), p.set_x(a | 0), p.set_y(b | 0), p.set_text(m), 0 < this._list_radios.length && (p.button.copyStyle(this._list_radios[0].button), null == this.activeStyle && this.set_activeStyle(this.makeActiveStyle()), p.button.set_width(this._list_radios[0].button.get_width()),
                            p.button.set_height(this._list_radios[0].button.get_height()), p.set_textX(this._list_radios[0].textX), p.set_textY(this._list_radios[0].textY)), this._list_radios.push(p), this._list_active.push(!0));
                        a + p.get_width() > d && (d = a + p.get_width());
                        b + p.get_height() > e && (e = b + p.get_height());
                        b += this._y_space;
                        ++c
                    }
                    0 == this.fixedSize && (d += 5, e += 5, d > this._list.get_width() && this._list.set_width(d), e > this._list.get_height() && this._list.set_height(e), this.set_width(d), this.set_height(e));
                    this._list._skipRefresh = !1;
                    1 == this.fixedSize &&
                        this._list.refreshList();
                    this.updateActives()
                },
                updateActives: function() {
                    for (var a = 0, b = 0, c = this._list_radios; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.set_active(this._list_active[a]);
                        0 == this._list_active[a] && null != this.inactiveStyle ? this.inactiveStyle.applyToCheck(d) : 1 == this._list_active[a] && null != this.activeStyle && this.activeStyle.applyToCheck(d);
                        ++a
                    }
                },
                makeActiveStyle: function() {
                    if (0 < this._list_radios.length) {
                        var a = this._list_radios[0].button.label,
                            b = oc.copyFromFlxText(a),
                            c = new Md(a.borderStyle, a.borderColor,
                                a.borderSize, a.borderQuality);
                        return new ih(16777215, b, Dk.fromOpenFL(a._defaultFormat.align), a.color, c)
                    }
                    return null
                },
                _onCheckBoxEvent: function(a) {
                    this._onClick(a, !0)
                },
                _onClick: function(a, b) {
                    if (!this._clickable) return !1;
                    for (var c = 0, d = 0, e = this._list_radios; d < e.length;) {
                        var f = e[d];
                        ++d;
                        f.set_checked(!1);
                        a == f && (this._selected = c, f.set_checked(!0));
                        ++c
                    }
                    b && (null != this.callback && this.callback(this.get_selectedId()), this.broadcastToFlxUI && Qa.event("click_radio_group", this, this._ids[this._selected], this.params));
                    return !0
                },
                __class__: hh,
                __properties__: n(Ja.prototype.__properties__, {
                    set_params: "set_params",
                    set_skipButtonUpdate: "set_skipButtonUpdate",
                    set_activeStyle: "set_activeStyle",
                    get_selectedId: "get_selectedId"
                })
            });
            var ih = function(a, b, c, d, e) {
                this.checkColor = a;
                fh.call(this, b, c, d, e)
            };
            g["flixel.addons.ui.CheckStyle"] = ih;
            ih.__name__ = "flixel.addons.ui.CheckStyle";
            ih.__super__ = fh;
            ih.prototype = n(fh.prototype, {
                applyToCheck: function(a) {
                    null != this.checkColor && a.set_color(this.checkColor);
                    this.apply(a.button.label)
                },
                __class__: ih
            });
            var Rf = function(a, b, c, d) {
                null == d && (d = 16);
                null == c && (c = 16);
                null == b && (b = 0);
                null == a && (a = 0);
                G.call(this, a, b);
                this.makeGraphic(1, 1, 0);
                1 > d && (d = 1);
                1 > c && (c = 1);
                this.resize(c, d)
            };
            g["flixel.addons.ui.FlxUIRegion"] = Rf;
            Rf.__name__ = "flixel.addons.ui.FlxUIRegion";
            Rf.__interfaces__ = [ec, Ec];
            Rf.__super__ = G;
            Rf.prototype = n(G.prototype, {
                resize: function(a, b) {
                    this.set_width(a);
                    this.set_height(b)
                },
                __class__: Rf
            });
            var pe = function(a, b, c, d) {
                null == b && (b = 0);
                null == a && (a = 0);
                Qb.call(this, a, b, d);
                this.up_color = this.over_color =
                    this.down_color = this.up_toggle_color = this.over_toggle_color = this.down_toggle_color = -1;
                null != c && this.set_label(c)
            };
            g["flixel.addons.ui.FlxUISpriteButton"] = pe;
            pe.__name__ = "flixel.addons.ui.FlxUISpriteButton";
            pe.__interfaces__ = [zf];
            pe.__super__ = Qb;
            pe.prototype = n(Qb.prototype, {
                resize: function(a, b) {
                    Qb.prototype.resize.call(this, a, b);
                    this.autoCenterLabel()
                },
                autoCenterLabel: function() {
                    if (null != this.label) {
                        if (this.label instanceof ka) {
                            for (var a = this.label, b = 0, c = a.group.members; b < c.length;) {
                                var d = c[b];
                                ++b;
                                d.set_x(-d.get_width() / 2);
                                d.set_y(-d.get_height() / 2)
                            }
                            var e = a.get_width(),
                                f = a.get_height();
                            b = 0;
                            for (c = a.group.members; b < c.length;) d = c[b], ++b, d.set_x((e - d.get_width()) / 2), d.set_y((f - d.get_height()) / 2)
                        }
                        Qb.prototype.autoCenterLabel.call(this)
                    }
                },
                __class__: pe
            });
            var yi = function(a) {
                null == a && (a = 0);
                this.getTextFallback = null;
                this._reload_countdown = 0;
                this.reload_ui_on_resize = this._reload = !1;
                this._xml_id = "";
                this.cursor = null;
                Ob.call(this, a)
            };
            g["flixel.addons.ui.FlxUISubState"] = yi;
            yi.__name__ = "flixel.addons.ui.FlxUISubState";
            yi.__interfaces__ = [Yb];
            yi.__super__ = Ob;
            yi.prototype = n(Ob.prototype, {
                forceScrollFactor: function(a, b) {
                    if (null != this._ui) {
                        for (var c = 0, d = this._ui.group.members; c < d.length;) {
                            var e = d[c];
                            ++c;
                            e.scrollFactor.set(a, b)
                        }
                        null != this._ui.scrollFactor && this._ui.scrollFactor.set(a, b)
                    }
                },
                forceFocus: function(a, b) {
                    null != this._ui && (a ? this._ui.set_focus(b) : this._ui.set_focus(null))
                },
                create: function() {
                    null != Eb.static_tongue && (this._tongue = Eb.static_tongue);
                    1 == this._makeCursor && (this.cursor = this.createCursor());
                    this.tooltips =
                        new Wg(null, this);
                    this._ui = this.createUI(null, this, null, this._tongue);
                    this.add(this._ui);
                    this._ui.getTextFallback = this.getTextFallback;
                    if ("" != this._xml_id && null != this._xml_id) {
                        var a = y.xml(this._xml_id);
                        null == a && (a = y.xml(this._xml_id, "xml", !0, ""));
                        null != a && this._ui.load(a)
                    } else this._ui.load(null);
                    null != this.cursor && null != this._ui && (this.add(this.cursor), this.cursor.addWidgetsFromUI(this._ui), this.cursor.findVisibleLocation(0));
                    q.mouse.set_visible(!0);
                    this.tooltips.init();
                    Ob.prototype.create.call(this);
                    this.cleanup();
                    this._parentState instanceof Eb && (this.reload_ui_on_resize = oa.__cast(this._parentState, Eb).reload_ui_on_resize)
                },
                onCursorEvent: function(a, b) {
                    this.getEvent(a, b, null)
                },
                onShowTooltip: function(a) {},
                onResize: function(a, b) {
                    this.reload_ui_on_resize && (q.scaleMode.onMeasure(a, b), this._reload_countdown = 5, this._reload = !0)
                },
                update: function(a) {
                    Ob.prototype.update.call(this, a);
                    this.tooltips.update(a);
                    this._reload && 0 < this._reload_countdown && (this._reload_countdown--, 0 == this._reload_countdown && this.reloadUI())
                },
                destroy: function() {
                    this.destroyed = !0;
                    null != this.tooltips && (this.tooltips.destroy(), this.tooltips = null);
                    null != this._ui && (this._ui.destroy(), this.remove(this._ui, !0), this._ui = null);
                    Ob.prototype.destroy.call(this)
                },
                getEvent: function(a, b, c, d) {},
                getRequest: function(a, b, c, d) {
                    return null
                },
                getText: function(a, b, c) {
                    null == c && (c = !0);
                    null == b && (b = "ui");
                    return null != this._tongue ? this._tongue.get(a, b, c) : null != this.getTextFallback ? this.getTextFallback(a, b, c) : a
                },
                cleanup: function() {
                    this._ui.cleanup()
                },
                createCursor: function() {
                    return new Xg(r(this,
                        this.onCursorEvent))
                },
                createUI: function(a, b, c, d, e) {
                    null == e && (e = "");
                    return new Qa(a, b, c, d, e)
                },
                reloadUI: function() {
                    null != this._ui && (this.remove(this._ui, !0), this._ui.destroy(), this._ui = null);
                    this._ui = this.createUI(null, this, null, this._tongue);
                    this.add(this._ui);
                    var a = y.xml(this._xml_id);
                    this._ui.load(a);
                    this._reload = !1;
                    this._reload_countdown = 0
                },
                __class__: yi
            });
            var kh = function(a, b, c, d, e, f, k) {
                null == e && (e = !1);
                this._selected_tab = -1;
                this._selected_tab_id = "";
                this._tab_spacing = this._tab_stacking = this._tab_offset =
                    null;
                this._stretch_tabs = !1;
                Ja.call(this);
                null == a && (a = new M(0, 0, "flixel/flixel-ui/img/chrome_flat.png", new fa(0, 0, 200, 200)));
                this._back = a;
                this.add(this._back);
                if (null == b && null != c)
                    for (b = [], a = 0; a < c.length;) {
                        var p = c[a];
                        ++a;
                        var m = new Pc(0, 0, p.label);
                        m.up_color = 16777215;
                        m.down_color = 16777215;
                        m.over_color = 16777215;
                        m.up_toggle_color = 16777215;
                        m.down_toggle_color = 16777215;
                        m.over_toggle_color = 16777215;
                        m.label.set_color(16777215);
                        var h = m.label;
                        h.set_borderStyle(Oc.OUTLINE);
                        h.set_borderColor(0);
                        h.set_borderSize(1);
                        h.set_borderQuality(1);
                        m.name = p.name;
                        p = ub.toIntArray("6,6,11,11");
                        m.loadGraphicSlice9("flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab_back.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png flixel/flixel-ui/img/tab.png".split(" "), 0, 0, [p, p, p, p, p, p], 0, -1, !0);
                        b.push(m)
                    }
                this._tabs = b;
                this._stretch_tabs = e;
                this._tab_spacing = f;
                this._tab_stacking = k;
                null == this._tab_stacking && (this._tab_stacking = ["front", "back"]);
                this._tab_offset = d;
                b = 0;
                d = null;
                a = 0;
                for (c =
                    this._tabs; a < c.length;) d = c[a], ++a, this.add(d), e = function(a, b) {
                    return function() {
                        a[0](b[0])
                    }
                }([r(this, this._onTabEvent)], [d.name]), d.onUp.callback = e, ++b;
                this.distributeTabs();
                this._tab_groups = []
            };
            g["flixel.addons.ui.FlxUITabMenu"] = kh;
            kh.__name__ = "flixel.addons.ui.FlxUITabMenu";
            kh.__interfaces__ = [je, ne, ec];
            kh.__super__ = Ja;
            kh.prototype = n(Ja.prototype, {
                getEvent: function(a, b, c, d) {},
                getRequest: function(a, b, c, d) {
                    return null
                },
                set_skipButtonUpdate: function(a) {
                    this.skipButtonUpdate = a;
                    for (var b = 0, c = this._tabs; b <
                        c.length;) {
                        var d = c[b];
                        ++b;
                        d.set_skipButtonUpdate(a)
                    }
                    b = 0;
                    for (c = this._tab_groups; b < c.length;) {
                        var e = c[b];
                        ++b;
                        d = 0;
                        for (e = e.group.members; d < e.length;) {
                            var f = e[d];
                            ++d;
                            oa.__implements(f, ne) && f.set_skipButtonUpdate(a)
                        }
                    }
                    return a
                },
                get_width: function() {
                    return this._back.get_width()
                },
                get_height: function() {
                    var a = this.getFirstTab();
                    return null != a ? this._back.y + this._back.get_height() - a.y : this._back.get_height()
                },
                resize: function(a, b) {
                    if (oa.__implements(this._back, ec)) {
                        this.distributeTabs(a);
                        var c = this._back;
                        var d =
                            this.getFirstTab();
                        null != d ? c.resize(a, b - d.get_height()) : c.resize(a, b)
                    } else this.distributeTabs()
                },
                set_selected_tab: function(a) {
                    this.showTabInt(a);
                    return this._selected_tab
                },
                destroy: function() {
                    Ja.prototype.destroy.call(this);
                    y.clearArray(this._tab_groups);
                    y.clearArray(this._tabs);
                    this._tab_groups = this._tabs = this._back = null
                },
                getTab: function(a, b) {
                    if (null != a)
                        for (var c = 0, d = this._tabs; c < d.length;) {
                            var e = d[c];
                            ++c;
                            if (e.name == a) return e
                        }
                    return null != b && b < this._tabs.length ? this._tabs[b] : null
                },
                addGroup: function(a) {
                    a !=
                        this && (this.hasThis(a) || (a.set_y(this._back.y - this.y), this.add(a), this._tab_groups.push(a)), this._showOnlyGroup(""), 1 == this._tab_groups.length && this.set_selected_tab(0), -1 != this._selected_tab && this.set_selected_tab(this._selected_tab))
                },
                _onTabEvent: function(a) {
                    this.showTabId(a);
                    var b = this.getTab(a);
                    b = null != b ? b.params : null;
                    this.broadcastToFlxUI && Qa.event("tab_menu_click", this, a, b)
                },
                stackTabs: function() {
                    var a = this._back.x,
                        b = this._back.y;
                    this.group.remove(this._back, !0);
                    for (var c, d = 0, e = this._tabs; d <
                        e.length;) c = e[d], ++d, c.toggled && this.group.remove(c, !0);
                    this.group.add(this._back);
                    d = 0;
                    for (e = this._tabs; d < e.length;) c = e[d], ++d, c.toggled && this.group.add(c);
                    d = 0;
                    for (e = this._tab_groups; d < e.length;) {
                        c = e[d];
                        ++d;
                        var f = c.x,
                            k = c.y;
                        this.remove(c, !0);
                        this.add(c);
                        c.set_x(f);
                        c.set_y(k)
                    }
                    this._back.set_x(a);
                    this._back.set_y(b)
                },
                showTabId: function(a) {
                    this._selected_tab = -1;
                    this._selected_tab_id = "";
                    for (var b = 0, c = 0, d = this._tabs; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.set_toggled(!1);
                        e.forceStateHandler("out_button");
                        e.name ==
                            a && (e.set_toggled(!0), this._selected_tab_id = a, this._selected_tab = b);
                        ++b
                    }
                    this._showOnlyGroup(a);
                    this.stackTabs()
                },
                sortTabs: function(a, b) {
                    return !(a.name < b.name) && a.name > b.name ? 1 : -1
                },
                showTabInt: function(a) {
                    0 <= a && null != this._tabs && this._tabs.length > a ? this.showTabId(this._tabs[a].name) : this.showTabId("")
                },
                _showOnlyGroup: function(a) {
                    for (var b = 0, c = this._tab_groups; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.name == a ? d.set_visible(d.set_active(!0)) : d.set_visible(d.set_active(!1))
                    }
                },
                getFirstTab: function() {
                    var a = null;
                    null !=
                        this._tabs && 0 < this._tabs.length && (a = this._tabs[0]);
                    return a
                },
                distributeTabs: function(a) {
                    null == a && (a = -1);
                    var b = 0,
                        c = 0; - 1 == a && (a = this._back.get_width());
                    var d = 0;
                    if (this._stretch_tabs) {
                        c = a / this._tabs.length;
                        var e = (c | 0) * this._tabs.length;
                        e < a && (d = a - e)
                    }
                    this._tabs.sort(r(this, this.sortTabs));
                    e = a = 0;
                    for (var f, k = 0, p = this._tabs; k < p.length;) {
                        f = p[k];
                        ++k;
                        f.set_x(this.x + b);
                        f.set_y(this.y);
                        if (null != this._tab_offset) {
                            var m = f;
                            m.set_x(m.x + this._tab_offset.x);
                            m = f;
                            m.set_y(m.y + this._tab_offset.y)
                        }
                        this._stretch_tabs ? (m =
                            f.get_height(), 0 != a && (m = e, f.resize_ratio = -1), 0 < d ? (f.resize(c + 1, m), b += (c | 0) + 1, --d) : (f.resize(c, m), b += c | 0)) : b = null != this._tab_spacing ? b + (f.get_width() + this._tab_spacing) : b + f.get_width();
                        0 == a && (e = f.get_height());
                        ++a
                    }
                    null != this._tabs && 0 < this._tabs.length && null != this._tabs[0] && (this._back.set_y(this._tabs[0].y + this._tabs[0].get_height() - 2), null != this._tab_offset && (k = this._back, k.set_y(k.y - this._tab_offset.y)));
                    this.calcBounds()
                },
                __class__: kh,
                __properties__: n(Ja.prototype.__properties__, {
                    set_selected_tab: "set_selected_tab",
                    set_skipButtonUpdate: "set_skipButtonUpdate"
                })
            });
            var Uc = function(a, b, c, d, e, f) {
                null == f && (f = !0);
                null == e && (e = 8);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.minimumHeight = 1;
                Fb.call(this, a, b, c, d, e, f)
            };
            g["flixel.addons.ui.FlxUIText"] = Uc;
            Uc.__name__ = "flixel.addons.ui.FlxUIText";
            Uc.__interfaces__ = [Ad, Ec, ec];
            Uc.__super__ = Fb;
            Uc.prototype = n(Fb.prototype, {
                resize: function(a, b) {
                    var c = 1;
                    b < this.minimumHeight && (b = this.minimumHeight);
                    b < this.get_height() && (c = -1);
                    this.set_width(a);
                    this.set_height(b);
                    this.textField.set_width(this.get_width());
                    for (var d = this._defaultFormat.size | 0, e = this.get_height() - this.graphic.bitmap.height, f = 0, k = this.textField.get_numLines(); 0 < e * c && 999 > f;) {
                        ++f;
                        this.set_size((this._defaultFormat.size | 0) + c);
                        if (0 < c && this.textField.get_numLines() > k) {
                            this.set_size((this._defaultFormat.size | 0) - c);
                            break
                        }
                        this._regen = !0;
                        this.calcFrame(!0);
                        e = b - this.graphic.bitmap.height
                    }
                    999 <= f && this.set_size(d);
                    this.set_width(a);
                    this.set_height(b);
                    this._regen = !0;
                    this.calcFrame(!0)
                },
                set_params: function(a) {
                    return this.params = a
                },
                __class__: Uc,
                __properties__: n(Fb.prototype.__properties__, {
                    set_params: "set_params"
                })
            });
            var gh = function(a, b, c, d, e, f, k, p, m) {
                null == m && (m = !1);
                null == p && (p = 12895428);
                null == k && (k = 8421504);
                this.baseTileSize = -1;
                this.floorToEven = !1;
                this._color1 = this._color2 = 0;
                this._tilesWide = this._tilesTall = 2;
                Hb.call(this, a, b);
                this.tileWidth = c;
                this.tileHeight = d;
                this._tilesWide = e;
                this._tilesTall = f;
                this._color1 = k;
                this._color2 = p;
                this.floorToEven = m;
                this.makeTiles(this.tileWidth, this.tileHeight, this._tilesWide, this._tilesTall, this._color1, this._color2)
            };
            g["flixel.addons.ui.FlxUITileTest"] =
                gh;
            gh.__name__ = "flixel.addons.ui.FlxUITileTest";
            gh.__interfaces__ = [Ec, ec];
            gh.__super__ = Hb;
            gh.prototype = n(Hb.prototype, {
                makeTiles: function(a, b, c, d, e, f) {
                    null == f && (f = -3881788);
                    null == e && (e = -8355712);
                    b = this.constrain(a * this._tilesWide, b * this._tilesTall);
                    a = b.x | 0;
                    b = b.y | 0;
                    this.makeGraphic(c, d, e);
                    e = this.get_pixels();
                    for (var k = 0, p = 0; p < c;) {
                        for (var m = p++, h = 0, g = d; h < g;) {
                            var l = h++;
                            0 == k % 2 && e.setPixel(m, l, f);
                            ++k
                        }
                        0 != c % 2 && ++k
                    }
                    this.set_pixels(e);
                    this.scale.set(a, b);
                    this.updateHitbox()
                },
                constrain: function(a, b) {
                    a = a / this._tilesWide |
                        0;
                    b = b / this._tilesTall | 0;
                    a < b ? b = a : b < a && (a = b);
                    this.floorToEven && 1 == a % 2 && (--a, b = a);
                    0 < this.baseTileSize && (b = a = (a / this.baseTileSize | 0) * this.baseTileSize);
                    return new X(a, b)
                },
                resize: function(a, b) {
                    this.makeTiles(this.tileWidth, this.tileHeight, this._tilesWide, this._tilesTall, this._color1, this._color2)
                },
                __class__: gh
            });
            var Qc = function(a, b, c, d) {
                Ja.call(this, 0, 0);
                null == c && (c = new uf(0, 0, "left", "top", "right", "top"));
                d = Qc.styleFix(d);
                this.refresh(a, b, "", "", c, d);
                this.setScrollFactor(0, 0)
            };
            g["flixel.addons.ui.FlxUITooltip"] =
                Qc;
            Qc.__name__ = "flixel.addons.ui.FlxUITooltip";
            Qc.styleFix = function(a, b) {
                null == a && (a = {
                    titleFormat: null,
                    bodyFormat: null,
                    titleBorder: null,
                    bodyBorder: null,
                    titleOffset: null,
                    bodyOffset: null,
                    background: null,
                    borderSize: -1,
                    borderColor: null,
                    arrow: null,
                    titleWidth: -1,
                    bodyWidth: -1,
                    autoSizeHorizontal: null,
                    autoSizeVertical: null,
                    leftPadding: -1,
                    rightPadding: -1,
                    topPadding: -1,
                    bottomPadding: -1
                });
                if (null != b) {
                    null == a.titleFormat && (a.titleFormat = b.titleFormat);
                    null == a.bodyFormat && (a.bodyFormat = b.bodyFormat);
                    null == a.titleBorder &&
                        (a.titleBorder = b.titleBorder);
                    null == a.bodyBorder && (a.bodyBorder = b.bodyBorder);
                    null == a.titleOffset && (a.titleOffset = b.titleOffset);
                    null == a.bodyOffset && (a.bodyOffset = b.bodyOffset);
                    null == a.background && (a.background = b.background);
                    null == a.borderColor && (a.borderColor = b.borderColor);
                    null == a.arrow && (a.arrow = b.arrow);
                    if (null == a.borderSize || 0 > a.borderSize) a.borderSize = b.borderSize;
                    if (null == a.titleWidth || 0 > a.titleWidth) a.titleWidth = b.titleWidth;
                    if (null == a.bodyWidth || 0 > a.bodyWidth) a.bodyWidth = b.bodyWidth;
                    null ==
                        a.autoSizeHorizontal && (a.autoSizeHorizontal = b.autoSizeHorizontal);
                    null == a.autoSizeVertical && (a.autoSizeVertical = b.autoSizeVertical);
                    if (null == a.leftPadding || 0 > a.leftPadding) a.leftPadding = b.leftPadding;
                    if (null == a.rightPadding || 0 > a.rightPadding) a.rightPadding = b.rightPadding;
                    if (null == a.topPadding || 0 > a.topPadding) a.topPadding = b.topPadding;
                    if (null == a.leftPadding || 0 > a.bottomPadding) a.bottomPadding = b.bottomPadding
                }
                null != b && (null != a.titleFormat && (Qc.fillFontDefNulls(a.titleFormat, b.titleFormat), null != a.titleFormat.format &&
                    null != b.titleFormat.format && Qc.fillFormatNulls(a.titleFormat.format, b.titleFormat.format)), null != a.bodyFormat && (Qc.fillFontDefNulls(a.bodyFormat, b.bodyFormat), null != a.bodyFormat.format && null != b.bodyFormat.format && Qc.fillFormatNulls(a.bodyFormat.format, b.bodyFormat.format)));
                null == a.titleFormat && (a.titleFormat = new oc(null, null, null, new nc(null, 8, -16777216), null));
                null == a.bodyFormat && (a.bodyFormat = new oc(null, null, null, new nc(null, 8, -16777216), null));
                null == a.titleBorder && (a.titleBorder = new Md(Oc.NONE,
                    0, 0, 1));
                null == a.bodyBorder && (a.bodyBorder = new Md(Oc.NONE, 0, 0, 1));
                null == a.titleOffset && (a.titleOffset = new X(0, 0));
                null == a.bodyOffset && (a.bodyOffset = new X(0, 0));
                null == a.background && (a.background = 16777162);
                null == a.borderColor && (a.borderColor = -16777216);
                null == a.arrow && (a.arrow = "flixel/flixel-ui/img/tooltip_arrow.png");
                if (null == a.borderSize || 0 > a.borderSize) a.borderSize = 1;
                if (null == a.titleWidth || 0 > a.titleWidth) a.titleWidth = 100;
                if (null == a.bodyWidth || 0 > a.bodyWidth) a.bodyWidth = 100;
                null == a.autoSizeHorizontal &&
                    (a.autoSizeHorizontal = !0);
                null == a.autoSizeVertical && (a.autoSizeVertical = !0);
                if (null == a.leftPadding || 0 > a.leftPadding) a.leftPadding = 0;
                if (null == a.rightPadding || 0 > a.rightPadding) a.rightPadding = 0;
                if (null == a.topPadding || 0 > a.topPadding) a.topPadding = 0;
                if (null == a.leftPadding || 0 > a.bottomPadding) a.bottomPadding = 0;
                return a
            };
            Qc.cloneStyle = function(a) {
                var b = null != a.titleFormat ? a.titleFormat.clone() : null,
                    c = null != a.bodyFormat ? a.bodyFormat.clone() : null;
                return {
                    titleFormat: b,
                    bodyFormat: c,
                    borderSize: a.borderSize,
                    titleWidth: a.titleWidth,
                    bodyWidth: a.bodyWidth,
                    background: a.background,
                    borderColor: a.borderColor,
                    arrow: a.arrow,
                    titleOffset: a.titleOffset.copyTo(),
                    bodyOffset: a.bodyOffset.copyTo(),
                    titleBorder: a.titleBorder.clone(),
                    bodyBorder: a.bodyBorder.clone(),
                    autoSizeVertical: a.autoSizeVertical,
                    autoSizeHorizontal: a.autoSizeHorizontal,
                    leftPadding: a.leftPadding,
                    rightPadding: a.rightPadding,
                    topPadding: a.topPadding,
                    bottomPadding: a.bottomPadding
                }
            };
            Qc.fillFontDefNulls = function(a, b) {
                0 == a.get_size() && a.set_size(b.get_size());
                if (null == a.name || "" ==
                    a.name) a.name = b.name;
                if (null == a.file || "" == a.file) a.file = b.file;
                if (null == a.extension || "" == a.extension) a.extension = b.extension;
                null == a.border && (a.border = null != b.border ? b.border.clone() : null)
            };
            Qc.fillFormatNulls = function(a, b) {
                null == a.align && (a.align = b.align);
                null == a.blockIndent && (a.blockIndent = b.blockIndent);
                null == a.bold && (a.bold = b.bold);
                null == a.bullet && (a.bullet = b.bullet);
                null == a.color && (a.color = b.color);
                null == a.font && (a.font = b.font);
                null == a.indent && (a.indent = b.indent);
                null == a.italic && (a.italic = b.italic);
                null == a.kerning && (a.kerning = b.kerning);
                null == a.leading && (a.leading = b.leading);
                null == a.leftMargin && (a.leftMargin = b.leftMargin);
                null == a.letterSpacing && (a.letterSpacing = b.letterSpacing);
                null == a.rightMargin && (a.rightMargin = b.rightMargin);
                null == a.size && (a.size = b.size);
                null == a.tabStops && (a.tabStops = b.tabStops);
                null == a.target && (a.target = b.target);
                null == a.underline && (a.underline = b.underline);
                null == a.url && (a.url = b.url)
            };
            Qc.__super__ = Ja;
            Qc.prototype = n(Ja.prototype, {
                show: function(a, b, c, d, e, f) {
                    null == f && (f = !0);
                    null == e && (e = !0);
                    null == d && (d = !0);
                    null == c && (c = "");
                    null == b && (b = "");
                    this.set_visible(!0);
                    this.set_active(!0);
                    this.set_x(0);
                    this.set_y(0);
                    this._bkg.set_x(0);
                    this._bkg.set_y(0);
                    this._arrow.set_x(0);
                    this._arrow.set_y(0);
                    this._arrowBkg.set_x(0);
                    this._arrowBkg.set_y(0);
                    this._arrowBkg = this.makeArrowBkg(this._arrowBkg);
                    this._arrow.set_color(this.style.background);
                    this._arrow.set_visible(this._arrowBkg.set_visible(f));
                    0 < this.style.titleWidth && this._titleText.set_width(this._titleText.textField.set_width(this.style.titleWidth) |
                        0);
                    0 < this.style.bodyWidth && this._bodyText.set_width(this._bodyText.textField.set_width(this.style.bodyWidth) | 0);
                    null != this.style.titleFormat && this.style.titleFormat.apply(null, this._titleText);
                    null != this.style.bodyFormat && this.style.bodyFormat.apply(null, this._bodyText);
                    null != this.style.titleBorder && this.style.titleBorder.apply(this._titleText);
                    null != this.style.bodyBorder && this.style.bodyBorder.apply(this._bodyText);
                    this._titleText.set_text(b);
                    this._bodyText.set_text(c);
                    this._titleText.update(0);
                    this._bodyText.update(0);
                    b = this._titleText.textField.get_textHeight() + 4 | 0;
                    null != this.style.titleOffset && (this._titleText.set_x(this.style.titleOffset.x | 0), this._titleText.set_y(this.style.titleOffset.y | 0));
                    null != this.style.bodyOffset && (this._bodyText.set_x(this.style.bodyOffset.x | 0), this._bodyText.set_y(this._titleText.y + b + this.style.bodyOffset.y | 0));
                    f = this._bkg.get_width() | 0;
                    c = this._bkg.get_height() | 0;
                    e && (e = "" != this._titleText.text ? this._titleText.x + this._titleText.get_width() : 0, f = "" != this._bodyText.text ?
                        this._bodyText.x + this._bodyText.get_width() : 0, f = Math.max(e, f) | 0);
                    d && (c = "" != this._titleText.text ? this._titleText.y + this._titleText.get_height() : 0, d = "" != this._bodyText.text ? this._bodyText.y + this._bodyText.get_height() : 0, c = Math.max(c, d) | 0, c = Math.max(c, this._arrowBkg.get_height()) | 0);
                    null == this.style.leftPadding && (this.style.leftPadding = 0);
                    null == this.style.rightPadding && (this.style.rightPadding = 0);
                    null == this.style.topPadding && (this.style.topPadding = 0);
                    null == this.style.bottomPadding && (this.style.bottomPadding =
                        0);
                    f += this.style.leftPadding + this.style.rightPadding;
                    c += this.style.topPadding + this.style.bottomPadding;
                    c |= 0;
                    this.refreshBkg(f | 0, c, this.style);
                    d = this._anchorArrow.x.offset | 0;
                    e = this._anchorArrow.y.offset | 0;
                    this._anchorArrow.x.offset -= this.anchor.x.offset;
                    this._anchorArrow.y.offset += this.anchor.y.offset;
                    this._anchorArrow.x.offset |= 0;
                    this._anchorArrow.y.offset |= 0;
                    this._anchorArrow.anchorThing(this._arrow, this._bkg);
                    this._anchorArrow.x.offset = d;
                    this._anchorArrow.y.offset = e;
                    0 > this._arrow.x && (e = Math.abs(this._arrow.x) |
                        0, d = this._bkg, d.set_x(d.x + e), d = this._titleText, d.set_x(d.x + e), d = this._bodyText, d.set_x(d.x + e), this._arrow.set_x(0));
                    0 > this._arrow.y && (e = Math.abs(this._arrow.y) | 0, d = this._bkg, d.set_y(d.y + e), d = this._titleText, d.set_y(d.y + e), d = this._bodyText, d.set_y(d.y + e), this._arrow.set_y(0));
                    "" != this._titleText.text && "" == this._bodyText.text && (c -= this.style.topPadding + this.style.bottomPadding, d = this._titleText, d.set_y(d.y + ((c - b) / 2 | 0)));
                    d = this._titleText;
                    d.set_x(d.x + this.style.leftPadding);
                    d = this._bodyText;
                    d.set_x(d.x +
                        this.style.leftPadding);
                    d = this._titleText;
                    d.set_y(d.y + this.style.topPadding);
                    d = this._bodyText;
                    d.set_y(d.y + this.style.topPadding);
                    "" == this._titleText.text && (this._titleText.set_x(this._bkg.x), this._titleText.set_y(this._bkg.y), this._titleText.set_width(this._bkg.get_width()));
                    "" == this._bodyText.text && (this._bodyText.set_x(this._bkg.x), this._bodyText.set_y(this._bkg.y), this._bodyText.set_width(this._bkg.get_width()));
                    this.anchor.anchorThing(this, a);
                    this.set_x(this.x | 0);
                    this.set_y(this.y | 0);
                    this._arrowBkg.set_x(this._arrow.x -
                        this.style.borderSize | 0);
                    this._arrowBkg.set_y(this._arrow.y - this.style.borderSize | 0);
                    this._titleText.set_x(this._titleText.x | 0);
                    this._bodyText.set_x(this._bodyText.x | 0);
                    this._bkg.set_x(this._bkg.x | 0);
                    this._bkg.set_y(this._bkg.y | 0);
                    this._arrowBkg.set_x(this._arrowBkg.x | 0);
                    this._arrowBkg.set_y(this._arrowBkg.y | 0);
                    this._arrow.set_x(this._arrow.x | 0);
                    this._arrow.set_y(this._arrow.y | 0)
                },
                get_height: function() {
                    if (0 == this.group.length) return 0;
                    for (var a = Infinity, b = -Infinity, c = 0, d = this._sprites; c < d.length;) {
                        var e =
                            d[c];
                        ++c;
                        if (null != e && !(e instanceof Fb)) {
                            var f = e.y;
                            e = f + e.get_height();
                            e > b && (b = e);
                            f < a && (a = f)
                        }
                    }
                    return b - a
                },
                hide: function() {
                    this.set_visible(!1);
                    this.set_active(!1)
                },
                set_anchor: function(a) {
                    this.anchor = a;
                    this._anchorArrow = this.getArrowAnchor(a, this._anchorArrow);
                    null != this._arrowBkg && this.makeArrowBkg(this._arrowBkg);
                    return a
                },
                set_style: function(a) {
                    return this.style = a
                },
                refresh: function(a, b, c, d, e, f) {
                    var k = null == this._bkg,
                        p = null == this._arrow,
                        m = null == this._titleText,
                        h = null == this._bodyText;
                    k && (this._bkg =
                        new G);
                    p && (this._arrow = new G);
                    m && (this._titleText = new Uc(0, 0, a), null != f.titleFormat && f.titleFormat.apply(null, this._titleText), null != f.titleBorder && f.titleBorder.apply(this._titleText));
                    h && (this._bodyText = new Uc(0, 0, a), null != f.bodyFormat && f.bodyFormat.apply(null, this._bodyText), null != f.bodyBorder && f.bodyBorder.apply(this._bodyText));
                    this._titleText.set_text(c);
                    this._bodyText.set_text(d);
                    this._arrow.set_color(f.background);
                    c = q.bitmap.add(f.arrow);
                    null == f.arrow && (f.arrow = "flixel/flixel-ui/img/tooltip_arrow.png",
                        q.bitmap.add(f.arrow));
                    this._arrow.loadGraphic(f.arrow, !0, c.height, c.height);
                    p && (this._arrow.animation.add("right", [0], 0, !1), this._arrow.animation.add("down", [1], 0, !1), this._arrow.animation.add("left", [2], 0, !1), this._arrow.animation.add("up", [3], 0, !1));
                    this.refreshBkg(a, b, f);
                    this.set_style(f);
                    p && 0 < f.borderSize && (this._arrowBkg = new G, this.add(this._arrowBkg));
                    this.set_anchor(e);
                    k && this.add(this._bkg);
                    p && this.add(this._arrow);
                    m && this.add(this._titleText);
                    h && this.add(this._bodyText)
                },
                refreshBkg: function(a,
                    b, c) {
                    var d = this.getStyleKey(a, b, c);
                    if (null == q.bitmap._cache.h[d]) {
                        if (0 < c.borderSize) {
                            var e = new H(a, b, !1, c.borderColor);
                            e.fillRect(new fa(c.borderSize, c.borderSize, a - 2 * c.borderSize, b - 2 * c.borderSize), c.background)
                        } else e = new H(a, b, !1, c.background);
                        q.bitmap.add(e, !0, d)
                    }
                    this._bkg.loadGraphic(d)
                },
                getStyleKey: function(a, b, c) {
                    var d = c.background;
                    a = a + "," + b + "," + ("0x" + K.hex(d >> 24 & 255, 2) + K.hex(d >> 16 & 255, 2) + K.hex(d >> 8 & 255, 2) + K.hex(d & 255, 2)) + "," + c.borderSize + ",";
                    d = c.borderColor;
                    return a + ("0x" + K.hex(d >> 24 & 255, 2) +
                        K.hex(d >> 16 & 255, 2) + K.hex(d >> 8 & 255, 2) + K.hex(d & 255, 2))
                },
                makeArrowBkg: function(a) {
                    null == a && (a = new G);
                    var b = "arrowBkg:" + this.style.background + "," + this.style.borderSize + "," + this.style.borderColor + "," + (null == this._arrow ? "null" : null == this._arrow.animation._curAnim ? "null" : this._arrow.animation._curAnim.name);
                    if (null == q.bitmap._cache.h[b]) {
                        var c = this.style.borderSize;
                        if (0 > c || null == c) c = 0;
                        var d = this._arrow.get_width() + c | 0;
                        c = this._arrow.get_height() + c | 0;
                        d = new H(d, c, !0, 0);
                        q.bitmap.add(d, !1, b);
                        a.loadGraphic(b);
                        d = this._arrow.color;
                        this._arrow.set_color(this.style.borderColor);
                        (new xa).identity();
                        a.stamp(this._arrow, 0 * this.style.borderSize, 0 * this.style.borderSize);
                        a.stamp(this._arrow, this.style.borderSize, 0 * this.style.borderSize);
                        a.stamp(this._arrow, 2 * this.style.borderSize, 0 * this.style.borderSize);
                        a.stamp(this._arrow, 0 * this.style.borderSize, this.style.borderSize);
                        a.stamp(this._arrow, 2 * this.style.borderSize, this.style.borderSize);
                        a.stamp(this._arrow, 0 * this.style.borderSize, 2 * this.style.borderSize);
                        a.stamp(this._arrow,
                            this.style.borderSize, 2 * this.style.borderSize);
                        a.stamp(this._arrow, 2 * this.style.borderSize, 2 * this.style.borderSize);
                        this._arrow.set_color(d)
                    }
                    a.loadGraphic(b);
                    return a
                },
                getArrowAnchor: function(a, b) {
                    var c = "left" == a.x.side && "right" == a.x.flush || "right" == a.x.side && "left" == a.x.flush,
                        d = "top" == a.y.side && "bottom" == a.y.flush || "bottom" == a.y.side && "top" == a.y.flush,
                        e = "left" == a.x.side && "left" == a.x.flush || "right" == a.x.side && "right" == a.x.flush,
                        f = "top" == a.y.side && "top" == a.y.flush || "bottom" == a.y.side && "bottom" == a.y.flush,
                        k = e && f,
                        p = this.style.borderSize;
                    c && d || (c && (b = a.getFlipped(!0, !1, b), "left" == b.x.flush && (b.x.offset -= p, this._arrow.animation.play("right")), "right" == b.x.flush && (b.x.offset += p, this._arrow.animation.play("left"))), d && (b = a.getFlipped(!1, !0, b), "top" == b.y.flush && (b.y.offset -= p, this._arrow.animation.play("down")), "bottom" == b.y.flush && (b.y.offset += p, this._arrow.animation.play("up"))));
                    k || (e && ("left" == b.x.flush && (b.x.offset += p), "right" == b.x.flush && (b.x.offset -= p)), f && ("top" == b.y.flush && (b.y.offset += p), "bottom" ==
                        b.y.flush && (b.y.offset -= p)));
                    return null != b ? b : a
                },
                __class__: Qc,
                __properties__: n(Ja.prototype.__properties__, {
                    set_anchor: "set_anchor",
                    set_style: "set_style"
                })
            });
            var Wg = function(a, b) {
                this.current = -1;
                this._init = !1;
                this.delay = .1;
                this.defaultAnchor = this.fixedPosition = this.defaultStyle = null;
                this.autoFlipAnchor = !0;
                null != a ? this.state = a : null != b && (this.subState = b);
                this.list = [];
                this.tooltip = new Qc(100, 50);
                this.lastPosition = new X(0, 0);
                this.defaultAnchor = this.tooltip.anchor.clone();
                this.defaultStyle = Qc.cloneStyle(this.tooltip.style)
            };
            g["flixel.addons.ui.FlxUITooltipManager"] = Wg;
            Wg.__name__ = "flixel.addons.ui.FlxUITooltipManager";
            Wg.__interfaces__ = [L];
            Wg.prototype = {
                init: function() {
                    var a = null != this.state ? this.state._ui : null != this.subState ? this.subState._ui : null;
                    null != a && null != a && null != a.getDefinition("default:tooltip") && (a = a._loadTooltipData(null), this.defaultStyle = Qc.cloneStyle(a.style), this.tooltip.set_style(this.defaultStyle))
                },
                destroy: function() {
                    V.destroyArray(this.list);
                    this.defaultStyle = this.defaultAnchor = this.subState = this.state =
                        this.lastPosition = this.tooltip = this.list = null
                },
                add: function(a, b) {
                    this._init && (b.style = Qc.styleFix(b.style, this.defaultStyle));
                    if (oa.__implements(a, zf)) {
                        var c = a;
                        var d = this.findBtn(c); - 1 == d ? this.list.push(new qh(c, b)) : (this.list[d].data = b, this.list[d].count = 0)
                    } else d = this.findObj(a), -1 == d ? (c = new Pc(0, 0, "", null, !1, !0), c.resize(a.get_width(), a.get_height()), c.set_x(a.x), c.set_y(a.y), c.set_width(a.get_width()), c.set_height(a.get_height()), c.scrollFactor.set(a.scrollFactor.x, a.scrollFactor.y), null != this.state ?
                        this.state.add(c) : null != this.subState && this.subState.add(c), this.list.push(new qh(c, b, a))) : (this.list[d].data = b, this.list[d].count = 0, this.list[d].btn.set_x(a.x), this.list[d].btn.set_y(a.y), this.list[d].btn.set_width(a.get_width()), this.list[d].btn.set_height(a.get_height()), this.list[d].btn.scrollFactor.set(a.scrollFactor.x, a.scrollFactor.y))
                },
                update: function(a) {
                    for (var b = 0, c = this.list.length; b < c;) {
                        var d = b++,
                            e = this.list[d].btn,
                            f = this.list[d].obj;
                        if (0 == this.list[d].enabled) this.current == d && this.hide(d),
                            this.list[d].count = 0;
                        else if (null != f && (e.set_x(f.x), e.set_y(f.y), e.set_width(f.get_width()), e.set_height(f.get_height()), e.set_visible(f.visible)), 0 == this.list[d].sticky && (0 == e.visible || e.get_justMousedOut() || e.get_mouseIsOut()) ? (this.list[d].count = 0, this.hide(d)) : (e.get_justMousedOver() || e.get_mouseIsOver()) && e.get_mouseIsOver() && (this.list[d].count += a), this.list[d].count > this.delay || 0 <= this.list[d].data.delay && this.list[d].count > this.list[d].data.delay) this.current != d ? this.show(d) : this.list[d].data.moving &&
                            this.show(d)
                    }
                },
                hide: function(a) {
                    this.current == a && (this.tooltip.hide(), null != this.state && this.state.remove(this.tooltip, !0), null != this.subState && this.subState.remove(this.tooltip, !0), this.current = -1)
                },
                findBtn: function(a) {
                    if (null == a) return -1;
                    for (var b = 0, c = this.list.length; b < c;) {
                        var d = b++;
                        if (null != this.list[d] && this.list[d].btn == a) return d
                    }
                    return -1
                },
                findObj: function(a) {
                    if (null == a) return -1;
                    for (var b = 0, c = this.list.length; b < c;) {
                        var d = b++;
                        if (null != this.list[d] && this.list[d].obj == a) return d
                    }
                    return -1
                },
                show: function(a) {
                    if (!(0 >
                            a || a >= this.list.length)) {
                        var b = this.list[a].btn;
                        if (0 != b.visible && (null == this.list[a].obj || 0 != this.list[a].obj.visible))
                            if (this.current == a) {
                                a = b.x - this.lastPosition.x;
                                var c = b.y - this.lastPosition.y;
                                this.lastPosition.set_x(b.x);
                                this.lastPosition.set_y(b.y);
                                b = this.tooltip;
                                b.set_x(b.x + a);
                                b = this.tooltip;
                                b.set_y(b.y + c)
                            } else {
                                this.current = a;
                                a = this.list[a].data;
                                1 != a.init && (a.style = Qc.styleFix(a.style, this.defaultStyle), a.init = !0);
                                var d = c = !0;
                                null != a.style && (this.tooltip.set_style(a.style), c = a.style.autoSizeVertical,
                                    d = a.style.autoSizeHorizontal);
                                null != a.anchor ? this.tooltip.set_anchor(a.anchor) : null != this.defaultAnchor && this.tooltip.set_anchor(this.defaultAnchor);
                                null != this.state && this.state.add(this.tooltip);
                                null != this.subState && this.subState.add(this.tooltip);
                                this.tooltip.show(b, a.title, a.body, c, d);
                                null != this.fixedPosition && this.fixedPosition.anchor.anchorThing(this.tooltip, this.fixedPosition.object);
                                this.autoFlipAnchor && this.checkAutoFlip(this.tooltip, null != this.fixedPosition ? this.fixedPosition.anchor : null) &&
                                    (null != this.fixedPosition ? this.fixedPosition.anchor.anchorThing(this.tooltip, this.fixedPosition.object) : this.tooltip.show(b, a.title, a.body, c, d, this.showTooltipArrow));
                                this.lastPosition.set(b.x, b.y);
                                if (null != this.state) this.state.onShowTooltip(this.tooltip);
                                else if (null != this.subState) this.subState.onShowTooltip(this.tooltip)
                            }
                    }
                },
                checkAutoFlip: function(a, b) {
                    var c = 0 > a.x || a.x + a.get_width() > q.width,
                        d = 0 > a.y || a.y + a.get_height() > q.height;
                    return c || d ? (null == b && (b = a.anchor), b.getFlipped(c, d, b), !0) : !1
                },
                __class__: Wg
            };
            var qh = function(a, b, c) {
                this.sticky = !1;
                this.btn = a;
                this.data = b;
                this.obj = c;
                this.count = 0;
                this.enabled = !0;
                null != this.data && (null == this.data.delay && (this.data.delay = -1), null == this.data.moving && (this.data.moving = !1))
            };
            g["flixel.addons.ui._FlxUITooltipManager.FlxUITooltipEntry"] = qh;
            qh.__name__ = "flixel.addons.ui._FlxUITooltipManager.FlxUITooltipEntry";
            qh.__interfaces__ = [L];
            qh.prototype = {
                destroy: function() {
                    this.count = 0;
                    this.btn = this.obj = null;
                    this.data.anchor = null;
                    this.data = this.data.style = null
                },
                __class__: qh
            };
            var oc = function(a, b, c, d, e) {
                null == c && (c = "");
                null == b && (b = ".ttf");
                this._size = 0;
                this.name = a;
                this.extension = b;
                this.file = c;
                this.format = d;
                null == this.format && (this.format = new nc);
                this.border = e;
                null == this.border && (this.border = new Md(Oc.NONE, 0))
            };
            g["flixel.addons.ui.FontDef"] = oc;
            oc.__name__ = "flixel.addons.ui.FontDef";
            oc.copyFromTextField = function(a) {
                a = a.get_defaultTextFormat();
                var b = new oc("");
                b.fromStr(a.font);
                b.format.font = a.font;
                b.format.size = a.size;
                b.format.color = a.color;
                b.format.bold = a.bold;
                b.format.italic =
                    a.italic;
                b.format.underline = a.underline;
                b.format.url = a.url;
                b.format.letterSpacing = a.letterSpacing;
                b.format.leading = a.leading;
                b.format.target = a.target;
                b.format.align = a.align;
                return b
            };
            oc.copyFromFlxText = function(a) {
                var b = oc.copyFromTextField(a.textField);
                b.fromStr(a._font);
                b.border.style = a.borderStyle;
                b.border.color = a.borderColor;
                b.border.quality = a.borderQuality;
                b.border.size = a.borderSize;
                return b
            };
            oc.fromXML = function(a) {
                var b = y.xml_str(a, "font"),
                    c = y.xml_str(a, "style"),
                    d = null;
                "" != b && (d = Qa.font(b, c));
                c = y.xml_str(a, "style");
                b = Qa.fontSize(d, y.xml_i(a, "size", 8));
                var e = y.xml_color(a, "color", !0, -1);
                switch (y.xml_str(a, "align").toLowerCase()) {
                    case "center":
                        var f = 0;
                        break;
                    case "justify":
                        f = 2;
                        break;
                    case "left":
                        f = 3;
                        break;
                    case "right":
                        f = 4;
                        break;
                    default:
                        f = 3
                }
                d = new oc(y.xml_str(a, "font"), ".ttf", d);
                d.format.color = e;
                d.format.size = b;
                d.format.align = f;
                d.set_size(b);
                d.setFontStyle(c);
                d.border = Md.fromXML(a);
                return d
            };
            oc.prototype = {
                get_size: function() {
                    null != this.format && (this._size = this.format.size | 0);
                    return this._size
                },
                set_size: function(a) {
                    null != this.format && (this.format.size = a);
                    return this._size = a
                },
                clone: function() {
                    var a = null == this.border ? null : this.border.clone(),
                        b = null == this.format ? null : new nc(this.format.font, this.format.size, this.format.color, this.format.bold, this.format.italic, this.format.underline, this.format.url, this.format.target, this.format.align, this.format.leftMargin, this.format.rightMargin, this.format.indent, this.format.leading);
                    null != this.format && (b.letterSpacing = this.format.letterSpacing);
                    a = new oc(this.name,
                        this.extension, this.file, b, a);
                    a.set_size(this.get_size());
                    return a
                },
                applyFlx: function(a) {
                    var b = null;
                    if (null != this.format.align) switch (this.format.align) {
                        case 0:
                            b = "center";
                            break;
                        case 2:
                            b = "justify";
                            break;
                        case 3:
                            b = "left";
                            break;
                        case 4:
                            b = "right";
                            break;
                        default:
                            b = "left"
                    }
                    a.setFormat("" == this.file || null == this.file ? null : this.file, this.format.size | 0, this.format.color, b, this.border.style, this.border.color);
                    a.textField.get_defaultTextFormat().leading = this.format.leading;
                    a.textField.get_defaultTextFormat().letterSpacing =
                        this.format.letterSpacing;
                    return a
                },
                apply: function(a, b) {
                    null != a && a.setTextFormat(this.format);
                    null != b && this.applyFlx(b)
                },
                fromStr: function(a, b) {
                    null == b && (b = 0);
                    if (!(3 < b)) {
                        a = gd.fix(a);
                        var c = this.getFontStyle(a);
                        this.setFontStyle(c);
                        for (var d = "", e = 0, f = oc.EXTENSIONS; e < f.length;) {
                            var k = f[e];
                            ++e;
                            if (-1 != a.indexOf(k) && ta.exists(a + d, "FONT")) {
                                this.name = K.replace(a, d, "");
                                this.file = a;
                                d = k;
                                break
                            }
                        }
                        if ("" == d) {
                            e = 0;
                            for (f = oc.EXTENSIONS; e < f.length;)
                                if (k = f[e], ++e, ta.exists(a + k, "FONT")) {
                                    d = k;
                                    this.name = a;
                                    this.file = a + d;
                                    break
                                }
                            this.setFontStyle(c)
                        } else a =
                            this.stripFontExtensions(a), "" != this.getFontStyle(a) && (a = Y.substr(a, a.length - 1, 1)), this.fromStr(a, b + 1)
                    }
                },
                stripFontExtensions: function(a) {
                    if (null == a) return a;
                    for (var b = 0, c = oc.EXTENSIONS; b < c.length;) {
                        var d = c[b];
                        ++b;
                        null != a && -1 != a.indexOf(d) && (a = K.replace(a, d, ""))
                    }
                    return a
                },
                getFontExtension: function(a) {
                    if (null == a) return "";
                    for (var b = 0, c = oc.EXTENSIONS; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (-1 != a.indexOf(d)) return d
                    }
                    return a
                },
                fixFontName: function() {
                    var a = this.getFontStyle(this.file),
                        b = this.getFontExtension(this.file),
                        c = this.stripFontExtensions(this.file);
                    "" != a && (c = Y.substr(c, 0, c.length - 1));
                    a = "";
                    this.format.bold && this.format.italic ? a = "z" : this.format.bold ? a = "b" : this.format.italic && (a = "i");
                    this.file = c + a + b
                },
                getFontStyle: function(a) {
                    if (null == a) return "";
                    a = this.stripFontExtensions(a);
                    a = Y.substr(a, a.length - 1, 1);
                    if ("" != a && null != a) switch (a = a.toLowerCase(), a) {
                        case "b":
                            return "b";
                        case "i":
                            return "i";
                        case "z":
                            return "z"
                    }
                    return ""
                },
                setFontStyle: function(a) {
                    a = a.toLowerCase();
                    switch (a) {
                        case "b":
                        case "bold":
                            this.format.bold = !0;
                            this.format.italic = !1;
                            break;
                        case "all":
                        case "bi":
                        case "bold-italic":
                        case "bolditalic":
                        case "both":
                        case "ib":
                        case "italicbold":
                        case "z":
                            this.format.bold = !0;
                            this.format.italic = !0;
                            break;
                        case "i":
                        case "italic":
                            this.format.bold = !1;
                            this.format.italic = !0;
                            break;
                        default:
                            this.format.bold = !1, this.format.italic = !1
                    }
                    this.fixFontName()
                },
                __class__: oc,
                __properties__: {
                    set_size: "set_size",
                    get_size: "get_size"
                }
            };
            var gd = function() {};
            g["flixel.addons.ui.FontFixer"] = gd;
            gd.__name__ = "flixel.addons.ui.FontFixer";
            gd.init = function() {
                null == gd.name2File &&
                    (gd.name2File = new aa)
            };
            gd.fix = function(a) {
                gd.init(); - 1 == a.indexOf(".ttf") && Object.prototype.hasOwnProperty.call(gd.name2File.h, a) && (a = gd.name2File.h[a]);
                return a
            };
            gd.add = function(a, b) {
                null == b && (b = "");
                gd.init();
                if ("" != b && Object.prototype.hasOwnProperty.call(gd.name2File.h, b)) return gd.name2File.h[b];
                if (!ta.exists(a, "FONT")) return a;
                var c = ta.getFont(a);
                if (null == c) return a;
                "" == b && (b = c.name);
                gd.name2File.h[b] = a;
                return gd.fix(a)
            };
            var Ek = function(a, b) {
                null == b && (b = "");
                null == a && (a = "");
                this.name = a;
                this.label =
                    b
            };
            g["flixel.addons.ui.StrNameLabel"] = Ek;
            Ek.__name__ = "flixel.addons.ui.StrNameLabel";
            Ek.prototype = {
                __class__: Ek
            };
            var y = function() {};
            g["flixel.addons.ui.U"] = y;
            y.__name__ = "flixel.addons.ui.U";
            y.xml_str = function(a, b, c, d) {
                null == d && (d = "");
                null == c && (c = !1);
                return null != a.get(b) ? c ? a.get(b).toLowerCase() : a.get(b) : d
            };
            y.xml_name = function(a) {
                var b = y.xml_str(a, "name", !0, "");
                "" == b && (b = y.xml_str(a, "id", !0, ""));
                return b
            };
            y.xml_color = function(a, b, c, d) {
                c = null;
                a = y.xml_str(a, b, !0);
                if ("" != a) {
                    b = Pb.fromString(a);
                    if (null ==
                        b) throw F.thrown("U.parseHex() unable to parse hex String " + a);
                    c = b
                }
                null == c && null != d && (c = d);
                return c
            };
            y.xml_strArray = function(a, b, c, d) {
                null == c && (c = !0);
                a = y.xml_str(a, b, c);
                return "" != a ? a.split(",") : d
            };
            y.xml_colorArray = function(a, b, c) {
                a = y.xml_strArray(a, b);
                b = null;
                if (null != a && 0 < a.length) {
                    b = [];
                    c = 0;
                    for (var d = a.length; c < d;) {
                        var e = c++,
                            f = a[e],
                            k = Pb.fromString(f);
                        if (null == k) throw F.thrown("U.parseHex() unable to parse hex String " + f);
                        b[e] = k
                    }
                }
                return b
            };
            y.perc_to_float = function(a) {
                if (a.lastIndexOf("%") == a.length -
                    1) {
                    a = Y.substr(a, 0, a.length - 1);
                    var b = new ya("([0-9]+)?(\\.)?([0-9]*)?", "");
                    if (b.match(a) && (b = b.matchedPos(), 0 == b.pos && b.len == a.length)) return parseFloat(a) / 100
                }
                return NaN
            };
            y.isStrNum = function(a) {
                if (null == a || "" == a) return !1;
                var b = new ya("-?([0-9]+)?(\\.)?([0-9]*)?", "");
                return b.match(a) && (b = b.matchedPos(), 0 == b.pos && b.len == a.length) ? !0 : !1
            };
            y.xml_f = function(a, b, c) {
                null == c && (c = 0);
                return null != a.get(b) ? parseFloat(a.get(b)) : c
            };
            y.xml_i = function(a, b, c) {
                null == c && (c = 0);
                return null != a.get(b) ? I.parseInt(a.get(b)) :
                    c
            };
            y.xml_pt = function(a, b, c) {
                return null != a.get(b) ? y.pointify(a.get(b)) : c
            };
            y.boolify = function(a) {
                a = a.toLowerCase();
                return "true" == a || "1" == a ? !0 : !1
            };
            y.pointify = function(a) {
                var b = null;
                if (null != a) {
                    for (var c = ["(", ")", " ", "=", ":"], d = 0; d < c.length;) {
                        var e = c[d];
                        for (++d; - 1 != a.indexOf(e);) a = K.replace(a, e, "")
                    } - 1 == a.indexOf(",") && -1 != a.indexOf("x") && (a = K.replace(a, "x", ","));
                    c = a.split(",");
                    2 == c.length && (b = new X(parseFloat(c[0]), parseFloat(c[1])))
                }
                return b
            };
            y.compareStringVars = function(a, b, c, d) {
                null == d && (d = "==");
                switch (c) {
                    case "bool":
                        a = y.boolify(a);
                        b = y.boolify(b);
                        if ("==" == d || "=" == d) return a == b;
                        if ("!==" == d || "!=" == d) return a != b;
                        break;
                    case "float":
                        a = parseFloat(a);
                        b = parseFloat(b);
                        if ("==" == d || "=" == d) return a == b;
                        if ("!==" == d || "!=" == d) return a != b;
                        if ("<" == d) return a < b;
                        if (">" == d) return a > b;
                        if ("<=" == d) return a <= b;
                        if (">=" == d) return a >= b;
                        break;
                    case "int":
                        a = I.parseInt(a);
                        b = I.parseInt(b);
                        if ("==" == d || "=" == d) return a == b;
                        if ("!==" == d || "!=" == d) return a != b;
                        if ("<" == d) return a < b;
                        if (">" == d) return a > b;
                        if ("<=" == d) return a <= b;
                        if (">=" ==
                            d) return a >= b;
                        break;
                    case "string":
                        if ("==" == d || "=" == d) return a == b;
                        if ("!==" == d || "!=" == d) return a != b
                }
                return !1
            };
            y.xml_bool = function(a, b, c) {
                null == c && (c = !1);
                return null != a.get(b) ? (a = a.get(b), a = a.toLowerCase(), "true" == a || "1" == a ? !0 : !1) : c
            };
            y.conformToBounds = function(a, b) {
                null != b && (a.x < b.min_width && (a.x = b.min_width), a.y < b.min_height && (a.y = b.min_height), a.x > b.max_width && (a.x = b.max_width), a.x > b.max_height && (a.y = b.max_height));
                return a
            };
            y.applyResize = function(a, b, c, d, e) {
                null == e && (e = new X);
                0 < a && 1E-4 < Math.abs(c /
                    d - a) && (1 == b ? d = 1 / a * c : c = 1 / a * d);
                1 > (c | 0) && (c = 1);
                1 > (d | 0) && (d = 1);
                e.set(c, d);
                return e
            };
            y.xml = function(a, b, c, d) {
                null == d && (d = "assets/xml/");
                null == c && (c = !0);
                null == b && (b = "xml");
                if (0 == a.indexOf("raw:") || 0 == a.indexOf("RAW:")) a = Y.substr(a, 4, a.length - 4), d = "";
                if (!ta.exists(d + a + "." + b, "TEXT")) return null;
                a = ta.getText(d + a + "." + b);
                if (null == a) return null;
                a = S.parse(a);
                if (c) {
                    c = a.firstElement();
                    if (c.nodeType != S.Document && c.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                    return c
                }
                return a.firstElement()
            };
            y.clearArraySoft = function(a) {
                if (null != a)
                    for (var b = a.length - 1; 0 <= b;) a[b] = null, a.splice(b, 1), --b
            };
            y.clearArray = function(a) {
                if (null != a)
                    for (var b = a.length - 1; 0 <= b;) y.destroyThing(a[b]), a[b] = null, a.splice(b, 1), --b
            };
            y.destroyThing = function(a) {
                null != a && (a instanceof Array ? y.clearArray(a) : oa.__implements(a, L) ? oa.__cast(a, L).destroy() : a instanceof J && oa.__cast(a, J).destroy())
            };
            y.font = function(a, b, c) {
                null == c && (c = ".ttf");
                null == b && (b = "");
                var d = a,
                    e = b;
                null == e && (e = "");
                e = e.toLowerCase();
                var f = "";
                switch (e) {
                    case "b":
                    case "bold":
                        f = "b";
                        break;
                    case "bi":
                    case "bold-italic":
                    case "boldi":
                    case "bolditalic":
                    case "ib":
                    case "ibold":
                    case "italic-bold":
                    case "italicbold":
                    case "z":
                        f = "z";
                        break;
                    case "i":
                    case "italic":
                        f = "i";
                        break;
                    case "":
                    case "none":
                    case "normal":
                    case "regular":
                        f = ""
                }
                a = 0 != a.indexOf("assets/fonts/") ? "assets/fonts/" + a + f : a + f; - 1 == a.indexOf(c) && (a += c);
                a = gd.add(a);
                return !ta.exists(a, "FONT") && ".ttf" == c && (b = y.font(d, b, ".otf"), ta.exists(b, "FONT")) ? b : a
            };
            y.FU = function(a) {
                return Y.substr(a, 0, 1).toUpperCase() +
                    Y.substr(a, 1, a.length - 1)
            };
            y.getBmp = function(a) {
                var b = null;
                if ("string" == typeof a) b = a;
                else if (a instanceof zb) b = a.key;
                else if (a instanceof H) return a;
                return null != q.bitmap._cache.h[b] && (a = q.bitmap._cache.h[b], null != a.bitmap) ? a.bitmap : ta.getBitmapData(b, !1)
            };
            y.checkHaxedef = function(a) {
                a = a.toLowerCase();
                switch (a) {
                    case "html5":
                        return !0;
                    case "js":
                        return !0;
                    case "lime_next":
                    case "next":
                        return !0;
                    case "web":
                        return !0
                }
                return !1
            };
            y.FU_ = function(a) {
                var b = a.split(" ");
                a = "";
                for (var c = 0, d = b.length; c < d;) {
                    var e = c++;
                    a += y.FU(b[e]);
                    e != b.length - 1 && (a += " ")
                }
                return a
            };
            y.scaleTileBmp = function(a, b, c, d, e, f, k) {
                null == k && (k = !0);
                null == f && (f = -1);
                null == e && (e = -1);
                var p = ta.getBitmapData(a, !1);
                if (null == p)
                    if (null != q.bitmap._cache.h[a]) p = q.bitmap._cache.h[a].bitmap;
                    else return null;
                a = p.width / c | 0;
                var m = p.height / d | 0; - 1 == e && (e = c * b | 0); - 1 == f && (f = d * b | 0, b = f / d);
                if (.001 < Math.abs(b - 1)) {
                    var h = new H(e * a | 0, f * m | 0, !0, 0),
                        g = new fa,
                        l = new La,
                        n = new xa;
                    n.scale(b, b);
                    for (b = 0; b < m;)
                        for (var r = b++, D = 0, w = a; D < w;) {
                            var x = D++,
                                u = new H(c, d, !0, 0);
                            g.setTo(x * c, r *
                                d, c, d);
                            l.setTo(0, 0);
                            u.copyPixels(p, g, l);
                            var B = new H(e, f, !0, 0);
                            B.draw(u, n, null, null, null, k);
                            l.setTo(x * e, r * f);
                            h.copyPixels(B, B.rect, l)
                        }
                    return h
                }
                return p.clone()
            };
            y.scaleAndStoreTileset = function(a, b, c, d, e, f, k) {
                null == k && (k = !0);
                null == f && (f = -1);
                null == e && (e = -1);
                var p = a + "_x" + b;
                null != q.bitmap._cache.h[p] == 0 && (a = y.scaleTileBmp(a, b, c, d, e, f, k), q.bitmap.add(a, !1, p));
                return p
            };
            y.loadScaledImage = function(a, b, c, d) {
                null == d && (d = !0);
                var e = y.gfx(a);
                a = ta.getBitmapData(e, !1);
                if (null != a) {
                    0 > b && (b = a.width);
                    0 > c && (c = a.height);
                    if (.01 < Math.abs(b - a.width) + Math.abs(c - a.height) && (e = e + "_" + (b | 0) + "x" + (c | 0), null == q.bitmap._cache.h[e])) {
                        var f = new H(b | 0, c | 0, !0, 0),
                            k = y.getMatrix();
                        k.identity();
                        k.scale(b / a.width, c / a.height);
                        f.draw(a, k, null, null, null, d);
                        q.bitmap.add(f, !0, e)
                    }
                    return e
                }
                return null
            };
            y.gfx = function(a, b, c, d, e, f) {
                null == e && (e = "");
                null == d && (d = "");
                null == c && (c = "");
                null == b && (b = "");
                null != a && (a = a.toLowerCase());
                f = "";
                "" != b && (f = b + "/", "" != c && (f += c + "/", "" != d && (f += d + "/", "" != e && (f += e + "/"))));
                "" != f && (a = f + a);
                0 != a.indexOf("raw:") && (a = K.replace(a,
                    "-", "_"));
                return y.get_gfx(a)
            };
            y.get_gfx = function(a) {
                var b = "";
                var c = -1 != a.indexOf(".jpg") ? ".jpg" : ".png";
                null != a && 4 < a.length && -1 != a.indexOf(c) && (a = Y.substr(a, 0, a.length - 4));
                if (0 == a.indexOf("raw:") || 0 == a.indexOf("RAW:")) a = Y.substr(a, 4, a.length - 4), b = a + c;
                null != a && 0 == a.indexOf("assets/gfx/") && (b = a + c);
                "" == b && (b = "assets/gfx/" + a + c); - 1 != b.indexOf(".stitch.txt" + c) && (b = K.replace(b, ".stitch.txt" + c, ".stitch.txt"));
                return b
            };
            y.unparentXML = function(a) {
                null != a.parent && a.parent.removeChild(a);
                return a
            };
            y.getMatrix =
                function() {
                    null == y._matrix && (y._matrix = new xa);
                    return y._matrix
                };
            var Fk = function() {};
            g["flixel.addons.ui.interfaces.IFireTongue"] = Fk;
            Fk.__name__ = "flixel.addons.ui.interfaces.IFireTongue";
            Fk.__isInterface__ = !0;
            Fk.prototype = {
                __class__: Fk
            };
            var Od = function(a, b) {
                this.curIndex = 0;
                this.parent = a;
                this.name = b
            };
            g["flixel.animation.FlxBaseAnimation"] = Od;
            Od.__name__ = "flixel.animation.FlxBaseAnimation";
            Od.__interfaces__ = [L];
            Od.prototype = {
                set_curIndex: function(a) {
                    this.curIndex = a;
                    null != this.parent && this.parent._curAnim ==
                        this && this.parent.set_frameIndex(a);
                    return a
                },
                destroy: function() {
                    this.name = this.parent = null
                },
                __class__: Od,
                __properties__: {
                    set_curIndex: "set_curIndex"
                }
            };
            var rg = function(a, b, c, d, e, f, k) {
                null == k && (k = !1);
                null == f && (f = !1);
                null == e && (e = !0);
                null == d && (d = 0);
                this._frameTimer = 0;
                this.reversed = this.flipX = this.flipY = !1;
                this.finished = this.paused = this.looped = !0;
                this.curFrame = this.delay = 0;
                Od.call(this, a, b);
                this.set_frameRate(d);
                this.frames = c;
                this.looped = e;
                this.flipX = f;
                this.flipY = k
            };
            g["flixel.animation.FlxAnimation"] =
                rg;
            rg.__name__ = "flixel.animation.FlxAnimation";
            rg.__super__ = Od;
            rg.prototype = n(Od.prototype, {
                destroy: function() {
                    this.name = this.frames = null;
                    Od.prototype.destroy.call(this)
                },
                play: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    null == a && (a = !1);
                    a || this.finished || this.reversed != b ? (this.reversed = b, this.paused = !1, this._frameTimer = 0, this.finished = 0 == this.delay, a = this.frames.length - 1, 0 > c ? this.set_curFrame(q.random.int(0, a)) : (c > a && (c = a), this.reversed && (c = a - c), this.set_curFrame(c)), this.finished && (c = this.parent,
                        null != c.finishCallback && c.finishCallback(this.name))) : this.finished = this.paused = !1
                },
                stop: function() {
                    this.paused = this.finished = !0
                },
                pause: function() {
                    this.paused = !0
                },
                update: function(a) {
                    if (0 != this.delay && !this.finished && !this.paused)
                        for (this._frameTimer += a; this._frameTimer > this.delay && !this.finished;) this._frameTimer -= this.delay, this.reversed ? this.looped && 0 == this.curFrame ? this.set_curFrame(this.frames.length - 1) : this.set_curFrame(this.curFrame - 1) : this.looped && this.curFrame == this.frames.length - 1 ? this.set_curFrame(0) :
                            this.set_curFrame(this.curFrame + 1)
                },
                set_frameRate: function(a) {
                    this.delay = 0;
                    this.frameRate = a;
                    0 < a && (this.delay = 1 / a);
                    return a
                },
                set_curFrame: function(a) {
                    var b = this.frames.length - 1;
                    0 <= (this.reversed ? b - a : a) ? !this.looped && a > b ? (this.finished = !0, this.curFrame = this.reversed ? 0 : b) : this.curFrame = a : this.curFrame = q.random.int(0, b);
                    this.set_curIndex(this.frames[this.curFrame]);
                    this.finished && null != this.parent && (b = this.parent, null != b.finishCallback && b.finishCallback(this.name));
                    return a
                },
                __class__: rg,
                __properties__: n(Od.prototype.__properties__, {
                    set_curFrame: "set_curFrame",
                    set_frameRate: "set_frameRate"
                })
            });
            var Qh = function(a) {
                this.frameIndex = -1;
                this._sprite = a;
                this._animations = new aa
            };
            g["flixel.animation.FlxAnimationController"] = Qh;
            Qh.__name__ = "flixel.animation.FlxAnimationController";
            Qh.__interfaces__ = [L];
            Qh.prototype = {
                update: function(a) {
                    null != this._curAnim ? this._curAnim.update(a) : null != this._prerotated && this._prerotated.set_angle(this._sprite.angle)
                },
                destroyAnimations: function() {
                    this.clearAnimations();
                    this.clearPrerotated()
                },
                destroy: function() {
                    this.destroyAnimations();
                    this._sprite = this.callback = this._animations = null
                },
                clearPrerotated: function() {
                    null != this._prerotated && this._prerotated.destroy();
                    this._prerotated = null
                },
                clearAnimations: function() {
                    if (null != this._animations)
                        for (var a, b = aa.keysIterator(this._animations.h); b.hasNext();) a = b.next(), a = this._animations.h[a], null != a && a.destroy();
                    this._animations = new aa;
                    this._curAnim = null
                },
                add: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == d && (d = !0);
                    null == c && (c = 30);
                    for (var k = b, p = k.length - 1; 0 <= p;) k[p] >= this._sprite.numFrames &&
                        (k == b && (k = b.slice()), k.splice(p, 1)), --p;
                    0 < k.length && (b = new rg(this, a, k, c, d, e, f), this._animations.h[a] = b)
                },
                addByIndices: function(a, b, c, d, e, f, k, p) {
                    null == p && (p = !1);
                    null == k && (k = !1);
                    null == f && (f = !0);
                    null == e && (e = 30);
                    if (null != this._sprite.frames) {
                        var m = [];
                        this.byIndicesHelper(m, b, c, d);
                        0 < m.length && (b = new rg(this, a, m, e, f, k, p), this._animations.h[a] = b)
                    }
                },
                findSpriteFrame: function(a, b, c) {
                    for (var d = this._sprite.frames.frames, e = 0, f = this._sprite.numFrames; e < f;) {
                        var k = e++,
                            p = d[k].name;
                        if (K.startsWith(p, a) && K.endsWith(p,
                                c) && (p = I.parseInt(p.substring(a.length, p.length - c.length)), null != p && p == b)) return k
                    }
                    return -1
                },
                addByPrefix: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == d && (d = !0);
                    null == c && (c = 30);
                    if (null != this._sprite.frames) {
                        var k = [];
                        this.findByPrefix(k, b);
                        if (0 < k.length) {
                            var p = [];
                            this.byPrefixHelper(p, k, b);
                            0 < p.length && (b = new rg(this, a, p, c, d, e, f), this._animations.h[a] = b)
                        }
                    }
                },
                play: function(a, b, c, d) {
                    null == d && (d = 0);
                    null == c && (c = !1);
                    null == b && (b = !1);
                    null == a && (null != this._curAnim && this._curAnim.stop(), this._curAnim =
                        null);
                    if (null != a && null != this._animations.h[a]) {
                        var e = !1,
                            f = !1;
                        null != this._curAnim && a != this._curAnim.name && (e = this._curAnim.flipX, f = this._curAnim.flipY, this._curAnim.stop());
                        this._curAnim = this._animations.h[a];
                        this._curAnim.play(b, c, d);
                        if (e != this._curAnim.flipX || f != this._curAnim.flipY) this._sprite.dirty = !0
                    }
                },
                byIndicesHelper: function(a, b, c, d) {
                    for (var e = 0; e < c.length;) {
                        var f = c[e];
                        ++e;
                        f = this.findSpriteFrame(b, f, d); - 1 != f && a.push(f)
                    }
                },
                byPrefixHelper: function(a, b, c) {
                    var d = b[0].name,
                        e = d.indexOf(".", c.length);
                    d = d.substring(-1 == e ? d.length : e, d.length);
                    re.sort(b, c.length, d.length);
                    for (c = 0; c < b.length;) d = b[c], ++c, a.push(this._sprite.frames.frames.indexOf(d))
                },
                findByPrefix: function(a, b) {
                    for (var c = 0, d = this._sprite.frames.frames; c < d.length;) {
                        var e = d[c];
                        ++c;
                        null != e.name && K.startsWith(e.name, b) && a.push(e)
                    }
                },
                set_frameIndex: function(a) {
                    null != this._sprite.frames && 0 < this._sprite.numFrames && (a %= this._sprite.numFrames, this._sprite.set_frame(this._sprite.frames.frames[a]), this.frameIndex = a, null != this.callback && this.callback(null !=
                        this._curAnim ? this._curAnim.name : null, null != this._curAnim ? this._curAnim.curFrame : this.frameIndex, this.frameIndex));
                    return this.frameIndex
                },
                __class__: Qh,
                __properties__: {
                    set_frameIndex: "set_frameIndex"
                }
            };
            var Gk = function(a, b) {
                this.angle = 0;
                Od.call(this, a, "prerotated_animation");
                this.baked = b;
                this.rotations = Math.round(360 / b)
            };
            g["flixel.animation.FlxPrerotatedAnimation"] = Gk;
            Gk.__name__ = "flixel.animation.FlxPrerotatedAnimation";
            Gk.__super__ = Od;
            Gk.prototype = n(Od.prototype, {
                set_angle: function(a) {
                    if (isNaN(a)) throw F.thrown("angle must not be NaN");
                    for (var b = this.curIndex, c = Math.floor(a % 360); 0 > c;) c += 360;
                    c = Math.floor(c / this.baked + .5);
                    c = c % this.rotations | 0;
                    b != c && this.set_curIndex(c);
                    return this.angle = a
                },
                set_curIndex: function(a) {
                    this.curIndex = a;
                    null != this.parent && this.parent.set_frameIndex(a);
                    return a
                },
                __class__: Gk,
                __properties__: n(Od.prototype.__properties__, {
                    set_angle: "set_angle"
                })
            });
            var zi = function(a) {
                this._count = 0;
                this._pool = [];
                this._class = a
            };
            g["flixel.util.FlxPool_flixel_effects_FlxFlicker"] = zi;
            zi.__name__ = "flixel.util.FlxPool_flixel_effects_FlxFlicker";
            zi.__interfaces__ = [nb];
            zi.prototype = {
                get: function() {
                    return 0 == this._count ? Ua.createInstance(this._class, []) : this._pool[--this._count]
                },
                put: function(a) {
                    if (null != a) {
                        var b = this._pool.indexOf(a);
                        if (-1 == b || b >= this._count) a.destroy(), this._pool[this._count++] = a
                    }
                },
                __class__: zi
            };
            var lc = function() {};
            g["flixel.effects.FlxFlicker"] = lc;
            lc.__name__ = "flixel.effects.FlxFlicker";
            lc.__interfaces__ = [L];
            lc.flicker = function(a, b, c, d, e, f, k) {
                null == e && (e = !0);
                null == d && (d = !0);
                null == c && (c = .04);
                null == b && (b = 1);
                if (lc.isFlickering(a))
                    if (e) lc.stopFlickering(a);
                    else return lc._boundObjects.h[a.__id__];
                0 >= c && (c = q.elapsed);
                e = lc._pool.get();
                e.start(a, b, c, d, f, k);
                lc._boundObjects.set(a, e);
                return e
            };
            lc.isFlickering = function(a) {
                return null != lc._boundObjects.h.__keys__[a.__id__]
            };
            lc.stopFlickering = function(a) {
                a = lc._boundObjects.h[a.__id__];
                null != a && a.stop()
            };
            lc.prototype = {
                destroy: function() {
                    this.progressCallback = this.completionCallback = this.timer = this.object = null
                },
                start: function(a, b, c, d, e, f) {
                    this.object = a;
                    this.duration = b;
                    this.interval = c;
                    this.completionCallback =
                        e;
                    this.progressCallback = f;
                    this.endVisibility = d;
                    this.timer = (new Rc).start(this.interval, r(this, this.flickerProgress), this.duration / this.interval | 0)
                },
                stop: function() {
                    this.timer.cancel();
                    this.object.set_visible(!0);
                    this.release()
                },
                release: function() {
                    lc._boundObjects.remove(this.object);
                    lc._pool.put(this)
                },
                flickerProgress: function(a) {
                    this.object.set_visible(!this.object.visible);
                    null != this.progressCallback && this.progressCallback(this);
                    0 < a.loops && 0 == a.loops - a._loopsCounter && (this.object.set_visible(this.endVisibility),
                        null != this.completionCallback && this.completionCallback(this), this.release())
                },
                __class__: lc
            };
            var zb = function(a, b, c) {
                this._destroyOnNoUse = !0;
                this._useCount = 0;
                this.persist = this.isDumped = this.unique = !1;
                this.width = this.height = 0;
                this.key = a;
                this.persist = null != c ? c : zb.defaultPersist;
                this.frameCollections = new kg;
                this.frameCollectionTypes = [];
                this.set_bitmap(b);
                this.shader = new Ai
            };
            g["flixel.graphics.FlxGraphic"] = zb;
            zb.__name__ = "flixel.graphics.FlxGraphic";
            zb.__interfaces__ = [L];
            zb.fromAssetKey = function(a, b, c,
                d) {
                null == d && (d = !0);
                null == b && (b = !1);
                if (!d) {
                    var e = ta.exists(a) ? ta.getBitmapData(a, !1) : null;
                    return null == e ? null : zb.createGraphic(e, c, b, d)
                }
                c = q.bitmap.generateKey(a, c, b);
                e = q.bitmap._cache.h[c];
                if (null != e) return e;
                e = ta.exists(a) ? ta.getBitmapData(a, !1) : null;
                if (null == e) return null;
                e = zb.createGraphic(e, c, b);
                e.assetsKey = a;
                return e
            };
            zb.fromClass = function(a, b, c, d) {
                null == d && (d = !0);
                null == b && (b = !1);
                if (!d) {
                    var e = Ua.createInstance(a, [0, 0]);
                    return zb.createGraphic(e, c, b, d)
                }
                d = a.__name__;
                d = q.bitmap.generateKey(d, c, b);
                c = q.bitmap._cache.h[d];
                if (null != c) return c;
                e = Ua.createInstance(a, [0, 0]);
                c = zb.createGraphic(e, d, b);
                c.assetsClass = a;
                return c
            };
            zb.fromBitmapData = function(a, b, c, d) {
                null == d && (d = !0);
                null == b && (b = !1);
                if (!d) return zb.createGraphic(a, c, b, d);
                d = q.bitmap.findKeyForBitmap(a);
                var e = null,
                    f = null;
                if (null != d) {
                    var k = q.bitmap._cache.h[d];
                    e = k.assetsKey;
                    f = k.assetsClass
                }
                d = q.bitmap.generateKey(d, c, b);
                k = q.bitmap._cache.h[d];
                if (null != k) return k;
                k = zb.createGraphic(a, d, b);
                k.assetsKey = e;
                k.assetsClass = f;
                return k
            };
            zb.fromGraphic =
                function(a, b, c) {
                    null == b && (b = !1);
                    if (!b) return a;
                    c = q.bitmap.generateKey(a.key, c, b);
                    c = zb.createGraphic(a.bitmap, c, b);
                    c.unique = b;
                    c.assetsClass = a.assetsClass;
                    c.assetsKey = a.assetsKey;
                    return q.bitmap._cache.h[c.key] = c
                };
            zb.fromRectangle = function(a, b, c, d, e) {
                null == d && (d = !1);
                d = q.bitmap.generateKey(a + "x" + b + ":" + c, e, d);
                e = q.bitmap._cache.h[d];
                if (null != e) return e;
                a = new H(a, b, !0, c);
                return zb.createGraphic(a, d)
            };
            zb.createGraphic = function(a, b, c, d) {
                null == d && (d = !0);
                null == c && (c = !1);
                var e = c;
                null == e && (e = !1);
                e && (a = a.clone());
                d ? (a = new zb(b, a), a.unique = c, q.bitmap._cache.h[a.key] = a) : a = new zb(null, a);
                return a
            };
            zb.prototype = {
                dump: function() {},
                undump: function() {
                    var a = this.getBitmapFromSystem();
                    null != a && this.set_bitmap(a);
                    this.isDumped = !1
                },
                onContext: function() {
                    this.isDumped && (this.undump(), this.dump())
                },
                onAssetsReload: function() {
                    if (null != this.assetsClass || null != this.assetsKey) {
                        var a = this.isDumped;
                        this.undump();
                        a && this.dump()
                    }
                },
                destroy: function() {
                    this.set_bitmap(V.dispose(this.bitmap));
                    this._imageFrame = this.assetsClass = this.assetsKey =
                        this.key = this.shader = null;
                    if (null != this.frameCollections) {
                        for (var a, b = 0, c = this.frameCollectionTypes; b < c.length;) a = c[b], ++b, a = this.frameCollections.get(a), V.destroyArray(a);
                        this.frameCollectionTypes = this.frameCollections = null
                    }
                },
                addFrameCollection: function(a) {
                    if (null != a.type) {
                        var b = a.type,
                            c = this.frameCollections.get(b);
                        null == c && (c = [], this.frameCollections.set(b, c));
                        c.push(a)
                    }
                },
                getBitmapFromSystem: function() {
                    var a = null;
                    null != this.assetsClass ? a = Ua.createInstance(this.assetsClass, [0, 0]) : null != this.assetsKey &&
                        (a = this.assetsKey, a = ta.exists(a) ? ta.getBitmapData(a, !1) : null);
                    if (null != a) {
                        var b = this.unique;
                        null == b && (b = !1);
                        return b ? a.clone() : a
                    }
                    return null
                },
                get_useCount: function() {
                    return this._useCount
                },
                set_useCount: function(a) {
                    0 >= a && this._destroyOnNoUse && !this.persist && q.bitmap.remove(this);
                    return this._useCount = a
                },
                set_destroyOnNoUse: function(a) {
                    a && 0 >= this._useCount && null != this.key && !this.persist && q.bitmap.remove(this);
                    return this._destroyOnNoUse = a
                },
                get_imageFrame: function() {
                    if (null == this._imageFrame) {
                        var a = 0,
                            b = 0,
                            c = this.bitmap.width,
                            d = this.bitmap.height;
                        null == d && (d = 0);
                        null == c && (c = 0);
                        null == b && (b = 0);
                        null == a && (a = 0);
                        var e = ca._pool.get();
                        null == d && (d = 0);
                        null == c && (c = 0);
                        null == b && (b = 0);
                        null == a && (a = 0);
                        e.x = a;
                        e.y = b;
                        e.width = c;
                        e.height = d;
                        e._inPool = !1;
                        this._imageFrame = Re.fromRectangle(this, e)
                    }
                    return this._imageFrame
                },
                set_bitmap: function(a) {
                    null != a && (this.bitmap = a, this.width = this.bitmap.width, this.height = this.bitmap.height);
                    return a
                },
                __class__: zb,
                __properties__: {
                    set_destroyOnNoUse: "set_destroyOnNoUse",
                    get_imageFrame: "get_imageFrame",
                    set_useCount: "set_useCount",
                    get_useCount: "get_useCount",
                    set_bitmap: "set_bitmap"
                }
            };
            var nd = function(a, b, c) {
                this.parent = a;
                this.type = b;
                null == c ? (b = X._pool.get().set(0, 0), b._inPool = !1) : b = c;
                this.border = b;
                this.frames = [];
                this.framesHash = new aa;
                null != a && a.addFrameCollection(this)
            };
            g["flixel.graphics.frames.FlxFramesCollection"] = nd;
            nd.__name__ = "flixel.graphics.frames.FlxFramesCollection";
            nd.__interfaces__ = [L];
            nd.prototype = {
                destroy: function() {
                    this.frames = V.destroyArray(this.frames);
                    this.border = V.put(this.border);
                    this.type = this.parent = this.framesHash = null
                },
                addSpriteSheetFrame: function(a) {
                    var b = new re(this.parent);
                    b.set_frame(this.checkFrame(a));
                    b.sourceSize.set(a.width, a.height);
                    b.offset.set(0, 0);
                    return this.pushFrame(b)
                },
                addAtlasFrame: function(a, b, c, d, e, f, k) {
                    null == k && (k = !1);
                    null == f && (f = !1);
                    null == e && (e = 0);
                    if (null != d && Object.prototype.hasOwnProperty.call(this.framesHash.h, d)) return this.framesHash.h[d];
                    e = new re(this.parent, e, f, k);
                    e.name = d;
                    e.sourceSize.set(b.x, b.y);
                    e.offset.set(c.x, c.y);
                    e.set_frame(this.checkFrame(a,
                        d));
                    V.put(b);
                    V.put(c);
                    return this.pushFrame(e)
                },
                checkFrame: function(a, b) {
                    var c = a.x;
                    b = this.parent.width;
                    var d = 0 > c ? 0 : c,
                        e = null != b && d > b ? b : d;
                    c = a.y;
                    b = this.parent.height;
                    d = 0 > c ? 0 : c;
                    var f = null != b && d > b ? b : d;
                    c = a.x + a.width;
                    b = this.parent.width;
                    d = 0 > c ? 0 : c;
                    var k = null != b && d > b ? b : d;
                    c = a.y + a.height;
                    b = this.parent.height;
                    d = 0 > c ? 0 : c;
                    c = e;
                    var p = f;
                    e = k - e;
                    b = (null != b && d > b ? b : d) - f;
                    null == b && (b = 0);
                    null == e && (e = 0);
                    null == p && (p = 0);
                    null == c && (c = 0);
                    a.x = c;
                    a.y = p;
                    a.width = e;
                    a.height = b;
                    return a
                },
                pushFrame: function(a) {
                    var b = a.name;
                    if (null != b && Object.prototype.hasOwnProperty.call(this.framesHash.h,
                            b)) return this.framesHash.h[b];
                    this.frames.push(a);
                    a.cacheFrameMatrix();
                    null != b && (this.framesHash.h[b] = a);
                    return a
                },
                __class__: nd
            };
            var Nb = function(a, b) {
                nd.call(this, a, Bi.ATLAS, b)
            };
            g["flixel.graphics.frames.FlxAtlasFrames"] = Nb;
            Nb.__name__ = "flixel.graphics.frames.FlxAtlasFrames";
            Nb.fromSparrow = function(a, b) {
                var c = q.bitmap.add(a);
                if (null == c) return null;
                a = Nb.findFrame(c);
                if (null != a) return a;
                if (null == c || null == b) return null;
                a = new Nb(c);
                ta.exists(b) && (b = ta.getText(b));
                c = S.parse(b).firstElement();
                if (c.nodeType !=
                    S.Document && c.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                b = 0;
                for (c = tb.resolve(c, "SubTexture"); b < c.length;) {
                    var d = c[b];
                    ++b;
                    var e = Lb.resolve(d, "name"),
                        f = Db.resolve(d, "frameX"),
                        k = Db.resolve(d, "rotated") && "true" == Lb.resolve(d, "rotated"),
                        p = Db.resolve(d, "flipX") && "true" == Lb.resolve(d, "flipX"),
                        m = Db.resolve(d, "flipY") && "true" == Lb.resolve(d, "flipY"),
                        h = parseFloat(Lb.resolve(d, "x")),
                        g = parseFloat(Lb.resolve(d, "y")),
                        l = parseFloat(Lb.resolve(d, "width")),
                        n = parseFloat(Lb.resolve(d, "height"));
                    null == n && (n = 0);
                    null == l && (l = 0);
                    null == g && (g = 0);
                    null == h && (h = 0);
                    var r = ca._pool.get();
                    null == n && (n = 0);
                    null == l && (l = 0);
                    null == g && (g = 0);
                    null == h && (h = 0);
                    r.x = h;
                    r.y = g;
                    r.width = l;
                    r.height = n;
                    r._inPool = !1;
                    d = f ? new fa(I.parseInt(Lb.resolve(d, "frameX")), I.parseInt(Lb.resolve(d, "frameY")), I.parseInt(Lb.resolve(d, "frameWidth")), I.parseInt(Lb.resolve(d, "frameHeight"))) : new fa(0, 0, r.width, r.height);
                    n = k ? -90 : 0;
                    h = -d.get_left();
                    l = -d.get_top();
                    null == l && (l = 0);
                    null == h && (h = 0);
                    h = X._pool.get().set(h,
                        l);
                    h._inPool = !1;
                    l = d.width;
                    g = d.height;
                    null == g && (g = 0);
                    null == l && (l = 0);
                    l = X._pool.get().set(l, g);
                    l._inPool = !1;
                    k && !f && l.set(d.height, d.width);
                    a.addAtlasFrame(r, l, h, e, n, p, m)
                }
                return a
            };
            Nb.findFrame = function(a, b) {
                if (null == b) {
                    var c = b = 0;
                    null == c && (c = 0);
                    null == b && (b = 0);
                    b = X._pool.get().set(b, c);
                    b._inPool = !1;
                    b._weak = !0
                }
                c = Bi.ATLAS;
                var d = a.frameCollections.get(c);
                null == d && (d = [], a.frameCollections.set(c, d));
                a = d;
                for (c = 0; c < a.length;) {
                    d = a[c];
                    ++c;
                    var e = d.border;
                    e = 1E-7 >= Math.abs(e.x - b.x) && 1E-7 >= Math.abs(e.y - b.y);
                    b._weak &&
                        b.put();
                    if (e) return d
                }
                return null
            };
            Nb.__super__ = nd;
            Nb.prototype = n(nd.prototype, {
                __class__: Nb
            });
            var re = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = !1);
                null == b && (b = 0);
                this.matrix = new Mf;
                this.rect = new fa;
                this.point2 = new La;
                this.point1 = new La;
                this.parent = a;
                this.angle = b;
                this.flipX = c;
                this.flipY = d;
                this.type = 0;
                a = X._pool.get().set(0, 0);
                a._inPool = !1;
                this.sourceSize = a;
                a = X._pool.get().set(0, 0);
                a._inPool = !1;
                this.offset = a;
                this.blitMatrix = a = Array(6);
                q.renderTile && (this.tileMatrix = a = Array(6))
            };
            g["flixel.graphics.frames.FlxFrame"] =
                re;
            re.__name__ = "flixel.graphics.frames.FlxFrame";
            re.__interfaces__ = [L];
            re.sort = function(a, b, c) {
                Zb.sort(a, function(a, e) {
                    return re.sortByName(a, e, b, c)
                })
            };
            re.sortByName = function(a, b, c, d) {
                a = a.name;
                b = b.name;
                a = I.parseInt(a.substring(c, a.length - d));
                c = I.parseInt(b.substring(c, b.length - d));
                null == a && (a = 0);
                null == c && (c = 0);
                return a - c
            };
            re.prototype = {
                cacheFrameMatrix: function() {
                    var a = this.matrix,
                        b = !0;
                    null == b && (b = !0);
                    a.identity();
                    b && a.translate(-this.frame.x, -this.frame.y);
                    90 == this.angle ? (a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx), a.translate(this.frame.height, 0)) : -90 == this.angle && (a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx), a.translate(0, this.frame.width));
                    a.translate(this.offset.x, this.offset.y);
                    this.blitMatrix[0] = this.matrix.a;
                    this.blitMatrix[1] = this.matrix.b;
                    this.blitMatrix[2] = this.matrix.c;
                    this.blitMatrix[3] = this.matrix.d;
                    this.blitMatrix[4] = this.matrix.tx;
                    this.blitMatrix[5] = this.matrix.ty;
                    q.renderTile && (a = this.matrix, b = !1, null == b && (b = !0), a.identity(), b && a.translate(-this.frame.x, -this.frame.y), 90 == this.angle ? (a.setTo(-a.b,
                        a.a, -a.d, a.c, -a.ty, a.tx), a.translate(this.frame.height, 0)) : -90 == this.angle && (a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx), a.translate(0, this.frame.width)), a.translate(this.offset.x, this.offset.y), this.tileMatrix[0] = this.matrix.a, this.tileMatrix[1] = this.matrix.b, this.tileMatrix[2] = this.matrix.c, this.tileMatrix[3] = this.matrix.d, this.tileMatrix[4] = this.matrix.tx, this.tileMatrix[5] = this.matrix.ty)
                },
                prepareTransformedBlitMatrix: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = !1);
                    null == b && (b = 0);
                    a.a = this.blitMatrix[0];
                    a.b = this.blitMatrix[1];
                    a.c = this.blitMatrix[2];
                    a.d = this.blitMatrix[3];
                    a.tx = this.blitMatrix[4];
                    a.ty = this.blitMatrix[5];
                    null == d && (d = !1);
                    null == c && (c = !1);
                    null == b && (b = 0);
                    var e = this.sourceSize.x | 0,
                        f = this.sourceSize.y | 0;
                    if (0 != b) {
                        var k = e;
                        e = f;
                        f = k;
                        if (90 == b) a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx), a.translate(this.sourceSize.y, 0);
                        else if (-90 == b || -90 == b) a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx), a.translate(0, this.sourceSize.x)
                    }
                    c && (a.scale(-1, 1), a.translate(e, 0));
                    d && (a.scale(1, -1), a.translate(0, f));
                    return a
                },
                prepareMatrix: function(a,
                    b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = !1);
                    null == b && (b = 0);
                    if (q.renderBlit) return a.identity(), a;
                    a.a = this.tileMatrix[0];
                    a.b = this.tileMatrix[1];
                    a.c = this.tileMatrix[2];
                    a.d = this.tileMatrix[3];
                    a.tx = this.tileMatrix[4];
                    a.ty = this.tileMatrix[5];
                    c = c != this.flipX;
                    d = d != this.flipY;
                    if (0 == b && !c && !d) return a;
                    null == d && (d = !1);
                    null == c && (c = !1);
                    null == b && (b = 0);
                    var e = this.sourceSize.x | 0,
                        f = this.sourceSize.y | 0;
                    if (0 != b) {
                        var k = e;
                        e = f;
                        f = k;
                        if (90 == b) a.setTo(-a.b, a.a, -a.d, a.c, -a.ty, a.tx), a.translate(this.sourceSize.y, 0);
                        else if (-90 ==
                            b || -90 == b) a.setTo(a.b, -a.a, a.d, -a.c, a.ty, -a.tx), a.translate(0, this.sourceSize.x)
                    }
                    c && (a.scale(-1, 1), a.translate(e, 0));
                    d && (a.scale(1, -1), a.translate(0, f));
                    return a
                },
                paint: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = !1);
                    null == b && (b = this.point1, b.setTo(0, 0));
                    var e = 0,
                        f = c;
                    null == d && (d = !1);
                    null == f && (f = !1);
                    null == e && (e = 0);
                    var k = this.sourceSize.x | 0,
                        p = this.sourceSize.y | 0;
                    0 != e && (e = k, k = p, p = e);
                    null != a && d && (a = V.disposeIfNotEqual(a, k, p));
                    null == a || f ? null == a && (a = new H(k, p, !0, 0)) : (this.rect.setTo(b.x, b.y, k, p), a.fillRect(this.rect,
                        0));
                    if (2 == this.type) return a;
                    if (0 == this.angle) f = this.offset, e = this.point2, null == e && (e = new La), e.x = f.x, e.y = f.y, this.point2.x += b.x, this.point2.y += b.y, e = this.parent.bitmap, f = this.frame, b = this.rect, null == b && (b = new fa), b.x = f.x, b.y = f.y, b.width = f.width, b.height = f.height, a.copyPixels(e, b, this.point2, null, null, c);
                    else {
                        d = this.matrix;
                        d.a = this.blitMatrix[0];
                        d.b = this.blitMatrix[1];
                        d.c = this.blitMatrix[2];
                        d.d = this.blitMatrix[3];
                        d.tx = this.blitMatrix[4];
                        d.ty = this.blitMatrix[5];
                        this.matrix.translate(b.x, b.y);
                        d = this.matrix;
                        k = this.frame.x;
                        e = this.frame.y;
                        null == e && (e = 0);
                        null == k && (k = 0);
                        f = k;
                        b = e;
                        null == b && (b = 0);
                        null == f && (f = 0);
                        b = X._pool.get().set(f, b);
                        b._inPool = !1;
                        f = b;
                        f._weak = !0;
                        c = f;
                        f = this.frame;
                        k = f.x + f.width;
                        f = this.frame;
                        e = f.y + f.height;
                        null == e && (e = 0);
                        null == k && (k = 0);
                        f = k;
                        b = e;
                        null == b && (b = 0);
                        null == f && (f = 0);
                        b = X._pool.get().set(f, b);
                        b._inPool = !1;
                        f = b;
                        f._weak = !0;
                        b = f;
                        f = c.x * d.a + c.y * d.c + d.tx;
                        e = c.x * d.b + c.y * d.d + d.ty;
                        c.set(f, e);
                        f = b.x * d.a + b.y * d.c + d.tx;
                        e = b.x * d.b + b.y * d.d + d.ty;
                        b.set(f, e);
                        f = ca._pool.get();
                        var m = e = k = 0;
                        d = 0;
                        null == d && (d = 0);
                        null ==
                            m && (m = 0);
                        null == e && (e = 0);
                        null == k && (k = 0);
                        f.x = k;
                        f.y = e;
                        f.width = m;
                        f.height = d;
                        f._inPool = !1;
                        m = Math.min(c.x, b.x);
                        d = Math.min(c.y, b.y);
                        var h = Math.max(c.x, b.x);
                        p = Math.max(c.y, b.y);
                        c._weak && c.put();
                        b._weak && b.put();
                        k = m;
                        e = d;
                        m = h - m;
                        d = p - d;
                        null == d && (d = 0);
                        null == m && (m = 0);
                        null == e && (e = 0);
                        null == k && (k = 0);
                        f.x = k;
                        f.y = e;
                        f.width = m;
                        f.height = d;
                        c = f;
                        b = this.rect;
                        null == b && (b = new fa);
                        b.x = c.x;
                        b.y = c.y;
                        b.width = c.width;
                        b.height = c.height;
                        c._inPool || (c._inPool = !0, c._weak = !1, ca._pool.putUnsafe(c));
                        f = this.rect;
                        a.draw(this.parent.bitmap, this.matrix,
                            null, null, f)
                    }
                    return a
                },
                paintRotatedAndFlipped: function(a, b, c, d, e, f, k) {
                    null == k && (k = !1);
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == d && (d = !1);
                    null == c && (c = 0);
                    if (2 == this.type && 0 == c) return this.paint(a, b, f, k);
                    null == b && (b = this.point2, b.setTo(0, 0));
                    var p = c;
                    null == k && (k = !1);
                    null == f && (f = !1);
                    null == p && (p = 0);
                    var m = this.sourceSize.x | 0,
                        h = this.sourceSize.y | 0;
                    0 != p && (p = m, m = h, h = p);
                    null != a && k && (a = V.disposeIfNotEqual(a, m, h));
                    null == a || f ? null == a && (a = new H(m, h, !0, 0)) : (this.rect.setTo(b.x, b.y, m, h), a.fillRect(this.rect, 0));
                    if (2 ==
                        this.type) return a;
                    this.prepareTransformedBlitMatrix(this.matrix, c, d != this.flipX, e != this.flipY);
                    this.matrix.translate(b.x, b.y);
                    e = this.matrix;
                    p = this.frame.x;
                    d = this.frame.y;
                    null == d && (d = 0);
                    null == p && (p = 0);
                    b = p;
                    null == d && (d = 0);
                    null == b && (b = 0);
                    b = X._pool.get().set(b, d);
                    b._inPool = !1;
                    b._weak = !0;
                    c = b;
                    f = this.frame;
                    p = f.x + f.width;
                    f = this.frame;
                    d = f.y + f.height;
                    null == d && (d = 0);
                    null == p && (p = 0);
                    b = p;
                    null == d && (d = 0);
                    null == b && (b = 0);
                    b = X._pool.get().set(b, d);
                    b._inPool = !1;
                    b._weak = !0;
                    d = c.x * e.a + c.y * e.c + e.tx;
                    p = c.x * e.b + c.y * e.d + e.ty;
                    c.set(d, p);
                    d = b.x * e.a + b.y * e.c + e.tx;
                    p = b.x * e.b + b.y * e.d + e.ty;
                    b.set(d, p);
                    f = ca._pool.get();
                    e = m = d = p = 0;
                    null == e && (e = 0);
                    null == m && (m = 0);
                    null == d && (d = 0);
                    null == p && (p = 0);
                    f.x = p;
                    f.y = d;
                    f.width = m;
                    f.height = e;
                    d = f;
                    d._inPool = !1;
                    f = d;
                    m = Math.min(c.x, b.x);
                    e = Math.min(c.y, b.y);
                    h = Math.max(c.x, b.x);
                    k = Math.max(c.y, b.y);
                    c._weak && c.put();
                    b._weak && b.put();
                    p = m;
                    d = e;
                    m = h - m;
                    e = k - e;
                    null == e && (e = 0);
                    null == m && (m = 0);
                    null == d && (d = 0);
                    null == p && (p = 0);
                    f.x = p;
                    f.y = d;
                    f.width = m;
                    f.height = e;
                    c = f;
                    b = this.rect;
                    null == b && (b = new fa);
                    b.x = c.x;
                    b.y = c.y;
                    b.width = c.width;
                    b.height = c.height;
                    c._inPool || (c._inPool = !0, c._weak = !1, ca._pool.putUnsafe(c));
                    d = this.rect;
                    a.draw(this.parent.bitmap, this.matrix, null, null, d);
                    return a
                },
                clipTo: function(a, b) {
                    null == b ? b = new re(this.parent, this.angle) : (b.parent = this.parent, b.angle = this.angle, b.set_frame(V.put(b.frame)));
                    var c = b.sourceSize,
                        d = this.sourceSize;
                    c.set_x(d.x);
                    c.set_y(d.y);
                    d._weak && d.put();
                    b.name = this.name;
                    if (2 == this.type) return b.type = 2, b.offset.set(0, 0), b;
                    var e = 0;
                    d = 0;
                    null == d && (d = 0);
                    null == e && (e = 0);
                    c = ca._pool.get();
                    var f = 0,
                        k = 0;
                    null == k && (k = 0);
                    null == f && (f = 0);
                    null == d && (d = 0);
                    null == e && (e = 0);
                    c.x = e;
                    c.y = d;
                    c.width = f;
                    c.height = k;
                    var p = c;
                    p._inPool = !1;
                    c = p;
                    c.width = this.frame.width;
                    c.height = this.frame.height;
                    f = c;
                    0 != this.angle && (f.width = this.frame.height, f.height = this.frame.width);
                    a.x += -this.offset.x;
                    a.y += -this.offset.y;
                    p = f.intersection(a);
                    V.put(f);
                    if (0 == p.width || 0 == p.height) b.type = 2, k = f = d = e = 0, null == k && (k = 0), null == f && (f = 0), null == d && (d = 0), null == e && (e = 0), p.x = e, p.y = d, p.width = f, p.height = k, b.set_frame(p), b.offset.set(0, 0);
                    else {
                        b.type = 0;
                        b.offset.set(p.x,
                            p.y).addPoint(this.offset);
                        e = p.x;
                        d = p.y;
                        null == d && (d = 0);
                        null == e && (e = 0);
                        null == d && (d = 0);
                        null == e && (e = 0);
                        d = X._pool.get().set(e, d);
                        d._inPool = !1;
                        d._weak = !0;
                        f = d;
                        e = p.x + p.width;
                        d = p.y + p.height;
                        null == d && (d = 0);
                        null == e && (e = 0);
                        null == d && (d = 0);
                        null == e && (e = 0);
                        d = X._pool.get().set(e, d);
                        d._inPool = !1;
                        d._weak = !0;
                        this.matrix.identity(); - 90 == this.angle ? (c = this.matrix, c.setTo(-c.b, c.a, -c.d, c.c, -c.ty, c.tx), this.matrix.translate(this.frame.width, 0)) : 90 == this.angle && (c = this.matrix, c.setTo(c.b, -c.a, c.d, -c.c, c.ty, -c.tx), this.matrix.translate(0,
                            this.frame.height));
                        0 != this.angle && (e = this.matrix, c = f.x * e.a + f.y * e.c + e.tx, e = f.x * e.b + f.y * e.d + e.ty, f.set(c, e), e = this.matrix, c = d.x * e.a + d.y * e.c + e.tx, e = d.x * e.b + d.y * e.d + e.ty, d.set(c, e));
                        var m = Math.min(f.x, d.x);
                        c = Math.min(f.y, d.y);
                        var h = Math.max(f.x, d.x);
                        k = Math.max(f.y, d.y);
                        f._weak && f.put();
                        d._weak && d.put();
                        e = m;
                        d = c;
                        f = h - m;
                        k -= c;
                        null == k && (k = 0);
                        null == f && (f = 0);
                        null == d && (d = 0);
                        null == e && (e = 0);
                        p.x = e;
                        p.y = d;
                        p.width = f;
                        p.height = k;
                        p.x += this.frame.x;
                        p.y += this.frame.y;
                        b.set_frame(p);
                        b.cacheFrameMatrix()
                    }
                    a.x += this.offset.x;
                    a.y += this.offset.y;
                    return b
                },
                copyTo: function(a) {
                    null == a ? a = new re(this.parent, this.angle) : (a.parent = this.parent, a.angle = this.angle, a.set_frame(V.put(a.frame)));
                    var b = a.offset,
                        c = this.offset;
                    b.set_x(c.x);
                    b.set_y(c.y);
                    c._weak && c.put();
                    a.flipX = this.flipX;
                    a.flipY = this.flipY;
                    b = a.sourceSize;
                    c = this.sourceSize;
                    b.set_x(c.x);
                    b.set_y(c.y);
                    c._weak && c.put();
                    b = ca._pool.get();
                    var d = c = 0,
                        e = 0,
                        f = 0;
                    null == f && (f = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == c && (c = 0);
                    b.x = c;
                    b.y = d;
                    b.width = e;
                    b.height = f;
                    b._inPool = !1;
                    c = this.frame;
                    b.x =
                        c.x;
                    b.y = c.y;
                    b.width = c.width;
                    b.height = c.height;
                    c._weak && !c._inPool && (c._inPool = !0, c._weak = !1, ca._pool.putUnsafe(c));
                    a.set_frame(b);
                    a.type = this.type;
                    a.name = this.name;
                    a.cacheFrameMatrix();
                    return a
                },
                destroy: function() {
                    this.parent = this.name = null;
                    this.sourceSize = V.put(this.sourceSize);
                    this.offset = V.put(this.offset);
                    this.set_frame(V.put(this.frame));
                    this.uv = V.put(this.uv);
                    this.tileMatrix = this.blitMatrix = null
                },
                set_frame: function(a) {
                    if (null != a) {
                        if (null == this.uv) {
                            var b = ca._pool.get(),
                                c = 0,
                                d = 0,
                                e = 0,
                                f = 0;
                            null ==
                                f && (f = 0);
                            null == e && (e = 0);
                            null == d && (d = 0);
                            null == c && (c = 0);
                            b.x = c;
                            b.y = d;
                            b.width = e;
                            b.height = f;
                            b._inPool = !1;
                            this.uv = b
                        }
                        b = this.uv;
                        c = a.x / this.parent.width;
                        d = a.y / this.parent.height;
                        e = (a.x + a.width) / this.parent.width;
                        f = (a.y + a.height) / this.parent.height;
                        null == f && (f = 0);
                        null == e && (e = 0);
                        null == d && (d = 0);
                        null == c && (c = 0);
                        b.x = c;
                        b.y = d;
                        b.width = e;
                        b.height = f
                    }
                    return this.frame = a
                },
                __class__: re,
                __properties__: {
                    set_frame: "set_frame"
                }
            };
            var Bi = w["flixel.graphics.frames.FlxFrameCollectionType"] = {
                    __ename__: "flixel.graphics.frames.FlxFrameCollectionType",
                    __constructs__: "IMAGE TILES ATLAS FONT USER FILTER".split(" "),
                    IMAGE: {
                        _hx_index: 0,
                        __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                        toString: h
                    },
                    TILES: {
                        _hx_index: 1,
                        __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                        toString: h
                    },
                    ATLAS: {
                        _hx_index: 2,
                        __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                        toString: h
                    },
                    FONT: {
                        _hx_index: 3,
                        __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                        toString: h
                    },
                    USER: (x = function(a) {
                        return {
                            _hx_index: 4,
                            type: a,
                            __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                            toString: h
                        }
                    }, x.__params__ = ["type"], x),
                    FILTER: {
                        _hx_index: 5,
                        __enum__: "flixel.graphics.frames.FlxFrameCollectionType",
                        toString: h
                    }
                },
                Re = function(a, b) {
                    nd.call(this, a, Bi.IMAGE, b)
                };
            g["flixel.graphics.frames.FlxImageFrame"] = Re;
            Re.__name__ = "flixel.graphics.frames.FlxImageFrame";
            Re.fromGraphic = function(a, b) {
                if (null == a) return null;
                var c = b;
                if (null == c) {
                    var d = 0,
                        e = 0,
                        f = a.width,
                        k = a.height;
                    null == k && (k = 0);
                    null == f && (f = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    null == k && (k = 0);
                    null == f && (f = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    var p = ca._pool.get();
                    null == k && (k = 0);
                    null == f && (f = 0);
                    null == e && (e = 0);
                    null == d && (d = 0);
                    p.x = d;
                    p.y = e;
                    p.width = f;
                    p.height = k;
                    p._inPool = !1;
                    c = p;
                    c._weak = !0
                }
                c = Re.findFrame(a, c);
                if (null != c) return c;
                c = new Re(a);
                null == b ? (e = d = 0, f = a.width, k = a.height, null == k && (k = 0), null == f && (f = 0), null == e && (e = 0), null == d && (d = 0), p = ca._pool.get(), null == k && (k = 0), null == f && (f = 0), null == e && (e = 0), null == d && (d = 0), p.x = d, p.y = e, p.width = f, p.height = k, p._inPool = !1, b = p) : (0 == b.width && (b.width = a.width - b.x), 0 == b.height && (b.height = a.height - b.y));
                c.addSpriteSheetFrame(b);
                return c
            };
            Re.fromRectangle = function(a, b) {
                a = q.bitmap.add(a, !1);
                return Re.fromGraphic(a, b)
            };
            Re.findFrame = function(a, b, c) {
                if (null == c) {
                    var d = c = 0;
                    null == d && (d = 0);
                    null == c && (c = 0);
                    var e = X._pool.get().set(c, d);
                    e._inPool = !1;
                    c = e;
                    c._weak = !0
                }
                d = Bi.IMAGE;
                var f = a.frameCollections.get(d);
                null == f && (f = [], a.frameCollections.set(d, f));
                a = f;
                for (d = 0; d < a.length;) {
                    f = a[d];
                    ++d;
                    e = f.get_frame().frame;
                    var k = 1E-7 >= Math.abs(b.x - e.x) && 1E-7 >= Math.abs(b.y - e.y) && 1E-7 >= Math.abs(b.width - e.width) && 1E-7 >= Math.abs(b.height - e.height);
                    e._weak && !e._inPool &&
                        (e._inPool = !0, e._weak = !1, ca._pool.putUnsafe(e));
                    k ? (e = f.border, k = 1E-7 >= Math.abs(c.x - e.x) && 1E-7 >= Math.abs(c.y - e.y), e._weak && e.put(), e = k) : e = !1;
                    if (e && 2 != f.get_frame().type) return f
                }
                return null
            };
            Re.__super__ = nd;
            Re.prototype = n(nd.prototype, {
                destroy: function() {
                    nd.prototype.destroy.call(this);
                    V.destroy(this.get_frame())
                },
                get_frame: function() {
                    return this.frames[0]
                },
                __class__: Re,
                __properties__: {
                    get_frame: "get_frame"
                }
            });
            var mf = function(a, b) {
                this.numRows = this.numCols = 0;
                nd.call(this, a, Bi.TILES, b)
            };
            g["flixel.graphics.frames.FlxTileFrames"] =
                mf;
            mf.__name__ = "flixel.graphics.frames.FlxTileFrames";
            mf.fromGraphic = function(a, b, c, d) {
                var e = mf.findFrame(a, b, c, null, d);
                if (null != e) return e;
                if (null == c) {
                    var f = 0,
                        k = 0,
                        p = a.width,
                        m = a.height;
                    null == m && (m = 0);
                    null == p && (p = 0);
                    null == k && (k = 0);
                    null == f && (f = 0);
                    var h = ca._pool.get();
                    null == m && (m = 0);
                    null == p && (p = 0);
                    null == k && (k = 0);
                    null == f && (f = 0);
                    h.x = f;
                    h.y = k;
                    h.width = p;
                    h.height = m;
                    h._inPool = !1;
                    c = h
                } else 0 == c.width && (c.width = a.width - c.x), 0 == c.height && (c.height = a.height - c.y);
                null == d && (k = f = 0, null == k && (k = 0), null == f && (f = 0), e = X._pool.get().set(f,
                    k), e._inPool = !1, d = e);
                e = new mf(a);
                e.region = c;
                e.atlasFrame = null;
                e.tileSize = b;
                e.tileSpacing = d;
                c.x = Math.floor(c.x);
                c.y = Math.floor(c.y);
                c.width = Math.floor(c.width);
                c.height = Math.floor(c.height);
                d.set_x(Math.floor(d.x));
                d.set_y(Math.floor(d.y));
                b.set_x(Math.floor(b.x));
                b.set_y(Math.floor(b.y));
                a = b.x + d.x;
                var g = b.y + d.y,
                    l = 0 == b.y ? 1 : (c.height + d.y) / g | 0;
                d = 0 == b.x ? 1 : (c.width + d.x) / a | 0;
                for (var q = 0; q < l;)
                    for (var n = q++, r = 0, D = d; r < D;) h = r++, f = c.x + h * a, k = c.y + n * g, p = b.x, m = b.y, null == m && (m = 0), null == p && (p = 0), null == k && (k = 0), null ==
                        f && (f = 0), h = ca._pool.get(), null == m && (m = 0), null == p && (p = 0), null == k && (k = 0), null == f && (f = 0), h.x = f, h.y = k, h.width = p, h.height = m, h._inPool = !1, e.addSpriteSheetFrame(h);
                e.numCols = d;
                e.numRows = l;
                return e
            };
            mf.findFrame = function(a, b, c, d, e, f) {
                d = Bi.TILES;
                var k = a.frameCollections.get(d);
                null == k && (k = [], a.frameCollections.set(d, k));
                a = k;
                for (d = 0; d < a.length;)
                    if (k = a[d], ++d, k.equals(b, c, null, e, f)) return k;
                return null
            };
            mf.__super__ = nd;
            mf.prototype = n(nd.prototype, {
                equals: function(a, b, c, d, e) {
                    if (null == this.region && null == this.atlasFrame) return !1;
                    null != c && (b = c.frame);
                    if (null == b) {
                        var f = 0,
                            k = 0;
                        b = this.parent.width;
                        var p = this.parent.height;
                        null == p && (p = 0);
                        null == b && (b = 0);
                        null == k && (k = 0);
                        null == f && (f = 0);
                        null == p && (p = 0);
                        null == b && (b = 0);
                        null == k && (k = 0);
                        null == f && (f = 0);
                        var m = ca._pool.get();
                        null == p && (p = 0);
                        null == b && (b = 0);
                        null == k && (k = 0);
                        null == f && (f = 0);
                        m.x = f;
                        m.y = k;
                        m.width = b;
                        m.height = p;
                        m._inPool = !1;
                        m._weak = !0;
                        b = m
                    }
                    null == d && (k = f = 0, null == k && (k = 0), null == f && (f = 0), m = X._pool.get().set(f, k), m._inPool = !1, m._weak = !0, d = m);
                    null == e && (k = f = 0, null == k && (k = 0), null == f && (f = 0), m = X._pool.get().set(f,
                        k), m._inPool = !1, m._weak = !0, e = m);
                    this.atlasFrame == c ? (m = this.region, c = 1E-7 >= Math.abs(m.x - b.x) && 1E-7 >= Math.abs(m.y - b.y) && 1E-7 >= Math.abs(m.width - b.width) && 1E-7 >= Math.abs(m.height - b.height), b._weak && !b._inPool && (b._inPool = !0, b._weak = !1, ca._pool.putUnsafe(b))) : c = !1;
                    c ? (m = this.tileSize, c = 1E-7 >= Math.abs(m.x - a.x) && 1E-7 >= Math.abs(m.y - a.y), a._weak && a.put(), a = c) : a = !1;
                    a ? (m = this.tileSpacing, c = 1E-7 >= Math.abs(m.x - d.x) && 1E-7 >= Math.abs(m.y - d.y), d._weak && d.put(), d = c) : d = !1;
                    return d ? (m = this.border, c = 1E-7 >= Math.abs(m.x -
                        e.x) && 1E-7 >= Math.abs(m.y - e.y), e._weak && e.put(), c) : !1
                },
                destroy: function() {
                    nd.prototype.destroy.call(this);
                    this.atlasFrame = null;
                    this.region = V.put(this.region);
                    this.tileSize = V.put(this.tileSize);
                    this.tileSpacing = V.put(this.tileSpacing)
                },
                __class__: mf
            });
            var Mc = function() {
                this.blending = 0;
                this.antialiasing = this.colored = this.hasColorOffsets = !1
            };
            g["flixel.graphics.tile.FlxDrawBaseItem"] = Mc;
            Mc.__name__ = "flixel.graphics.tile.FlxDrawBaseItem";
            Mc.blendToInt = function(a) {
                return 0
            };
            Mc.prototype = {
                reset: function() {
                    this.graphics =
                        null;
                    this.antialiasing = !1;
                    this.next = this.nextTyped = null
                },
                render: function(a) {
                    Mc.drawCalls++
                },
                __class__: Mc
            };
            var em = w["flixel.graphics.tile.FlxDrawItemType"] = {
                    __ename__: "flixel.graphics.tile.FlxDrawItemType",
                    __constructs__: ["TILES", "TRIANGLES"],
                    TILES: {
                        _hx_index: 0,
                        __enum__: "flixel.graphics.tile.FlxDrawItemType",
                        toString: h
                    },
                    TRIANGLES: {
                        _hx_index: 1,
                        __enum__: "flixel.graphics.tile.FlxDrawItemType",
                        toString: h
                    }
                },
                li = function() {
                    Mc.call(this);
                    this.type = em.TILES;
                    this.rects = ib.toFloatVector(null);
                    this.transforms =
                        ib.toFloatVector(null);
                    this.alphas = []
                };
            g["flixel.graphics.tile.FlxDrawQuadsItem"] = li;
            li.__name__ = "flixel.graphics.tile.FlxDrawQuadsItem";
            li.__super__ = Mc;
            li.prototype = n(Mc.prototype, {
                reset: function() {
                    Mc.prototype.reset.call(this);
                    this.rects.set_length(0);
                    this.transforms.set_length(0);
                    this.alphas.splice(0, this.alphas.length);
                    null != this.colorMultipliers && this.colorMultipliers.splice(0, this.colorMultipliers.length);
                    null != this.colorOffsets && this.colorOffsets.splice(0, this.colorOffsets.length)
                },
                addQuad: function(a,
                    b, c) {
                    a = a.frame;
                    this.rects.push(a.x);
                    this.rects.push(a.y);
                    this.rects.push(a.width);
                    this.rects.push(a.height);
                    this.transforms.push(b.a);
                    this.transforms.push(b.b);
                    this.transforms.push(b.c);
                    this.transforms.push(b.d);
                    this.transforms.push(b.tx);
                    this.transforms.push(b.ty);
                    this.alphas.push(null != c ? c.alphaMultiplier : 1);
                    this.alphas.push(null != c ? c.alphaMultiplier : 1);
                    this.alphas.push(null != c ? c.alphaMultiplier : 1);
                    this.alphas.push(null != c ? c.alphaMultiplier : 1);
                    if (this.colored || this.hasColorOffsets)
                        for (null == this.colorMultipliers &&
                            (this.colorMultipliers = []), null == this.colorOffsets && (this.colorOffsets = []), b = 0; 4 > b;) b++, null != c ? (this.colorMultipliers.push(c.redMultiplier), this.colorMultipliers.push(c.greenMultiplier), this.colorMultipliers.push(c.blueMultiplier), this.colorOffsets.push(c.redOffset), this.colorOffsets.push(c.greenOffset), this.colorOffsets.push(c.blueOffset), this.colorOffsets.push(c.alphaOffset)) : (this.colorMultipliers.push(1), this.colorMultipliers.push(1), this.colorMultipliers.push(1), this.colorOffsets.push(0), this.colorOffsets.push(0),
                            this.colorOffsets.push(0), this.colorOffsets.push(0)), this.colorMultipliers.push(1)
                },
                render: function(a) {
                    if (0 != this.rects.get_length()) {
                        var b = null != this.shader ? this.shader : this.graphics.shader;
                        b.bitmap.input = this.graphics.bitmap;
                        b.bitmap.filter = a.antialiasing || this.antialiasing ? 4 : 5;
                        b.alpha.value = this.alphas;
                        if (this.colored || this.hasColorOffsets) b.colorMultiplier.value = this.colorMultipliers, b.colorOffset.value = this.colorOffsets;
                        var c = b.hasTransform;
                        null == c.value && (c.value = []);
                        c.value[0] = !0;
                        c = b.hasColorTransform;
                        null == c.value && (c.value = []);
                        c.value[0] = this.colored || this.hasColorOffsets;
                        a.canvas.get_graphics().overrideBlendMode(this.blend);
                        a.canvas.get_graphics().beginShaderFill(b);
                        a.canvas.get_graphics().drawQuads(this.rects, null, this.transforms);
                        Mc.prototype.render.call(this, a)
                    }
                },
                __class__: li
            });
            var Hk = function() {
                this.verticesPosition = this.indicesPosition = this.colorsPosition = 0;
                this.colors = ib.toIntVector(null);
                this.uvtData = ib.toFloatVector(null);
                this.indices = ib.toIntVector(null);
                this.vertices = ib.toFloatVector(null);
                Mc.call(this);
                this.type = em.TRIANGLES
            };
            g["flixel.graphics.tile.FlxDrawTrianglesItem"] = Hk;
            Hk.__name__ = "flixel.graphics.tile.FlxDrawTrianglesItem";
            Hk.__super__ = Mc;
            Hk.prototype = n(Mc.prototype, {
                render: function(a) {
                    if (q.renderTile && !(0 >= this.get_numTriangles())) {
                        var b = a.antialiasing || this.antialiasing;
                        a.canvas.get_graphics().beginBitmapFill(this.graphics.bitmap, null, !0, b);
                        a.canvas.get_graphics().drawTriangles(this.vertices, this.indices, this.uvtData, 1);
                        a.canvas.get_graphics().endFill();
                        Mc.prototype.render.call(this,
                            a)
                    }
                },
                reset: function() {
                    Mc.prototype.reset.call(this);
                    this.vertices.splice(0, this.vertices.get_length());
                    this.indices.splice(0, this.indices.get_length());
                    this.uvtData.splice(0, this.uvtData.get_length());
                    this.colors.splice(0, this.colors.get_length());
                    this.colorsPosition = this.indicesPosition = this.verticesPosition = 0
                },
                get_numTriangles: function() {
                    return this.indices.get_length() / 3 | 0
                },
                __class__: Hk
            });
            var Pd = function(a) {
                this.byteCode = a;
                this.precisionHint = 1;
                this.__glSourceDirty = !0;
                this.__numPasses = 1;
                this.__data =
                    om._new(a)
            };
            g["openfl.display.Shader"] = Pd;
            Pd.__name__ = "openfl.display.Shader";
            Pd.prototype = {
                __clearUseArray: function() {
                    for (var a = 0, b = this.__paramBool; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.__useArray = !1
                    }
                    a = 0;
                    for (b = this.__paramFloat; a < b.length;) c = b[a], ++a, c.__useArray = !1;
                    a = 0;
                    for (b = this.__paramInt; a < b.length;) c = b[a], ++a, c.__useArray = !1
                },
                __createGLShader: function(a, b) {
                    var c = this.__context.gl,
                        d = c.createShader(b);
                    c.shaderSource(d, a);
                    c.compileShader(d);
                    0 == c.getShaderParameter(d, c.COMPILE_STATUS) && (b = b == c.VERTEX_SHADER ?
                        "Error compiling vertex shader" : "Error compiling fragment shader", b += "\n" + c.getShaderInfoLog(d), Aa.error(b + ("\n" + a), {
                            fileName: "openfl/display/Shader.hx",
                            lineNumber: 329,
                            className: "openfl.display.Shader",
                            methodName: "__createGLShader"
                        }));
                    return d
                },
                __createGLProgram: function(a, b) {
                    var c = this.__context.gl;
                    a = this.__createGLShader(a, c.VERTEX_SHADER);
                    var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
                    b = c.createProgram();
                    for (var e = 0, f = this.__paramFloat; e < f.length;) {
                        var k = f[e];
                        ++e;
                        if (-1 < k.name.indexOf("Position") &&
                            K.startsWith(k.name, "openfl_")) {
                            c.bindAttribLocation(b, 0, k.name);
                            break
                        }
                    }
                    c.attachShader(b, a);
                    c.attachShader(b, d);
                    c.linkProgram(b);
                    0 == c.getProgramParameter(b, c.LINK_STATUS) && (c = "Unable to initialize the shader program\n" + c.getProgramInfoLog(b), Aa.error(c, {
                        fileName: "openfl/display/Shader.hx",
                        lineNumber: 362,
                        className: "openfl.display.Shader",
                        methodName: "__createGLProgram"
                    }));
                    return b
                },
                __disable: function() {
                    null != this.program && this.__disableGL()
                },
                __disableGL: function() {
                    for (var a = this.__context.gl, b = 0, c =
                            0, d = this.__inputBitmapData; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.__disableGL(this.__context, b);
                        ++b
                    }
                    c = 0;
                    for (d = this.__paramBool; c < d.length;) b = d[c], ++c, b.__disableGL(this.__context);
                    c = 0;
                    for (d = this.__paramFloat; c < d.length;) b = d[c], ++c, b.__disableGL(this.__context);
                    c = 0;
                    for (d = this.__paramInt; c < d.length;) b = d[c], ++c, b.__disableGL(this.__context);
                    this.__context.__bindGLArrayBuffer(null);
                    "opengl" == this.__context.__context.type && a.disable(a.TEXTURE_2D)
                },
                __enable: function() {
                    this.__init();
                    null != this.program && this.__enableGL()
                },
                __enableGL: function() {
                    for (var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData; c < d.length;) {
                        var e = d[c];
                        ++c;
                        b.uniform1i(e.index, a);
                        ++a
                    }
                    "opengl" == this.__context.__context.type && 0 < a && b.enable(b.TEXTURE_2D)
                },
                __init: function() {
                    null == this.__data && (this.__data = om._new(null));
                    null == this.__glFragmentSource || null == this.__glVertexSource || null != this.program && !this.__glSourceDirty || this.__initGL()
                },
                __initGL: function() {
                    if (this.__glSourceDirty || null == this.__paramBool) this.__glSourceDirty = !1, this.program = null,
                        this.__inputBitmapData = [], this.__paramBool = [], this.__paramFloat = [], this.__paramInt = [], this.__processGLData(this.get_glVertexSource(), "attribute"), this.__processGLData(this.get_glVertexSource(), "uniform"), this.__processGLData(this.get_glFragmentSource(), "uniform");
                    if (null != this.__context && null == this.program) {
                        var a = this.__context.gl,
                            b = "#ifdef GL_ES\n\t\t\t\t" + (1 == this.precisionHint ? "#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\t\tprecision highp float;\n\t\t\t\t#else\n\t\t\t\tprecision mediump float;\n\t\t\t\t#endif" :
                                "precision lowp float;") + "\n\t\t\t\t#endif\n\t\t\t\t",
                            c = b + this.get_glVertexSource();
                        b += this.get_glFragmentSource();
                        var d = c + b;
                        Object.prototype.hasOwnProperty.call(this.__context.__programs.h, d) ? this.program = this.__context.__programs.h[d] : (this.program = this.__context.createProgram(1), this.program.__glProgram = this.__createGLProgram(c, b), this.__context.__programs.h[d] = this.program);
                        if (null != this.program) {
                            this.glProgram = this.program.__glProgram;
                            c = 0;
                            for (b = this.__inputBitmapData; c < b.length;) d = b[c], ++c, d.index =
                                d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
                            c = 0;
                            for (b = this.__paramBool; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
                            c = 0;
                            for (b = this.__paramFloat; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
                            c = 0;
                            for (b = this.__paramInt; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram,
                                d.name) : a.getAttribLocation(this.glProgram, d.name)
                        }
                    }
                },
                __processGLData: function(a, b) {
                    var c = 0,
                        d;
                    for (d = "uniform" == b ? new ya("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "") : new ya("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", ""); d.matchSub(a, c);) {
                        var e = d.matched(1);
                        var f = d.matched(2);
                        if (!K.startsWith(f, "gl_")) {
                            c = "uniform" == b;
                            if (K.startsWith(e, "sampler")) {
                                e = new Ci;
                                e.name = f;
                                e.__isUniform = c;
                                this.__inputBitmapData.push(e);
                                switch (f) {
                                    case "bitmap":
                                        this.__bitmap = e;
                                        break;
                                    case "openfl_Texture":
                                        this.__texture = e
                                }
                                this.__data[f] =
                                    e;
                                this.__isGenerated && (this[f] = e)
                            } else if (!Object.prototype.hasOwnProperty.call(this.__data, f) || null == ea.field(this.__data, f)) {
                                switch (e) {
                                    case "bool":
                                        var k = 0;
                                        break;
                                    case "bvec2":
                                        k = 1;
                                        break;
                                    case "bvec3":
                                        k = 2;
                                        break;
                                    case "bvec4":
                                        k = 3;
                                        break;
                                    case "dvec2":
                                    case "vec2":
                                        k = 5;
                                        break;
                                    case "dvec3":
                                    case "vec3":
                                        k = 6;
                                        break;
                                    case "double":
                                    case "float":
                                        k = 4;
                                        break;
                                    case "ivec3":
                                    case "uvec3":
                                        k = 10;
                                        break;
                                    case "ivec4":
                                    case "uvec4":
                                        k = 11;
                                        break;
                                    case "mat2":
                                    case "mat2x2":
                                        k = 12;
                                        break;
                                    case "mat2x3":
                                        k = 13;
                                        break;
                                    case "mat2x4":
                                        k = 14;
                                        break;
                                    case "mat3x2":
                                        k =
                                            15;
                                        break;
                                    case "mat3":
                                    case "mat3x3":
                                        k = 16;
                                        break;
                                    case "mat3x4":
                                        k = 17;
                                        break;
                                    case "mat4":
                                    case "mat4x4":
                                        k = 20;
                                        break;
                                    case "mat4x2":
                                        k = 18;
                                        break;
                                    case "mat4x3":
                                        k = 19;
                                        break;
                                    case "int":
                                    case "uint":
                                        k = 8;
                                        break;
                                    case "ivec2":
                                    case "uvec2":
                                        k = 9;
                                        break;
                                    case "dvec4":
                                    case "vec4":
                                        k = 7;
                                        break;
                                    default:
                                        k = null
                                }
                                switch (k) {
                                    case 1:
                                    case 5:
                                    case 9:
                                        e = 2;
                                        break;
                                    case 3:
                                    case 7:
                                    case 11:
                                    case 12:
                                        e = 4;
                                        break;
                                    case 2:
                                    case 6:
                                    case 10:
                                        e = 3;
                                        break;
                                    case 16:
                                        e = 9;
                                        break;
                                    case 20:
                                        e = 16;
                                        break;
                                    default:
                                        e = 1
                                }
                                switch (k) {
                                    case 12:
                                        var p = 2;
                                        break;
                                    case 16:
                                        p = 3;
                                        break;
                                    case 20:
                                        p = 4;
                                        break;
                                    default:
                                        p = 1
                                }
                                switch (k) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        var m = new sg;
                                        m.set_name(f);
                                        m.type = k;
                                        m.__arrayLength = p;
                                        m.__isBool = !0;
                                        m.__isUniform = c;
                                        m.__length = e;
                                        this.__paramBool.push(m);
                                        "openfl_HasColorTransform" == f && (this.__hasColorTransform = m);
                                        this.__data[f] = m;
                                        this.__isGenerated && (this[f] = m);
                                        break;
                                    case 8:
                                    case 9:
                                    case 10:
                                    case 11:
                                        m = new sg;
                                        m.set_name(f);
                                        m.type = k;
                                        m.__arrayLength = p;
                                        m.__isInt = !0;
                                        m.__isUniform = c;
                                        m.__length = e;
                                        this.__paramInt.push(m);
                                        this.__data[f] = m;
                                        this.__isGenerated && (this[f] = m);
                                        break;
                                    default:
                                        m =
                                            new sg;
                                        m.set_name(f);
                                        m.type = k;
                                        m.__arrayLength = p;
                                        0 < p && (k = p * p, k = null != k ? new Float32Array(k) : null, m.__uniformMatrix = k);
                                        m.__isFloat = !0;
                                        m.__isUniform = c;
                                        m.__length = e;
                                        this.__paramFloat.push(m);
                                        if (K.startsWith(f, "openfl_")) switch (f) {
                                            case "openfl_Alpha":
                                                this.__alpha = m;
                                                break;
                                            case "openfl_ColorMultiplier":
                                                this.__colorMultiplier = m;
                                                break;
                                            case "openfl_ColorOffset":
                                                this.__colorOffset = m;
                                                break;
                                            case "openfl_Matrix":
                                                this.__matrix = m;
                                                break;
                                            case "openfl_Position":
                                                this.__position = m;
                                                break;
                                            case "openfl_TextureCoord":
                                                this.__textureCoord =
                                                    m;
                                                break;
                                            case "openfl_TextureSize":
                                                this.__textureSize = m
                                        }
                                        this.__data[f] = m;
                                        this.__isGenerated && (this[f] = m)
                                }
                            }
                            f = d.matchedPos();
                            c = f.pos + f.len
                        }
                    }
                },
                __update: function() {
                    null != this.program && this.__updateGL()
                },
                __updateFromBuffer: function(a, b) {
                    null != this.program && this.__updateGLFromBuffer(a, b)
                },
                __updateGL: function() {
                    for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__updateGL(this.__context, a);
                        ++a
                    }
                    b = 0;
                    for (c = this.__paramBool; b < c.length;) a = c[b], ++b, a.__updateGL(this.__context);
                    b = 0;
                    for (c = this.__paramFloat; b <
                        c.length;) a = c[b], ++b, a.__updateGL(this.__context);
                    b = 0;
                    for (c = this.__paramInt; b < c.length;) a = c[b], ++b, a.__updateGL(this.__context)
                },
                __updateGLFromBuffer: function(a, b) {
                    for (var c = 0, d, e, f, k, p, m = 0, h = a.inputCount; m < h;) p = m++, d = a.inputRefs[p], e = a.inputs[p], f = a.inputFilter[p], k = a.inputMipFilter[p], p = a.inputWrap[p], null != e && (d.__updateGL(this.__context, c, e, f, k, p), ++c);
                    m = this.__context.gl;
                    0 < a.paramDataLength ? (null == a.paramDataBuffer && (a.paramDataBuffer = m.createBuffer()), this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
                        pc.bufferData(m, m.ARRAY_BUFFER, a.paramData, m.DYNAMIC_DRAW)) : this.__context.__bindGLArrayBuffer(null);
                    e = d = c = 0;
                    f = a.paramBoolCount;
                    k = a.paramFloatCount;
                    var g = a.paramData,
                        l = null,
                        q = null,
                        n = null;
                    m = 0;
                    for (h = a.paramCount; m < h;) {
                        p = m++;
                        var r = !1;
                        if (p < f) {
                            var D = a.paramRefs_Bool[c];
                            for (var w = 0, x = a.overrideBoolCount; w < x;) {
                                var u = w++;
                                if (D.name == a.overrideBoolNames[u]) {
                                    l = a.overrideBoolValues[u];
                                    r = !0;
                                    break
                                }
                            }
                            r ? D.__updateGL(this.__context, l) : D.__updateGLFromBuffer(this.__context, g, a.paramPositions[p], a.paramLengths[p], b);
                            ++c
                        } else if (p < f + k) {
                            D = a.paramRefs_Float[d];
                            w = 0;
                            for (x = a.overrideFloatCount; w < x;)
                                if (u = w++, D.name == a.overrideFloatNames[u]) {
                                    q = a.overrideFloatValues[u];
                                    r = !0;
                                    break
                                }
                            r ? D.__updateGL(this.__context, q) : D.__updateGLFromBuffer(this.__context, g, a.paramPositions[p], a.paramLengths[p], b);
                            ++d
                        } else {
                            D = a.paramRefs_Int[e];
                            w = 0;
                            for (x = a.overrideIntCount; w < x;)
                                if (u = w++, D.name == a.overrideIntNames[u]) {
                                    n = a.overrideIntValues[u];
                                    r = !0;
                                    break
                                }
                            r ? D.__updateGL(this.__context, n) : D.__updateGLFromBuffer(this.__context, g, a.paramPositions[p],
                                a.paramLengths[p], b);
                            ++e
                        }
                    }
                },
                get_glFragmentSource: function() {
                    return this.__glFragmentSource
                },
                get_glVertexSource: function() {
                    return this.__glVertexSource
                },
                __class__: Pd,
                __properties__: {
                    get_glVertexSource: "get_glVertexSource",
                    get_glFragmentSource: "get_glFragmentSource"
                }
            };
            var Tf = function(a) {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Pd.call(this, a);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.display.GraphicsShader"] = Tf;
            Tf.__name__ = "openfl.display.GraphicsShader";
            Tf.__super__ = Pd;
            Tf.prototype = n(Pd.prototype, {
                __class__: Tf
            });
            var Ai = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tuniform bool hasTransform;\n\t\tuniform bool hasColorTransform;\n\n\t\tvec4 flixel_texture2D(sampler2D bitmap, vec2 coord)\n\t\t{\n\t\t\tvec4 color = texture2D(bitmap, coord);\n\t\t\tif (!hasTransform)\n\t\t\t{\n\t\t\t\treturn color;\n\t\t\t}\n\n\t\t\tif (color.a == 0.0)\n\t\t\t{\n\t\t\t\treturn vec4(0.0, 0.0, 0.0, 0.0);\n\t\t\t}\n\n\t\t\tif (!hasColorTransform)\n\t\t\t{\n\t\t\t\treturn color * openfl_Alphav;\n\t\t\t}\n\n\t\t\tcolor = vec4(color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4(0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp(openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0)\n\t\t\t{\n\t\t\t\treturn vec4(color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\t\t\t}\n\t\t\treturn vec4(0.0, 0.0, 0.0, 0.0);\n\t\t}\n\t\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\tgl_FragColor = flixel_texture2D(bitmap, openfl_TextureCoordv);\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "\n\t\tattribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\t\n\t\tattribute float alpha;\n\t\tattribute vec4 colorMultiplier;\n\t\tattribute vec4 colorOffset;\n\t\tuniform bool hasColorTransform;\n\t\t\n\t\tvoid main(void)\n\t\t{\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t\t\n\t\t\topenfl_Alphav = openfl_Alpha * alpha;\n\t\t\t\n\t\t\tif (hasColorTransform)\n\t\t\t{\n\t\t\t\topenfl_ColorOffsetv = colorOffset / 255.0;\n\t\t\t\topenfl_ColorMultiplierv = colorMultiplier;\n\t\t\t}\n\t\t}");
                Tf.call(this);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["flixel.graphics.tile.FlxGraphicsShader"] = Ai;
            Ai.__name__ = "flixel.graphics.tile.FlxGraphicsShader";
            Ai.__super__ = Tf;
            Ai.prototype = n(Tf.prototype, {
                __class__: Ai
            });
            var rh = function(a, b) {
                this._groupMembers = a;
                this._filter = b;
                this._cursor = 0;
                this._length = this._groupMembers.length
            };
            g["flixel.group.FlxTypedGroupIterator"] = rh;
            rh.__name__ = "flixel.group.FlxTypedGroupIterator";
            rh.prototype = {
                next: function() {
                    return this.hasNext() ? this._groupMembers[this._cursor++] :
                        null
                },
                hasNext: function() {
                    for (; this._cursor < this._length && (null == this._groupMembers[this._cursor] || null != this._filter && !this._filter(this._groupMembers[this._cursor]));) this._cursor++;
                    return this._cursor < this._length
                },
                __class__: rh
            };
            var yk = function() {
                this.x = this.y = this.z = 0;
                Bb.get_isSupported() && (this._sensor = new Bb, this._sensor.addEventListener("update", r(this, this.update)))
            };
            g["flixel.input.FlxAccelerometer"] = yk;
            yk.__name__ = "flixel.input.FlxAccelerometer";
            yk.prototype = {
                update: function(a) {
                    this.x = a.accelerationX;
                    this.y = a.accelerationY;
                    this.z = a.accelerationZ;
                    this.x /= 10;
                    this.y /= 10;
                    this.z /= 10
                },
                __class__: yk
            };
            var sh = function(a, b) {
                this.status = a;
                this.keyManager = b
            };
            g["flixel.input.FlxBaseKeyList"] = sh;
            sh.__name__ = "flixel.input.FlxBaseKeyList";
            sh.prototype = {
                get_ANY: function() {
                    for (var a = 0, b = this.keyManager._keyListArray; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (null != c && this.keyManager.checkStatus(c.ID, this.status)) return !0
                    }
                    return !1
                },
                get_NONE: function() {
                    for (var a = 0, b = this.keyManager._keyListArray; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (null !=
                            c && this.keyManager.checkStatus(c.ID, this.status)) return !1
                    }
                    return !0
                },
                __class__: sh,
                __properties__: {
                    get_NONE: "get_NONE",
                    get_ANY: "get_ANY"
                }
            };
            var Vc = function(a) {
                this.current = this.last = 0;
                this.ID = a
            };
            g["flixel.input.FlxInput"] = Vc;
            Vc.__name__ = "flixel.input.FlxInput";
            Vc.__interfaces__ = [Sf];
            Vc.prototype = {
                press: function() {
                    this.last = this.current;
                    this.current = 1 == this.current || 2 == this.current ? 1 : 2
                },
                release: function() {
                    this.last = this.current;
                    this.current = 1 == this.current || 2 == this.current ? -1 : 0
                },
                update: function() {
                    -1 ==
                        this.last && -1 == this.current ? this.current = 0 : 2 == this.last && 2 == this.current && (this.current = 1);
                    this.last = this.current
                },
                reset: function() {
                    this.last = this.current = 0
                },
                hasState: function(a) {
                    switch (a) {
                        case -1:
                            return -1 == this.current;
                        case 0:
                            return 0 != this.current ? -1 == this.current : !0;
                        case 1:
                            return 1 != this.current ? 2 == this.current : !0;
                        case 2:
                            return 2 == this.current
                    }
                },
                get_justReleased: function() {
                    return -1 == this.current
                },
                get_pressed: function() {
                    return 1 != this.current ? 2 == this.current : !0
                },
                get_justPressed: function() {
                    return 2 ==
                        this.current
                },
                __class__: Vc,
                __properties__: {
                    get_justPressed: "get_justPressed",
                    get_pressed: "get_pressed",
                    get_justReleased: "get_justReleased"
                }
            };
            var Bf = function(a) {
                this._keyListMap = new Tb;
                this._keyListArray = [];
                this.preventDefaultKeys = [];
                this.enabled = !0;
                la.get_current().stage.addEventListener("keyDown", r(this, this.onKeyDown));
                la.get_current().stage.addEventListener("keyUp", r(this, this.onKeyUp));
                this.pressed = a(1, this);
                this.released = a(0, this);
                this.justPressed = a(2, this);
                this.justReleased = a(-1, this)
            };
            g["flixel.input.FlxKeyManager"] =
                Bf;
            Bf.__name__ = "flixel.input.FlxKeyManager";
            Bf.__interfaces__ = [Af];
            Bf.prototype = {
                checkStatus: function(a, b) {
                    switch (a) {
                        case -2:
                            switch (b) {
                                case -1:
                                    return this.justReleased.get_ANY();
                                case 0:
                                    return this.released.get_ANY();
                                case 1:
                                    return this.pressed.get_ANY();
                                case 2:
                                    return this.justPressed.get_ANY()
                            }
                            break;
                        case -1:
                            switch (b) {
                                case -1:
                                    return this.justReleased.get_NONE();
                                case 0:
                                    return this.released.get_NONE();
                                case 1:
                                    return this.pressed.get_NONE();
                                case 2:
                                    return this.justPressed.get_NONE()
                            }
                            break;
                        default:
                            return a =
                                this._keyListMap.h[a], null == a ? !1 : a.hasState(b)
                    }
                },
                destroy: function() {
                    this._keyListMap = this._keyListArray = null
                },
                reset: function() {
                    for (var a = 0, b = this._keyListArray; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c && c.release()
                    }
                },
                update: function() {
                    for (var a = 0, b = this._keyListArray; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c && c.update()
                    }
                },
                checkKeyArrayState: function(a, b) {
                    if (null == a) return !1;
                    for (var c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        if (this.checkStatus(d, b)) return !0
                    }
                    return !1
                },
                onKeyUp: function(a) {
                    var b = this.resolveKeyCode(a);
                    this.handlePreventDefaultKeys(b,
                        a);
                    this.enabled && (a = this._keyListMap.h[b], null != a && a.release())
                },
                onKeyDown: function(a) {
                    var b = this.resolveKeyCode(a);
                    this.handlePreventDefaultKeys(b, a);
                    this.enabled && (a = this._keyListMap.h[b], null != a && a.press())
                },
                handlePreventDefaultKeys: function(a, b) {
                    a = this._keyListMap.h[a];
                    null != a && null != this.preventDefaultKeys && -1 != this.preventDefaultKeys.indexOf(a.ID) && (b.stopImmediatePropagation(), b.stopPropagation(), b.preventDefault())
                },
                resolveKeyCode: function(a) {
                    return a.keyCode
                },
                onFocus: function() {},
                onFocusLost: function() {
                    this.reset()
                },
                __class__: Bf
            };
            var Di = function(a, b, c, d) {
                this.ID = a;
                this.startPosition = b;
                this.endPosition = c;
                this._startTimeInTicks = d;
                this._endTimeInTicks = q.game.ticks
            };
            g["flixel.input.FlxSwipe"] = Di;
            Di.__name__ = "flixel.input.FlxSwipe";
            Di.prototype = {
                __class__: Di
            };
            var Cd = function(a, b) {
                this._checked = !1;
                this._timestamp = 0;
                this._x = this._y = null;
                this.triggered = !1;
                this.type = a;
                this.name = b;
                this.inputs = []
            };
            g["flixel.input.actions.FlxAction"] = Cd;
            Cd.__name__ = "flixel.input.actions.FlxAction";
            Cd.__interfaces__ = [L];
            Cd.prototype = {
                remove: function(a,
                    b) {
                    null == b && (b = !1);
                    null != a && (Y.remove(this.inputs, a), b && a.destroy())
                },
                check: function() {
                    this._y = this._x = null;
                    if (this._timestamp == q.game.ticks) return this.triggered = this._checked;
                    this._timestamp = q.game.ticks;
                    this._checked = !1;
                    for (var a = null != this.inputs ? this.inputs.length : 0, b = 0; b < a;) {
                        var c = b++;
                        c = a - c - 1;
                        var d = this.inputs[c];
                        d.destroyed ? this.inputs.splice(c, 1) : (d.update(), d.check(this) && (this._checked = !0))
                    }
                    return this.triggered = this._checked
                },
                destroy: function() {
                    V.destroyArray(this.inputs);
                    this.inputs = null
                },
                addGenericInput: function(a) {
                    null == this.inputs && (this.inputs = []);
                    this.checkExists(a) || this.inputs.push(a);
                    return this
                },
                checkExists: function(a) {
                    return null == this.inputs ? !1 : -1 != this.inputs.indexOf(a)
                },
                __class__: Cd
            };
            var vc = function(a, b) {
                null == a && (a = "");
                Cd.call(this, ok.DIGITAL, a);
                this.callback = b
            };
            g["flixel.input.actions.FlxActionDigital"] = vc;
            vc.__name__ = "flixel.input.actions.FlxActionDigital";
            vc.__super__ = Cd;
            vc.prototype = n(Cd.prototype, {
                add: function(a) {
                    this.addGenericInput(a);
                    return this
                },
                addGamepad: function(a,
                    b, c) {
                    null == c && (c = -2);
                    return this.add(new Ei(a, b, c))
                },
                addKey: function(a, b) {
                    return this.add(new Fi(a, b))
                },
                destroy: function() {
                    this.callback = null;
                    Cd.prototype.destroy.call(this)
                },
                check: function() {
                    var a = Cd.prototype.check.call(this);
                    a && null != this.callback && this.callback(this);
                    return a
                },
                __class__: vc
            });
            var Ik = function(a, b) {
                null == a && (a = "");
                Cd.call(this, ok.ANALOG, a);
                this.callback = b
            };
            g["flixel.input.actions.FlxActionAnalog"] = Ik;
            Ik.__name__ = "flixel.input.actions.FlxActionAnalog";
            Ik.__super__ = Cd;
            Ik.prototype =
                n(Cd.prototype, {
                    destroy: function() {
                        this.callback = null;
                        Cd.prototype.destroy.call(this)
                    },
                    check: function() {
                        var a = Cd.prototype.check.call(this);
                        a && null != this.callback && this.callback(this);
                        return a
                    },
                    __class__: Ik
                });
            var tg = function(a, b, c, d, e) {
                null == e && (e = -2);
                this.destroyed = !1;
                this.type = a;
                this.device = b;
                this.inputID = c;
                this.trigger = d;
                this.deviceID = e
            };
            g["flixel.input.actions.FlxActionInput"] = tg;
            tg.__name__ = "flixel.input.actions.FlxActionInput";
            tg.__interfaces__ = [L];
            tg.prototype = {
                update: function() {},
                destroy: function() {
                    this.destroyed = !0
                },
                check: function(a) {
                    return !1
                },
                __class__: tg
            };
            var ok = w["flixel.input.actions.FlxInputType"] = {
                    __ename__: "flixel.input.actions.FlxInputType",
                    __constructs__: ["DIGITAL", "ANALOG"],
                    DIGITAL: {
                        _hx_index: 0,
                        __enum__: "flixel.input.actions.FlxInputType",
                        toString: h
                    },
                    ANALOG: {
                        _hx_index: 1,
                        __enum__: "flixel.input.actions.FlxInputType",
                        toString: h
                    }
                },
                pk = w["flixel.input.actions.FlxInputDevice"] = {
                    __ename__: "flixel.input.actions.FlxInputDevice",
                    __constructs__: "UNKNOWN MOUSE MOUSE_WHEEL KEYBOARD GAMEPAD STEAM_CONTROLLER IFLXINPUT_OBJECT OTHER ALL NONE".split(" "),
                    UNKNOWN: {
                        _hx_index: 0,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    MOUSE: {
                        _hx_index: 1,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    MOUSE_WHEEL: {
                        _hx_index: 2,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    KEYBOARD: {
                        _hx_index: 3,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    GAMEPAD: {
                        _hx_index: 4,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    STEAM_CONTROLLER: {
                        _hx_index: 5,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    IFLXINPUT_OBJECT: {
                        _hx_index: 6,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    OTHER: {
                        _hx_index: 7,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    ALL: {
                        _hx_index: 8,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    },
                    NONE: {
                        _hx_index: 9,
                        __enum__: "flixel.input.actions.FlxInputDevice",
                        toString: h
                    }
                },
                Se = function(a, b, c, d) {
                    null == d && (d = -2);
                    tg.call(this, ok.DIGITAL, a, b, c, d);
                    this.inputID = b
                };
            g["flixel.input.actions.FlxActionInputDigital"] = Se;
            Se.__name__ = "flixel.input.actions.FlxActionInputDigital";
            Se.__super__ = tg;
            Se.prototype = n(tg.prototype, {
                __class__: Se
            });
            var Ei = function(a, b, c) {
                null == c && (c = -2);
                Se.call(this, pk.GAMEPAD, a, b, c);
                this.input = new Vc(a)
            };
            g["flixel.input.actions.FlxActionInputDigitalGamepad"] = Ei;
            Ei.__name__ = "flixel.input.actions.FlxActionInputDigitalGamepad";
            Ei.__super__ = Se;
            Ei.prototype = n(Se.prototype, {
                update: function() {
                    Se.prototype.update.call(this);
                    if (-1 == this.deviceID) q.gamepads.anyHasState(this.inputID, 1) || q.gamepads.anyHasState(this.inputID, 2) ? this.input.press() : this.input.release();
                    else {
                        var a =
                            null; - 2 == this.deviceID ? a = q.gamepads.getFirstActiveGamepad() : 0 <= this.deviceID && (a = q.gamepads._activeGamepads[this.deviceID]);
                        if (null != a)
                            if (-2 == this.inputID && 0 == this.trigger) a.released.get_ANY() ? this.input.release() : this.input.press();
                            else {
                                var b = this.inputID,
                                    c = 1;
                                switch (b) {
                                    case -2:
                                        c = a.anyButton(c);
                                        break;
                                    case -1:
                                        c = !a.anyButton(c);
                                        break;
                                    default:
                                        b = a.mapping.getRawID(b), b = a.buttons[b], c = null != b && b.hasState(c)
                                }
                                if (c) a = !0;
                                else switch (b = this.inputID, c = 2, b) {
                                    case -2:
                                        a = a.anyButton(c);
                                        break;
                                    case -1:
                                        a = !a.anyButton(c);
                                        break;
                                    default:
                                        b = a.mapping.getRawID(b), b = a.buttons[b], a = null != b && b.hasState(c)
                                }
                                a ? this.input.press() : this.input.release()
                            }
                        else -2 == this.deviceID && this.input.release()
                    }
                },
                check: function(a) {
                    switch (this.trigger) {
                        case -1:
                            return -1 == this.input.current;
                        case 0:
                            return a = this.input, 0 != a.current && -1 != a.current ? -1 == this.input.current : !0;
                        case 1:
                            return a = this.input, 1 != a.current && 2 != a.current ? 2 == this.input.current : !0;
                        case 2:
                            return 2 == this.input.current;
                        default:
                            return !1
                    }
                },
                __class__: Ei
            });
            var Fi = function(a, b) {
                Se.call(this,
                    pk.KEYBOARD, a, b)
            };
            g["flixel.input.actions.FlxActionInputDigitalKeyboard"] = Fi;
            Fi.__name__ = "flixel.input.actions.FlxActionInputDigitalKeyboard";
            Fi.__super__ = Se;
            Fi.prototype = n(Se.prototype, {
                check: function(a) {
                    switch (this.trigger) {
                        case -1:
                            return q.keys.checkStatus(this.inputID, -1);
                        case 0:
                            return q.keys.checkStatus(this.inputID, 0) ? !0 : q.keys.checkStatus(this.inputID, -1);
                        case 1:
                            return q.keys.checkStatus(this.inputID, 1) ? !0 : q.keys.checkStatus(this.inputID, 2);
                        case 2:
                            return q.keys.checkStatus(this.inputID, 2);
                        default:
                            return !1
                    }
                },
                __class__: Fi
            });
            var Gi = function(a, b, c, d) {
                this.buttons = [];
                this._deadZone = .15;
                d = [];
                d.push(0);
                d.push(0);
                d.push(0);
                d.push(0);
                d.push(0);
                d.push(0);
                this.axis = d;
                this.deadZoneMode = im.INDEPENDENT_AXES;
                this.connected = !0;
                this.id = a;
                this.manager = b;
                this.pressed = new Uf(1, this);
                this.released = new Uf(0, this);
                this.justPressed = new Uf(2, this);
                this.justReleased = new Uf(-1, this);
                this.analog = new Jk(this);
                this.motion = new Kk(this);
                this.pointer = new Lk(this);
                null == c && (c = Qd.XINPUT);
                this.set_model(c);
                this.detectedModel =
                    c
            };
            g["flixel.input.gamepad.FlxGamepad"] = Gi;
            Gi.__name__ = "flixel.input.gamepad.FlxGamepad";
            Gi.__interfaces__ = [L];
            Gi.prototype = {
                getButton: function(a) {
                    if (-1 == a) return null;
                    var b = this.buttons[a];
                    null == b && (b = new Hi(a), this.buttons[a] = b);
                    return b
                },
                update: function() {
                    if (null != this._device) {
                        for (var a = 0, b = this._device.get_numControls(); a < b;) {
                            var c = a++;
                            var d = this._device.getControlAt(c);
                            var e = this.getButton(c);
                            this.isAxisForAnalogStick(c) && this.handleAxisMove(c, d.value, e.value);
                            e.value = d.value;
                            d = Math.abs(d.value);
                            d < this.get_deadZone() ? e.release() : d > this.get_deadZone() && e.press()
                        }
                        a = 0;
                        for (b = this.buttons; a < b.length;) e = b[a], ++a, null != e && e.update()
                    }
                },
                reset: function() {
                    for (var a = 0, b = this.buttons; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c && c.reset()
                    }
                    b = this.axis.length;
                    for (a = 0; a < b;) c = a++, this.axis[c] = 0
                },
                destroy: function() {
                    this.connected = !1;
                    this.manager = this.axis = this.buttons = null
                },
                checkButtonArrayState: function(a, b) {
                    if (null == a) return !1;
                    for (var c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        switch (d) {
                            case -2:
                                d = this.anyButton(b);
                                break;
                            case -1:
                                d = !this.anyButton(b);
                                break;
                            default:
                                d = this.mapping.getRawID(d), d = this.buttons[d], d = null != d && d.hasState(b)
                        }
                        if (d) return !0
                    }
                    return !1
                },
                getAxis: function(a) {
                    a = this.getAxisValue(this.mapping.getRawID(a));
                    return Math.abs(a) > this.get_deadZone() ? a : 0
                },
                isAxisForAnalogStick: function(a) {
                    var b = this.mapping.leftStick,
                        c = this.mapping.rightStick;
                    return null != b && (a == b.x || a == b.y) || null != c && (a == c.x || a == c.y) ? !0 : !1
                },
                getYAxisRaw: function(a) {
                    return this.getAnalogYAxisValue(a)
                },
                anyButton: function(a) {
                    null == a && (a = 1);
                    for (var b = 0,
                            c = this.buttons; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (null != d && d.hasState(a)) return !0
                    }
                    return !1
                },
                anyInput: function() {
                    if (this.anyButton()) return !0;
                    for (var a = 0, b = this.axis.length; a < b;)
                        if (a++, 0 != this.axis[0]) return !0;
                    return !1
                },
                getAxisValue: function(a) {
                    var b = 0;
                    if (-1 == a) return 0;
                    if (null != this._device && this._device.enabled) {
                        var c = this._device.get_numControls() - 1;
                        c = 0 <= a && (null == c || a <= c)
                    } else c = !1;
                    c && (b = this._device.getControlAt(a).value);
                    this.isAxisForAnalogStick(a) && this.mapping.isAxisFlipped(a) && (b *= -1);
                    return b
                },
                getAnalogXAxisValue: function(a) {
                    return null == a ? 0 : this.deadZoneMode == im.CIRCULAR ? this.getAnalogAxisValueCircular(a, a.x) : this.getAnalogAxisValueIndependent(a.x)
                },
                getAnalogYAxisValue: function(a) {
                    return null == a ? 0 : this.deadZoneMode == im.CIRCULAR ? this.getAnalogAxisValueCircular(a, a.y) : this.getAnalogAxisValueIndependent(a.y)
                },
                getAnalogAxisValueCircular: function(a, b) {
                    if (null == a) return 0;
                    var c = this.getAxisValue(a.x);
                    a = this.getAxisValue(a.y);
                    null == a && (a = 0);
                    null == c && (c = 0);
                    null == a && (a = 0);
                    null == c && (c = 0);
                    c = X._pool.get().set(c,
                        a);
                    c._inPool = !1;
                    a = Math.sqrt(c.x * c.x + c.y * c.y);
                    c.put();
                    return a > this.get_deadZone() ? this.getAxisValue(b) : 0
                },
                getAnalogAxisValueIndependent: function(a) {
                    a = this.getAxisValue(a);
                    return Math.abs(a) > this.get_deadZone() ? a : 0
                },
                handleAxisMove: function(a, b, c) {
                    var d = b;
                    this.mapping.isAxisFlipped(a) && (d *= -1);
                    b = d;
                    d = c;
                    this.mapping.isAxisFlipped(a) && (d *= -1);
                    c = d;
                    d = this.mapping.leftStick;
                    var e = this.mapping.rightStick;
                    d = null != d && a == d.x || a == d.y ? d : null != e && a == e.x || a == e.y ? e : null;
                    if (d.mode == Ii.ONLY_DIGITAL || d.mode == Ii.BOTH) this.handleAxisMoveSub(d,
                        a, b, c, 1), this.handleAxisMoveSub(d, a, b, c, -1)
                },
                handleAxisMoveSub: function(a, b, c, d, e) {
                    null == e && (e = 1);
                    var f = -1;
                    b == a.x ? f = 0 > e ? a.rawLeft : a.rawRight : b == a.y && (f = 0 > e ? a.rawUp : a.rawDown);
                    a = a.digitalThreshold;
                    c *= e;
                    d *= e;
                    c > a && d <= a ? (f = this.getButton(f), null != f && f.press()) : c <= a && d > a && (f = this.getButton(f), null != f && f.release())
                },
                createMappingForModel: function(a) {
                    switch (a._hx_index) {
                        case 0:
                            return new Ji(this.attachment);
                        case 1:
                            return new Ki(this.attachment);
                        case 2:
                            return new Li(this.attachment);
                        case 3:
                            return new Mi(this.attachment);
                        case 4:
                            return new th(this.attachment);
                        case 5:
                            return new Ni(this.attachment);
                        case 6:
                            return new Oi(this.attachment);
                        case 7:
                            return new Pi(this.attachment);
                        case 8:
                            return new Qi(this.attachment);
                        case 9:
                            return new Ri(this.attachment);
                        case 10:
                            return new Si(this.attachment);
                        default:
                            return new th(this.attachment)
                    }
                },
                set_model: function(a) {
                    this.model = a;
                    this.mapping = this.createMappingForModel(this.model);
                    return this.model
                },
                get_deadZone: function() {
                    return null == this.manager || null == this.manager.globalDeadZone ? this._deadZone :
                        this.manager.globalDeadZone
                },
                __class__: Gi,
                __properties__: {
                    get_deadZone: "get_deadZone",
                    set_model: "set_model"
                }
            };
            var im = w["flixel.input.gamepad.FlxGamepadDeadZoneMode"] = {
                    __ename__: "flixel.input.gamepad.FlxGamepadDeadZoneMode",
                    __constructs__: ["INDEPENDENT_AXES", "CIRCULAR"],
                    INDEPENDENT_AXES: {
                        _hx_index: 0,
                        __enum__: "flixel.input.gamepad.FlxGamepadDeadZoneMode",
                        toString: h
                    },
                    CIRCULAR: {
                        _hx_index: 1,
                        __enum__: "flixel.input.gamepad.FlxGamepadDeadZoneMode",
                        toString: h
                    }
                },
                Qd = w["flixel.input.gamepad.FlxGamepadModel"] = {
                    __ename__: "flixel.input.gamepad.FlxGamepadModel",
                    __constructs__: "LOGITECH OUYA PS4 PSVITA XINPUT MAYFLASH_WII_REMOTE WII_REMOTE MFI SWITCH_PRO SWITCH_JOYCON_LEFT SWITCH_JOYCON_RIGHT UNKNOWN".split(" "),
                    LOGITECH: {
                        _hx_index: 0,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    OUYA: {
                        _hx_index: 1,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    PS4: {
                        _hx_index: 2,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    PSVITA: {
                        _hx_index: 3,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    XINPUT: {
                        _hx_index: 4,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    MAYFLASH_WII_REMOTE: {
                        _hx_index: 5,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    WII_REMOTE: {
                        _hx_index: 6,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    MFI: {
                        _hx_index: 7,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    SWITCH_PRO: {
                        _hx_index: 8,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    SWITCH_JOYCON_LEFT: {
                        _hx_index: 9,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    SWITCH_JOYCON_RIGHT: {
                        _hx_index: 10,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    },
                    UNKNOWN: {
                        _hx_index: 11,
                        __enum__: "flixel.input.gamepad.FlxGamepadModel",
                        toString: h
                    }
                },
                zm = w["flixel.input.gamepad.FlxGamepadAttachment"] = {
                    __ename__: "flixel.input.gamepad.FlxGamepadAttachment",
                    __constructs__: ["WII_NUNCHUCK", "WII_CLASSIC_CONTROLLER", "NONE"],
                    WII_NUNCHUCK: {
                        _hx_index: 0,
                        __enum__: "flixel.input.gamepad.FlxGamepadAttachment",
                        toString: h
                    },
                    WII_CLASSIC_CONTROLLER: {
                        _hx_index: 1,
                        __enum__: "flixel.input.gamepad.FlxGamepadAttachment",
                        toString: h
                    },
                    NONE: {
                        _hx_index: 2,
                        __enum__: "flixel.input.gamepad.FlxGamepadAttachment",
                        toString: h
                    }
                },
                Sb = function(a, b, c) {
                    this.mode = Ii.BOTH;
                    this.digitalThreshold = .5;
                    this.rawUp = this.rawDown = this.rawLeft = this.rawRight = -1;
                    this.x = a;
                    this.y = b;
                    null != c && (this.mode = null != c.mode ? c.mode : Ii.BOTH, this.rawUp = null != c.up ? c.up : -1, this.rawDown = null != c.down ? c.down : -1, this.rawLeft = null != c.left ? c.left : -1, this.rawRight = null != c.right ? c.right : -1, this.digitalThreshold = null != c.threshold ? c.threshold : .5)
                };
            g["flixel.input.gamepad.FlxGamepadAnalogStick"] =
                Sb;
            Sb.__name__ = "flixel.input.gamepad.FlxGamepadAnalogStick";
            Sb.prototype = {
                __class__: Sb
            };
            var Ii = w["flixel.input.gamepad.FlxAnalogToDigitalMode"] = {
                    __ename__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
                    __constructs__: ["BOTH", "ONLY_DIGITAL", "ONLY_ANALOG"],
                    BOTH: {
                        _hx_index: 0,
                        __enum__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
                        toString: h
                    },
                    ONLY_DIGITAL: {
                        _hx_index: 1,
                        __enum__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
                        toString: h
                    },
                    ONLY_ANALOG: {
                        _hx_index: 2,
                        __enum__: "flixel.input.gamepad.FlxAnalogToDigitalMode",
                        toString: h
                    }
                },
                Hi = function(a) {
                    this.value = 0;
                    Vc.call(this, a)
                };
            g["flixel.input.gamepad.FlxGamepadButton"] = Hi;
            Hi.__name__ = "flixel.input.gamepad.FlxGamepadButton";
            Hi.__super__ = Vc;
            Hi.prototype = n(Vc.prototype, {
                __class__: Hi
            });
            var dd = {},
                Ta = function() {
                    ua.call(this);
                    Ta.__instances.push(this)
                };
            g["openfl.ui.GameInput"] = Ta;
            Ta.__name__ = "openfl.ui.GameInput";
            Ta.getDeviceAt = function(a) {
                return 0 <= a && a < Ta.__deviceList.length ? Ta.__deviceList[a] : null
            };
            Ta.__getDevice = function(a) {
                if (null == a) return null;
                if (null == Ta.__devices.h.__keys__[a.__id__]) {
                    var b =
                        Ub.__getDeviceData(),
                        c = b[a.id].id;
                    b = Ub.__getDeviceData();
                    b = new Mk(c, b[a.id].id);
                    Ta.__deviceList.push(b);
                    Ta.__devices.set(a, b);
                    Ta.numDevices = Ta.__deviceList.length
                }
                return Ta.__devices.h[a.__id__]
            };
            Ta.__onGamepadAxisMove = function(a, b, c) {
                a = Ta.__getDevice(a);
                if (null != a && a.enabled) {
                    if (!a.__axis.h.hasOwnProperty(b)) {
                        if (null == b) var d = "null";
                        else switch (b) {
                            case 0:
                                d = "LEFT_X";
                                break;
                            case 1:
                                d = "LEFT_Y";
                                break;
                            case 2:
                                d = "RIGHT_X";
                                break;
                            case 3:
                                d = "RIGHT_Y";
                                break;
                            case 4:
                                d = "TRIGGER_LEFT";
                                break;
                            case 5:
                                d = "TRIGGER_RIGHT";
                                break;
                            default:
                                d = "UNKNOWN (" + b + ")"
                        }
                        d = new Dd(a, "AXIS_" + d, -1, 1);
                        a.__axis.h[b] = d;
                        a.__controls.push(d)
                    }
                    d = a.__axis.h[b];
                    d.value = c;
                    d.dispatchEvent(new sa("change"))
                }
            };
            Ta.__onGamepadButtonDown = function(a, b) {
                a = Ta.__getDevice(a);
                if (null != a && a.enabled) {
                    if (!a.__button.h.hasOwnProperty(b)) {
                        if (null == b) var c = "null";
                        else switch (b) {
                            case 0:
                                c = "A";
                                break;
                            case 1:
                                c = "B";
                                break;
                            case 2:
                                c = "X";
                                break;
                            case 3:
                                c = "Y";
                                break;
                            case 4:
                                c = "BACK";
                                break;
                            case 5:
                                c = "GUIDE";
                                break;
                            case 6:
                                c = "START";
                                break;
                            case 7:
                                c = "LEFT_STICK";
                                break;
                            case 8:
                                c = "RIGHT_STICK";
                                break;
                            case 9:
                                c = "LEFT_SHOULDER";
                                break;
                            case 10:
                                c = "RIGHT_SHOULDER";
                                break;
                            case 11:
                                c = "DPAD_UP";
                                break;
                            case 12:
                                c = "DPAD_DOWN";
                                break;
                            case 13:
                                c = "DPAD_LEFT";
                                break;
                            case 14:
                                c = "DPAD_RIGHT";
                                break;
                            default:
                                c = "UNKNOWN (" + b + ")"
                        }
                        c = new Dd(a, "BUTTON_" + c, 0, 1);
                        a.__button.h[b] = c;
                        a.__controls.push(c)
                    }
                    c = a.__button.h[b];
                    c.value = 1;
                    c.dispatchEvent(new sa("change"))
                }
            };
            Ta.__onGamepadButtonUp = function(a, b) {
                a = Ta.__getDevice(a);
                if (null != a && a.enabled) {
                    if (!a.__button.h.hasOwnProperty(b)) {
                        if (null == b) var c = "null";
                        else switch (b) {
                            case 0:
                                c =
                                    "A";
                                break;
                            case 1:
                                c = "B";
                                break;
                            case 2:
                                c = "X";
                                break;
                            case 3:
                                c = "Y";
                                break;
                            case 4:
                                c = "BACK";
                                break;
                            case 5:
                                c = "GUIDE";
                                break;
                            case 6:
                                c = "START";
                                break;
                            case 7:
                                c = "LEFT_STICK";
                                break;
                            case 8:
                                c = "RIGHT_STICK";
                                break;
                            case 9:
                                c = "LEFT_SHOULDER";
                                break;
                            case 10:
                                c = "RIGHT_SHOULDER";
                                break;
                            case 11:
                                c = "DPAD_UP";
                                break;
                            case 12:
                                c = "DPAD_DOWN";
                                break;
                            case 13:
                                c = "DPAD_LEFT";
                                break;
                            case 14:
                                c = "DPAD_RIGHT";
                                break;
                            default:
                                c = "UNKNOWN (" + b + ")"
                        }
                        c = new Dd(a, "BUTTON_" + c, 0, 1);
                        a.__button.h[b] = c;
                        a.__controls.push(c)
                    }
                    c = a.__button.h[b];
                    c.value = 0;
                    c.dispatchEvent(new sa("change"))
                }
            };
            Ta.__onGamepadConnect = function(a) {
                a = Ta.__getDevice(a);
                if (null != a)
                    for (var b = 0, c = Ta.__instances; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.dispatchEvent(new ug("deviceAdded", !0, !1, a))
                    }
            };
            Ta.__onGamepadDisconnect = function(a) {
                var b = Ta.__devices.h[a.__id__];
                if (null != b) {
                    null != Ta.__devices.h.__keys__[a.__id__] && (Y.remove(Ta.__deviceList, Ta.__devices.h[a.__id__]), Ta.__devices.remove(a));
                    Ta.numDevices = Ta.__deviceList.length;
                    a = 0;
                    for (var c = Ta.__instances; a < c.length;) {
                        var d = c[a];
                        ++a;
                        d.dispatchEvent(new ug("deviceRemoved", !0, !1, b))
                    }
                }
            };
            Ta.__super__ = ua;
            Ta.prototype = n(ua.prototype, {
                addEventListener: function(a, b, c, d, e) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = !1);
                    ua.prototype.addEventListener.call(this, a, b, c, d, e);
                    if ("deviceAdded" == a)
                        for (a = 0, b = Ta.__deviceList; a < b.length;) c = b[a], ++a, this.dispatchEvent(new ug("deviceAdded", !0, !1, c))
                },
                __class__: Ta
            });
            var df = function() {
                this._activeGamepads = [];
                this._gamepads = [];
                this.deviceConnected = new bf;
                this.deviceDisconnected = new bf;
                df._gameInput.addEventListener("deviceAdded", r(this, this.onDeviceAdded));
                df._gameInput.addEventListener("deviceRemoved", r(this, this.onDeviceRemoved));
                for (var a = 0, b = Ta.numDevices; a < b;) {
                    var c = a++;
                    this.addGamepad(Ta.getDeviceAt(c))
                }
            };
            g["flixel.input.gamepad.FlxGamepadManager"] = df;
            df.__name__ = "flixel.input.gamepad.FlxGamepadManager";
            df.__interfaces__ = [Af];
            df.prototype = {
                removeByID: function(a) {
                    var b = this._gamepads[a];
                    null != b && (this._gamepads[a] = null, a = this._activeGamepads.indexOf(b), -1 != a && (this._activeGamepads[a] = null, this.deviceDisconnected.dispatch(b)), V.destroy(b));
                    this.lastActive ==
                        b && (this.lastActive = null);
                    this.firstActive == b && (this.firstActive = null)
                },
                createByID: function(a, b) {
                    var c = this._gamepads[a];
                    if (null == c) {
                        c = new Gi(a, this, b);
                        this._gamepads[a] = c;
                        a = !1;
                        b = 0;
                        for (var d = this._activeGamepads.length; b < d;) {
                            var e = b++;
                            if (null == this._activeGamepads[e]) {
                                this._activeGamepads[e] = c;
                                a = !0;
                                break
                            }
                        }
                        a || this._activeGamepads.push(c)
                    }
                    this.lastActive = c;
                    null == this.firstActive && (this.firstActive = c);
                    return c
                },
                getFirstActiveGamepad: function() {
                    for (var a = 0, b = this._gamepads; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (null != c && c.anyInput()) return c
                    }
                    return null
                },
                anyHasState: function(a, b) {
                    for (var c = 0, d = this._gamepads; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (null != e) switch (a) {
                            case -2:
                                e = e.anyButton(b);
                                break;
                            case -1:
                                e = !e.anyButton(b);
                                break;
                            default:
                                var f = e.mapping.getRawID(a);
                                e = e.buttons[f];
                                e = null != e && e.hasState(b)
                        } else e = !1;
                        if (e) return !0
                    }
                    return !1
                },
                destroy: function() {
                    V.destroyArray(this._gamepads);
                    this._gamepads = this.lastActive = this.firstActive = null;
                    df._gameInput.removeEventListener("deviceAdded", r(this, this.onDeviceAdded));
                    df._gameInput.removeEventListener("deviceRemoved", r(this, this.onDeviceRemoved))
                },
                reset: function() {
                    for (var a = 0, b = this._gamepads; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c && c.reset()
                    }
                },
                onDeviceAdded: function(a) {
                    this.addGamepad(a.device)
                },
                onDeviceRemoved: function(a) {
                    this.removeGamepad(a.device)
                },
                findGamepadIndex: function(a) {
                    if (null == a) return -1;
                    for (var b = 0, c = Ta.numDevices; b < c;) {
                        var d = b++;
                        if (Ta.getDeviceAt(d) == a) return d
                    }
                    return -1
                },
                addGamepad: function(a) {
                    if (null != a) {
                        a.enabled = !0;
                        var b = this.findGamepadIndex(a);
                        0 > b || (b = this.createByID(b, this.getModelFromDeviceName(a.name)), b._device = a, this.deviceConnected.dispatch(b))
                    }
                },
                getModelFromDeviceName: function(a) {
                    if (null == a) return Qd.UNKNOWN;
                    a = K.replace(K.replace(a.toLowerCase(), "-", ""), "_", "");
                    return -1 != a.indexOf("ouya") ? Qd.OUYA : -1 != a.indexOf("wireless controller") || -1 != a.indexOf("ps4") ? Qd.PS4 : -1 != a.indexOf("logitech") ? Qd.LOGITECH : -1 != a.indexOf("xbox") && -1 != a.indexOf("360") || -1 != a.indexOf("xinput") ? Qd.XINPUT : -1 != a.indexOf("nintendo rvlcnt01tr") ? Qd.WII_REMOTE : -1 !=
                        a.indexOf("nintendo rvlcnt01") ? Qd.WII_REMOTE : -1 != a.indexOf("mayflash wiimote pc adapter") ? Qd.MAYFLASH_WII_REMOTE : -1 != a.indexOf("pro controller") || -1 != a.indexOf("joycon l+r") ? Qd.SWITCH_PRO : -1 != a.indexOf("joycon (l)") ? Qd.SWITCH_JOYCON_LEFT : -1 != a.indexOf("joycon (r)") ? Qd.SWITCH_JOYCON_RIGHT : -1 != a.indexOf("mfi") ? Qd.MFI : Qd.UNKNOWN
                },
                removeGamepad: function(a) {
                    if (null != a)
                        for (var b = 0, c = this._gamepads.length; b < c;) {
                            var d = b++,
                                e = this._gamepads[d];
                            null != e && e._device == a && this.removeByID(d)
                        }
                },
                update: function() {
                    for (var a =
                            0, b = this._gamepads; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c && c.update()
                    }
                },
                onFocus: function() {},
                onFocusLost: function() {
                    this.reset()
                },
                get_numActiveGamepads: function() {
                    for (var a = 0, b = 0, c = this._gamepads; b < c.length;) {
                        var d = c[b];
                        ++b;
                        null != d && ++a
                    }
                    return a
                },
                __class__: df,
                __properties__: {
                    get_numActiveGamepads: "get_numActiveGamepads"
                }
            };
            var Rd = function() {};
            g["flixel.input.gamepad.id.LogitechID"] = Rd;
            Rd.__name__ = "flixel.input.gamepad.id.LogitechID";
            var Sd = function() {};
            g["flixel.input.gamepad.id.MFiID"] = Sd;
            Sd.__name__ =
                "flixel.input.gamepad.id.MFiID";
            var Fc = function() {};
            g["flixel.input.gamepad.id.MayflashWiiRemoteID"] = Fc;
            Fc.__name__ = "flixel.input.gamepad.id.MayflashWiiRemoteID";
            var Td = function() {};
            g["flixel.input.gamepad.id.OUYAID"] = Td;
            Td.__name__ = "flixel.input.gamepad.id.OUYAID";
            var Ud = function() {};
            g["flixel.input.gamepad.id.PS4ID"] = Ud;
            Ud.__name__ = "flixel.input.gamepad.id.PS4ID";
            var od = function() {};
            g["flixel.input.gamepad.id.PSVitaID"] = od;
            od.__name__ = "flixel.input.gamepad.id.PSVitaID";
            var vg = function() {};
            g["flixel.input.gamepad.id.SwitchJoyconLeftID"] =
                vg;
            vg.__name__ = "flixel.input.gamepad.id.SwitchJoyconLeftID";
            var wg = function() {};
            g["flixel.input.gamepad.id.SwitchJoyconRightID"] = wg;
            wg.__name__ = "flixel.input.gamepad.id.SwitchJoyconRightID";
            var Vd = function() {};
            g["flixel.input.gamepad.id.SwitchProID"] = Vd;
            Vd.__name__ = "flixel.input.gamepad.id.SwitchProID";
            var Gc = function() {};
            g["flixel.input.gamepad.id.WiiRemoteID"] = Gc;
            Gc.__name__ = "flixel.input.gamepad.id.WiiRemoteID";
            var Wd = function() {};
            g["flixel.input.gamepad.id.XInputID"] = Wd;
            Wd.__name__ = "flixel.input.gamepad.id.XInputID";
            var uh = function(a, b) {
                this.status = a;
                this.gamepad = b
            };
            g["flixel.input.gamepad.lists.FlxBaseGamepadList"] = uh;
            uh.__name__ = "flixel.input.gamepad.lists.FlxBaseGamepadList";
            uh.prototype = {
                get_ANY: function() {
                    for (var a = 0, b = this.gamepad.buttons; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c ? (c = this.gamepad.buttons[c.ID], c = null != c && c.hasState(this.status)) : c = !1;
                        if (c) return !0
                    }
                    return !1
                },
                __class__: uh,
                __properties__: {
                    get_ANY: "get_ANY"
                }
            };
            var Jk = function(a) {
                this.value = new Nk(a);
                this.justMoved = new Ti(2, a);
                this.justReleased = new Ti(-1,
                    a)
            };
            g["flixel.input.gamepad.lists.FlxGamepadAnalogList"] = Jk;
            Jk.__name__ = "flixel.input.gamepad.lists.FlxGamepadAnalogList";
            Jk.prototype = {
                __class__: Jk
            };
            var Ti = function(a, b) {
                this.status = a;
                this.gamepad = b
            };
            g["flixel.input.gamepad.lists.FlxGamepadAnalogStateList"] = Ti;
            Ti.__name__ = "flixel.input.gamepad.lists.FlxGamepadAnalogStateList";
            Ti.prototype = {
                get_LEFT_STICK: function() {
                    return this.checkXY(19)
                },
                get_LEFT_STICK_X: function() {
                    var a = this.gamepad.mapping.getAnalogStick(19);
                    if (null == a) return !1;
                    a = this.gamepad.buttons[a.x];
                    return null != a ? a.hasState(this.status) : !1
                },
                get_LEFT_STICK_Y: function() {
                    var a = this.gamepad.mapping.getAnalogStick(19);
                    if (null == a) return !1;
                    a = this.gamepad.buttons[a.y];
                    return null != a ? a.hasState(this.status) : !1
                },
                get_RIGHT_STICK: function() {
                    return this.checkXY(20)
                },
                get_RIGHT_STICK_X: function() {
                    var a = this.gamepad.mapping.getAnalogStick(20);
                    if (null == a) return !1;
                    a = this.gamepad.buttons[a.x];
                    return null != a ? a.hasState(this.status) : !1
                },
                get_RIGHT_STICK_Y: function() {
                    var a = this.gamepad.mapping.getAnalogStick(20);
                    if (null == a) return !1;
                    a = this.gamepad.buttons[a.y];
                    return null != a ? a.hasState(this.status) : !1
                },
                checkXY: function(a) {
                    a = this.gamepad.mapping.getAnalogStick(a);
                    if (null == a) return !1;
                    var b = this.gamepad.buttons[a.x],
                        c = null != b && b.hasState(this.status);
                    b = this.gamepad.buttons[a.y];
                    var d = null != b && b.hasState(this.status);
                    return c && d || c && (b = this.gamepad.buttons[a.y], c = null != b && b.hasState(0), b = this.gamepad.buttons[a.y], b = null != b && b.hasState(-1), c || b) || d && (b = this.gamepad.buttons[a.x], d = null != b && b.hasState(0), b = this.gamepad.buttons[a.x],
                        a = null != b && b.hasState(-1), d || a) ? !0 : !1
                },
                checkX: function(a) {
                    a = this.gamepad.mapping.getAnalogStick(a);
                    if (null == a) return !1;
                    a = this.gamepad.buttons[a.x];
                    return null != a ? a.hasState(this.status) : !1
                },
                checkY: function(a) {
                    a = this.gamepad.mapping.getAnalogStick(a);
                    if (null == a) return !1;
                    a = this.gamepad.buttons[a.y];
                    return null != a ? a.hasState(this.status) : !1
                },
                checkRaw: function(a, b) {
                    a = this.gamepad.buttons[a];
                    return null != a ? a.hasState(b) : !1
                },
                __class__: Ti,
                __properties__: {
                    get_RIGHT_STICK_Y: "get_RIGHT_STICK_Y",
                    get_RIGHT_STICK_X: "get_RIGHT_STICK_X",
                    get_RIGHT_STICK: "get_RIGHT_STICK",
                    get_LEFT_STICK_Y: "get_LEFT_STICK_Y",
                    get_LEFT_STICK_X: "get_LEFT_STICK_X",
                    get_LEFT_STICK: "get_LEFT_STICK"
                }
            };
            var Nk = function(a) {
                this.gamepad = a
            };
            g["flixel.input.gamepad.lists.FlxGamepadAnalogValueList"] = Nk;
            Nk.__name__ = "flixel.input.gamepad.lists.FlxGamepadAnalogValueList";
            Nk.prototype = {
                get_LEFT_STICK_X: function() {
                    var a = this.gamepad;
                    return a.getAnalogXAxisValue(a.mapping.getAnalogStick(19))
                },
                get_LEFT_STICK_Y: function() {
                    var a = this.gamepad;
                    return a.getYAxisRaw(a.mapping.getAnalogStick(19))
                },
                get_RIGHT_STICK_X: function() {
                    var a = this.gamepad;
                    return a.getAnalogXAxisValue(a.mapping.getAnalogStick(20))
                },
                get_RIGHT_STICK_Y: function() {
                    var a = this.gamepad;
                    return a.getYAxisRaw(a.mapping.getAnalogStick(20))
                },
                get_LEFT_TRIGGER: function() {
                    return this.gamepad.getAxis(17)
                },
                get_RIGHT_TRIGGER: function() {
                    return this.gamepad.getAxis(18)
                },
                get_POINTER_X: function() {
                    return this.gamepad.getAxis(28)
                },
                get_POINTER_Y: function() {
                    return this.gamepad.getAxis(29)
                },
                getAxis: function(a) {
                    return this.gamepad.getAxis(a)
                },
                getXAxis: function(a) {
                    var b =
                        this.gamepad;
                    return b.getAnalogXAxisValue(b.mapping.getAnalogStick(a))
                },
                getYAxis: function(a) {
                    var b = this.gamepad;
                    return b.getYAxisRaw(b.mapping.getAnalogStick(a))
                },
                __class__: Nk,
                __properties__: {
                    get_POINTER_Y: "get_POINTER_Y",
                    get_POINTER_X: "get_POINTER_X",
                    get_RIGHT_TRIGGER: "get_RIGHT_TRIGGER",
                    get_LEFT_TRIGGER: "get_LEFT_TRIGGER",
                    get_RIGHT_STICK_Y: "get_RIGHT_STICK_Y",
                    get_RIGHT_STICK_X: "get_RIGHT_STICK_X",
                    get_LEFT_STICK_Y: "get_LEFT_STICK_Y",
                    get_LEFT_STICK_X: "get_LEFT_STICK_X"
                }
            };
            var Uf = function(a, b) {
                uh.call(this,
                    a, b)
            };
            g["flixel.input.gamepad.lists.FlxGamepadButtonList"] = Uf;
            Uf.__name__ = "flixel.input.gamepad.lists.FlxGamepadButtonList";
            Uf.__super__ = uh;
            Uf.prototype = n(uh.prototype, {
                __class__: Uf
            });
            var Kk = function(a) {
                this.gamepad = a
            };
            g["flixel.input.gamepad.lists.FlxGamepadMotionValueList"] = Kk;
            Kk.__name__ = "flixel.input.gamepad.lists.FlxGamepadMotionValueList";
            Kk.prototype = {
                get_TILT_PITCH: function() {
                    return this.gamepad.mapping.supportsMotion ? this.gamepad.getAxis(26) : 0
                },
                get_TILT_ROLL: function() {
                    return this.gamepad.mapping.supportsMotion ?
                        this.gamepad.getAxis(27) : 0
                },
                getAxis: function(a) {
                    return this.gamepad.mapping.supportsMotion ? this.gamepad.getAxis(a) : 0
                },
                get_isSupported: function() {
                    return this.gamepad.mapping.supportsMotion
                },
                __class__: Kk,
                __properties__: {
                    get_TILT_ROLL: "get_TILT_ROLL",
                    get_TILT_PITCH: "get_TILT_PITCH",
                    get_isSupported: "get_isSupported"
                }
            };
            var Lk = function(a) {
                this.gamepad = a
            };
            g["flixel.input.gamepad.lists.FlxGamepadPointerValueList"] = Lk;
            Lk.__name__ = "flixel.input.gamepad.lists.FlxGamepadPointerValueList";
            Lk.prototype = {
                get_X: function() {
                    return this.gamepad.mapping.supportsPointer ?
                        this.gamepad.getAxis(28) : 0
                },
                get_Y: function() {
                    return this.gamepad.mapping.supportsPointer ? this.gamepad.getAxis(29) : 0
                },
                getAxis: function(a) {
                    return this.gamepad.mapping.supportsPointer ? this.gamepad.getAxis(a) : 0
                },
                get_isSupported: function() {
                    return this.gamepad.mapping.supportsPointer
                },
                __class__: Lk,
                __properties__: {
                    get_Y: "get_Y",
                    get_X: "get_X",
                    get_isSupported: "get_isSupported"
                }
            };
            var kb = function(a) {
                this.attachment = zm.NONE;
                this.supportsMotion = this.supportsPointer = !1;
                null != a && this.set_attachment(a);
                this.initValues()
            };
            g["flixel.input.gamepad.mappings.FlxGamepadMapping"] = kb;
            kb.__name__ = "flixel.input.gamepad.mappings.FlxGamepadMapping";
            kb.prototype = {
                initValues: function() {},
                getAnalogStick: function(a) {
                    switch (a) {
                        case 19:
                            return this.leftStick;
                        case 20:
                            return this.rightStick;
                        default:
                            return null
                    }
                },
                getRawID: function(a) {
                    return -1
                },
                isAxisFlipped: function(a) {
                    return !1
                },
                set_attachment: function(a) {
                    return this.attachment = a
                },
                __class__: kb,
                __properties__: {
                    set_attachment: "set_attachment"
                }
            };
            var Ji = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.LogitechMapping"] =
                Ji;
            Ji.__name__ = "flixel.input.gamepad.mappings.LogitechMapping";
            Ji.__super__ = kb;
            Ji.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = Rd.LEFT_ANALOG_STICK;
                    this.rightStick = Rd.RIGHT_ANALOG_STICK
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 1;
                        case 1:
                            return 2;
                        case 2:
                            return 0;
                        case 3:
                            return 3;
                        case 4:
                            return 4;
                        case 5:
                            return 5;
                        case 6:
                            return 8;
                        case 7:
                            return 9;
                        case 8:
                            return 10;
                        case 9:
                            return 11;
                        case 10:
                            return -5;
                        case 11:
                            return 16;
                        case 12:
                            return 17;
                        case 13:
                            return 18;
                        case 14:
                            return 19;
                        case 17:
                            return 6;
                        case 18:
                            return 7;
                        case 34:
                            return Rd.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Rd.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Rd.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Rd.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Rd.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Rd.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Rd.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Rd.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Ji
            });
            var Pi = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.MFiMapping"] = Pi;
            Pi.__name__ =
                "flixel.input.gamepad.mappings.MFiMapping";
            Pi.__super__ = kb;
            Pi.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = Sd.LEFT_ANALOG_STICK;
                    this.rightStick = Sd.RIGHT_ANALOG_STICK
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 6:
                            return 10;
                        case 7:
                            return 12;
                        case 8:
                            return 13;
                        case 9:
                            return 14;
                        case 10:
                            return 11;
                        case 11:
                            return 17;
                        case 12:
                            return 18;
                        case 13:
                            return 19;
                        case 14:
                            return 20;
                        case 17:
                            return 4;
                        case 18:
                            return 5;
                        case 34:
                            return Sd.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Sd.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Sd.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Sd.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Sd.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Sd.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Sd.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Sd.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Pi
            });
            var Ni = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.MayflashWiiRemoteMapping"] = Ni;
            Ni.__name__ = "flixel.input.gamepad.mappings.MayflashWiiRemoteMapping";
            Ni.__super__ = kb;
            Ni.prototype = n(kb.prototype, {
                initValues: function() {
                    this.supportsPointer = !0
                },
                getRawID: function(a) {
                    switch (this.attachment._hx_index) {
                        case 0:
                            return this.getRawNunchuk(a);
                        case 1:
                            return this.getRawClassicController(a);
                        case 2:
                            return this.getRawDefault(a)
                    }
                },
                getRawClassicController: function(a) {
                    switch (a) {
                        case 0:
                            return 10;
                        case 1:
                            return 11;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 14;
                        case 5:
                            return 15;
                        case 6:
                            return 16;
                        case 7:
                            return 17;
                        case 10:
                            return 19;
                        case 11:
                            return 4;
                        case 12:
                            return 5;
                        case 13:
                            return 6;
                        case 14:
                            return 7;
                        case 17:
                            return 12;
                        case 18:
                            return 13;
                        case 30:
                            return -1;
                        case 31:
                            return -1;
                        case 34:
                            return Fc.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Fc.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Fc.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Fc.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Fc.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Fc.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Fc.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Fc.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return this.getRawDefault(a)
                    }
                },
                getRawNunchuk: function(a) {
                    switch (a) {
                        case 0:
                            return 10;
                        case 1:
                            return 11;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 6:
                            return 12;
                        case 7:
                            return 13;
                        case 10:
                            return 19;
                        case 11:
                            return 4;
                        case 12:
                            return 5;
                        case 13:
                            return 6;
                        case 14:
                            return 7;
                        case 17:
                            return 14;
                        case 28:
                            return 2;
                        case 29:
                            return 3;
                        case 34:
                            return Fc.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Fc.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Fc.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Fc.LEFT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                getRawDefault: function(a) {
                    switch (a) {
                        case 0:
                            return 10;
                        case 1:
                            return 11;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 6:
                            return 12;
                        case 7:
                            return 13;
                        case 10:
                            return 19;
                        case 11:
                            return 22;
                        case 12:
                            return 23;
                        case 13:
                            return 24;
                        case 14:
                            return 25;
                        default:
                            return -1
                    }
                },
                set_attachment: function(a) {
                    switch (a._hx_index) {
                        case 0:
                        case 1:
                            var b = Fc.LEFT_ANALOG_STICK;
                            break;
                        case 2:
                            b = Fc.REMOTE_DPAD
                    }
                    this.leftStick = b;
                    this.rightStick = 1 == a._hx_index ? Fc.RIGHT_ANALOG_STICK : null;
                    return kb.prototype.set_attachment.call(this, a)
                },
                __class__: Ni
            });
            var Ki = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.OUYAMapping"] =
                Ki;
            Ki.__name__ = "flixel.input.gamepad.mappings.OUYAMapping";
            Ki.__super__ = kb;
            Ki.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = Td.LEFT_ANALOG_STICK;
                    this.rightStick = Td.RIGHT_ANALOG_STICK
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 8:
                            return 13;
                        case 9:
                            return 14;
                        case 10:
                            return 16777234;
                        case 11:
                            return 17;
                        case 12:
                            return 18;
                        case 13:
                            return 19;
                        case 14:
                            return 20;
                        case 17:
                            return 4;
                        case 18:
                            return 5;
                        case 34:
                            return Td.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Td.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Td.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Td.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Td.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Td.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Td.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Td.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Ki
            });
            var Li = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.PS4Mapping"] = Li;
            Li.__name__ = "flixel.input.gamepad.mappings.PS4Mapping";
            Li.__super__ = kb;
            Li.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = Ud.LEFT_ANALOG_STICK;
                    this.rightStick = Ud.RIGHT_ANALOG_STICK;
                    this.supportsPointer = this.supportsMotion = !0
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 6:
                            return 10;
                        case 7:
                            return 12;
                        case 8:
                            return 13;
                        case 9:
                            return 14;
                        case 10:
                            return 11;
                        case 11:
                            return 17;
                        case 12:
                            return 18;
                        case 13:
                            return 19;
                        case 14:
                            return 20;
                        case 17:
                            return 4;
                        case 18:
                            return 5;
                        case 34:
                            return Ud.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Ud.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Ud.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Ud.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Ud.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Ud.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Ud.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Ud.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Li
            });
            var Mi = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.PSVitaMapping"] = Mi;
            Mi.__name__ = "flixel.input.gamepad.mappings.PSVitaMapping";
            Mi.__super__ =
                kb;
            Mi.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = od.LEFT_ANALOG_STICK;
                    this.rightStick = od.RIGHT_ANALOG_STICK
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 6:
                            return 10;
                        case 7:
                            return 12;
                        case 11:
                            return 17;
                        case 12:
                            return 18;
                        case 13:
                            return 19;
                        case 14:
                            return 20;
                        case 34:
                            return od.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return od.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return od.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return od.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return od.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return od.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return od.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return od.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                isAxisFlipped: function(a) {
                    return a != od.LEFT_ANALOG_STICK.y ? a == od.RIGHT_ANALOG_STICK.y : !0
                },
                __class__: Mi
            });
            var Ri = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.SwitchJoyconLeftMapping"] = Ri;
            Ri.__name__ = "flixel.input.gamepad.mappings.SwitchJoyconLeftMapping";
            Ri.__super__ = kb;
            Ri.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = vg.LEFT_ANALOG_STICK;
                    this.supportsMotion = !0;
                    this.supportsPointer = !1
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 7:
                            return 12;
                        case 8:
                            return 13;
                        case 17:
                            return 4;
                        case 30:
                            return 10;
                        case 34:
                            return vg.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return vg.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return vg.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return vg.LEFT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Ri
            });
            var Si = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.SwitchJoyconRightMapping"] = Si;
            Si.__name__ = "flixel.input.gamepad.mappings.SwitchJoyconRightMapping";
            Si.__super__ = kb;
            Si.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = wg.LEFT_ANALOG_STICK;
                    this.supportsMotion = !0;
                    this.supportsPointer = !1
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 7:
                            return 12;
                        case 8:
                            return 13;
                        case 10:
                            return 11;
                        case 18:
                            return 5;
                        case 30:
                            return 10;
                        case 34:
                            return wg.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return wg.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return wg.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return wg.LEFT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Si
            });
            var Qi = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.SwitchProMapping"] = Qi;
            Qi.__name__ = "flixel.input.gamepad.mappings.SwitchProMapping";
            Qi.__super__ = kb;
            Qi.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = Vd.LEFT_ANALOG_STICK;
                    this.rightStick = Vd.RIGHT_ANALOG_STICK;
                    this.supportsMotion = !0;
                    this.supportsPointer = !1
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 6:
                            return 10;
                        case 7:
                            return 12;
                        case 8:
                            return 13;
                        case 9:
                            return 14;
                        case 10:
                            return 11;
                        case 11:
                            return 17;
                        case 12:
                            return 18;
                        case 13:
                            return 19;
                        case 14:
                            return 20;
                        case 17:
                            return 4;
                        case 18:
                            return 5;
                        case 30:
                            return 21;
                        case 34:
                            return Vd.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Vd.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Vd.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Vd.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Vd.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Vd.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Vd.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Vd.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: Qi
            });
            var Oi = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.WiiRemoteMapping"] = Oi;
            Oi.__name__ = "flixel.input.gamepad.mappings.WiiRemoteMapping";
            Oi.__super__ = kb;
            Oi.prototype = n(kb.prototype, {
                initValues: function() {
                    this.supportsMotion = !0;
                    this.supportsPointer = !1
                },
                getRawID: function(a) {
                    switch (this.attachment._hx_index) {
                        case 0:
                            return this.getRawNunchuk(a);
                        case 1:
                            return this.getRawClassicController(a);
                        case 2:
                            return this.getRawDefault(a)
                    }
                },
                getRawClassicController: function(a) {
                    switch (a) {
                        case 0:
                            return 10;
                        case 1:
                            return 9;
                        case 2:
                            return 11;
                        case 3:
                            return 12;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 6:
                            return 18;
                        case 7:
                            return 17;
                        case 10:
                            return 19;
                        case 11:
                            return 5;
                        case 12:
                            return 6;
                        case 13:
                            return 7;
                        case 14:
                            return 8;
                        case 17:
                            return 13;
                        case 18:
                            return 14;
                        case 30:
                            return 20;
                        case 31:
                            return 21;
                        case 34:
                            return Gc.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Gc.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Gc.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Gc.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Gc.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Gc.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Gc.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Gc.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                getRawNunchuk: function(a) {
                    switch (a) {
                        case 0:
                            return 9;
                        case 1:
                            return 10;
                        case 2:
                            return 13;
                        case 3:
                            return 14;
                        case 4:
                            return 11;
                        case 6:
                            return 16;
                        case 7:
                            return 15;
                        case 10:
                            return 17;
                        case 11:
                            return 5;
                        case 12:
                            return 6;
                        case 13:
                            return 7;
                        case 14:
                            return 8;
                        case 17:
                            return 12;
                        case 26:
                            return 3;
                        case 27:
                            return 2;
                        case 34:
                            return Gc.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Gc.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Gc.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Gc.LEFT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                getRawDefault: function(a) {
                    switch (a) {
                        case 0:
                            return 11;
                        case 1:
                            return 12;
                        case 2:
                            return 9;
                        case 3:
                            return 10;
                        case 6:
                            return 14;
                        case 7:
                            return 13;
                        case 10:
                            return 15;
                        case 11:
                            return 22;
                        case 12:
                            return 23;
                        case 13:
                            return 24;
                        case 14:
                            return 25;
                        case 26:
                            return 2;
                        case 27:
                            return 3;
                        default:
                            return -1
                    }
                },
                isAxisFlipped: function(a) {
                    return 4 == a
                },
                set_attachment: function(a) {
                    switch (a._hx_index) {
                        case 0:
                        case 1:
                            var b = Gc.LEFT_ANALOG_STICK;
                            break;
                        case 2:
                            b = Gc.REMOTE_DPAD
                    }
                    this.leftStick = b;
                    this.rightStick = 1 == a._hx_index ? Gc.RIGHT_ANALOG_STICK : null;
                    return kb.prototype.set_attachment.call(this, a)
                },
                __class__: Oi
            });
            var th = function(a) {
                kb.call(this, a)
            };
            g["flixel.input.gamepad.mappings.XInputMapping"] =
                th;
            th.__name__ = "flixel.input.gamepad.mappings.XInputMapping";
            th.__super__ = kb;
            th.prototype = n(kb.prototype, {
                initValues: function() {
                    this.leftStick = Wd.LEFT_ANALOG_STICK;
                    this.rightStick = Wd.RIGHT_ANALOG_STICK
                },
                getRawID: function(a) {
                    switch (a) {
                        case 0:
                            return 6;
                        case 1:
                            return 7;
                        case 2:
                            return 8;
                        case 3:
                            return 9;
                        case 4:
                            return 15;
                        case 5:
                            return 16;
                        case 6:
                            return 10;
                        case 7:
                            return 12;
                        case 8:
                            return 13;
                        case 9:
                            return 14;
                        case 10:
                            return -1;
                        case 11:
                            return 17;
                        case 12:
                            return 18;
                        case 13:
                            return 19;
                        case 14:
                            return 20;
                        case 17:
                            return 4;
                        case 18:
                            return 5;
                        case 34:
                            return Wd.LEFT_ANALOG_STICK.rawUp;
                        case 35:
                            return Wd.LEFT_ANALOG_STICK.rawRight;
                        case 36:
                            return Wd.LEFT_ANALOG_STICK.rawDown;
                        case 37:
                            return Wd.LEFT_ANALOG_STICK.rawLeft;
                        case 38:
                            return Wd.RIGHT_ANALOG_STICK.rawUp;
                        case 39:
                            return Wd.RIGHT_ANALOG_STICK.rawRight;
                        case 40:
                            return Wd.RIGHT_ANALOG_STICK.rawDown;
                        case 41:
                            return Wd.RIGHT_ANALOG_STICK.rawLeft;
                        default:
                            return -1
                    }
                },
                __class__: th
            });
            var pm = {},
                Ui = function(a, b) {
                    sh.call(this, a, b)
                };
            g["flixel.input.keyboard.FlxKeyList"] = Ui;
            Ui.__name__ =
                "flixel.input.keyboard.FlxKeyList";
            Ui.__super__ = sh;
            Ui.prototype = n(sh.prototype, {
                __class__: Ui
            });
            var pi = function() {
                Bf.call(this, function(a, b) {
                    return new Ui(a, b)
                });
                this.preventDefaultKeys = [38, 40, 37, 39, 32, 9];
                for (var a = aa.valueIterator(pm.fromStringMap.h); a.hasNext();) {
                    var b = a.next();
                    if (-2 != b && -1 != b) {
                        var c = new Vc(b);
                        this._keyListArray.push(c);
                        this._keyListMap.h[b] = c
                    }
                }
            };
            g["flixel.input.keyboard.FlxKeyboard"] = pi;
            pi.__name__ = "flixel.input.keyboard.FlxKeyboard";
            pi.__super__ = Bf;
            pi.prototype = n(Bf.prototype, {
                onKeyUp: function(a) {
                    Bf.prototype.onKeyUp.call(this, a)
                },
                onKeyDown: function(a) {
                    Bf.prototype.onKeyDown.call(this, a)
                },
                resolveKeyCode: function(a) {
                    return a.keyCode
                },
                __class__: pi
            });
            var Bd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Bd.preload) this.__fromImage(Bd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Bd.resourceName), Bd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Bd.preload && (Bd.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.input.mouse._FlxMouse.GraphicCursor"] = Bd;
            Bd.__name__ = "flixel.input.mouse._FlxMouse.GraphicCursor";
            Bd.__super__ = H;
            Bd.prototype = n(H.prototype, {
                __class__: Bd
            });
            var Qe = function(a) {
                this.justPressedTimeInTicks = -1;
                var b = X._pool.get().set(0, 0);
                b._inPool = !1;
                this.justPressedPosition = b;
                Vc.call(this, a)
            };
            g["flixel.input.mouse.FlxMouseButton"] = Qe;
            Qe.__name__ = "flixel.input.mouse.FlxMouseButton";
            Qe.__interfaces__ = [L];
            Qe.getByID = function(a) {
                switch (a) {
                    case -3:
                        return q.mouse._rightButton;
                    case -2:
                        return q.mouse._middleButton;
                    case -1:
                        return q.mouse._leftButton
                }
            };
            Qe.__super__ = Vc;
            Qe.prototype = n(Vc.prototype, {
                update: function() {
                    Vc.prototype.update.call(this);
                    2 == this.current ? (this.justPressedPosition.set(q.mouse.screenX, q.mouse.screenY), this.justPressedTimeInTicks = q.game.ticks) : -1 == this.current && q.swipes.push(new Di(this.ID, this.justPressedPosition, q.mouse.getScreenPosition(), this.justPressedTimeInTicks))
                },
                destroy: function() {
                    this.justPressedPosition = V.put(this.justPressedPosition)
                },
                onDown: function(a) {
                    q.mouse.enabled &&
                        this.press()
                },
                onUp: function(a) {
                    q.mouse.enabled && this.release()
                },
                __class__: Qe
            });
            var vh = function(a, b, c) {
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.justPressedTimeInTicks = -1;
                var d = X._pool.get().set(0, 0);
                d._inPool = !1;
                this.justPressedPosition = d;
                this.flashPoint = new La;
                gc.call(this);
                this.input = new Vc(c);
                this.setXY(a, b)
            };
            g["flixel.input.touch.FlxTouch"] = vh;
            vh.__name__ = "flixel.input.touch.FlxTouch";
            vh.__interfaces__ = [Sf, L];
            vh.__super__ = gc;
            vh.prototype = n(gc.prototype, {
                destroy: function() {
                    this.input = null;
                    this.justPressedPosition = V.put(this.justPressedPosition);
                    this.flashPoint = null
                },
                recycle: function(a, b, c) {
                    this.setXY(a, b);
                    this.input.ID = c;
                    this.input.reset()
                },
                update: function() {
                    this.input.update();
                    2 == this.input.current ? (this.justPressedPosition.set(this.screenX, this.screenY), this.justPressedTimeInTicks = q.game.ticks) : -1 == this.input.current && q.swipes.push(new Di(this.input.ID, this.justPressedPosition, this.getScreenPosition(), this.justPressedTimeInTicks))
                },
                setXY: function(a, b) {
                    this.flashPoint.setTo(a, b);
                    this.flashPoint = q.game.globalToLocal(this.flashPoint);
                    this._globalScreenX = this.flashPoint.x / q.scaleMode.scale.x | 0;
                    this._globalScreenY = this.flashPoint.y / q.scaleMode.scale.y | 0;
                    this.updatePositions()
                },
                get_justReleased: function() {
                    return -1 == this.input.current
                },
                get_pressed: function() {
                    var a = this.input;
                    return 1 != a.current ? 2 == a.current : !0
                },
                get_justPressed: function() {
                    return 2 == this.input.current
                },
                __class__: vh,
                __properties__: {
                    get_justPressed: "get_justPressed",
                    get_pressed: "get_pressed",
                    get_justReleased: "get_justReleased"
                }
            });
            var ng = function() {
                this.list = [];
                this._inactiveTouches = [];
                this._touchesCache = new Tb;
                ng.maxTouchPoints = xg.maxTouchPoints;
                xg.inputMode = 2;
                la.get_current().stage.addEventListener("touchBegin", r(this, this.handleTouchBegin));
                la.get_current().stage.addEventListener("touchEnd", r(this, this.handleTouchEnd));
                la.get_current().stage.addEventListener("touchMove", r(this, this.handleTouchMove))
            };
            g["flixel.input.touch.FlxTouchManager"] = ng;
            ng.__name__ = "flixel.input.touch.FlxTouchManager";
            ng.__interfaces__ = [Af];
            ng.prototype = {
                destroy: function() {
                    for (var a = 0, b = this.list; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.destroy()
                    }
                    this.list = null;
                    a = 0;
                    for (b = this._inactiveTouches; a < b.length;) c = b[a], ++a, c.destroy();
                    this._touchesCache = this._inactiveTouches = null
                },
                reset: function() {
                    for (var a = this._touchesCache.keys(); a.hasNext();) {
                        var b = a.next();
                        this._touchesCache.remove(b)
                    }
                    a = 0;
                    for (b = this.list; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.input.reset();
                        this._inactiveTouches.push(c)
                    }
                    this.list.splice(0, this.list.length)
                },
                handleTouchBegin: function(a) {
                    var b = this._touchesCache.h[a.touchPointID];
                    null != b ? b.setXY(a.stageX | 0, a.stageY | 0) : b = this.recycle(a.stageX | 0, a.stageY | 0, a.touchPointID);
                    b.input.press()
                },
                handleTouchEnd: function(a) {
                    a = this._touchesCache.h[a.touchPointID];
                    null != a && a.input.release()
                },
                handleTouchMove: function(a) {
                    var b = this._touchesCache.h[a.touchPointID];
                    null != b && b.setXY(a.stageX | 0, a.stageY | 0)
                },
                add: function(a) {
                    this.list.push(a);
                    return this._touchesCache.h[a.input.ID] = a
                },
                recycle: function(a, b, c) {
                    if (0 < this._inactiveTouches.length) {
                        var d = this._inactiveTouches.pop();
                        d.recycle(a, b, c);
                        return this.add(d)
                    }
                    return this.add(new vh(a, b, c))
                },
                update: function() {
                    for (var a = this.list.length - 1, b; 0 <= a;) {
                        b = this.list[a];
                        var c = b.input;
                        0 != c.current && -1 != c.current || -1 == b.input.current ? b.update() : (b.input.reset(), this._touchesCache.remove(b.input.ID), this.list.splice(a, 1), this._inactiveTouches.push(b));
                        --a
                    }
                },
                onFocus: function() {},
                onFocusLost: function() {
                    this.reset()
                },
                __class__: ng
            };
            var Qg = function() {};
            g["flixel.math.FlxMath"] = Qg;
            Qg.__name__ = "flixel.math.FlxMath";
            Qg.roundDecimal = function(a, b) {
                for (var c =
                        1, d = 0; d < b;) d++, c *= 10;
                return Math.round(a * c) / c
            };
            Qg.remapToRange = function(a, b, c, d, e) {
                return d + (e - d) / (c - b) * (a - b)
            };
            var Mf = function(a, b, c, d, e, f) {
                xa.call(this, a, b, c, d, e, f)
            };
            g["flixel.math.FlxMatrix"] = Mf;
            Mf.__name__ = "flixel.math.FlxMatrix";
            Mf.__super__ = xa;
            Mf.prototype = n(xa.prototype, {
                __class__: Mf
            });
            var Nf = function(a, b, c) {
                X.call(this);
                this._setXCallback = a;
                this._setXYCallback = this._setYCallback = c;
                null != this._setXCallback && (null == this._setYCallback && (this._setYCallback = a), null == this._setXYCallback && (this._setXYCallback =
                    a))
            };
            g["flixel.math.FlxCallbackPoint"] = Nf;
            Nf.__name__ = "flixel.math.FlxCallbackPoint";
            Nf.__super__ = X;
            Nf.prototype = n(X.prototype, {
                set: function(a, b) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    X.prototype.set.call(this, a, b);
                    null != this._setXYCallback && this._setXYCallback(this);
                    return this
                },
                set_x: function(a) {
                    X.prototype.set_x.call(this, a);
                    null != this._setXCallback && this._setXCallback(this);
                    return a
                },
                set_y: function(a) {
                    X.prototype.set_y.call(this, a);
                    null != this._setYCallback && this._setYCallback(this);
                    return a
                },
                destroy: function() {
                    X.prototype.destroy.call(this);
                    this._setXYCallback = this._setYCallback = this._setXCallback = null
                },
                put: function() {},
                __class__: Nf
            });
            var Ph = function() {};
            g["flixel.math.FlxVelocity"] = Ph;
            Ph.__name__ = "flixel.math.FlxVelocity";
            Ph.computeVelocity = function(a, b, c, d, e) {
                0 != b ? a += b * e : 0 != c && (b = c * e, a = 0 < a - b ? a - b : 0 > a + b ? a + b : 0);
                0 != a && 0 != d && (a > d ? a = d : a < -d && (a = -d));
                return a
            };
            var se = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != se.preload) this.__fromImage(se.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(se.resourceName),
                        se.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == se.preload && (se.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.GraphicLogo"] = se;
            se.__name__ = "flixel.system.GraphicLogo";
            se.__super__ = H;
            se.prototype = n(H.prototype, {
                __class__: se
            });
            var te = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != te.preload) this.__fromImage(te.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(te.resourceName), te.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == te.preload && (te.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.GraphicVirtualInput"] = te;
            te.__name__ = "flixel.system.GraphicVirtualInput";
            te.__super__ = H;
            te.prototype = n(H.prototype, {
                __class__: te
            });
            var bb = function(a) {
                this.length = a.byteLength;
                this.b = new Uint8Array(a);
                this.b.bufferValue = a;
                a.hxBytes = this;
                a.bytes = this.b
            };
            g["haxe.io.Bytes"] = bb;
            bb.__name__ = "haxe.io.Bytes";
            bb.ofString = function(a, b) {
                b = [];
                for (var c = 0; c < a.length;) {
                    var d =
                        a.charCodeAt(c++);
                    55296 <= d && 56319 >= d && (d = d - 55232 << 10 | a.charCodeAt(c++) & 1023);
                    127 >= d ? b.push(d) : (2047 >= d ? b.push(192 | d >> 6) : (65535 >= d ? b.push(224 | d >> 12) : (b.push(240 | d >> 18), b.push(128 | d >> 12 & 63)), b.push(128 | d >> 6 & 63)), b.push(128 | d & 63))
                }
                return new bb((new Uint8Array(b)).buffer)
            };
            bb.ofData = function(a) {
                var b = a.hxBytes;
                return null != b ? b : new bb(a)
            };
            bb.prototype = {
                blit: function(a, b, c, d) {
                    if (0 > a || 0 > c || 0 > d || a + d > this.length || c + d > b.length) throw F.thrown(yg.OutsideBounds);
                    0 == c && d == b.b.byteLength ? this.b.set(b.b, a) : this.b.set(b.b.subarray(c,
                        c + d), a)
                },
                getString: function(a, b, c) {
                    if (0 > a || 0 > b || a + b > this.length) throw F.thrown(yg.OutsideBounds);
                    c = "";
                    var d = this.b,
                        e = Ll.fromCharCode,
                        f = a;
                    for (a += b; f < a;)
                        if (b = d[f++], 128 > b) {
                            if (0 == b) break;
                            c += e(b)
                        } else if (224 > b) c += e((b & 63) << 6 | d[f++] & 127);
                    else if (240 > b) {
                        var k = d[f++];
                        c += e((b & 31) << 12 | (k & 127) << 6 | d[f++] & 127)
                    } else {
                        k = d[f++];
                        var p = d[f++];
                        b = (b & 15) << 18 | (k & 127) << 12 | (p & 127) << 6 | d[f++] & 127;
                        c += e((b >> 10) + 55232);
                        c += e(b & 1023 | 56320)
                    }
                    return c
                },
                toString: function() {
                    return this.getString(0, this.length)
                },
                __class__: bb
            };
            var Ol =
                function() {};
            g["openfl.utils.IDataOutput"] = Ol;
            Ol.__name__ = "openfl.utils.IDataOutput";
            Ol.__isInterface__ = !0;
            var Pl = function() {};
            g["openfl.utils.IDataInput"] = Pl;
            Pl.__name__ = "openfl.utils.IDataInput";
            Pl.__isInterface__ = !0;
            var Wc = function(a) {
                null == a && (a = 0);
                var b = new bb(new ArrayBuffer(a));
                bb.call(this, b.b.buffer);
                this.__length = a;
                null == Wc.__defaultEndian && (bc.get_endianness() == jm.LITTLE_ENDIAN ? Wc.__defaultEndian = 1 : Wc.__defaultEndian = 0);
                this.__endian = Wc.__defaultEndian;
                this.objectEncoding = Wc.defaultObjectEncoding;
                this.position = 0
            };
            g["openfl.utils.ByteArrayData"] = Wc;
            Wc.__name__ = "openfl.utils.ByteArrayData";
            Wc.__interfaces__ = [Ol, Pl];
            Wc.fromBytes = function(a) {
                var b = new Wc;
                b.__fromBytes(a);
                return b
            };
            Wc.__super__ = bb;
            Wc.prototype = n(bb.prototype, {
                readByte: function() {
                    var a = this.readUnsignedByte();
                    return 0 != (a & 128) ? a - 256 : a
                },
                readInt: function() {
                    var a = this.readUnsignedByte(),
                        b = this.readUnsignedByte(),
                        c = this.readUnsignedByte(),
                        d = this.readUnsignedByte();
                    return 1 == this.__endian ? d << 24 | c << 16 | b << 8 | a : a << 24 | b << 16 | c << 8 | d
                },
                readUnsignedByte: function() {
                    if (this.position <
                        this.length) return this.b[this.position++];
                    throw F.thrown(new wh);
                },
                readUnsignedInt: function() {
                    var a = this.readUnsignedByte(),
                        b = this.readUnsignedByte(),
                        c = this.readUnsignedByte(),
                        d = this.readUnsignedByte();
                    return 1 == this.__endian ? d << 24 | c << 16 | b << 8 | a : a << 24 | b << 16 | c << 8 | d
                },
                readUnsignedShort: function() {
                    var a = this.readUnsignedByte(),
                        b = this.readUnsignedByte();
                    return 1 == this.__endian ? (b << 8) + a : a << 8 | b
                },
                readUTF: function() {
                    var a = this.readUnsignedShort();
                    return this.readUTFBytes(a)
                },
                readUTFBytes: function(a) {
                    if (this.position +
                        a > this.length) throw F.thrown(new wh);
                    this.position += a;
                    return this.getString(this.position - a, a)
                },
                writeByte: function(a) {
                    this.__resize(this.position + 1);
                    this.b[this.position++] = a & 255
                },
                writeInt: function(a) {
                    this.__resize(this.position + 4);
                    1 == this.__endian ? (this.b[this.position++] = a & 255, this.b[this.position++] = a >> 8 & 255, this.b[this.position++] = a >> 16 & 255, this.b[this.position++] = a >> 24 & 255) : (this.b[this.position++] = a >> 24 & 255, this.b[this.position++] = a >> 16 & 255, this.b[this.position++] = a >> 8 & 255, this.b[this.position++] =
                        a & 255)
                },
                writeShort: function(a) {
                    this.__resize(this.position + 2);
                    1 == this.__endian ? (this.b[this.position++] = a & 255, this.b[this.position++] = a >> 8 & 255) : (this.b[this.position++] = a >> 8 & 255, this.b[this.position++] = a & 255)
                },
                writeUnsignedInt: function(a) {
                    this.writeInt(a)
                },
                __fromBytes: function(a) {
                    this.b = a.b;
                    this.__length = a.length;
                    this.data = a.data;
                    this.length = a.length
                },
                __resize: function(a) {
                    if (a > this.__length) {
                        var b = new bb(new ArrayBuffer(3 * (a + 1) >> 1));
                        if (0 < this.__length) {
                            var c = this.length;
                            this.length = this.__length;
                            b.blit(0, this, 0, this.__length);
                            this.length = c
                        }
                        this.b = b.b;
                        this.__length = b.length;
                        this.data = b.data
                    }
                    this.length < a && (this.length = a)
                },
                __class__: Wc
            });
            var zd = function() {};
            g["flixel.system.FlxAssets"] = zd;
            zd.__name__ = "flixel.system.FlxAssets";
            zd.drawLogo = function(a) {
                a.beginFill(47394);
                a.moveTo(50, 13);
                a.lineTo(51, 13);
                a.lineTo(87, 50);
                a.lineTo(87, 51);
                a.lineTo(51, 87);
                a.lineTo(50, 87);
                a.lineTo(13, 51);
                a.lineTo(13, 50);
                a.lineTo(50, 13);
                a.endFill();
                a.beginFill(16761138);
                a.moveTo(0, 0);
                a.lineTo(25, 0);
                a.lineTo(50, 13);
                a.lineTo(13,
                    50);
                a.lineTo(0, 25);
                a.lineTo(0, 0);
                a.endFill();
                a.beginFill(16066382);
                a.moveTo(100, 0);
                a.lineTo(75, 0);
                a.lineTo(51, 13);
                a.lineTo(87, 50);
                a.lineTo(100, 25);
                a.lineTo(100, 0);
                a.endFill();
                a.beginFill(3555839);
                a.moveTo(0, 100);
                a.lineTo(25, 100);
                a.lineTo(50, 87);
                a.lineTo(13, 51);
                a.lineTo(0, 75);
                a.lineTo(0, 100);
                a.endFill();
                a.beginFill(314875);
                a.moveTo(100, 100);
                a.lineTo(75, 100);
                a.lineTo(51, 87);
                a.lineTo(87, 51);
                a.lineTo(100, 75);
                a.lineTo(100, 100);
                a.endFill()
            };
            var Zh = function() {
                G.call(this);
                this.makeGraphic(1, 1, -1, !0, q.bitmap.getUniqueKey("bg_graphic_"));
                this.scrollFactor.set()
            };
            g["flixel.system.FlxBGSprite"] = Zh;
            Zh.__name__ = "flixel.system.FlxBGSprite";
            Zh.__super__ = G;
            Zh.prototype = n(G.prototype, {
                draw: function() {
                    for (var a = 0, b = this.get_cameras(); a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.visible && c.exists && (this._matrix.identity(), this._matrix.scale(c.viewWidth, c.viewHeight), c.drawPixels(this.frame, null, this._matrix, this.colorTransform))
                    }
                },
                __class__: Zh
            });
            var Cf = function() {
                Z.call(this);
                this.addEventListener("addedToStage", r(this, this.onAddedToStage))
            };
            g["flixel.system._FlxBasePreloader.DefaultPreloader"] =
                Cf;
            Cf.__name__ = "flixel.system._FlxBasePreloader.DefaultPreloader";
            Cf.__super__ = Z;
            Cf.prototype = n(Z.prototype, {
                onAddedToStage: function(a) {
                    this.removeEventListener("addedToStage", r(this, this.onAddedToStage));
                    this.onInit();
                    this.onUpdate(this.get_loaderInfo().bytesLoaded, this.get_loaderInfo().bytesTotal);
                    this.addEventListener("progress", r(this, this.onProgress));
                    this.addEventListener("complete", r(this, this.onComplete))
                },
                onComplete: function(a) {
                    a.preventDefault();
                    this.removeEventListener("progress", r(this,
                        this.onProgress));
                    this.removeEventListener("complete", r(this, this.onComplete));
                    this.onLoaded()
                },
                onProgress: function(a) {
                    this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0)
                },
                onInit: function() {},
                onLoaded: function() {
                    this.dispatchEvent(new sa("unload"))
                },
                onUpdate: function(a, b) {},
                __class__: Cf
            });
            var Df = function(a, b) {
                null == a && (a = 0);
                this._loaded = this._urlChecked = this._destroyed = !1;
                this._percent = 0;
                this.siteLockBodyText = "It appears the website you are using is hosting an unauthorized copy of this game. Storage or redistribution of this content, without the express permission of the developer or other copyright holder, is prohibited under copyright law.\n\nThank you for your interest in this game! Please support the developer by visiting the following website to play the game:";
                this.siteLockTitleText = "Sorry.";
                this.minDisplayTime = this.siteLockURLIndex = 0;
                Cf.call(this);
                this.minDisplayTime = a;
                this.allowedURLs = null != b ? b : [];
                this._startTime = (new Date).getTime()
            };
            g["flixel.system.FlxBasePreloader"] = Df;
            Df.__name__ = "flixel.system.FlxBasePreloader";
            Df.__super__ = Cf;
            Df.prototype = n(Cf.prototype, {
                create: function() {},
                onInit: function() {
                    Cf.prototype.onInit.call(this);
                    la.get_current().stage.set_scaleMode(2);
                    la.get_current().stage.align = 6;
                    this.create();
                    this.addEventListener("enterFrame", r(this,
                        this.onEnterFrame));
                    this.checkSiteLock()
                },
                onUpdate: function(a, b) {
                    this._percent = 0 != b ? a / b : 0
                },
                onEnterFrame: function(a) {
                    a = (new Date).getTime() - this._startTime;
                    var b = 1E3 * this.minDisplayTime,
                        c = this._percent;
                    0 < b && this._percent > a / b && (c = a / b);
                    this._destroyed || this.update(c);
                    this._loaded && (0 >= b || 1 <= a / b) && (this.removeEventListener("enterFrame", r(this, this.onEnterFrame)), Cf.prototype.onLoaded.call(this), this.destroy(), this._destroyed = !0)
                },
                destroy: function() {},
                update: function(a) {},
                onLoaded: function() {
                    this._loaded = !0;
                    this._percent = 1
                },
                createBitmap: function(a, b) {
                    var c = new Jb;
                    c.set_bitmapData(Ua.createInstance(a, [0, 0, !0, -1, function(a) {
                        b(c)
                    }]));
                    return c
                },
                checkSiteLock: function() {
                    this._urlChecked || (this.isHostUrlAllowed() ? this._urlChecked = !0 : (this.removeChildren(), this.removeEventListener("enterFrame", r(this, this.onEnterFrame)), this.createSiteLockFailureScreen()))
                },
                createSiteLockFailureScreen: function() {
                    this.addChild(this.createSiteLockFailureBackground(16777215, 15066597));
                    this.addChild(this.createSiteLockFailureIcon(15066597,
                        .9));
                    this.addChild(this.createSiteLockFailureText(30))
                },
                createSiteLockFailureBackground: function(a, b) {
                    var c = new ff,
                        d = c.get_graphics();
                    d.clear();
                    var e = new xa;
                    e.createGradientBox(1, 1, 0, -.5, -.5);
                    var f = Math.max(this.stage.stageWidth, this.stage.stageHeight);
                    e.scale(f, f);
                    e.translate(.5 * this.stage.stageWidth, .5 * this.stage.stageHeight);
                    d.beginGradientFill(1, [a, b], [1, 1], [0, 255], e);
                    d.drawRect(0, 0, this.stage.stageWidth, this.stage.stageHeight);
                    d.endFill();
                    return c
                },
                createSiteLockFailureIcon: function(a, b) {
                    var c =
                        new ff,
                        d = c.get_graphics();
                    d.clear();
                    d.beginFill(a);
                    a = [1, 6, 2, 2, 2, 6, 6, 2, 2, 2, 6, 1, 6, 2, 6, 2, 6, 2, 6, 1, 6, 6, 2, 2, 2, 6, 6];
                    for (var e = ib.toIntVector(null), f = 0, k = a.length; f < k;) {
                        var p = f++;
                        e.set(p, a[p])
                    }
                    var m = e;
                    a = [120, 0, 164, 0, 200, 35, 200, 79, 200, 130, 160, 130, 160, 79, 160, 57, 142, 40, 120, 40, 97, 40, 79, 57, 79, 79, 80, 130, 40, 130, 40, 79, 40, 35, 75, 0, 120, 0, 220, 140, 231, 140, 240, 148, 240, 160, 240, 300, 240, 311, 231, 320, 220, 320, 20, 320, 8, 320, 0, 311, 0, 300, 0, 160, 0, 148, 8, 140, 20, 140, 120, 190, 108, 190, 100, 198, 100, 210, 100, 217, 104, 223, 110, 227, 110, 270, 130,
                        270, 130, 227, 135, 223, 140, 217, 140, 210, 140, 198, 131, 190, 120, 190
                    ];
                    e = ib.toFloatVector(null);
                    f = 0;
                    for (k = a.length; f < k;) p = f++, e.set(p, a[p]);
                    d.drawPath(m, e, 1);
                    d.endFill();
                    d = new xa;
                    d.translate(-.5 * c.get_width(), -.5 * c.get_height());
                    b *= Math.min(this.stage.stageWidth / c.get_width(), this.stage.stageHeight / c.get_height());
                    d.scale(b, b);
                    d.translate(.5 * this.stage.stageWidth, .5 * this.stage.stageHeight);
                    c.get_transform().set_matrix(d);
                    return c
                },
                createSiteLockFailureText: function(a) {
                    var b = new Z,
                        c = new fa(0, 0, this.stage.stageWidth,
                            this.stage.stageHeight);
                    c.inflate(-a, -a);
                    a = new Vb;
                    var d = new nc("_sans", 33, 3355443, !0);
                    d.align = 3;
                    a.set_defaultTextFormat(d);
                    a.set_selectable(!1);
                    a.set_width(c.width);
                    a.set_text(this.siteLockTitleText);
                    d = new Vb;
                    var e = new nc("_sans", 22, 3355443);
                    e.align = 2;
                    d.set_defaultTextFormat(e);
                    d.set_multiline(!0);
                    d.set_wordWrap(!0);
                    d.set_selectable(!1);
                    d.set_width(c.width);
                    d.set_text(this.siteLockBodyText);
                    e = new Vb;
                    var f = new nc("_sans", 22, 7247820, !0, !1, !0);
                    f.align = 0;
                    f.url = this.allowedURLs[this.siteLockURLIndex];
                    e.set_defaultTextFormat(f);
                    e.set_selectable(!0);
                    e.set_width(c.width);
                    e.set_text(this.allowedURLs[this.siteLockURLIndex]);
                    this.adjustSiteLockTextFields(a, d, e);
                    a.set_height(a.get_textHeight() + 4);
                    d.set_height(d.get_textHeight() + 4);
                    e.set_height(e.get_textHeight() + 4);
                    a.set_x(d.set_x(e.set_x(c.get_left())));
                    a.set_y(c.get_top());
                    d.set_y(a.get_y() + 2 * a.get_height());
                    e.set_y(d.get_y() + d.get_height() + e.get_height());
                    b.addChild(a);
                    b.addChild(d);
                    b.addChild(e);
                    return b
                },
                adjustSiteLockTextFields: function(a, b, c) {},
                isHostUrlAllowed: function() {
                    if (0 == this.allowedURLs.length) return !0;
                    for (var a = ub.getDomain(C.location.href), b = 0, c = this.allowedURLs; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getDomain(d) == a) return !0
                    }
                    return !1
                },
                __class__: Df
            });
            var Hc = function() {
                this.exists = !0
            };
            g["flixel.system.FlxLinkedList"] = Hc;
            Hc.__name__ = "flixel.system.FlxLinkedList";
            Hc.__interfaces__ = [L];
            Hc.recycle = function() {
                if (null != Hc._cachedListsHead) {
                    var a = Hc._cachedListsHead;
                    Hc._cachedListsHead = Hc._cachedListsHead.next;
                    Hc._NUM_CACHED_FLX_LIST--;
                    a.exists = !0;
                    a.next = null;
                    return a
                }
                return new Hc
            };
            Hc.prototype = {
                destroy: function() {
                    this.exists && (this.object = null, null != this.next && this.next.destroy(), this.exists = !1, this.next = Hc._cachedListsHead, Hc._cachedListsHead = this, Hc._NUM_CACHED_FLX_LIST++)
                },
                __class__: Hc
            };
            var Xd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Xd.preload) this.__fromImage(Xd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Xd.resourceName), Xd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null ==
                            Xd.preload && (Xd.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system._FlxPreloader.GraphicLogoLight"] = Xd;
            Xd.__name__ = "flixel.system._FlxPreloader.GraphicLogoLight";
            Xd.__super__ = H;
            Xd.prototype = n(H.prototype, {
                __class__: Xd
            });
            var Yd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Yd.preload) this.__fromImage(Yd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Yd.resourceName), Yd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null ==
                            Yd.preload && (Yd.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system._FlxPreloader.GraphicLogoCorners"] = Yd;
            Yd.__name__ = "flixel.system._FlxPreloader.GraphicLogoCorners";
            Yd.__super__ = H;
            Yd.prototype = n(H.prototype, {
                __class__: Yd
            });
            var Sh = function(a, b) {
                null == a && (a = 0);
                Df.call(this, a, b)
            };
            g["flixel.system.FlxPreloader"] = Sh;
            Sh.__name__ = "flixel.system.FlxPreloader";
            Sh.__super__ = Df;
            Sh.prototype = n(Df.prototype, {
                create: function() {
                    var a = this;
                    this._buffer = new Z;
                    this._buffer.set_scaleX(this._buffer.set_scaleY(2));
                    this.addChild(this._buffer);
                    this._width = la.get_current().stage.stageWidth / this._buffer.get_scaleX() | 0;
                    this._height = la.get_current().stage.stageHeight / this._buffer.get_scaleY() | 0;
                    this._buffer.addChild(new Jb(new H(this._width, this._height, !1, 13406)));
                    var b = this.createBitmap(Xd, function(b) {
                        b.set_width(b.set_height(a._height));
                        b.set_x((a._width - b.get_width()) / 2)
                    });
                    b.smoothing = !0;
                    this._buffer.addChild(b);
                    this._bmpBar = new Jb(new H(1, 7, !1, 6253311));
                    this._bmpBar.set_x(4);
                    this._bmpBar.set_y(this._height -
                        11);
                    this._buffer.addChild(this._bmpBar);
                    this._text = new Vb;
                    this._text.set_defaultTextFormat(new nc(zd.FONT_DEFAULT, 8, 6253311));
                    this._text.set_embedFonts(!0);
                    this._text.set_selectable(!1);
                    this._text.set_multiline(!1);
                    this._text.set_x(2);
                    this._text.set_y(this._bmpBar.get_y() - 11);
                    this._text.set_width(200);
                    this._buffer.addChild(this._text);
                    this._logo = new Z;
                    zd.drawLogo(this._logo.get_graphics());
                    this._logo.set_scaleX(this._logo.set_scaleY(this._height / 8 * .04));
                    this._logo.set_x((this._width - this._logo.get_width()) /
                        2);
                    this._logo.set_y((this._height - this._logo.get_height()) / 2);
                    this._buffer.addChild(this._logo);
                    this._logoGlow = new Z;
                    zd.drawLogo(this._logoGlow.get_graphics());
                    this._logoGlow.set_blendMode(12);
                    this._logoGlow.set_scaleX(this._logoGlow.set_scaleY(this._height / 8 * .04));
                    this._logoGlow.set_x((this._width - this._logoGlow.get_width()) / 2);
                    this._logoGlow.set_y((this._height - this._logoGlow.get_height()) / 2);
                    this._buffer.addChild(this._logoGlow);
                    b = this.createBitmap(Yd, function(b) {
                        b.set_width(a._width);
                        b.set_height(a.get_height())
                    });
                    b.smoothing = !0;
                    this._buffer.addChild(b);
                    b = new Jb(new H(this._width, this._height, !1, 16777215));
                    for (var c = 0, d = 0; c < this._height;) {
                        for (d = 0; d < this._width;) b.get_bitmapData().setPixel(d++, c, 0);
                        c += 2
                    }
                    b.set_blendMode(11);
                    b.set_alpha(.25);
                    this._buffer.addChild(b);
                    Df.prototype.create.call(this)
                },
                destroy: function() {
                    null != this._buffer && this.removeChild(this._buffer);
                    this._logoGlow = this._logo = this._text = this._bmpBar = this._buffer = null;
                    Df.prototype.destroy.call(this)
                },
                update: function(a) {
                    this._bmpBar.set_scaleX(a *
                        (this._width - 8));
                    this._text.set_text(I.string(q.VERSION) + " " + (100 * a | 0) + "%");
                    .1 > a ? (this._logoGlow.set_alpha(0), this._logo.set_alpha(0)) : .15 > a ? (this._logoGlow.set_alpha(Math.random()), this._logo.set_alpha(0)) : .2 > a ? (this._logoGlow.set_alpha(0), this._logo.set_alpha(0)) : .25 > a ? (this._logoGlow.set_alpha(0), this._logo.set_alpha(Math.random())) : .7 > a ? (this._logoGlow.set_alpha((a - .45) / .45), this._logo.set_alpha(1)) : .8 < a && .9 > a ? (this._logoGlow.set_alpha(1 - (a - .8) / .1), this._logo.set_alpha(0)) : .9 < a && this._buffer.set_alpha(1 -
                        (a - .9) / .1)
                },
                __class__: Sh
            });
            var pd = function(a, b, c, d, e) {
                ca.call(this);
                var f = a,
                    k = b,
                    p = c,
                    m = d;
                null == m && (m = 0);
                null == p && (p = 0);
                null == k && (k = 0);
                null == f && (f = 0);
                this.x = f;
                this.y = k;
                this.width = p;
                this.height = m;
                this.reset(a, b, c, d, e)
            };
            g["flixel.system.FlxQuadTree"] = pd;
            pd.__name__ = "flixel.system.FlxQuadTree";
            pd.__super__ = ca;
            pd.prototype = n(ca.prototype, {
                reset: function(a, b, c, d, e) {
                    this.exists = !0;
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.x = a;
                    this.y = b;
                    this.width = c;
                    this.height = d;
                    this._headA = this._tailA =
                        Hc.recycle();
                    this._headB = this._tailB = Hc.recycle();
                    if (null != e) {
                        if (null != e._headA.object)
                            for (d = e._headA; null != d;) null != this._tailA.object && (a = this._tailA, this._tailA = Hc.recycle(), a.next = this._tailA), this._tailA.object = d.object, d = d.next;
                        if (null != e._headB.object)
                            for (d = e._headB; null != d;) null != this._tailB.object && (a = this._tailB, this._tailB = Hc.recycle(), a.next = this._tailB), this._tailB.object = d.object, d = d.next
                    } else pd._min = Math.floor((this.width + this.height) / (2 * pd.divisions));
                    this._canSubdivide = this.width >
                        pd._min || this.height > pd._min;
                    this._southWestTree = this._southEastTree = this._northEastTree = this._northWestTree = null;
                    this._leftEdge = this.x;
                    this._rightEdge = this.x + this.width;
                    this._halfWidth = this.width / 2;
                    this._midpointX = this._leftEdge + this._halfWidth;
                    this._topEdge = this.y;
                    this._bottomEdge = this.y + this.height;
                    this._halfHeight = this.height / 2;
                    this._midpointY = this._topEdge + this._halfHeight
                },
                destroy: function() {
                    this._headA = V.destroy(this._headA);
                    this._headB = V.destroy(this._headB);
                    this._tailA = V.destroy(this._tailA);
                    this._tailB = V.destroy(this._tailB);
                    this._northWestTree = V.destroy(this._northWestTree);
                    this._northEastTree = V.destroy(this._northEastTree);
                    this._southWestTree = V.destroy(this._southWestTree);
                    this._southEastTree = V.destroy(this._southEastTree);
                    pd._object = null;
                    pd._processingCallback = null;
                    pd._notifyCallback = null;
                    this.exists = !1;
                    this.next = pd._cachedTreesHead;
                    pd._cachedTreesHead = this;
                    pd._NUM_CACHED_QUAD_TREES++;
                    ca.prototype.destroy.call(this)
                },
                __class__: pd
            });
            var rf = function() {
                this._alreadyPaused = !1;
                this._volumeAdjust =
                    1;
                this.loopTime = this._time = this._length = 0;
                J.call(this);
                this.reset()
            };
            g["flixel.system.FlxSound"] = rf;
            rf.__name__ = "flixel.system.FlxSound";
            rf.__super__ = J;
            rf.prototype = n(J.prototype, {
                reset: function() {
                    this.destroy();
                    this._time = this.y = this.x = 0;
                    this._paused = !1;
                    this._volumeAdjust = this._volume = 1;
                    this.looped = !1;
                    this.endTime = this.loopTime = 0;
                    this._target = null;
                    this._radius = 0;
                    this._proximityPan = !1;
                    this.set_visible(!1);
                    this.amplitudeRight = this.amplitudeLeft = this.amplitude = 0;
                    this.autoDestroy = !1;
                    null == this._transform &&
                        (this._transform = new gf);
                    this._transform.pan = 0
                },
                destroy: function() {
                    this._transform = null;
                    this.set_exists(!1);
                    this.set_active(!1);
                    this.artist = this.name = this._target = null;
                    null != this._channel && (this._channel.removeEventListener("soundComplete", r(this, this.stopped)), this._channel.stop(), this._channel = null);
                    null != this._sound && (this._sound.removeEventListener("id3", r(this, this.gotID3)), this._sound = null);
                    this.onComplete = null;
                    J.prototype.destroy.call(this)
                },
                update: function(a) {
                    if (null != this._channel) {
                        this._time =
                            this._channel.get_position();
                        var b = 1;
                        if (null != this._target) {
                            a = this._target.getPosition();
                            var c = this.x;
                            b = this.y;
                            null == b && (b = 0);
                            null == c && (c = 0);
                            null == b && (b = 0);
                            null == c && (c = 0);
                            b = X._pool.get().set(c, b);
                            b._inPool = !1;
                            b._weak = !0;
                            b = a.distanceTo(b) / this._radius;
                            a.put();
                            a = 0 > b ? 0 : b;
                            b = 1 - (1 < a ? 1 : a);
                            this._proximityPan && (a = (this.x - this._target.x) / this._radius, a = -1 > a ? -1 : a, this._transform.pan = 1 < a ? 1 : a)
                        }
                        this._volumeAdjust = b;
                        this.updateTransform();
                        0 < this._transform.volume ? (this.amplitudeLeft = this._channel.leftPeak / this._transform.volume,
                            this.amplitudeRight = this._channel.rightPeak / this._transform.volume, this.amplitude = .5 * (this.amplitudeLeft + this.amplitudeRight)) : this.amplitude = this.amplitudeRight = this.amplitudeLeft = 0;
                        null != this.endTime && this._time >= this.endTime && this.stopped()
                    }
                },
                kill: function() {
                    J.prototype.kill.call(this);
                    this.cleanup(!1)
                },
                loadEmbedded: function(a, b, c, d) {
                    null == c && (c = !1);
                    null == b && (b = !1);
                    if (null == a) return this;
                    this.cleanup(!0);
                    a instanceof Ef ? this._sound = a : oa.__instanceof(a, vk) ? this._sound = Ua.createInstance(a, []) : "string" ==
                        typeof a && (ta.exists(a, "SOUND") || ta.exists(a, "MUSIC")) && (this._sound = ta.getSound(a));
                    return this.init(b, c, d)
                },
                loadStream: function(a, b, c, d) {
                    null == c && (c = !1);
                    null == b && (b = !1);
                    this.cleanup(!0);
                    this._sound = new Ef;
                    this._sound.addEventListener("id3", r(this, this.gotID3));
                    this._sound.load(new $g(a));
                    return this.init(b, c, d)
                },
                init: function(a, b, c) {
                    null == b && (b = !1);
                    null == a && (a = !1);
                    this.looped = a;
                    this.autoDestroy = b;
                    this.updateTransform();
                    this.set_exists(!0);
                    this.onComplete = c;
                    this.endTime = this._length = null == this._sound ?
                        0 : this._sound.get_length();
                    return this
                },
                play: function(a, b, c) {
                    null == b && (b = 0);
                    null == a && (a = !1);
                    if (!this.exists) return this;
                    if (a) this.cleanup(!1, !0);
                    else if (null != this._channel) return this;
                    this._paused ? this.resume() : this.startSound(b);
                    this.endTime = c;
                    return this
                },
                resume: function() {
                    this._paused && this.startSound(this._time);
                    return this
                },
                pause: function() {
                    if (null == this._channel) return this;
                    this._time = this._channel.get_position();
                    this._paused = !0;
                    this.cleanup(!1, !1);
                    return this
                },
                volumeTween: function(a) {
                    this.set_volume(a)
                },
                updateTransform: function() {
                    this._transform.volume = (q.sound.muted ? 0 : 1) * q.sound.volume * (null != this.group ? this.group.volume : 1) * this._volume * this._volumeAdjust;
                    null != this._channel && this._channel.set_soundTransform(this._transform)
                },
                startSound: function(a) {
                    null != this._sound && (this._time = a, this._paused = !1, this._channel = this._sound.play(this._time, 0, this._transform), null != this._channel ? (this._channel.addEventListener("soundComplete", r(this, this.stopped)), this.set_active(!0)) : (this.set_exists(!1), this.set_active(!1)))
                },
                stopped: function(a) {
                    if (null != this.onComplete) this.onComplete();
                    this.looped ? (this.cleanup(!1), this.play(!1, this.loopTime, this.endTime)) : this.cleanup(this.autoDestroy)
                },
                cleanup: function(a, b) {
                    null == b && (b = !0);
                    a ? this.reset() : (null != this._channel && (this._channel.removeEventListener("soundComplete", r(this, this.stopped)), this._channel.stop(), this._channel = null), this.set_active(!1), b && (this._time = 0, this._paused = !1))
                },
                gotID3: function(a) {
                    this.name = this._sound.get_id3().songName;
                    this.artist = this._sound.get_id3().artist;
                    this._sound.removeEventListener("id3", r(this, this.gotID3))
                },
                onFocus: function() {
                    this._alreadyPaused || this.resume()
                },
                onFocusLost: function() {
                    this._alreadyPaused = this._paused;
                    this.pause()
                },
                set_group: function(a) {
                    if (this.group != a) {
                        var b = this.group;
                        this.group = a;
                        null != b && b.remove(this);
                        null != a && a.add(this);
                        this.updateTransform()
                    }
                    return a
                },
                set_volume: function(a) {
                    var b = 0 > a ? 0 : a;
                    this._volume = 1 < b ? 1 : b;
                    this.updateTransform();
                    return a
                },
                set_time: function(a) {
                    null != this._channel && (this.cleanup(!1, !0), this.startSound(a));
                    return this._time = a
                },
                __class__: rf,
                __properties__: n(J.prototype.__properties__, {
                    set_time: "set_time",
                    set_volume: "set_volume",
                    set_group: "set_group"
                })
            });
            var Vi = function(a) {
                null == a && (a = 1);
                this.sounds = [];
                this.set_volume(a)
            };
            g["flixel.system.FlxSoundGroup"] = Vi;
            Vi.__name__ = "flixel.system.FlxSoundGroup";
            Vi.prototype = {
                add: function(a) {
                    return 0 > this.sounds.indexOf(a) ? (this.sounds.push(a), a.set_group(this), !0) : !1
                },
                remove: function(a) {
                    return 0 <= this.sounds.indexOf(a) ? (a.set_group(null), Y.remove(this.sounds, a)) :
                        !1
                },
                set_volume: function(a) {
                    this.volume = a;
                    for (var b = 0, c = this.sounds; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.updateTransform()
                    }
                    return a
                },
                __class__: Vi,
                __properties__: {
                    set_volume: "set_volume"
                }
            };
            var md = function(a) {
                this._curPart = 0;
                qb.call(this, a)
            };
            g["flixel.system.FlxSplash"] = md;
            md.__name__ = "flixel.system.FlxSplash";
            md.__super__ = qb;
            md.prototype = n(qb.prototype, {
                create: function() {
                    this._cachedBgColor = q.cameras.get_bgColor();
                    q.cameras.set_bgColor(-16777216);
                    this._cachedTimestep = q.fixedTimestep;
                    q.fixedTimestep = !1;
                    this._cachedAutoPause =
                        q.autoPause;
                    q.autoPause = !1;
                    q.keys.enabled = !1;
                    this._times = [.041, .184, .334, .495, .636];
                    this._colors = [47394, 16761138, 16066382, 3555839, 314875];
                    this._functions = [r(this, this.drawGreen), r(this, this.drawYellow), r(this, this.drawRed), r(this, this.drawBlue), r(this, this.drawLightBlue)];
                    for (var a = 0, b = this._times; a < b.length;) {
                        var c = b[a];
                        ++a;
                        (new Rc).start(c, r(this, this.timerCallback))
                    }
                    a = la.get_current().stage.stageWidth;
                    b = la.get_current().stage.stageHeight;
                    this._sprite = new Z;
                    la.get_current().stage.addChild(this._sprite);
                    this._gfx = this._sprite.get_graphics();
                    this._text = new Vb;
                    this._text.set_selectable(!1);
                    this._text.set_embedFonts(!0);
                    c = new nc(zd.FONT_DEFAULT, 16, 16777215);
                    c.align = 0;
                    this._text.set_defaultTextFormat(c);
                    this._text.set_text("HaxeFlixel");
                    la.get_current().stage.addChild(this._text);
                    this.onResize(a, b);
                    md.muted || q.sound.load(ta.getSound("flixel/sounds/flixel.ogg")).play()
                },
                destroy: function() {
                    this._functions = this._colors = this._times = this._text = this._gfx = this._sprite = null;
                    qb.prototype.destroy.call(this)
                },
                onResize: function(a, b) {
                    qb.prototype.onResize.call(this, a, b);
                    this._sprite.set_x(a / 2);
                    this._sprite.set_y(b / 2 - 20 * q.game.get_scaleY());
                    this._text.set_width(a / q.game.get_scaleX());
                    this._text.set_x(0);
                    this._text.set_y(this._sprite.get_y() + 80 * q.game.get_scaleY());
                    this._sprite.set_scaleX(this._text.set_scaleX(q.game.get_scaleX()));
                    this._sprite.set_scaleY(this._text.set_scaleY(q.game.get_scaleY()))
                },
                timerCallback: function(a) {
                    this._functions[this._curPart]();
                    this._text.set_textColor(this._colors[this._curPart]);
                    this._text.set_text("HaxeFlixel");
                    this._curPart++;
                    5 == this._curPart && (Za.tween(this._sprite, {
                        alpha: 0
                    }, 3, {
                        ease: mc.quadOut,
                        onComplete: r(this, this.onComplete)
                    }), Za.tween(this._text, {
                        alpha: 0
                    }, 3, {
                        ease: mc.quadOut
                    }))
                },
                drawGreen: function() {
                    this._gfx.beginFill(47394);
                    this._gfx.moveTo(0, -37);
                    this._gfx.lineTo(1, -37);
                    this._gfx.lineTo(37, 0);
                    this._gfx.lineTo(37, 1);
                    this._gfx.lineTo(1, 37);
                    this._gfx.lineTo(0, 37);
                    this._gfx.lineTo(-37, 1);
                    this._gfx.lineTo(-37, 0);
                    this._gfx.lineTo(0, -37);
                    this._gfx.endFill()
                },
                drawYellow: function() {
                    this._gfx.beginFill(16761138);
                    this._gfx.moveTo(-50, -50);
                    this._gfx.lineTo(-25, -50);
                    this._gfx.lineTo(0, -37);
                    this._gfx.lineTo(-37, 0);
                    this._gfx.lineTo(-50, -25);
                    this._gfx.lineTo(-50, -50);
                    this._gfx.endFill()
                },
                drawRed: function() {
                    this._gfx.beginFill(16066382);
                    this._gfx.moveTo(50, -50);
                    this._gfx.lineTo(25, -50);
                    this._gfx.lineTo(1, -37);
                    this._gfx.lineTo(37, 0);
                    this._gfx.lineTo(50, -25);
                    this._gfx.lineTo(50, -50);
                    this._gfx.endFill()
                },
                drawBlue: function() {
                    this._gfx.beginFill(3555839);
                    this._gfx.moveTo(-50, 50);
                    this._gfx.lineTo(-25, 50);
                    this._gfx.lineTo(0,
                        37);
                    this._gfx.lineTo(-37, 1);
                    this._gfx.lineTo(-50, 25);
                    this._gfx.lineTo(-50, 50);
                    this._gfx.endFill()
                },
                drawLightBlue: function() {
                    this._gfx.beginFill(314875);
                    this._gfx.moveTo(50, 50);
                    this._gfx.lineTo(25, 50);
                    this._gfx.lineTo(1, 37);
                    this._gfx.lineTo(37, 1);
                    this._gfx.lineTo(50, 25);
                    this._gfx.lineTo(50, 50);
                    this._gfx.endFill()
                },
                onComplete: function(a) {
                    q.cameras.set_bgColor(this._cachedBgColor);
                    q.fixedTimestep = this._cachedTimestep;
                    q.autoPause = this._cachedAutoPause;
                    q.keys.enabled = !0;
                    la.get_current().stage.removeChild(this._sprite);
                    la.get_current().stage.removeChild(this._text);
                    a = Ua.createInstance(md.nextState, []);
                    q.game._state.switchTo(a) && (q.game._requestedState = a);
                    q.game._gameJustStarted = !0
                },
                __class__: md
            });
            var Te = function() {};
            g["flixel.system.debug.DebuggerUtil"] = Te;
            Te.__name__ = "flixel.system.debug.DebuggerUtil";
            Te.createTextField = function(a, b, c, d) {
                null == d && (d = 12);
                null == c && (c = -1);
                null == b && (b = 0);
                null == a && (a = 0);
                return Te.initTextField(new Vb, a, b, c, d)
            };
            Te.initTextField = function(a, b, c, d, e) {
                null == e && (e = 12);
                null == d && (d = -1);
                null ==
                    c && (c = 0);
                null == b && (b = 0);
                a.set_x(b);
                a.set_y(c);
                a.set_multiline(!1);
                a.set_wordWrap(!1);
                a.set_embedFonts(!0);
                a.set_selectable(!1);
                a.set_defaultTextFormat(new nc(zd.FONT_DEBUGGER, e, d & 16777215));
                a.set_alpha((d >> 24 & 255) / 255);
                a.set_autoSize(1);
                return a
            };
            Te.fixSize = function(a) {
                ea.setProperty(a, "width", 11);
                ea.setProperty(a, "height", 11);
                return a
            };
            var ue = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ue.preload) this.__fromImage(ue.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ue.resourceName),
                        ue.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ue.preload && (ue.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug._FlxDebugger.GraphicFlixel"] = ue;
            ue.__name__ = "flixel.system.debug._FlxDebugger.GraphicFlixel";
            ue.__super__ = H;
            ue.prototype = n(H.prototype, {
                __class__: ue
            });
            var ve = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ve.preload) this.__fromImage(ve.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ve.resourceName),
                        ve.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ve.preload && (ve.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug._FlxDebugger.GraphicDrawDebug"] = ve;
            ve.__name__ = "flixel.system.debug._FlxDebugger.GraphicDrawDebug";
            ve.__super__ = H;
            ve.prototype = n(H.prototype, {
                __class__: ve
            });
            var we = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != we.preload) this.__fromImage(we.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(we.resourceName),
                        we.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == we.preload && (we.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicLog"] = we;
            we.__name__ = "flixel.system.debug.GraphicLog";
            we.__super__ = H;
            we.prototype = n(H.prototype, {
                __class__: we
            });
            var xe = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != xe.preload) this.__fromImage(xe.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(xe.resourceName),
                        xe.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == xe.preload && (xe.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicStats"] = xe;
            xe.__name__ = "flixel.system.debug.GraphicStats";
            xe.__super__ = H;
            xe.prototype = n(H.prototype, {
                __class__: xe
            });
            var ye = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ye.preload) this.__fromImage(ye.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ye.resourceName),
                        ye.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ye.preload && (ye.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicWatch"] = ye;
            ye.__name__ = "flixel.system.debug.GraphicWatch";
            ye.__super__ = H;
            ye.prototype = n(H.prototype, {
                __class__: ye
            });
            var ze = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ze.preload) this.__fromImage(ze.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ze.resourceName),
                        ze.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ze.preload && (ze.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicBitmapLog"] = ze;
            ze.__name__ = "flixel.system.debug.GraphicBitmapLog";
            ze.__super__ = H;
            ze.prototype = n(H.prototype, {
                __class__: ze
            });
            var Ae = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Ae.preload) this.__fromImage(Ae.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Ae.resourceName),
                        Ae.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Ae.preload && (Ae.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicConsole"] = Ae;
            Ae.__name__ = "flixel.system.debug.GraphicConsole";
            Ae.__super__ = H;
            Ae.prototype = n(H.prototype, {
                __class__: Ae
            });
            var Be = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Be.preload) this.__fromImage(Be.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Be.resourceName),
                        Be.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Be.preload && (Be.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicArrowLeft"] = Be;
            Be.__name__ = "flixel.system.debug.GraphicArrowLeft";
            Be.__super__ = H;
            Be.prototype = n(H.prototype, {
                __class__: Be
            });
            var Ce = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Ce.preload) this.__fromImage(Ce.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Ce.resourceName),
                        Ce.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Ce.preload && (Ce.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicArrowRight"] = Ce;
            Ce.__name__ = "flixel.system.debug.GraphicArrowRight";
            Ce.__super__ = H;
            Ce.prototype = n(H.prototype, {
                __class__: Ce
            });
            var Zd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Zd.preload) this.__fromImage(Zd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Zd.resourceName),
                        Zd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Zd.preload && (Zd.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicCloseButton"] = Zd;
            Zd.__name__ = "flixel.system.debug.GraphicCloseButton";
            Zd.__super__ = H;
            Zd.prototype = n(H.prototype, {
                __class__: Zd
            });
            var $d = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != $d.preload) this.__fromImage($d.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString($d.resourceName),
                        $d.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == $d.preload && ($d.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.GraphicInteractive"] = $d;
            $d.__name__ = "flixel.system.debug.GraphicInteractive";
            $d.__super__ = H;
            $d.prototype = n(H.prototype, {
                __class__: $d
            });
            var Wi = function() {
                Z.call(this)
            };
            g["flixel.system.debug.FlxDebugger"] = Wi;
            Wi.__name__ = "flixel.system.debug.FlxDebugger";
            Wi.__super__ = Z;
            Wi.prototype = n(Z.prototype, {
                __class__: Wi
            });
            var zg = function() {};
            g["flixel.system.debug.Tooltip"] = zg;
            zg.__name__ = "flixel.system.debug.Tooltip";
            zg.add = function(a, b) {
                a = new Xi(a, b);
                zg._container.addChild(a);
                zg._tooltips.push(a);
                return a
            };
            var Xi = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                Z.call(this);
                this.owner = a;
                this.maxSize = new La(c, d);
                this._shadow = new Jb(new H(1, 2, !0, -16777216));
                this._background = new Jb(new H(1, 1, !0, -12961222));
                this.textField = Te.createTextField(2, 1);
                this.textField.set_alpha(.8);
                this.textField.set_text(b);
                this.textField.set_wordWrap(!0);
                this.addChild(this._shadow);
                this.addChild(this._background);
                this.addChild(this.textField);
                this.updateSize();
                this.setVisible(!1);
                null != this.owner && (this.owner.addEventListener("mouseOver", r(this, this.handleMouseEvents)), this.owner.addEventListener("mouseOut", r(this, this.handleMouseEvents)))
            };
            g["flixel.system.debug.TooltipOverlay"] = Xi;
            Xi.__name__ = "flixel.system.debug.TooltipOverlay";
            Xi.__super__ = Z;
            Xi.prototype = n(Z.prototype, {
                setVisible: function(a) {
                    this.set_visible(a);
                    this.get_visible() && (this.parent.addChild(this),
                        this.ensureOnScreen())
                },
                updateSize: function() {
                    this._width = ((0 >= this.maxSize.x ? this.textField.get_textWidth() : Math.abs(this.maxSize.x)) | 0) + 8;
                    this._height = ((0 >= this.maxSize.y ? this.textField.get_textHeight() : Math.abs(this.maxSize.y)) | 0) + 8;
                    this._background.set_scaleX(this._width);
                    this._background.set_scaleY(this._height);
                    this._shadow.set_scaleX(this._width);
                    this._shadow.set_y(this._height);
                    this.textField.set_width(this._width)
                },
                ensureOnScreen: function() {
                    this.set_x(0 > this.get_x() ? 0 : this.get_x());
                    this.set_y(0 >
                        this.get_y() ? 0 : this.get_y());
                    var a = this.get_x() + this.get_width() >= la.get_current().stage.stageWidth ? la.get_current().stage.stageWidth - (this.get_x() + this.get_width()) : 0,
                        b = this.get_y() + this.get_height() >= la.get_current().stage.stageHeight ? la.get_current().stage.stageHeight - (this.get_y() + this.get_height()) : 0,
                        c = this;
                    c.set_x(c.get_x() + a);
                    c = this;
                    c.set_y(c.get_y() + b)
                },
                handleMouseEvents: function(a) {
                    "mouseOver" != a.type || this.get_visible() ? "mouseOut" == a.type && this.setVisible(!1) : (this.set_x(a.stageX + 10), this.set_y(a.stageY +
                        10), this.setVisible(!0))
                },
                __class__: Xi
            });
            var ae = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ae.preload) this.__fromImage(ae.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ae.resourceName), ae.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ae.preload && (ae.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug._Window.GraphicWindowHandle"] = ae;
            ae.__name__ = "flixel.system.debug._Window.GraphicWindowHandle";
            ae.__super__ = H;
            ae.prototype = n(H.prototype, {
                __class__: ae
            });
            var Ed = function(a, b, c, d, e, f, k, p) {
                null == p && (p = !0);
                null == k && (k = !1);
                null == e && (e = !0);
                null == d && (d = 0);
                null == c && (c = 0);
                Z.call(this);
                this.minSize = new La(50, 30);
                this._width = Math.abs(c) | 0;
                this._height = Math.abs(d) | 0;
                this.updateBounds(f);
                this._drag = new La;
                this._resizable = e;
                this._closable = k;
                this._alwaysOnTop = p;
                this._shadow = new Jb(new H(1, 2, !0, -16777216));
                this._background = new Jb(new H(1, 1, !0, -580952225));
                this._header = new Jb(new H(1, 15, !0, -1157627904));
                this._background.set_y(this._header.get_height());
                this._title = Te.createTextField(2, -1);
                this._title.set_alpha(.8);
                this._title.set_text(a);
                this.addChild(this._shadow);
                this.addChild(this._background);
                this.addChild(this._header);
                this.addChild(this._title);
                null != b && (Te.fixSize(b), this._icon = new Jb(b), this._icon.set_x(5), this._icon.set_y(2), this._icon.set_alpha(.8), this._title.set_x(this._icon.get_x() + this._icon.get_width() + 2), this.addChild(this._icon));
                this._resizable && (this._handle = new Jb(Te.fixSize(new ae(0, 0))), this.addChild(this._handle));
                k ? (this._closeButton =
                    new Ag(new Zd(0, 0), r(this, this.close)), this._closeButton.set_alpha(.8), this.addChild(this._closeButton)) : (this._id = Ed.WINDOW_AMOUNT, this.loadSaveData(), Ed.WINDOW_AMOUNT++);
                0 == this._width && 0 == this._height || this.updateSize();
                this.bound();
                this.addEventListener("enterFrame", r(this, this.init))
            };
            g["flixel.system.debug.Window"] = Ed;
            Ed.__name__ = "flixel.system.debug.Window";
            Ed.__super__ = Z;
            Ed.prototype = n(Z.prototype, {
                destroy: function() {
                    this._bounds = this.maxSize = this.minSize = null;
                    null != this._shadow && this.removeChild(this._shadow);
                    this._shadow = null;
                    null != this._background && this.removeChild(this._background);
                    this._background = null;
                    null != this._header && this.removeChild(this._header);
                    this._header = null;
                    null != this._title && this.removeChild(this._title);
                    this._title = null;
                    null != this._handle && this.removeChild(this._handle);
                    this._drag = this._handle = null;
                    this._closeButton = V.destroy(this._closeButton);
                    var a = la.get_current().stage;
                    a.hasEventListener("mouseMove") && a.removeEventListener("mouseMove", r(this, this.onMouseMove));
                    this.hasEventListener("mouseDown") &&
                        this.removeEventListener("mouseDown", r(this, this.onMouseDown));
                    a.hasEventListener("mouseUp") && a.removeEventListener("mouseUp", r(this, this.onMouseUp))
                },
                resize: function(a, b) {
                    this._width = Math.abs(a) | 0;
                    this._height = Math.abs(b) | 0;
                    this.updateSize()
                },
                reposition: function(a, b) {
                    this.set_x(a);
                    this.set_y(b);
                    this.bound()
                },
                updateBounds: function(a) {
                    this._bounds = a;
                    this.maxSize = null != this._bounds ? new La(this._bounds.width, this._bounds.height) : new La(1.79E308, 1.79E308)
                },
                loadSaveData: function() {
                    null != q.save.data.windowSettings ?
                        this.set_visible(q.save.data.windowSettings[this._id]) : (this.initSaveData(), this.loadSaveData())
                },
                initSaveData: function() {
                    q.save.data.windowSettings = [!0, !0, !0, !0, !0, !0, !0, !0, !0, !0];
                    q.save.flush()
                },
                init: function(a) {
                    null != this.stage && (this.removeEventListener("enterFrame", r(this, this.init)), this.stage.addEventListener("mouseMove", r(this, this.onMouseMove)), this.stage.addEventListener("mouseUp", r(this, this.onMouseUp)), this.addEventListener("mouseDown", r(this, this.onMouseDown)))
                },
                onMouseMove: function(a) {
                    a =
                        0 > this.get_mouseX() ? 0 : this.get_mouseX();
                    var b = 0 > this.get_mouseY() ? 0 : this.get_mouseY();
                    this.parent.get_visible() ? this._dragging ? (this._overHeader = !0, this.reposition(this.parent.get_mouseX() - this._drag.x, this.parent.get_mouseY() - this._drag.y)) : this._resizing ? (this._overHandle = !0, this.resize(a - this._drag.x, b - this._drag.y)) : 0 <= a && a <= this._width && 0 <= b && b <= this._height ? (this._overHeader = a <= this._header.get_width() && b <= this._header.get_height(), this._resizable && (this._overHandle = a >= this._width - this._handle.get_width() &&
                        b >= this._height - this._handle.get_height())) : this._overHandle = this._overHeader = !1 : this._overHandle = this._overHeader = !1
                },
                onMouseDown: function(a) {
                    if (this._overHeader) this._alwaysOnTop && this.parent.addChild(this), this._dragging = !0, this._drag.x = this.get_mouseX(), this._drag.y = this.get_mouseY();
                    else if (this._overHandle) {
                        this._alwaysOnTop && this.parent.addChild(this);
                        this._resizing = !0;
                        a = this._width;
                        var b = this.get_mouseX();
                        this._drag.x = a - b;
                        a = this._height;
                        b = this.get_mouseY();
                        this._drag.y = a - b
                    }
                },
                onMouseUp: function(a) {
                    this._resizing =
                        this._dragging = !1
                },
                bound: function() {
                    if (null != this._bounds) {
                        var a = this.get_x(),
                            b = this._bounds.get_left(),
                            c = this._bounds.get_right() - this._width;
                        a = null != b && a < b ? b : a;
                        this.set_x(null != c && a > c ? c : a);
                        a = this.get_y();
                        b = this._bounds.get_top();
                        c = this._bounds.get_bottom() - this._height;
                        a = null != b && a < b ? b : a;
                        this.set_y(null != c && a > c ? c : a)
                    }
                },
                updateSize: function() {
                    var a = this._width,
                        b = this.minSize.x,
                        c = this.maxSize.x;
                    a = null != b && a < b ? b : a;
                    this._width = (null != c && a > c ? c : a) | 0;
                    a = this._height;
                    b = this.minSize.y;
                    c = this.maxSize.y;
                    a = null !=
                        b && a < b ? b : a;
                    this._height = (null != c && a > c ? c : a) | 0;
                    this._header.set_scaleX(this._width);
                    this._background.set_scaleX(this._width);
                    this._background.set_scaleY(this._height - this._header.get_height());
                    this._shadow.set_scaleX(this._width);
                    this._shadow.set_y(this._height);
                    this._title.set_width(this._width - 4);
                    this._resizable && (this._handle.set_x(this._width - this._handle.get_width()), this._handle.set_y(this._height - this._handle.get_height()));
                    null != this._closeButton && (this._closeButton.set_x(this._width - this._closeButton.get_width() -
                        3), this._closeButton.set_y(3))
                },
                close: function() {
                    this.destroy()
                },
                __class__: Ed
            });
            var Ok = function(a) {
                this.selectedIndex = this.lowerVisibleIndex = this.upperVisibleIndex = 0;
                this.entries = [];
                Z.call(this);
                this.set_visible(!1);
                this.upperVisibleIndex = a - 1;
                this.actualHeight = 20 * a;
                this.createPopupEntries(a);
                this.createScrollBar();
                this.updateSelectedItem();
                la.get_current().stage.addEventListener("keyDown", r(this, this.onKeyDown))
            };
            g["flixel.system.debug.completion.CompletionList"] = Ok;
            Ok.__name__ = "flixel.system.debug.completion.CompletionList";
            Ok.__super__ = Z;
            Ok.prototype = n(Z.prototype, {
                close: function() {
                    this.set_visible(!1);
                    this.set_filter(null);
                    null != this.closed && this.closed()
                },
                createPopupEntries: function(a) {
                    for (var b = 0; b < a;) {
                        var c = b++,
                            d = new De;
                        this.entries.push(d);
                        this.addChild(d);
                        d.set_y(20 * c)
                    }
                },
                createScrollBar: function() {
                    this.scrollBar = new Yi(150, 0, 5, this.actualHeight);
                    this.addChild(this.scrollBar)
                },
                onKeyDown: function(a) {
                    if (this.get_visible()) {
                        switch (a.keyCode) {
                            case 13:
                                null != this.completed && this.completed(this.items[this.selectedIndex]);
                                this.close();
                                return;
                            case 27:
                                this.close();
                                return;
                            case 38:
                                this.updateIndices(-1);
                                break;
                            case 40:
                                this.updateIndices(1)
                        }
                        this.updateEntries()
                    }
                },
                updateIndices: function(a) {
                    var b = this.selectedIndex = this.bound(this.selectedIndex + a),
                        c = this.lowerVisibleIndex,
                        d = this.upperVisibleIndex;
                    (null == c || b >= c) && (null == d || b <= d) || (this.lowerVisibleIndex = this.bound(this.lowerVisibleIndex + a), this.upperVisibleIndex = this.bound(this.upperVisibleIndex + a), this.upperVisibleIndex - this.lowerVisibleIndex != this.items.length && (0 == this.lowerVisibleIndex ?
                        this.upperVisibleIndex = this.entries.length - 1 : this.upperVisibleIndex == this.items.length - 1 && (this.lowerVisibleIndex = this.items.length - this.entries.length)))
                },
                bound: function(a) {
                    var b = this.items.length - 1;
                    a = 0 > a ? 0 : a;
                    return (null != b && a > b ? b : a) | 0
                },
                updateEntries: function() {
                    this.updateLabels();
                    this.updateSelectedItem();
                    this.scrollBar.updateHandle(this.lowerVisibleIndex, this.items.length, this.entries.length)
                },
                updateLabels: function() {
                    for (var a = 0, b = this.entries.length; a < b;) {
                        var c = a++,
                            d = this.items[this.lowerVisibleIndex +
                                c];
                        null == d && (d = "");
                        this.entries[c].setItem(d)
                    }
                },
                updateSelectedItem: function() {
                    for (var a = 0, b = this.entries; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.set_selected(!1)
                    }
                    this.entries[this.selectedIndex - this.lowerVisibleIndex].set_selected(!0);
                    null != this.selectionChanged && this.selectionChanged(this.items[this.selectedIndex])
                },
                setItems: function(a) {
                    null != a && (0 == a.length && this.close(), this.items = a, this.lowerVisibleIndex = this.selectedIndex = 0, this.upperVisibleIndex = this.entries.length - 1, this.updateEntries())
                },
                filterItems: function(a) {
                    null ==
                        a && (a = "");
                    for (var b = [], c = 0, d = this.originalItems; c < d.length;) {
                        var e = d[c];
                        ++c; - 1 != e.toLowerCase().indexOf(a.toLowerCase()) && b.push(e)
                    }
                    return this.sortItems(a, b)
                },
                sortItems: function(a, b) {
                    var c = this;
                    if ("" == a) return b;
                    b.sort(function(b, e) {
                        var d = c.startsWithExt(b, a),
                            k = c.startsWithExt(e, a);
                        return d > k ? -d : k > d ? k : d == k ? b.length - e.length | 0 : 0
                    });
                    return b
                },
                startsWithExt: function(a, b) {
                    return K.startsWith(a, b) ? 2 : K.startsWith(a.replace(/^[_]+/, ""), b) ? 1 : 0
                },
                set_filter: function(a) {
                    if (a == this.filter) return a;
                    this.setItems(this.filterItems(a));
                    return this.filter = a
                },
                __class__: Ok,
                __properties__: n(Z.prototype.__properties__, {
                    set_filter: "set_filter"
                })
            });
            var De = function() {
                this.selected = !1;
                Z.call(this);
                this.initBitmapDatas();
                this.addChild(this.background = new Jb);
                this.background.set_bitmapData(De.normalBitmapData);
                this.label = Te.createTextField();
                this.label.set_x(4);
                this.addChild(this.label)
            };
            g["flixel.system.debug.completion.CompletionListEntry"] = De;
            De.__name__ = "flixel.system.debug.completion.CompletionListEntry";
            De.__super__ = Z;
            De.prototype = n(Z.prototype, {
                initBitmapDatas: function() {
                    null == De.normalBitmapData && (De.normalBitmapData = new H(150, 20, !0, -10526881));
                    null == De.highlightBitmapData && (De.highlightBitmapData = new H(150, 20, !0, -9605779))
                },
                setItem: function(a) {
                    this.label.set_text(a);
                    150 < this.label.get_width() && (this.label.set_width(150), this.label.set_autoSize(2))
                },
                set_selected: function(a) {
                    if (a == this.selected) return a;
                    this.background.set_bitmapData(a ? De.highlightBitmapData : De.normalBitmapData);
                    return this.selected = a
                },
                __class__: De,
                __properties__: n(Z.prototype.__properties__, {
                    set_selected: "set_selected"
                })
            });
            var Yi = function(a, b, c, d) {
                Z.call(this);
                this.set_x(a);
                this.set_y(b);
                this.addChild(new Jb(new H(c, d, !0, -12303292)));
                this.handle = new Jb(new H(c, 1, !0, -14540254));
                this.addChild(this.handle)
            };
            g["flixel.system.debug.completion.CompletionListScrollBar"] = Yi;
            Yi.__name__ = "flixel.system.debug.completion.CompletionListScrollBar";
            Yi.__super__ = Z;
            Yi.prototype = n(Z.prototype, {
                updateHandle: function(a, b, c) {
                    this.handle.set_scaleY(Math.min(this.get_height() / b * c, this.get_height()));
                    this.handle.set_y(this.get_height() /
                        b * a);
                    a = this.handle;
                    c = this.handle.get_y();
                    b = this.get_height() - this.handle.get_scaleY();
                    c = 0 > c ? 0 : c;
                    a.set_y(null != b && c > b ? b : c)
                },
                __class__: Yi
            });
            var Pk = function(a) {
                this._flixelPointer = new gc;
                this._debuggerInteraction = !1;
                this._keysUp = new Tb;
                this._keysDown = new Tb;
                this._turn = 2;
                this._tools = [];
                this.shouldDrawItemsSelection = !0;
                this.pointerJustPressed = this.pointerJustReleased = this.pointerPressed = !1;
                this.flixelPointer = new X;
                this.selectedItems = new Ra;
                Ed.call(this, "Tools", new $d(0, 0), 40, 25, !1);
                this.reposition(2, 100);
                this._container = a;
                this._customCursor = new Z;
                this._customCursor.mouseEnabled = !1;
                this._container.addChild(this._customCursor);
                this.addTool(new Zi);
                this.addTool(new $i);
                this.addTool(new aj);
                this.addTool(new bj);
                q.signals.postDraw.add(r(this, this.postDraw));
                q.debugger.visibilityChanged.add(r(this, this.handleDebuggerVisibilityChanged));
                la.get_current().stage.addEventListener("mouseMove", r(this, this.updateMouse));
                la.get_current().stage.addEventListener("mouseDown", r(this, this.handleMouseClick));
                la.get_current().stage.addEventListener("mouseUp",
                    r(this, this.handleMouseClick));
                la.get_current().stage.addEventListener("keyDown", r(this, this.handleKeyEvent));
                la.get_current().stage.addEventListener("keyUp", r(this, this.handleKeyEvent));
                this._container.addEventListener("mouseOver", r(this, this.handleMouseInDebugger));
                this._container.addEventListener("mouseOut", r(this, this.handleMouseInDebugger))
            };
            g["flixel.system.debug.interaction.Interaction"] = Pk;
            Pk.__name__ = "flixel.system.debug.interaction.Interaction";
            Pk.__super__ = Ed;
            Pk.prototype = n(Ed.prototype, {
                handleDebuggerVisibilityChanged: function() {
                    q.debugger.visible ? this.saveSystemCursorInfo() : this.restoreSystemCursor()
                },
                updateMouse: function(a) {
                    if (null != a.stageX && null != a.stageY) {
                        var b = 0,
                            c = 0;
                        if (null != this.activeTool) {
                            var d = this.activeTool.cursor;
                            null != d && (b = d.width / q.scaleMode.scale.x / 2, c = d.height / q.scaleMode.scale.y / 2)
                        }
                        this._customCursor.set_x(a.stageX + b);
                        this._customCursor.set_y(a.stageY + c);
                        d = this._flixelPointer;
                        d._globalScreenX = a.stageX / q.scaleMode.scale.x | 0;
                        d._globalScreenY = a.stageY / q.scaleMode.scale.y |
                            0;
                        d.updatePositions();
                        this.flixelPointer.set_x(this._flixelPointer.x + b);
                        this.flixelPointer.set_y(this._flixelPointer.y + c)
                    }
                },
                handleMouseClick: function(a) {
                    "mouseDown" == a.type && this.belongsToDebugger(a.target) || (this.pointerJustPressed = "mouseDown" == a.type, this.pointerJustReleased = "mouseUp" == a.type, this.pointerJustPressed ? this.pointerPressed = !0 : this.pointerJustReleased && (this.pointerPressed = !1))
                },
                belongsToDebugger: function(a) {
                    return null == a ? !1 : a instanceof Wi ? !0 : this.belongsToDebugger(a.parent)
                },
                handleMouseInDebugger: function(a) {
                    this.isActive() &&
                        ("mouseOver" == a.type ? this._debuggerInteraction = !0 : "mouseOut" == a.type && (this._debuggerInteraction = !1), a.stopPropagation())
                },
                handleKeyEvent: function(a) {
                    "keyDown" == a.type ? this._keysDown.h[a.keyCode] = !0 : "keyUp" == a.type && (this._keysDown.h[a.keyCode] = !1, this._keysUp.h[a.keyCode] = this._turn)
                },
                countToolsWithUIButton: function() {
                    for (var a = 0, b = 0, c = this._tools; b < c.length;) {
                        var d = c[b];
                        ++b;
                        null != d.button && ++a
                    }
                    return a
                },
                addTool: function(a) {
                    a.init(this);
                    this._tools.push(a);
                    a = a.button;
                    if (null != a) {
                        var b = this.countToolsWithUIButton(),
                            c = Math.ceil(b / 2) | 0;
                        a.set_x(-15 + 25 * (b / c | 0));
                        a.set_y(20 * c);
                        this.addChild(a);
                        this.resize(25 * Math.min(b, 2) + 10, 25 * c + 10)
                    }
                },
                destroy: function() {
                    q.signals.postDraw.remove(r(this, this.postDraw));
                    q.debugger.visibilityChanged.remove(r(this, this.handleDebuggerVisibilityChanged));
                    la.get_current().stage.removeEventListener("mouseMove", r(this, this.updateMouse));
                    la.get_current().stage.removeEventListener("mouseDown", r(this, this.handleMouseClick));
                    la.get_current().stage.removeEventListener("mouseUp", r(this, this.handleMouseClick));
                    la.get_current().stage.removeEventListener("keyDown", r(this, this.handleKeyEvent));
                    la.get_current().stage.removeEventListener("keyUp", r(this, this.handleKeyEvent));
                    null != this._container && (this._container.removeEventListener("mouseOver", r(this, this.handleMouseInDebugger)), this._container.removeEventListener("mouseOut", r(this, this.handleMouseInDebugger)));
                    null != this._customCursor && (this._customCursor.parent.removeChild(this._customCursor), this._customCursor = null);
                    this._tools = V.destroyArray(this._tools);
                    this.selectedItems = V.destroy(this.selectedItems);
                    this.flixelPointer = V.destroy(this.flixelPointer);
                    this._keysUp = this._keysDown = null
                },
                isActive: function() {
                    return q.debugger.visible ? this.get_visible() : !1
                },
                postDraw: function() {
                    if (this.isActive()) {
                        for (var a = 0, b = this._tools; a < b.length;) {
                            var c = b[a];
                            ++a;
                            c.draw()
                        }
                        this.shouldDrawItemsSelection && this.drawItemsSelection()
                    }
                },
                getDebugGraphics: function() {
                    return q.renderBlit ? (Ff.flashGfx.clear(), Ff.flashGfx) : null
                },
                drawItemsSelection: function() {
                    var a = this.getDebugGraphics();
                    if (null != a) {
                        for (var b = new rh(this.selectedItems.members, null); b.hasNext();) {
                            var c = b.next();
                            null != c && null != c.scrollFactor && c.isOnScreen() && (a.lineStyle(.9, 16711680), a.drawRect(c.x - q.camera.scroll.x, c.y - q.camera.scroll.y, c.get_width(), c.get_height()))
                        }
                        q.renderBlit && q.camera.buffer.draw(Ff.flashGfxSprite)
                    }
                },
                registerCustomCursor: function(a, b) {
                    if (null != b) {
                        var c = new Z;
                        c.set_visible(!1);
                        c.set_name(a);
                        c.addChild(new Jb(b));
                        this._customCursor.addChild(c)
                    }
                },
                updateCustomCursors: function() {
                    if (null == this.activeTool ||
                        this._debuggerInteraction) q.mouse.set_useSystemCursor(!0);
                    else if (null != this.activeTool.cursor) {
                        for (var a = "" == this.activeTool.cursorInUse ? this.activeTool.getName() : this.activeTool.cursorInUse, b = 0, c = this._customCursor.get_numChildren(); b < c;) {
                            var d = b++;
                            d = this._customCursor.getChildAt(d);
                            d.set_visible(d.get_name() == a)
                        }
                        q.mouse.visible && q.mouse.set_visible(!1)
                    } else q.mouse.set_useSystemCursor(!0)
                },
                saveSystemCursorInfo: function() {
                    this._wasMouseVisible = q.mouse.visible;
                    this._wasUsingSystemCursor = q.mouse.useSystemCursor
                },
                restoreSystemCursor: function() {
                    q.mouse.set_useSystemCursor(this._wasUsingSystemCursor);
                    q.mouse.set_visible(this._wasMouseVisible);
                    this._customCursor.set_visible(!1)
                },
                setActiveTool: function(a) {
                    null != this.activeTool && (this.activeTool.deactivate(), this.activeTool.button.set_toggled(!0));
                    this.activeTool == a && (a = null);
                    this.activeTool = a;
                    null != this.activeTool ? (this.setToolsCursorVisibility(!0), this.activeTool.button.set_toggled(!1), this.activeTool.activate(), this.updateCustomCursors()) : this.setSystemCursorVisibility(!0);
                    q.mouse.enabled = !this.isInUse()
                },
                setSystemCursorVisibility: function(a) {
                    q.mouse.set_useSystemCursor(a);
                    this._customCursor.set_visible(!a)
                },
                setToolsCursorVisibility: function(a) {
                    q.mouse.set_useSystemCursor(!1);
                    this._customCursor.set_visible(a);
                    if (!a) {
                        a = 0;
                        for (var b = this._customCursor.get_numChildren(); a < b;) {
                            var c = a++;
                            this._customCursor.getChildAt(c).set_visible(!1)
                        }
                    }
                },
                keyPressed: function(a) {
                    return this._keysDown.h[a]
                },
                isInUse: function() {
                    return q.debugger.visible && this.get_visible() ? null != this.activeTool :
                        !1
                },
                __class__: Pk
            });
            var Ee = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Ee.preload) this.__fromImage(Ee.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Ee.resourceName), Ee.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Ee.preload && (Ee.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Eraser.GraphicEraserTool"] = Ee;
            Ee.__name__ = "flixel.system.debug.interaction.tools._Eraser.GraphicEraserTool";
            Ee.__super__ = H;
            Ee.prototype = n(H.prototype, {
                __class__: Ee
            });
            var qc = function() {
                this._name = "(Unknown tool)";
                this.cursorInUse = "";
                Z.call(this)
            };
            g["flixel.system.debug.interaction.tools.Tool"] = qc;
            qc.__name__ = "flixel.system.debug.interaction.tools.Tool";
            qc.__interfaces__ = [L];
            qc.__super__ = Z;
            qc.prototype = n(Z.prototype, {
                init: function(a) {
                    this._brain = a;
                    return this
                },
                draw: function() {},
                activate: function() {},
                deactivate: function() {},
                destroy: function() {},
                isActive: function() {
                    return this._brain.activeTool == this ? this._brain.get_visible() :
                        !1
                },
                setButton: function(a) {
                    this.button = new Ag(Ua.createInstance(a, [0, 0]), r(this, this.onButtonClicked), !0);
                    this.button.set_toggled(!0);
                    a = this._name;
                    null != this._shortcut && (a += " (" + this._shortcut + ")");
                    zg.add(this.button, a)
                },
                setCursor: function(a) {
                    this.cursor = a;
                    this._brain.registerCustomCursor(this._name, this.cursor)
                },
                onButtonClicked: function() {
                    this._brain.setActiveTool(this)
                },
                getName: function() {
                    return this._name
                },
                __class__: qc
            });
            var aj = function() {
                qc.call(this)
            };
            g["flixel.system.debug.interaction.tools.Eraser"] =
                aj;
            aj.__name__ = "flixel.system.debug.interaction.tools.Eraser";
            aj.__super__ = qc;
            aj.prototype = n(qc.prototype, {
                init: function(a) {
                    qc.prototype.init.call(this, a);
                    this._name = "Eraser";
                    return this
                },
                activate: function() {
                    this.doDeletion(this._brain.keyPressed(16));
                    this._brain.setActiveTool(null)
                },
                doDeletion: function(a) {
                    var b = this._brain.selectedItems;
                    null != b && (this.findAndDelete(b, a), b.clear())
                },
                findAndDelete: function(a, b) {
                    null == b && (b = !1);
                    for (a = new rh(a.members, null); a.hasNext();) {
                        var c = a.next();
                        null == c || c instanceof
                        Ra || (c.kill(), b && this.removeFromMemory(c, q.game._state))
                    }
                },
                removeFromMemory: function(a, b) {
                    for (var c = 0, d = b.members; c < d.length;) {
                        var e = d[c];
                        ++c;
                        null != e && (e instanceof Ra ? this.removeFromMemory(a, e) : e == a && b.remove(e))
                    }
                },
                __class__: aj
            });
            var Fd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Fd.preload) this.__fromImage(Fd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Fd.resourceName), Fd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null ==
                            Fd.preload && (Fd.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Mover.GraphicMoverTool"] = Fd;
            Fd.__name__ = "flixel.system.debug.interaction.tools._Mover.GraphicMoverTool";
            Fd.__super__ = H;
            Fd.prototype = n(H.prototype, {
                __class__: Fd
            });
            var $i = function() {
                qc.call(this)
            };
            g["flixel.system.debug.interaction.tools.Mover"] = $i;
            $i.__name__ = "flixel.system.debug.interaction.tools.Mover";
            $i.__super__ = qc;
            $i.prototype = n(qc.prototype, {
                init: function(a) {
                    qc.prototype.init.call(this,
                        a);
                    this._lastCursorPosition = new X(a.flixelPointer.x, a.flixelPointer.x);
                    this._name = "Mover";
                    this._shortcut = "Shift";
                    this.setButton(Fd);
                    this.setCursor(new Fd(0, 0));
                    return this
                },
                __class__: $i
            });
            var Gd = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Gd.preload) this.__fromImage(Gd.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Gd.resourceName), Gd.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Gd.preload && (Gd.preload =
                            a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools.GraphicCursorCross"] = Gd;
            Gd.__name__ = "flixel.system.debug.interaction.tools.GraphicCursorCross";
            Gd.__super__ = H;
            Gd.prototype = n(H.prototype, {
                __class__: Gd
            });
            var Zi = function() {
                this._selectionArea = new ca;
                this._selectionHappening = !1;
                qc.call(this)
            };
            g["flixel.system.debug.interaction.tools.Pointer"] = Zi;
            Zi.__name__ = "flixel.system.debug.interaction.tools.Pointer";
            Zi.__super__ = qc;
            Zi.prototype = n(qc.prototype, {
                init: function(a) {
                    qc.prototype.init.call(this,
                        a);
                    this._name = "Pointer";
                    this.setButton(Gd);
                    this.setCursor(new Gd(0, 0));
                    return this
                },
                draw: function() {
                    var a = this._brain.getDebugGraphics();
                    null != a && (this._selectionHappening && (a.lineStyle(.9, 12255232), a.drawRect(this._selectionArea.x - q.camera.scroll.x, this._selectionArea.y - q.camera.scroll.y, this._selectionArea.width, this._selectionArea.height)), q.renderBlit && q.camera.buffer.draw(Ff.flashGfxSprite))
                },
                __class__: Zi
            });
            var be = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null !=
                    be.preload) this.__fromImage(be.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(be.resourceName), be.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == be.preload && (be.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Transform.GraphicTransformTool"] = be;
            be.__name__ = "flixel.system.debug.interaction.tools._Transform.GraphicTransformTool";
            be.__super__ = H;
            be.prototype = n(H.prototype, {
                __class__: be
            });
            var ce =
                function(a, b, c, d, e) {
                    null == d && (d = -1);
                    null == c && (c = !0);
                    H.call(this, 0, 0, c, d);
                    if (null != ce.preload) this.__fromImage(ce.preload);
                    else {
                        var f = this;
                        Ia.loadFromBase64(sb.getString(ce.resourceName), ce.resourceType).then(function(a) {
                            f.__fromImage(a);
                            return Sa.withValue(f)
                        }).onComplete(function(a) {
                            null == ce.preload && (ce.preload = a.image);
                            null != e && ea.isFunction(e) && e(a)
                        })
                    }
                };
            g["flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorDefault"] = ce;
            ce.__name__ = "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorDefault";
            ce.__super__ = H;
            ce.prototype = n(H.prototype, {
                __class__: ce
            });
            var de = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != de.preload) this.__fromImage(de.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(de.resourceName), de.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == de.preload && (de.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleY"] =
                de;
            de.__name__ = "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleY";
            de.__super__ = H;
            de.prototype = n(H.prototype, {
                __class__: de
            });
            var ee = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ee.preload) this.__fromImage(ee.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ee.resourceName), ee.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ee.preload && (ee.preload = a.image);
                        null != e && ea.isFunction(e) &&
                            e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleX"] = ee;
            ee.__name__ = "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleX";
            ee.__super__ = H;
            ee.prototype = n(H.prototype, {
                __class__: ee
            });
            var fe = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != fe.preload) this.__fromImage(fe.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(fe.resourceName), fe.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null ==
                            fe.preload && (fe.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY"] = fe;
            fe.__name__ = "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY";
            fe.__super__ = H;
            fe.prototype = n(H.prototype, {
                __class__: fe
            });
            var ge = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != ge.preload) this.__fromImage(ge.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(ge.resourceName), ge.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == ge.preload && (ge.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorRotate"] = ge;
            ge.__name__ = "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorRotate";
            ge.__super__ = H;
            ge.prototype = n(H.prototype, {
                __class__: ge
            });
            var bj = function() {
                this._markers = [];
                qc.call(this)
            };
            g["flixel.system.debug.interaction.tools.Transform"] = bj;
            bj.__name__ = "flixel.system.debug.interaction.tools.Transform";
            bj.__super__ = qc;
            bj.prototype = n(qc.prototype, {
                init: function(a) {
                    var b = this;
                    qc.prototype.init.call(this, a);
                    this._name = "Transform";
                    this.setButton(be);
                    this.setCursor(new ce(0, 0));
                    a.registerCustomCursor("transformRotate", new ge(0, 0));
                    a.registerCustomCursor("transformScaleX", new ee(0, 0));
                    a.registerCustomCursor("transformScaleY", new de(0, 0));
                    a.registerCustomCursor("transformScaleXY", new fe(0, 0));
                    this._tooltip = zg.add(null, "");
                    this._tooltip.textField.set_wordWrap(!1);
                    this._markers.push(new X);
                    this._markers.push(new X);
                    this._markers.push(new X);
                    this._markers.push(new X);
                    this.stopAction();
                    q.signals.preStateSwitch.add(function() {
                        b._target = null
                    });
                    return this
                },
                stopAction: function() {
                    this._actionHappening = !1;
                    this._actionMarker = -1;
                    this._tooltip.setVisible(!1)
                },
                drawTargetAreaOutline: function(a) {
                    a.lineStyle(.9, -65281, 1, !1, 2, 2);
                    a.moveTo(this._markers[0].x, this._markers[0].y);
                    for (var b = 0, c = this._markers.length; b < c;) {
                        var d = b++;
                        a.lineTo(this._markers[d].x, this._markers[d].y)
                    }
                    a.lineTo(this._markers[0].x, this._markers[0].y)
                },
                drawMarkers: function(a) {
                    a.lineStyle(.9, -65281, 1, !1, 2, 2);
                    a.beginFill(-65281);
                    for (var b = 0, c = this._markers.length; b < c;) {
                        var d = b++;
                        0 == d ? a.drawCircle(this._markers[d].x, this._markers[d].y, 2.7) : a.drawRect(this._markers[d].x - 1.5, this._markers[d].y - 1.5, 3, 3)
                    }
                    a.endFill()
                },
                draw: function() {
                    var a = this._brain.getDebugGraphics();
                    null != a && null != this._target && this.isActive() && (this.drawTargetAreaOutline(a), this.drawMarkers(a), q.renderBlit && q.camera.buffer.draw(Ff.flashGfxSprite))
                },
                activate: function() {
                    this._target =
                        null;
                    if (0 != this._brain.selectedItems.length) {
                        for (var a = new rh(this._brain.selectedItems.members, null); a.hasNext();) {
                            var b = a.next();
                            if (null != b && null != b.scrollFactor && b.isOnScreen()) {
                                this._target = b;
                                break
                            }
                        }
                        this._brain.shouldDrawItemsSelection = !1
                    }
                },
                deactivate: function() {
                    this._brain.shouldDrawItemsSelection = !0
                },
                __class__: bj
            });
            var Fe = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Fe.preload) this.__fromImage(Fe.preload);
                else {
                    var f = this;
                    Ia.loadFromBase64(sb.getString(Fe.resourceName),
                        Fe.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Fe.preload && (Fe.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.stats._Stats.GraphicMinimizeButton"] = Fe;
            Fe.__name__ = "flixel.system.debug.stats._Stats.GraphicMinimizeButton";
            Fe.__super__ = H;
            Fe.prototype = n(H.prototype, {
                __class__: Fe
            });
            var Ge = function(a, b, c, d, e) {
                null == d && (d = -1);
                null == c && (c = !0);
                H.call(this, 0, 0, c, d);
                if (null != Ge.preload) this.__fromImage(Ge.preload);
                else {
                    var f =
                        this;
                    Ia.loadFromBase64(sb.getString(Ge.resourceName), Ge.resourceType).then(function(a) {
                        f.__fromImage(a);
                        return Sa.withValue(f)
                    }).onComplete(function(a) {
                        null == Ge.preload && (Ge.preload = a.image);
                        null != e && ea.isFunction(e) && e(a)
                    })
                }
            };
            g["flixel.system.debug.stats._Stats.GraphicMaximizeButton"] = Ge;
            Ge.__name__ = "flixel.system.debug.stats._Stats.GraphicMaximizeButton";
            Ge.__super__ = H;
            Ge.prototype = n(H.prototype, {
                __class__: Ge
            });
            var xh = function(a, b, c, d, e, f, k, p) {
                Ed.call(this, a, b, c, d, e, f, k, p)
            };
            g["flixel.system.debug.watch.Watch"] =
                xh;
            xh.__name__ = "flixel.system.debug.watch.Watch";
            xh.__super__ = Ed;
            xh.prototype = n(Ed.prototype, {
                __class__: xh
            });
            var Qk = function(a, b, c, d, e, f, k, p) {
                Ed.call(this, a, b, c, d, e, f, k, p)
            };
            g["flixel.system.debug.watch.Tracker"] = Qk;
            Qk.__name__ = "flixel.system.debug.watch.Tracker";
            Qk.__super__ = xh;
            Qk.prototype = n(xh.prototype, {
                __class__: Qk
            });
            var zk = function() {
                this.list = [];
                this.add_flixel_util_FlxTimerManager(Rc.globalManager = new cj);
                this.add_flixel_tweens_FlxTweenManager(Za.globalManager = new dj)
            };
            g["flixel.system.frontEnds.PluginFrontEnd"] =
                zk;
            zk.__name__ = "flixel.system.frontEnds.PluginFrontEnd";
            zk.prototype = {
                add_flixel_tweens_FlxTweenManager: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getClassName(a, !0) == ub.getClassName(d, !0)) return a
                    }
                    this.list.push(a);
                    return a
                },
                add_flixel_util_FlxTimerManager: function(a) {
                    for (var b = 0, c = this.list; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ub.getClassName(a, !0) == ub.getClassName(d, !0)) return a
                    }
                    this.list.push(a);
                    return a
                },
                __class__: zk
            };
            var Bk = function() {
                this.volume = 1;
                this.list = new Ra;
                this.defaultSoundGroup =
                    new Vi;
                this.defaultMusicGroup = new Vi;
                this.soundTrayEnabled = !0;
                this.muteKeys = [48, 96];
                this.volumeDownKeys = [189, 109];
                this.volumeUpKeys = [187, 107];
                this.muted = !1;
                this.loadSavedPrefs()
            };
            g["flixel.system.frontEnds.SoundFrontEnd"] = Bk;
            Bk.__name__ = "flixel.system.frontEnds.SoundFrontEnd";
            Bk.prototype = {
                playMusic: function(a, b, c, d) {
                    null == c && (c = !0);
                    null == b && (b = 1);
                    if (null == this.music) this.music = new rf;
                    else if (this.music.active) {
                        var e = this.music;
                        e.cleanup(e.autoDestroy, !0)
                    }
                    this.music.loadEmbedded(a, c);
                    this.music.set_volume(b);
                    this.music.persist = !0;
                    this.music.set_group(null == d ? this.defaultMusicGroup : d);
                    this.music.play()
                },
                load: function(a, b, c, d, e, f, k, p) {
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == c && (c = !1);
                    null == b && (b = 1);
                    if (null == a && null == k) return null;
                    var m = this.list.recycle(rf);
                    null != a ? m.loadEmbedded(a, c, e, p) : m.loadStream(k, c, e, p);
                    m.set_volume(b);
                    f && m.play();
                    m.set_group(null == d ? this.defaultSoundGroup : d);
                    return m
                },
                play: function(a, b, c, d, e, f) {
                    null == e && (e = !0);
                    null == c && (c = !1);
                    null == b && (b = 1);
                    "string" == typeof a && (a = ta.exists(a, "SOUND") ||
                        ta.exists(a, "MUSIC") ? ta.getSound(a, !0) : null);
                    a = this.list.recycle(rf).loadEmbedded(a, c, e, f);
                    a.set_volume(b);
                    a.set_group(null == d ? this.defaultSoundGroup : d);
                    return a.play()
                },
                destroy: function(a) {
                    null == a && (a = !1);
                    null == this.music || !a && this.music.persist || (this.destroySound(this.music), this.music = null);
                    for (var b = 0, c = this.list.members; b < c.length;) {
                        var d = c[b];
                        ++b;
                        null == d || !a && d.persist || this.destroySound(d)
                    }
                },
                destroySound: function(a) {
                    this.defaultMusicGroup.remove(a);
                    this.defaultSoundGroup.remove(a);
                    a.destroy()
                },
                toggleMuted: function() {
                    this.muted = !this.muted;
                    null != this.volumeHandler && this.volumeHandler(this.muted ? 0 : this.volume);
                    this.showSoundTray()
                },
                changeVolume: function(a) {
                    this.muted = !1;
                    this.set_volume(this.volume + a);
                    this.showSoundTray()
                },
                showSoundTray: function() {
                    null != q.game.soundTray && this.soundTrayEnabled && q.game.soundTray.show()
                },
                update: function(a) {
                    null != this.music && this.music.active && this.music.update(a);
                    null != this.list && this.list.active && this.list.update(a);
                    q.keys.checkKeyArrayState(this.muteKeys, -1) ?
                        this.toggleMuted() : q.keys.checkKeyArrayState(this.volumeUpKeys, -1) ? this.changeVolume(.1) : q.keys.checkKeyArrayState(this.volumeDownKeys, -1) && this.changeVolume(-.1)
                },
                onFocusLost: function() {
                    if (null != this.music) this.music.onFocusLost();
                    for (var a = 0, b = this.list.members; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (null != c) c.onFocusLost()
                    }
                },
                onFocus: function() {
                    if (null != this.music) this.music.onFocus();
                    for (var a = 0, b = this.list.members; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (null != c) c.onFocus()
                    }
                },
                loadSavedPrefs: function() {
                    null != q.save.data.volume &&
                        this.set_volume(q.save.data.volume);
                    null != q.save.data.mute && (this.muted = q.save.data.mute)
                },
                set_volume: function(a) {
                    a = 0 > a ? 0 : a;
                    a = 1 < a ? 1 : a;
                    null != this.volumeHandler && this.volumeHandler(this.muted ? 0 : a);
                    return this.volume = a
                },
                __class__: Bk,
                __properties__: {
                    set_volume: "set_volume"
                }
            };
            var Ak = function() {
                this.paused = this.stepRequested = !1
            };
            g["flixel.system.frontEnds.VCRFrontEnd"] = Ak;
            Ak.__name__ = "flixel.system.frontEnds.VCRFrontEnd";
            Ak.prototype = {
                __class__: Ak
            };
            var qi = function() {
                Z.call(this);
                this.draw();
                var a = new Z;
                zd.drawLogo(a.get_graphics());
                a.set_scaleX(a.set_scaleY(.2));
                a.set_x(a.set_y(5));
                a.set_alpha(.35);
                this.addChild(a);
                this.set_visible(!1)
            };
            g["flixel.system.ui.FlxFocusLostScreen"] = qi;
            qi.__name__ = "flixel.system.ui.FlxFocusLostScreen";
            qi.__super__ = Z;
            qi.prototype = n(Z.prototype, {
                draw: function() {
                    var a = this.get_graphics(),
                        b = la.get_current().stage.stageWidth | 0,
                        c = la.get_current().stage.stageHeight | 0;
                    a.clear();
                    a.moveTo(0, 0);
                    a.beginFill(0, .5);
                    a.drawRect(0, 0, b, c);
                    a.endFill();
                    b = b / 2 | 0;
                    c = c / 2 | 0;
                    var d = Math.min(b, c) /
                        3 | 0;
                    a.moveTo(b - d, c - d);
                    a.beginFill(16777215, .65);
                    a.lineTo(b + d, c);
                    a.lineTo(b - d, c + d);
                    a.lineTo(b - d, c - d);
                    a.endFill();
                    this.set_x(-q.scaleMode.offset.x);
                    this.set_y(-q.scaleMode.offset.y)
                },
                __class__: qi
            });
            var ri = function() {
                this._defaultScale = 2;
                this._width = 80;
                Z.call(this);
                this.set_visible(!1);
                this.set_scaleX(this._defaultScale);
                this.set_scaleY(this._defaultScale);
                var a = new Jb(new H(this._width, 30, !0, 2130706432));
                this.screenCenter();
                this.addChild(a);
                var b = new Vb;
                b.set_width(a.get_width());
                b.set_height(a.get_height());
                b.set_multiline(!0);
                b.set_wordWrap(!0);
                b.set_selectable(!1);
                a = new nc(zd.FONT_DEFAULT, 10, 16777215);
                a.align = 0;
                b.set_defaultTextFormat(a);
                this.addChild(b);
                b.set_text("VOLUME");
                b.set_y(16);
                b = 10;
                var c = 14;
                this._bars = [];
                for (var d = 0; 10 > d;) a = d++, a = new Jb(new H(4, a + 1, !1, -1)), a.set_x(b), a.set_y(c), this.addChild(a), this._bars.push(a), b += 6, --c;
                this.set_y(-this.get_height());
                this.set_visible(!1)
            };
            g["flixel.system.ui.FlxSoundTray"] = ri;
            ri.__name__ = "flixel.system.ui.FlxSoundTray";
            ri.__super__ = Z;
            ri.prototype = n(Z.prototype, {
                update: function(a) {
                    0 < this._timer ? this._timer -= a / 1E3 : this.get_y() > -this.get_height() && (this.set_y(this.get_y() - a / 1E3 * q.height * 2), this.get_y() <= -this.get_height() && (this.set_visible(!1), this.active = !1, q.save.data.mute = q.sound.muted, q.save.data.volume = q.sound.volume, q.save.flush()))
                },
                show: function(a) {
                    null == a && (a = !1);
                    a || (a = ta.getSound("flixel/sounds/beep.ogg"), null != a && q.sound.load(a).play());
                    this._timer = 1;
                    this.set_y(0);
                    this.set_visible(!0);
                    this.active = !0;
                    a = Math.round(10 * q.sound.volume);
                    q.sound.muted &&
                        (a = 0);
                    for (var b = 0, c = this._bars.length; b < c;) {
                        var d = b++;
                        d < a ? this._bars[d].set_alpha(1) : this._bars[d].set_alpha(.5)
                    }
                },
                screenCenter: function() {
                    this.set_scaleX(this._defaultScale);
                    this.set_scaleY(this._defaultScale);
                    this.set_x(.5 * (la.get_current().stage.stageWidth - this._width * this._defaultScale) - q.game.get_x())
                },
                __class__: ri
            });
            var Ag = function(a, b, c) {
                null == c && (c = !1);
                this.toggleMode = this.toggled = this._mouseDown = !1;
                this.enabled = !0;
                Z.call(this);
                null != a && this.changeIcon(a);
                this.upHandler = b;
                this.toggleMode =
                    c;
                this.addEventListener("mouseUp", r(this, this.onMouseUp));
                this.addEventListener("mouseDown", r(this, this.onMouseDown));
                this.addEventListener("mouseOut", r(this, this.onMouseOut));
                this.addEventListener("mouseOver", r(this, this.onMouseOver))
            };
            g["flixel.system.ui.FlxSystemButton"] = Ag;
            Ag.__name__ = "flixel.system.ui.FlxSystemButton";
            Ag.__interfaces__ = [L];
            Ag.__super__ = Z;
            Ag.prototype = n(Z.prototype, {
                changeIcon: function(a) {
                    null != this._icon && this.removeChild(this._icon);
                    Te.fixSize(a);
                    this._icon = new Jb(a);
                    this.addChild(this._icon)
                },
                destroy: function() {
                    this.removeEventListener("mouseUp", r(this, this.onMouseUp));
                    this.removeEventListener("mouseDown", r(this, this.onMouseDown));
                    this.removeEventListener("mouseOut", r(this, this.onMouseOut));
                    this.removeEventListener("mouseOver", r(this, this.onMouseOver));
                    this.upHandler = this._icon = null
                },
                onMouseUp: function(a) {
                    this.enabled && this._mouseDown && (this.set_toggled(!this.toggled), this._mouseDown = !1, null != this.upHandler && this.upHandler())
                },
                onMouseDown: function(a) {
                    this._mouseDown = !0
                },
                onMouseOver: function(a) {
                    this.enabled &&
                        this.set_alpha(this.get_alpha() - .2)
                },
                onMouseOut: function(a) {
                    this.enabled && this.set_alpha(this.get_alpha() + .2)
                },
                set_toggled: function(a) {
                    this.toggleMode && this.set_alpha(a ? .3 : 1);
                    return this.toggled = a
                },
                __class__: Ag,
                __properties__: n(Z.prototype.__properties__, {
                    set_toggled: "set_toggled"
                })
            });
            var Ql = function(a, b, c, d) {
                this.format = new nc(null, null, a, b, c);
                this.borderColor = null == d ? 0 : d
            };
            g["flixel.text.FlxTextFormat"] = Ql;
            Ql.__name__ = "flixel.text.FlxTextFormat";
            Ql.prototype = {
                __class__: Ql
            };
            var Rl = function(a, b, c) {
                this.range =
                    new Rk(b, c);
                this.format = a
            };
            g["flixel.text._FlxText.FlxTextFormatRange"] = Rl;
            Rl.__name__ = "flixel.text._FlxText.FlxTextFormatRange";
            Rl.prototype = {
                __class__: Rl
            };
            var Oc = w["flixel.text.FlxTextBorderStyle"] = {
                    __ename__: "flixel.text.FlxTextBorderStyle",
                    __constructs__: ["NONE", "SHADOW", "OUTLINE", "OUTLINE_FAST"],
                    NONE: {
                        _hx_index: 0,
                        __enum__: "flixel.text.FlxTextBorderStyle",
                        toString: h
                    },
                    SHADOW: {
                        _hx_index: 1,
                        __enum__: "flixel.text.FlxTextBorderStyle",
                        toString: h
                    },
                    OUTLINE: {
                        _hx_index: 2,
                        __enum__: "flixel.text.FlxTextBorderStyle",
                        toString: h
                    },
                    OUTLINE_FAST: {
                        _hx_index: 3,
                        __enum__: "flixel.text.FlxTextBorderStyle",
                        toString: h
                    }
                },
                Dk = {
                    fromOpenFL: function(a) {
                        switch (a) {
                            case 0:
                                return "center";
                            case 2:
                                return "justify";
                            case 3:
                                return "left";
                            case 4:
                                return "right";
                            default:
                                return "left"
                        }
                    },
                    toOpenFL: function(a) {
                        switch (a) {
                            case "center":
                                return 0;
                            case "justify":
                                return 2;
                            case "left":
                                return 3;
                            case "right":
                                return 4;
                            default:
                                return 3
                        }
                    }
                },
                Sk = function() {
                    this._tileObjects = [];
                    O.call(this);
                    this.flixelType = 3;
                    this.set_immovable(!0);
                    this.set_moves(!1)
                };
            g["flixel.tile.FlxBaseTilemap"] =
                Sk;
            Sk.__name__ = "flixel.tile.FlxBaseTilemap";
            Sk.__super__ = O;
            Sk.prototype = n(O.prototype, {
                getTileIndexByCoords: function(a) {
                    throw F.thrown("getTileIndexByCoords must be implemented");
                },
                destroy: function() {
                    this._data = null;
                    O.prototype.destroy.call(this)
                },
                overlapsPoint: function(a, b, c) {
                    null == b && (b = !1);
                    b && (null == c && (c = q.camera), a.subtractPoint(c.scroll), a._weak && a.put());
                    return this.tileAtPointAllowsCollisions(a)
                },
                tileAtPointAllowsCollisions: function(a) {
                    a = this.getTileIndexByCoords(a);
                    return 0 > a || a >= this._data.length ?
                        !1 : 0 < this._tileObjects[this._data[a]].allowCollisions
                },
                __class__: Sk
            });
            var Tk = function(a, b, c, d) {
                G.call(this, a, b);
                this.makeGraphic(c, d, 0, !0);
                this.set_active(!1);
                this.set_immovable(!0);
                this.set_moves(!1)
            };
            g["flixel.tile.FlxTileblock"] = Tk;
            Tk.__name__ = "flixel.tile.FlxTileblock";
            Tk.__super__ = G;
            Tk.prototype = n(G.prototype, {
                destroy: function() {
                    this.tileSprite = V.destroy(this.tileSprite);
                    G.prototype.destroy.call(this)
                },
                __class__: Tk
            });
            var mc = function() {};
            g["flixel.tweens.FlxEase"] = mc;
            mc.__name__ = "flixel.tweens.FlxEase";
            mc.quadOut = function(a) {
                return -a * (a - 2)
            };
            mc.quadInOut = function(a) {
                return .5 >= a ? a * a * 2 : 1 - --a * a * 2
            };
            mc.cubeInOut = function(a) {
                return .5 >= a ? a * a * a * 4 : 1 + --a * a * a * 4
            };
            mc.circOut = function(a) {
                return Math.sqrt(1 - (a - 1) * (a - 1))
            };
            mc.elasticInOut = function(a) {
                return .5 > a ? -.5 * Math.pow(2, 10 * (a -= .5)) * Math.sin(2 * (a - mc.ELASTIC_PERIOD / 4) * Math.PI / mc.ELASTIC_PERIOD) : Math.pow(2, -10 * (a -= .5)) * Math.sin(2 * (a - mc.ELASTIC_PERIOD / 4) * Math.PI / mc.ELASTIC_PERIOD) * .5 + 1
            };
            var Za = function(a, b) {
                this._running = this._waitingForRestart = !1;
                this.duration =
                    this.scale = this.executions = this.startDelay = this.loopDelay = this._secondsSinceStart = this._delayToUse = 0;
                this.active = !1;
                a = this.resolveTweenOptions(a);
                this.set_type(a.type);
                this.onStart = a.onStart;
                this.onUpdate = a.onUpdate;
                this.onComplete = a.onComplete;
                this.ease = a.ease;
                this.setDelays(a.startDelay, a.loopDelay);
                this.manager = null != b ? b : Za.globalManager
            };
            g["flixel.tweens.FlxTween"] = Za;
            Za.__name__ = "flixel.tweens.FlxTween";
            Za.__interfaces__ = [L];
            Za.tween = function(a, b, c, d) {
                null == c && (c = 1);
                return Za.globalManager.tween(a,
                    b, c, d)
            };
            Za.num = function(a, b, c, d, e) {
                null == c && (c = 1);
                return Za.globalManager.num(a, b, c, d, e)
            };
            Za.prototype = {
                resolveTweenOptions: function(a) {
                    null == a && (a = {
                        type: 8
                    });
                    null == a.type && (a.type = 8);
                    return a
                },
                destroy: function() {
                    this._nextTweenInChain = this._chainedTweens = this.manager = this.ease = this.onComplete = this.onUpdate = this.onStart = null
                },
                update: function(a) {
                    this._secondsSinceStart += a;
                    a = 0 < this.executions ? this.loopDelay : this.startDelay;
                    if (!(this._secondsSinceStart < a)) {
                        this.scale = Math.max(this._secondsSinceStart -
                            a, 0) / this.duration;
                        null != this.ease && (this.scale = this.ease(this.scale));
                        this.backward && (this.scale = 1 - this.scale);
                        if (this._secondsSinceStart > a && !this._running && (this._running = !0, null != this.onStart)) this.onStart(this);
                        if (this._secondsSinceStart >= this.duration + a) this.scale = this.backward ? 0 : 1, this.finished = !0;
                        else if (null != this.onUpdate) this.onUpdate(this)
                    }
                },
                start: function() {
                    this._waitingForRestart = !1;
                    this._secondsSinceStart = 0;
                    this._delayToUse = 0 < this.executions ? this.loopDelay : this.startDelay;
                    if (0 == this.duration) return this.set_active(!1),
                        this;
                    this.set_active(!0);
                    this.finished = this._running = !1;
                    return this
                },
                cancel: function() {
                    this.onEnd();
                    null != this.manager && this.manager.remove(this)
                },
                finish: function() {
                    this.executions++;
                    if (null != this.onComplete) this.onComplete(this);
                    var a = this.type & -17;
                    if (1 == a || 8 == a) this.onEnd(), this._secondsSinceStart = this.duration + this.startDelay, 8 == a && null != this.manager && this.manager.remove(this);
                    if (2 == a || 4 == a) this._secondsSinceStart = (this._secondsSinceStart - this._delayToUse) % this.duration + this._delayToUse, this.scale =
                        Math.max(this._secondsSinceStart - this._delayToUse, 0) / this.duration, null != this.ease && 0 < this.scale && 1 > this.scale && (this.scale = this.ease(this.scale)), 4 == a && (this.backward = !this.backward) && (this.scale = 1 - this.scale), this.restart()
                },
                onEnd: function() {
                    this.setVarsOnEnd();
                    this.processTweenChain()
                },
                setVarsOnEnd: function() {
                    this.set_active(!1);
                    this._running = !1;
                    this.finished = !0
                },
                processTweenChain: function() {
                    null == this._chainedTweens || 0 >= this._chainedTweens.length || (this._nextTweenInChain = this._chainedTweens.shift(),
                        this.doNextTween(this._nextTweenInChain), this._chainedTweens = null)
                },
                doNextTween: function(a) {
                    a.active || (a.start(), this.manager.add_flixel_tweens_FlxTween(a));
                    a.setChain(this._chainedTweens)
                },
                setChain: function(a) {
                    null != a && (this._chainedTweens = null == this._chainedTweens ? a : this._chainedTweens.concat(a))
                },
                restart: function() {
                    this.active ? this.start() : this._waitingForRestart = !0
                },
                setDelays: function(a, b) {
                    this.set_startDelay(null != a ? a : 0);
                    this.set_loopDelay(null != b ? b : 0);
                    return this
                },
                set_startDelay: function(a) {
                    a =
                        Math.abs(a);
                    0 == this.executions && (this._secondsSinceStart = Math.max(this._secondsSinceStart - this._delayToUse, 0) / this.duration * this.duration + Math.max(a - this.startDelay, 0), this._delayToUse = a);
                    return this.startDelay = a
                },
                set_loopDelay: function(a) {
                    a = Math.abs(a);
                    0 < this.executions && (this._secondsSinceStart = Math.max(this._secondsSinceStart - this._delayToUse, 0) / this.duration * this.duration + Math.max(a - this.loopDelay, 0), this._delayToUse = a);
                    return this.loopDelay = a
                },
                set_type: function(a) {
                    0 == a ? a = 8 : 16 == a && (a = 17);
                    this.backward =
                        0 < (a & 16);
                    return this.type = a
                },
                set_active: function(a) {
                    this.active = a;
                    this._waitingForRestart && this.restart();
                    return a
                },
                __class__: Za,
                __properties__: {
                    set_loopDelay: "set_loopDelay",
                    set_startDelay: "set_startDelay",
                    set_type: "set_type",
                    set_active: "set_active"
                }
            };
            var dj = function() {
                this._tweens = [];
                J.call(this);
                this.set_visible(!1);
                q.signals.preStateSwitch.add(r(this, this.clear))
            };
            g["flixel.tweens.FlxTweenManager"] = dj;
            dj.__name__ = "flixel.tweens.FlxTweenManager";
            dj.__super__ = J;
            dj.prototype = n(J.prototype, {
                add_flixel_tweens_misc_NumTween: function(a,
                    b) {
                    null == b && (b = !1);
                    if (null == a) return null;
                    this._tweens.push(a);
                    b && a.start();
                    return a
                },
                add_flixel_tweens_FlxTween: function(a, b) {
                    null == b && (b = !1);
                    if (null == a) return null;
                    this._tweens.push(a);
                    b && a.start();
                    return a
                },
                add_flixel_tweens_misc_VarTween: function(a, b) {
                    null == b && (b = !1);
                    if (null == a) return null;
                    this._tweens.push(a);
                    b && a.start();
                    return a
                },
                tween: function(a, b, c, d) {
                    null == c && (c = 1);
                    d = new ej(d, this);
                    d.tween(a, b, c);
                    return this.add_flixel_tweens_misc_VarTween(d)
                },
                num: function(a, b, c, d, e) {
                    null == c && (c = 1);
                    d = new fj(d,
                        this);
                    d.tween(a, b, c, e);
                    return this.add_flixel_tweens_misc_NumTween(d)
                },
                destroy: function() {
                    J.prototype.destroy.call(this);
                    q.signals.preStateSwitch.remove(r(this, this.clear))
                },
                update: function(a) {
                    for (var b = null, c = 0, d = this._tweens; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.active && (e.update(a), e.finished && (null == b && (b = []), b.push(e)))
                    }
                    if (null != b)
                        for (; 0 < b.length;) b.shift().finish()
                },
                remove: function(a, b) {
                    null == b && (b = !0);
                    if (null == a) return null;
                    a.set_active(!1);
                    b && a.destroy();
                    b = this._tweens;
                    var c = b.indexOf(a); - 1 != c && (b[c] =
                        b[b.length - 1], b.pop());
                    return a
                },
                clear: function() {
                    for (var a = 0, b = this._tweens; a < b.length;) {
                        var c = b[a];
                        ++a;
                        null != c && (c.set_active(!1), c.destroy())
                    }
                    this._tweens.splice(0, this._tweens.length)
                },
                __class__: dj
            });
            var fj = function(a, b) {
                Za.call(this, a, b)
            };
            g["flixel.tweens.misc.NumTween"] = fj;
            fj.__name__ = "flixel.tweens.misc.NumTween";
            fj.__super__ = Za;
            fj.prototype = n(Za.prototype, {
                destroy: function() {
                    Za.prototype.destroy.call(this);
                    this._tweenFunction = null
                },
                tween: function(a, b, c, d) {
                    this._tweenFunction = d;
                    this._start =
                        this.value = a;
                    this._range = b - this.value;
                    this.duration = c;
                    this.start();
                    return this
                },
                update: function(a) {
                    Za.prototype.update.call(this, a);
                    this.value = this._start + this._range * this.scale;
                    null != this._tweenFunction && this._tweenFunction(this.value)
                },
                __class__: fj
            });
            var ej = function(a, b) {
                Za.call(this, a, b)
            };
            g["flixel.tweens.misc.VarTween"] = ej;
            ej.__name__ = "flixel.tweens.misc.VarTween";
            ej.__super__ = Za;
            ej.prototype = n(Za.prototype, {
                tween: function(a, b, c) {
                    this._object = a;
                    this._properties = b;
                    this._propertyInfos = [];
                    this.duration =
                        c;
                    this.start();
                    return this
                },
                update: function(a) {
                    if (this._secondsSinceStart < (0 < this.executions ? this.loopDelay : this.startDelay)) Za.prototype.update.call(this, a);
                    else {
                        0 == this._propertyInfos.length && this.initializeVars();
                        Za.prototype.update.call(this, a);
                        a = 0;
                        for (var b = this._propertyInfos; a < b.length;) {
                            var c = b[a];
                            ++a;
                            ea.setProperty(c.object, c.field, c.startValue + c.range * this.scale)
                        }
                    }
                },
                initializeVars: function() {
                    if (ea.isObject(this._properties)) var a = ea.fields(this._properties);
                    else throw F.thrown("Unsupported properties container - use an object containing key/value pairs.");
                    for (var b = 0; b < a.length;) {
                        var c = a[b];
                        ++b;
                        for (var d = this._object, e = c.split("."), f = e.pop(), k = 0; k < e.length;) {
                            var p = e[k];
                            ++k;
                            d = ea.getProperty(d, p);
                            if (!ea.isObject(d)) throw F.thrown('The object does not have the property "' + p + '" in "' + c + '"');
                        }
                        if (null == ea.getProperty(d, f)) throw F.thrown('The object does not have the property "' + f + '"');
                        e = ea.getProperty(d, f);
                        if (isNaN(e)) throw F.thrown('The property "' + f + '" is not numeric.');
                        c = ea.getProperty(this._properties, c);
                        this._propertyInfos.push({
                            object: d,
                            field: f,
                            startValue: e,
                            range: c - e
                        })
                    }
                },
                destroy: function() {
                    Za.prototype.destroy.call(this);
                    this._propertyInfos = this._properties = this._object = null
                },
                __class__: ej
            });
            var af = w["flixel.ui.FlxBarFillDirection"] = {
                    __ename__: "flixel.ui.FlxBarFillDirection",
                    __constructs__: "LEFT_TO_RIGHT RIGHT_TO_LEFT TOP_TO_BOTTOM BOTTOM_TO_TOP HORIZONTAL_INSIDE_OUT HORIZONTAL_OUTSIDE_IN VERTICAL_INSIDE_OUT VERTICAL_OUTSIDE_IN".split(" "),
                    LEFT_TO_RIGHT: {
                        _hx_index: 0,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    RIGHT_TO_LEFT: {
                        _hx_index: 1,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    TOP_TO_BOTTOM: {
                        _hx_index: 2,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    BOTTOM_TO_TOP: {
                        _hx_index: 3,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    HORIZONTAL_INSIDE_OUT: {
                        _hx_index: 4,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    HORIZONTAL_OUTSIDE_IN: {
                        _hx_index: 5,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    VERTICAL_INSIDE_OUT: {
                        _hx_index: 6,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    },
                    VERTICAL_OUTSIDE_IN: {
                        _hx_index: 7,
                        __enum__: "flixel.ui.FlxBarFillDirection",
                        toString: h
                    }
                },
                Gf = function(a, b, c) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.lastStatus = -1;
                    this.maxInputMovement = Infinity;
                    this.mouseButtons = [-1];
                    this.allowSwiping = !0;
                    this.statusAnimations = ["normal", "highlight", "pressed"];
                    this.labelAlphas = [.8, 1, .5];
                    var d = X._pool.get().set(0, 0);
                    d._inPool = !1;
                    var e = X._pool.get().set(0, 0);
                    e._inPool = !1;
                    var f = X._pool.get().set(0, 1);
                    f._inPool = !1;
                    this.labelOffsets = [d, e, f];
                    G.call(this, a, b);
                    this.loadDefaultGraphic();
                    this.onUp = new qe(c);
                    this.onDown = new qe;
                    this.onOver = new qe;
                    this.onOut =
                        new qe;
                    this.set_status(0);
                    this.scrollFactor.set();
                    la.get_current().stage.addEventListener("mouseUp", r(this, this.onUpEventListener));
                    this.input = new Vc(0)
                };
            g["flixel.ui.FlxTypedButton_flixel_text_FlxText"] = Gf;
            Gf.__name__ = "flixel.ui.FlxTypedButton_flixel_text_FlxText";
            Gf.__interfaces__ = [Sf];
            Gf.__super__ = G;
            Gf.prototype = n(G.prototype, {
                graphicLoaded: function() {
                    G.prototype.graphicLoaded.call(this);
                    this.setupAnimation("normal", 0);
                    this.setupAnimation("highlight", 1);
                    this.setupAnimation("pressed", 2)
                },
                loadDefaultGraphic: function() {
                    this.loadGraphic("flixel/images/ui/button.png", !0, 80, 20)
                },
                setupAnimation: function(a, b) {
                    b = Math.min(b, this.animation._sprite.numFrames - 1) | 0;
                    this.animation.add(a, [b])
                },
                destroy: function() {
                    this.set_label(V.destroy(this.label));
                    this._spriteLabel = null;
                    this.onUp = V.destroy(this.onUp);
                    this.onDown = V.destroy(this.onDown);
                    this.onOver = V.destroy(this.onOver);
                    this.onOut = V.destroy(this.onOut);
                    this.labelOffsets = V.putArray(this.labelOffsets);
                    this.input = this.currentInput = this.labelAlphas = null;
                    la.get_current().stage.removeEventListener("mouseUp", r(this, this.onUpEventListener));
                    G.prototype.destroy.call(this)
                },
                update: function(a) {
                    G.prototype.update.call(this, a);
                    this.visible && (this.updateButton(), this.lastStatus != this.status && (this.updateStatusAnimation(), this.lastStatus = this.status));
                    this.input.update()
                },
                updateStatusAnimation: function() {
                    this.animation.play(this.statusAnimations[this.status])
                },
                draw: function() {
                    G.prototype.draw.call(this);
                    null != this._spriteLabel && this._spriteLabel.visible && (this._spriteLabel.set_cameras(this.get_cameras()), this._spriteLabel.draw())
                },
                updateButton: function() {
                    var a =
                        this.checkMouseOverlap();
                    a || (a = this.checkTouchOverlap());
                    if (null != this.currentInput && this.currentInput.get_justReleased() && a) this.onUpHandler();
                    if (0 != this.status && (!a || null != this.currentInput && this.currentInput.get_justReleased())) this.onOutHandler()
                },
                checkMouseOverlap: function() {
                    for (var a = !1, b = 0, c = this.get_cameras(); b < c.length;) {
                        var d = c[b];
                        ++b;
                        for (var e = 0, f = this.mouseButtons; e < f.length;) {
                            var k = f[e];
                            ++e;
                            k = Qe.getByID(k);
                            null != k && this.checkInput(q.mouse, k, k.justPressedPosition, d) && (a = !0)
                        }
                    }
                    return a
                },
                checkTouchOverlap: function() {
                    for (var a = !1, b = 0, c = this.get_cameras(); b < c.length;) {
                        var d = c[b];
                        ++b;
                        for (var e = 0, f = q.touches.list; e < f.length;) {
                            var k = f[e];
                            ++e;
                            this.checkInput(k, k, k.justPressedPosition, d) && (a = !0)
                        }
                    }
                    return a
                },
                checkInput: function(a, b, c, d) {
                    if (Infinity != this.maxInputMovement) {
                        var e = 0,
                            f = 0;
                        null == f && (f = 0);
                        null == e && (e = 0);
                        e = X._pool.get().set(e, f);
                        e._inPool = !1;
                        e._weak = !0;
                        c = c.distanceTo(a.getScreenPosition(null, e)) > this.maxInputMovement
                    } else c = !1;
                    if (c && b == this.currentInput) this.currentInput = null;
                    else if (this.overlapsPoint(a.getWorldPosition(d,
                            this._point), !0, d)) return this.updateStatus(b), !0;
                    return !1
                },
                updateStatus: function(a) {
                    if (a.get_justPressed()) this.currentInput = a, this.onDownHandler();
                    else if (0 == this.status)
                        if (this.allowSwiping && a.get_pressed()) this.onDownHandler();
                        else this.onOverHandler()
                },
                updateLabelPosition: function() {
                    null != this._spriteLabel && (this._spriteLabel.set_x((this.pixelPerfectPosition ? Math.floor(this.x) : this.x) + this.labelOffsets[this.status].x), this._spriteLabel.set_y((this.pixelPerfectPosition ? Math.floor(this.y) : this.y) +
                        this.labelOffsets[this.status].y))
                },
                updateLabelAlpha: function() {
                    null != this._spriteLabel && this.labelAlphas.length > this.status && this._spriteLabel.set_alpha(this.alpha * this.labelAlphas[this.status])
                },
                onUpEventListener: function(a) {
                    if (this.visible && this.exists && this.active && 2 == this.status) this.onUpHandler()
                },
                onUpHandler: function() {
                    this.set_status(0);
                    this.input.release();
                    this.currentInput = null;
                    var a = this.onUp;
                    null != a.callback && a.callback();
                    null != a.sound && a.sound.play(!0)
                },
                onDownHandler: function() {
                    this.set_status(2);
                    this.input.press();
                    var a = this.onDown;
                    null != a.callback && a.callback();
                    null != a.sound && a.sound.play(!0)
                },
                onOverHandler: function() {
                    if (q.mouse.enabled) {
                        this.set_status(1);
                        var a = this.onOver;
                        null != a.callback && a.callback();
                        null != a.sound && a.sound.play(!0)
                    } else this.set_status(0)
                },
                onOutHandler: function() {
                    this.set_status(0);
                    this.input.release();
                    var a = this.onOut;
                    null != a.callback && a.callback();
                    null != a.sound && a.sound.play(!0)
                },
                set_label: function(a) {
                    null != a && (a.scrollFactor.put(), a.scrollFactor = this.scrollFactor);
                    this._spriteLabel = this.label = a;
                    this.updateLabelPosition();
                    return a
                },
                set_status: function(a) {
                    this.status = a;
                    this.updateLabelAlpha();
                    return this.status
                },
                set_alpha: function(a) {
                    G.prototype.set_alpha.call(this, a);
                    this.updateLabelAlpha();
                    return this.alpha
                },
                set_x: function(a) {
                    G.prototype.set_x.call(this, a);
                    this.updateLabelPosition();
                    return this.x
                },
                set_y: function(a) {
                    G.prototype.set_y.call(this, a);
                    this.updateLabelPosition();
                    return this.y
                },
                get_justReleased: function() {
                    return -1 == this.input.current
                },
                get_pressed: function() {
                    var a =
                        this.input;
                    return 1 != a.current ? 2 == a.current : !0
                },
                get_justPressed: function() {
                    return 2 == this.input.current
                },
                __class__: Gf,
                __properties__: n(G.prototype.__properties__, {
                    get_justPressed: "get_justPressed",
                    get_pressed: "get_pressed",
                    get_justReleased: "get_justReleased",
                    set_status: "set_status",
                    set_label: "set_label"
                })
            });
            var Uk = function(a, b, c, d) {
                null == b && (b = 0);
                null == a && (a = 0);
                Gf.call(this, a, b, d);
                a = 0;
                for (b = this.labelOffsets; a < b.length;) d = b[a], ++a, d.set(d.x - 1, d.y + 3);
                null != c && (this.set_label(new Fb(this.x + this.labelOffsets[0].x,
                    this.y + this.labelOffsets[0].y, 80, c)), this.label.setFormat(null, 8, 3355443, "center"), this.label.set_alpha(this.labelAlphas[this.status]), this.label.drawFrame(!0))
            };
            g["flixel.ui.FlxButton"] = Uk;
            Uk.__name__ = "flixel.ui.FlxButton";
            Uk.__super__ = Gf;
            Uk.prototype = n(Gf.prototype, {
                resetHelpers: function() {
                    Gf.prototype.resetHelpers.call(this);
                    if (null != this.label) {
                        var a = this.label,
                            b = this.get_width() | 0;
                        a.set_fieldWidth(this.label.frameWidth = b);
                        this.label.set_size(this.label._defaultFormat.size | 0)
                    }
                },
                __class__: Uk
            });
            var qe = function(a, b) {
                this.callback = a;
                this.sound = b
            };
            g["flixel.ui._FlxButton.FlxButtonEvent"] = qe;
            qe.__name__ = "flixel.ui._FlxButton.FlxButtonEvent";
            qe.__interfaces__ = [L];
            qe.prototype = {
                destroy: function() {
                    this.callback = null;
                    this.sound = V.destroy(this.sound)
                },
                __class__: qe
            };
            var Tc = function() {};
            g["flixel.util.FlxArrayUtil"] = Tc;
            Tc.__name__ = "flixel.util.FlxArrayUtil";
            Tc.setLength_flixel_group_FlxTypedGroup_T = function(a, b) {
                if (0 > b) return a;
                var c = b - a.length;
                if (0 <= c) return a;
                b = 0;
                for (c = -c; b < c;) b++, a.pop();
                return a
            };
            Tc.clearArray = function(a, b) {
                null == b && (b = !1);
                if (null == a) return a;
                if (b)
                    for (; 0 < a.length;) a.pop() instanceof Array && Tc.clearArray(a, b);
                else
                    for (; 0 < a.length;) a.pop();
                return a
            };
            Tc.equals = function(a, b) {
                if (null == a && null == b) return !0;
                if (null == a && null != b || null != a && null == b || a.length != b.length) return !1;
                for (var c = 0, d = a.length; c < d;) {
                    var e = c++;
                    if (a[e] != b[e]) return !1
                }
                return !0
            };
            var vd = w["flixel.util.FlxAxes"] = {
                    __ename__: "flixel.util.FlxAxes",
                    __constructs__: ["X", "Y", "XY"],
                    X: {
                        _hx_index: 0,
                        __enum__: "flixel.util.FlxAxes",
                        toString: h
                    },
                    Y: {
                        _hx_index: 1,
                        __enum__: "flixel.util.FlxAxes",
                        toString: h
                    },
                    XY: {
                        _hx_index: 2,
                        __enum__: "flixel.util.FlxAxes",
                        toString: h
                    }
                },
                Pb = {
                    fromString: function(a) {
                        var b = null;
                        a = K.trim(a);
                        if (Pb.COLOR_REGEX.match(a)) a = "0x" + Pb.COLOR_REGEX.matched(2), b = Pb._new(I.parseInt(a)), 8 == a.length && (b = b & 16777215 | -16777216);
                        else {
                            a = a.toUpperCase();
                            for (var c = aa.keysIterator(Pb.colorLookup.h); c.hasNext();) {
                                var d = c.next();
                                if (d.toUpperCase() == a) {
                                    b = Pb._new(Pb.colorLookup.h[d]);
                                    break
                                }
                            }
                        }
                        return b
                    },
                    _new: function(a) {
                        null == a && (a = 0);
                        return a
                    }
                },
                ie = function() {};
            g["flixel.util.FlxColorTransformUtil"] = ie;
            ie.__name__ = "flixel.util.FlxColorTransformUtil";
            ie.setMultipliers = function(a, b, c, d, e) {
                a.redMultiplier = b;
                a.greenMultiplier = c;
                a.blueMultiplier = d;
                a.alphaMultiplier = e;
                return a
            };
            ie.hasRGBMultipliers = function(a) {
                return 1 == a.redMultiplier && 1 == a.greenMultiplier ? 1 != a.blueMultiplier : !0
            };
            ie.hasRGBOffsets = function(a) {
                return 0 == a.redOffset && 0 == a.greenOffset ? 0 != a.blueOffset : !0
            };
            ie.hasRGBAOffsets = function(a) {
                return ie.hasRGBOffsets(a) ? !0 : 0 != a.alphaOffset
            };
            var V = function() {};
            g["flixel.util.FlxDestroyUtil"] = V;
            V.__name__ = "flixel.util.FlxDestroyUtil";
            V.destroy = function(a) {
                null != a && a.destroy();
                return null
            };
            V.destroyArray = function(a) {
                if (null != a) {
                    for (var b = 0; b < a.length;) {
                        var c = a[b];
                        ++b;
                        V.destroy(c)
                    }
                    a.splice(0, a.length)
                }
                return null
            };
            V.put = function(a) {
                null != a && a.put();
                return null
            };
            V.putArray = function(a) {
                if (null != a) {
                    for (var b = 0; b < a.length;) {
                        var c = a[b];
                        ++b;
                        V.put(c)
                    }
                    a.splice(0, a.length)
                }
                return null
            };
            V.dispose = function(a) {
                null != a && a.dispose();
                return null
            };
            V.disposeIfNotEqual =
                function(a, b, c) {
                    if (null != a && (a.width != b || a.height != c)) a.dispose();
                    else if (null != a) return a;
                    return null
                };
            V.removeChild = function(a, b) {
                null != a && null != b && a.contains(b) && a.removeChild(b);
                return null
            };
            var fd = function() {};
            g["flixel.util.FlxGradient"] = fd;
            fd.__name__ = "flixel.util.FlxGradient";
            fd.createGradientMatrix = function(a, b, c, d, e) {
                null == e && (e = 90);
                null == d && (d = 1);
                var f = new xa;
                e *= Math.PI / 180;
                f.createGradientBox(a, wc.toFloat(b) / wc.toFloat(d), e, 0, 0);
                a = [];
                b = 0;
                for (d = c.length; b < d;) e = b++, a.push((c[e] >> 24 & 255) /
                    255);
                e = [];
                if (2 == c.length) e[0] = 0, e[1] = 255;
                else {
                    var k = 255 / (c.length - 1) | 0;
                    e.push(0);
                    b = 1;
                    for (d = c.length - 1; b < d;) c = b++, e.push(c * k);
                    e.push(255)
                }
                return {
                    matrix: f,
                    alpha: a,
                    ratio: e
                }
            };
            fd.createGradientBitmapData = function(a, b, c, d, e, f) {
                null == f && (f = !0);
                null == e && (e = 90);
                null == d && (d = 1);
                wc.gt(1, a) && (a = 1);
                wc.gt(1, b) && (b = 1);
                var k = fd.createGradientMatrix(a, b, c, d, e);
                e = new ff;
                f = f ? 1 : 0;
                e.get_graphics().beginGradientFill(0, c, k.alpha, k.ratio, k.matrix, 0, f, 0);
                e.get_graphics().drawRect(0, 0, wc.toFloat(a), wc.toFloat(b) / wc.toFloat(d));
                c = new H(a, b, !0, 0);
                1 == d ? c.draw(e) : (a = new Jb(new H(a, wc.toFloat(b) / wc.toFloat(d) | 0, !0, 0)), a.get_bitmapData().draw(e), a.set_scaleY(wc.toFloat(d)), d = new xa, d.scale(a.get_scaleX(), a.get_scaleY()), c.draw(a, d));
                return c
            };
            fd.overlayGradientOnBitmapData = function(a, b, c, d, e, f, k, p, m) {
                null == m && (m = !0);
                null == p && (p = 90);
                null == k && (k = 1);
                null == f && (f = 0);
                null == e && (e = 0);
                b > a.width && (b = a.width);
                c > a.height && (c = a.height);
                b = fd.createGradientBitmapData(b, c, d, k, p, m);
                a.copyPixels(b, new fa(0, 0, b.width, b.height), new La(e, f), null,
                    null, !0);
                b.dispose();
                return a
            };
            var wm = w["flixel.util.FlxHorizontalAlign"] = {
                    __ename__: "flixel.util.FlxHorizontalAlign",
                    __constructs__: ["LEFT", "CENTER", "RIGHT"],
                    LEFT: {
                        _hx_index: 0,
                        __enum__: "flixel.util.FlxHorizontalAlign",
                        toString: h
                    },
                    CENTER: {
                        _hx_index: 1,
                        __enum__: "flixel.util.FlxHorizontalAlign",
                        toString: h
                    },
                    RIGHT: {
                        _hx_index: 2,
                        __enum__: "flixel.util.FlxHorizontalAlign",
                        toString: h
                    }
                },
                rc = function(a) {
                    this._firstUpdate = !1;
                    this._wasObjectImmovable = null;
                    this._autoRotate = !1;
                    this._inc = 1;
                    this.finished = !1;
                    this.nodeIndex =
                        0;
                    this.active = !1;
                    this.autoCenter = !0;
                    this.speed = this.angle = 0;
                    this._nodes = null != a ? a.slice() : []
                };
            g["flixel.util.FlxPath"] = rc;
            rc.__name__ = "flixel.util.FlxPath";
            rc.__interfaces__ = [L];
            rc.prototype = {
                update: function(a) {
                    if (null != this.object) {
                        this._firstUpdate && (this._wasObjectImmovable = this.object.immovable, this.object.set_immovable(!0), this._firstUpdate = !1);
                        rc._point.set_x(this.object.x);
                        rc._point.set_y(this.object.y);
                        if (this.autoCenter) {
                            var b = rc._point,
                                c = .5 * this.object.get_width(),
                                d = .5 * this.object.get_height();
                            null == d && (d = 0);
                            null == c && (c = 0);
                            var e = b;
                            e.set_x(e.x + c);
                            e = b;
                            e.set_y(e.y + d)
                        }
                        var f = this._nodes[this.nodeIndex];
                        b = f.x - rc._point.x;
                        c = f.y - rc._point.y;
                        var k = 0 < (this._mode & 65536),
                            p = 0 < (this._mode & 1048576);
                        k ? (0 < b ? b : -b) < this.speed * a && (f = this.advancePath()) : p ? (0 < c ? c : -c) < this.speed * a && (f = this.advancePath()) : Math.sqrt(b * b + c * c) < this.speed * a && (f = this.advancePath());
                        null != this.object && 0 != this.speed && (rc._point.set_x(this.object.x), rc._point.set_y(this.object.y), this.autoCenter && (b = rc._point, c = .5 * this.object.get_width(),
                            d = .5 * this.object.get_height(), null == d && (d = 0), null == c && (c = 0), e = b, e.set_x(e.x + c), e = b, e.set_y(e.y + d)), b = rc._point, a = 1E-7 >= Math.abs(b.x - f.x) && 1E-7 >= Math.abs(b.y - f.y), f._weak && f.put(), a ? this.object.velocity.set() : this.calculateVelocity(f, k, p), this._autoRotate && (this.object.angularVelocity = 0, this.object.angularAcceleration = 0, this.object.set_angle(this.angle)), this.finished && this.cancel())
                    }
                },
                calculateVelocity: function(a, b, c) {
                    b || rc._point.y == a.y ? (this.object.velocity.set_x(rc._point.x < a.x ? this.speed : -this.speed),
                        this.angle = 0 > this.object.velocity.x ? -90 : 90, b || this.object.velocity.set_y(0)) : c || rc._point.x == a.x ? (this.object.velocity.set_y(rc._point.y < a.y ? this.speed : -this.speed), this.angle = 0 > this.object.velocity.y ? 0 : 180, c || this.object.velocity.set_x(0)) : (this.object.velocity.set_x(rc._point.x < a.x ? this.speed : -this.speed), this.object.velocity.set_y(rc._point.y < a.y ? this.speed : -this.speed), this.angle = rc._point.angleBetween(a), this.object.velocity.set(0, -this.speed), a = this.object.velocity, b = c = 0, null == b && (b = 0), null ==
                        c && (c = 0), null == b && (b = 0), null == c && (c = 0), b = X._pool.get().set(c, b), b._inPool = !1, b._weak = !0, a.rotate(b, this.angle))
                },
                advancePath: function(a) {
                    null == a && (a = !0);
                    if (a && (a = this._nodes[this.nodeIndex], null != a)) {
                        if (0 == (this._mode & 1048576) && (this.object.set_x(a.x), this.autoCenter)) {
                            var b = this.object;
                            b.set_x(b.x - .5 * this.object.get_width())
                        }
                        0 == (this._mode & 65536) && (this.object.set_y(a.y), this.autoCenter && (b = this.object, b.set_y(b.y - .5 * this.object.get_height())))
                    }
                    a = !1;
                    this.nodeIndex += this._inc;
                    0 < (this._mode & 1) ? 0 > this.nodeIndex &&
                        (this.nodeIndex = 0, a = !0, this.onEnd()) : 0 < (this._mode & 16) ? this.nodeIndex >= this._nodes.length && (a = !0, this.nodeIndex = 0) : 0 < (this._mode & 256) ? 0 > this.nodeIndex && (this.nodeIndex = this._nodes.length - 1, a = !0, 0 > this.nodeIndex && (this.nodeIndex = 0)) : 0 < (this._mode & 4096) ? 0 < this._inc ? this.nodeIndex >= this._nodes.length && (this.nodeIndex = this._nodes.length - 2, a = !0, 0 > this.nodeIndex && (this.nodeIndex = 0), this._inc = -this._inc) : 0 > this.nodeIndex && (this.nodeIndex = 1, a = !0, this.nodeIndex >= this._nodes.length && (this.nodeIndex = this._nodes.length -
                            1), 0 > this.nodeIndex && (this.nodeIndex = 0), this._inc = -this._inc) : this.nodeIndex >= this._nodes.length && (this.nodeIndex = this._nodes.length - 1, a = !0, this.onEnd());
                    if (a && null != this.onComplete) this.onComplete(this);
                    return this._nodes[this.nodeIndex]
                },
                cancel: function() {
                    this.onEnd();
                    null != this.object && this.object.velocity.set(0, 0);
                    return this
                },
                onEnd: function() {
                    this.finished = !0;
                    this.active = !1;
                    null != this._wasObjectImmovable && this.object.set_immovable(this._wasObjectImmovable);
                    this._wasObjectImmovable = null
                },
                destroy: function() {
                    V.putArray(this._nodes);
                    this.onComplete = this.object = this._nodes = null
                },
                __class__: rc
            };
            var gj = function(a) {
                this._count = 0;
                this._pool = [];
                this._class = a
            };
            g["flixel.util.FlxPool_flixel_util_LabelValuePair"] = gj;
            gj.__name__ = "flixel.util.FlxPool_flixel_util_LabelValuePair";
            gj.__interfaces__ = [nb];
            gj.prototype = {
                get: function() {
                    return 0 == this._count ? Ua.createInstance(this._class, []) : this._pool[--this._count]
                },
                put: function(a) {
                    if (null != a) {
                        var b = this._pool.indexOf(a);
                        if (-1 == b || b >= this._count) a.label = null, a.value = null, this._pool[this._count++] =
                            a
                    }
                },
                __class__: gj
            };
            var wk = w["flixel.util.FlxSaveStatus"] = {
                    __ename__: "flixel.util.FlxSaveStatus",
                    __constructs__: ["SUCCESS", "PENDING", "ERROR"],
                    SUCCESS: {
                        _hx_index: 0,
                        __enum__: "flixel.util.FlxSaveStatus",
                        toString: h
                    },
                    PENDING: {
                        _hx_index: 1,
                        __enum__: "flixel.util.FlxSaveStatus",
                        toString: h
                    },
                    ERROR: {
                        _hx_index: 2,
                        __enum__: "flixel.util.FlxSaveStatus",
                        toString: h
                    }
                },
                hj = function(a, b) {
                    this.dispatchOnce = !1;
                    this.listener = a;
                    this.dispatchOnce = b
                };
            g["flixel.util._FlxSignal.FlxSignalHandler"] = hj;
            hj.__name__ = "flixel.util._FlxSignal.FlxSignalHandler";
            hj.__interfaces__ = [L];
            hj.prototype = {
                destroy: function() {
                    this.listener = null
                },
                __class__: hj
            };
            var Vk = function() {};
            g["flixel.util.IFlxSignal"] = Vk;
            Vk.__name__ = "flixel.util.IFlxSignal";
            Vk.__isInterface__ = !0;
            Vk.__interfaces__ = [L];
            var he = function() {
                this.processingListeners = !1;
                this.handlers = [];
                this.pendingRemove = []
            };
            g["flixel.util._FlxSignal.FlxBaseSignal"] = he;
            he.__name__ = "flixel.util._FlxSignal.FlxBaseSignal";
            he.__interfaces__ = [Vk];
            he.prototype = {
                add: function(a) {
                    null != a && this.registerListener(a, !1)
                },
                remove: function(a) {
                    null !=
                        a && (a = this.getHandler(a), null != a && (this.processingListeners ? this.pendingRemove.push(a) : (Y.remove(this.handlers, a), a.destroy())))
                },
                destroy: function() {
                    V.destroyArray(this.handlers);
                    this.pendingRemove = this.handlers = null
                },
                registerListener: function(a, b) {
                    var c = this.getHandler(a);
                    if (null == c) return c = new hj(a, b), this.handlers.push(c), c;
                    if (c.dispatchOnce != b) throw F.thrown("You cannot addOnce() then add() the same listener without removing the relationship first.");
                    return c
                },
                getHandler: function(a) {
                    for (var b =
                            0, c = this.handlers; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (d.listener == a) return d
                    }
                    return null
                },
                __class__: he
            };
            var Nc = function() {
                he.call(this);
                this.dispatch = r(this, this.dispatch0)
            };
            g["flixel.util._FlxSignal.FlxSignal0"] = Nc;
            Nc.__name__ = "flixel.util._FlxSignal.FlxSignal0";
            Nc.__super__ = he;
            Nc.prototype = n(he.prototype, {
                dispatch0: function() {
                    this.processingListeners = !0;
                    for (var a = 0, b = this.handlers; a < b.length;) {
                        var c = b[a];
                        ++a;
                        c.listener();
                        c.dispatchOnce && this.remove(c.listener)
                    }
                    this.processingListeners = !1;
                    a = 0;
                    for (b = this.pendingRemove; a <
                        b.length;) c = b[a], ++a, this.remove(c.listener);
                    0 < this.pendingRemove.length && (this.pendingRemove = [])
                },
                __class__: Nc
            });
            var bf = function() {
                he.call(this);
                this.dispatch = r(this, this.dispatch1)
            };
            g["flixel.util._FlxSignal.FlxSignal1"] = bf;
            bf.__name__ = "flixel.util._FlxSignal.FlxSignal1";
            bf.__super__ = he;
            bf.prototype = n(he.prototype, {
                dispatch1: function(a) {
                    this.processingListeners = !0;
                    for (var b = 0, c = this.handlers; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.listener(a);
                        d.dispatchOnce && this.remove(d.listener)
                    }
                    this.processingListeners = !1;
                    b = 0;
                    for (c = this.pendingRemove; b < c.length;) d = c[b], ++b, this.remove(d.listener);
                    0 < this.pendingRemove.length && (this.pendingRemove = [])
                },
                __class__: bf
            });
            var oi = function() {
                he.call(this);
                this.dispatch = r(this, this.dispatch2)
            };
            g["flixel.util._FlxSignal.FlxSignal2"] = oi;
            oi.__name__ = "flixel.util._FlxSignal.FlxSignal2";
            oi.__super__ = he;
            oi.prototype = n(he.prototype, {
                dispatch2: function(a, b) {
                    this.processingListeners = !0;
                    for (var c = 0, d = this.handlers; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.listener(a, b);
                        e.dispatchOnce && this.remove(e.listener)
                    }
                    this.processingListeners = !1;
                    c = 0;
                    for (d = this.pendingRemove; c < d.length;) e = d[c], ++c, this.remove(e.listener);
                    0 < this.pendingRemove.length && (this.pendingRemove = [])
                },
                __class__: oi
            });
            var Kl = function() {};
            g["flixel.util.FlxSort"] = Kl;
            Kl.__name__ = "flixel.util.FlxSort";
            Kl.byY = function(a, b, c) {
                b = b.y;
                c = c.y;
                var d = 0;
                b < c ? d = a : b > c && (d = -a);
                return d
            };
            var Ff = function() {};
            g["flixel.util.FlxSpriteUtil"] = Ff;
            Ff.__name__ = "flixel.util.FlxSpriteUtil";
            var ub = function() {};
            g["flixel.util.FlxStringUtil"] = ub;
            ub.__name__ = "flixel.util.FlxStringUtil";
            ub.getClassName =
                function(a, b) {
                    null == b && (b = !1);
                    a = oa.__instanceof(a, vk) ? a : oa.getClass(a);
                    return ub.formatPackage(a.__name__, b)
                };
            ub.formatPackage = function(a, b) {
                if (null == a) return null;
                a = K.replace(a, "::", ".");
                b && (a = Y.substr(a, a.lastIndexOf(".") + 1, null));
                return a
            };
            ub.getHost = function(a) {
                var b = new ya("^(?:[a-z][a-z0-9+\\-.]*://)?(?:[a-z0-9\\-._~%!$&'()*+,;=]+@)?([a-z0-9\\-._~%]{3,}|\\[[a-f0-9:.]+\\])?(?::[0-9]+)?", "i");
                return b.match(a) && (a = b.matched(1), null != a) ? decodeURIComponent(a.split("+").join(" ")).toLowerCase() :
                    ""
            };
            ub.getDomain = function(a) {
                a = ub.getHost(a);
                var b = new ya("^(localhost|[0-9.]+|\\[[a-f0-9:.]+\\])$", "i"),
                    c = new ya("^(?:[a-z0-9\\-]+\\.)*([a-z0-9\\-]+\\.[a-z0-9\\-]+)$", "i");
                return !b.match(a) && c.match(a) && (a = c.matched(1), null != a) ? a.toLowerCase() : ""
            };
            ub.toIntArray = function(a) {
                if (null != a && "" != a) {
                    a = a.split(",");
                    for (var b = [], c = 0; c < a.length;) {
                        var d = a[c];
                        ++c;
                        b.push(I.parseInt(d))
                    }
                    return b
                }
                return null
            };
            ub.getDebugString = function(a) {
                for (var b = "(", c = 0; c < a.length;) {
                    var d = a[c];
                    ++c;
                    b += d.label + ": ";
                    var e = d.value;
                    "number" == typeof e && (e = Qg.roundDecimal(e, q.debugger.precision));
                    b += I.string(e) + " | ";
                    Xb._pool.put(d)
                }
                b = K.trim(Y.substr(b, 0, b.length - 2));
                return b + ")"
            };
            var Xb = function() {};
            g["flixel.util.LabelValuePair"] = Xb;
            Xb.__name__ = "flixel.util.LabelValuePair";
            Xb.__interfaces__ = [L];
            Xb.prototype = {
                destroy: function() {
                    this.value = this.label = null
                },
                __class__: Xb
            };
            var Rc = function(a) {
                this._inManager = !1;
                this._timeCounter = this._loopsCounter = 0;
                this.active = this.finished = !1;
                this.time = this.loops = 0;
                this.manager = null != a ? a : Rc.globalManager
            };
            g["flixel.util.FlxTimer"] = Rc;
            Rc.__name__ = "flixel.util.FlxTimer";
            Rc.__interfaces__ = [L];
            Rc.prototype = {
                destroy: function() {
                    this.onComplete = null
                },
                start: function(a, b, c) {
                    null == c && (c = 1);
                    null == a && (a = 1);
                    null == this.manager || this._inManager || (this.manager.add(this), this._inManager = !0);
                    this.active = !0;
                    this.finished = !1;
                    this.time = Math.abs(a);
                    0 > c && (c *= -1);
                    this.loops = c;
                    this.onComplete = b;
                    this._loopsCounter = this._timeCounter = 0;
                    return this
                },
                cancel: function() {
                    this.finished = !0;
                    this.active = !1;
                    null != this.manager && this._inManager &&
                        (this.manager.remove(this), this._inManager = !1)
                },
                update: function(a) {
                    for (this._timeCounter += a; this._timeCounter >= this.time && this.active && !this.finished;) this._timeCounter -= this.time, this._loopsCounter++, 0 < this.loops && this._loopsCounter >= this.loops && (this.finished = !0)
                },
                onLoopFinished: function() {
                    this.finished && this.cancel();
                    if (null != this.onComplete) this.onComplete(this)
                },
                __class__: Rc
            };
            var cj = function() {
                this._timers = [];
                J.call(this);
                this.set_visible(!1);
                q.signals.preStateSwitch.add(r(this, this.clear))
            };
            g["flixel.util.FlxTimerManager"] = cj;
            cj.__name__ = "flixel.util.FlxTimerManager";
            cj.__super__ = J;
            cj.prototype = n(J.prototype, {
                destroy: function() {
                    Tc.clearArray(this._timers);
                    this._timers = null;
                    q.signals.preStateSwitch.remove(r(this, this.clear));
                    J.prototype.destroy.call(this)
                },
                update: function(a) {
                    for (var b = null, c = 0, d = this._timers; c < d.length;) {
                        var e = d[c];
                        ++c;
                        if (e.active && !e.finished && 0 <= e.time) {
                            var f = e._loopsCounter;
                            e.update(a);
                            f != e._loopsCounter && (null == b && (b = []), b.push(e))
                        }
                    }
                    if (null != b)
                        for (; 0 < b.length;) b.shift().onLoopFinished()
                },
                add: function(a) {
                    this._timers.push(a)
                },
                remove: function(a) {
                    var b = this._timers;
                    a = b.indexOf(a); - 1 != a && (b[a] = b[b.length - 1], b.pop())
                },
                clear: function() {
                    Tc.clearArray(this._timers)
                },
                __class__: cj
            });
            var vm = w["flixel.util.FlxVerticalAlign"] = {
                    __ename__: "flixel.util.FlxVerticalAlign",
                    __constructs__: ["TOP", "CENTER", "BOTTOM"],
                    TOP: {
                        _hx_index: 0,
                        __enum__: "flixel.util.FlxVerticalAlign",
                        toString: h
                    },
                    CENTER: {
                        _hx_index: 1,
                        __enum__: "flixel.util.FlxVerticalAlign",
                        toString: h
                    },
                    BOTTOM: {
                        _hx_index: 2,
                        __enum__: "flixel.util.FlxVerticalAlign",
                        toString: h
                    }
                },
                Rk = function(a, b) {
                    this.start = a;
                    this.end = null == b ? a : b
                };
            g["flixel.util.helpers.FlxRange"] = Rk;
            Rk.__name__ = "flixel.util.helpers.FlxRange";
            Rk.prototype = {
                __class__: Rk
            };
            var yh = w["haxe.StackItem"] = {
                    __ename__: "haxe.StackItem",
                    __constructs__: ["CFunction", "Module", "FilePos", "Method", "LocalFunction"],
                    CFunction: {
                        _hx_index: 0,
                        __enum__: "haxe.StackItem",
                        toString: h
                    },
                    Module: (x = function(a) {
                        return {
                            _hx_index: 1,
                            m: a,
                            __enum__: "haxe.StackItem",
                            toString: h
                        }
                    }, x.__params__ = ["m"], x),
                    FilePos: (x = function(a, b, c, d) {
                        return {
                            _hx_index: 2,
                            s: a,
                            file: b,
                            line: c,
                            column: d,
                            __enum__: "haxe.StackItem",
                            toString: h
                        }
                    }, x.__params__ = ["s", "file", "line", "column"], x),
                    Method: (x = function(a, b) {
                        return {
                            _hx_index: 3,
                            classname: a,
                            method: b,
                            __enum__: "haxe.StackItem",
                            toString: h
                        }
                    }, x.__params__ = ["classname", "method"], x),
                    LocalFunction: (x = function(a) {
                        return {
                            _hx_index: 4,
                            v: a,
                            __enum__: "haxe.StackItem",
                            toString: h
                        }
                    }, x.__params__ = ["v"], x)
                },
                Hf = {
                    callStack: function() {
                        return Ca.toHaxe(Ca.callStack())
                    },
                    exceptionStack: function() {
                        var a = Ca.toHaxe(Ca.exceptionStack());
                        return Hf.subtract(a,
                            Hf.callStack())
                    },
                    toString: function(a) {
                        for (var b = new Oe, c = 0; c < a.length;) {
                            var d = a[c];
                            ++c;
                            b.b += "\nCalled from ";
                            Hf.itemToString(b, d)
                        }
                        return b.b
                    },
                    subtract: function(a, b) {
                        for (var c = -1, d = -1; ++d < a.length;) {
                            for (var e = 0, f = b.length; e < f;) {
                                var k = e++;
                                if (Hf.equalItems(a[d], b[k])) {
                                    if (0 > c && (c = d), ++d, d >= a.length) break
                                } else c = -1
                            }
                            if (0 <= c) break
                        }
                        return 0 <= c ? a.slice(0, c) : a
                    },
                    equalItems: function(a, b) {
                        if (null == a) return null == b ? !0 : !1;
                        switch (a._hx_index) {
                            case 0:
                                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
                            case 1:
                                return null == b ? !1 :
                                    1 == b._hx_index ? a.m == b.m : !1;
                            case 2:
                                if (null == b) return !1;
                                if (2 == b._hx_index) {
                                    var c = a.s,
                                        d = a.line,
                                        e = a.column,
                                        f = b.column,
                                        k = b.line,
                                        p = b.s;
                                    return a.file == b.file && d == k && e == f ? Hf.equalItems(c, p) : !1
                                }
                                return !1;
                            case 3:
                                return null == b ? !1 : 3 == b._hx_index ? (c = a.method, d = b.method, a.classname == b.classname ? c == d : !1) : !1;
                            case 4:
                                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1
                        }
                    },
                    itemToString: function(a, b) {
                        switch (b._hx_index) {
                            case 0:
                                a.b += "a C function";
                                break;
                            case 1:
                                b = b.m;
                                a.b += "module ";
                                a.b += null == b ? "null" : "" + b;
                                break;
                            case 2:
                                var c = b.column,
                                    d = b.line,
                                    e = b.file;
                                b = b.s;
                                null != b && (Hf.itemToString(a, b), a.b += " (");
                                a.b += null == e ? "null" : "" + e;
                                a.b += " line ";
                                a.b += null == d ? "null" : "" + d;
                                null != c && (a.b += " column ", a.b += null == c ? "null" : "" + c);
                                null != b && (a.b += ")");
                                break;
                            case 3:
                                c = b.method;
                                b = b.classname;
                                a.b += I.string(null == b ? "<unknown>" : b);
                                a.b += ".";
                                a.b += null == c ? "null" : "" + c;
                                break;
                            case 4:
                                b = b.v, a.b += "local function #", a.b += null == b ? "null" : "" + b
                        }
                    }
                },
                F = function(a, b, c) {
                    Error.call(this, a);
                    this.message = a;
                    this.__previousException = b;
                    this.__nativeException = null != c ? c : this
                };
            g["haxe.Exception"] =
                F;
            F.__name__ = "haxe.Exception";
            F.caught = function(a) {
                return a instanceof F ? a : a instanceof Error ? new F(a.message, null, a) : new zh(a, null, a)
            };
            F.thrown = function(a) {
                return a instanceof F ? a.get_native() : a instanceof Error ? a : new zh(a)
            };
            F.__super__ = Error;
            F.prototype = n(Error.prototype, {
                unwrap: function() {
                    return this.__nativeException
                },
                get_native: function() {
                    return this.__nativeException
                },
                __class__: F,
                __properties__: {
                    get_native: "get_native"
                }
            });
            var $a = function(a, b) {
                this.high = a;
                this.low = b
            };
            g["haxe._Int64.___Int64"] =
                $a;
            $a.__name__ = "haxe._Int64.___Int64";
            $a.prototype = {
                __class__: $a
            };
            var Ca = function() {};
            g["haxe.NativeStackTrace"] = Ca;
            Ca.__name__ = "haxe.NativeStackTrace";
            Ca.saveStack = function(a) {
                Ca.lastError = a
            };
            Ca.callStack = function() {
                var a = Error(""),
                    b = Ca.tryHaxeStack(a);
                if ("undefined" == typeof b) {
                    try {
                        throw a;
                    } catch (c) {}
                    b = a.stack
                }
                return Ca.normalize(b, 2)
            };
            Ca.exceptionStack = function() {
                return Ca.normalize(Ca.tryHaxeStack(Ca.lastError))
            };
            Ca.toHaxe = function(a, b) {
                null == b && (b = 0);
                if (null == a) return [];
                if ("string" == typeof a) {
                    a =
                        a.split("\n");
                    "Error" == a[0] && a.shift();
                    for (var c = [], d = 0, e = a.length; d < e;) {
                        var f = d++;
                        if (!(b > f)) {
                            var k = a[f];
                            f = k.match(/^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
                            if (null != f) {
                                k = f[1].split(".");
                                "$hxClasses" == k[0] && k.shift();
                                var p = k.pop(),
                                    m = f[2],
                                    h = I.parseInt(f[3]);
                                f = I.parseInt(f[4]);
                                c.push(yh.FilePos("Anonymous function" == p ? yh.LocalFunction() : "Global code" == p ? null : yh.Method(k.join("."), p), m, h, f))
                            } else c.push(yh.Module(K.trim(k)))
                        }
                    }
                    return c
                }
                return 0 < b && Array.isArray(a) ? a.slice(b) : a
            };
            Ca.tryHaxeStack =
                function(a) {
                    if (null == a) return [];
                    var b = Error.prepareStackTrace;
                    Error.prepareStackTrace = Ca.prepareHxStackTrace;
                    a = a.stack;
                    Error.prepareStackTrace = b;
                    return a
                };
            Ca.prepareHxStackTrace = function(a, b) {
                a = [];
                for (var c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    null != Ca.wrapCallSite && (d = Ca.wrapCallSite(d));
                    var e = null,
                        f = d.getFunctionName();
                    if (null != f) {
                        var k = f.lastIndexOf(".");
                        0 <= k ? (e = f.substring(0, k), f = f.substring(k + 1), e = yh.Method(e, f)) : e = yh.Method(null, f)
                    }
                    f = d.getFileName();
                    k = null == f ? -1 : f.indexOf("file:");
                    null != Ca.wrapCallSite &&
                        0 < k && (f = f.substring(k + 6));
                    a.push(yh.FilePos(e, f, d.getLineNumber(), d.getColumnNumber()))
                }
                return a
            };
            Ca.normalize = function(a, b) {
                null == b && (b = 0);
                if (Array.isArray(a) && 0 < b) return a.slice(b);
                if ("string" == typeof a) {
                    switch (a.substring(0, 6)) {
                        case "Error\n":
                        case "Error:":
                            ++b
                    }
                    return Ca.skipLines(a, b)
                }
                return a
            };
            Ca.skipLines = function(a, b, c) {
                null == c && (c = 0);
                return 0 < b ? (c = a.indexOf("\n", c), 0 > c ? "" : Ca.skipLines(a, --b, c + 1)) : a.substring(c)
            };
            var sb = function() {};
            g["haxe.Resource"] = sb;
            sb.__name__ = "haxe.Resource";
            sb.getString =
                function(a) {
                    for (var b = 0, c = sb.content; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (d.name == a) return null != d.str ? d.str : Ue.decode(d.data).toString()
                    }
                    return null
                };
            var hd = function() {
                this.buf = new Oe;
                this.cache = [];
                this.useCache = hd.USE_CACHE;
                this.useEnumIndex = hd.USE_ENUM_INDEX;
                this.shash = new aa;
                this.scount = 0
            };
            g["haxe.Serializer"] = hd;
            hd.__name__ = "haxe.Serializer";
            hd.run = function(a) {
                var b = new hd;
                b.serialize(a);
                return b.toString()
            };
            hd.prototype = {
                toString: function() {
                    return this.buf.b
                },
                serializeString: function(a) {
                    var b = this.shash.h[a];
                    null != b ? (this.buf.b += "R", this.buf.b += null == b ? "null" : "" + b) : (this.shash.h[a] = this.scount++, this.buf.b += "y", a = encodeURIComponent(a), this.buf.b += I.string(a.length), this.buf.b += ":", this.buf.b += null == a ? "null" : "" + a)
                },
                serializeRef: function(a) {
                    for (var b = typeof a, c = 0, d = this.cache.length; c < d;) {
                        var e = c++,
                            f = this.cache[e];
                        if (typeof f == b && f == a) return this.buf.b += "r", this.buf.b += null == e ? "null" : "" + e, !0
                    }
                    this.cache.push(a);
                    return !1
                },
                serializeFields: function(a) {
                    for (var b = 0, c = ea.fields(a); b < c.length;) {
                        var d = c[b];
                        ++b;
                        this.serializeString(d);
                        this.serialize(ea.field(a, d))
                    }
                    this.buf.b += "g"
                },
                serialize: function(a) {
                    var b = Ua.typeof(a);
                    switch (b._hx_index) {
                        case 0:
                            this.buf.b += "n";
                            break;
                        case 1:
                            if (0 == a) {
                                this.buf.b += "z";
                                break
                            }
                            this.buf.b += "i";
                            this.buf.b += null == a ? "null" : "" + a;
                            break;
                        case 2:
                            isNaN(a) ? this.buf.b += "k" : isFinite(a) ? (this.buf.b += "d", this.buf.b += null == a ? "null" : "" + a) : this.buf.b += 0 > a ? "m" : "p";
                            break;
                        case 3:
                            this.buf.b += a ? "t" : "f";
                            break;
                        case 4:
                            oa.__instanceof(a, vk) ? (a = a.__name__, this.buf.b += "A", this.serializeString(a)) : oa.__instanceof(a,
                                nm) ? (this.buf.b += "B", this.serializeString(a.__ename__)) : this.useCache && this.serializeRef(a) || (this.buf.b += "o", this.serializeFields(a));
                            break;
                        case 5:
                            throw F.thrown("Cannot serialize function");
                        case 6:
                            b = b.c;
                            if (b == String) {
                                this.serializeString(a);
                                break
                            }
                            if (this.useCache && this.serializeRef(a)) break;
                            switch (b) {
                                case Array:
                                    var c = 0;
                                    this.buf.b += "a";
                                    for (var d = 0, e = a.length; d < e;) b = d++, null == a[b] ? ++c : (0 < c && (1 == c ? this.buf.b += "n" : (this.buf.b += "u", this.buf.b += null == c ? "null" : "" + c), c = 0), this.serialize(a[b]));
                                    0 < c && (1 ==
                                        c ? this.buf.b += "n" : (this.buf.b += "u", this.buf.b += null == c ? "null" : "" + c));
                                    this.buf.b += "h";
                                    break;
                                case Date:
                                    this.buf.b += "v";
                                    this.buf.b += I.string(a.getTime());
                                    break;
                                case Tb:
                                    this.buf.b += "q";
                                    for (b = a.keys(); b.hasNext();) c = b.next(), this.buf.b += ":", this.buf.b += null == c ? "null" : "" + c, this.serialize(a.h[c]);
                                    this.buf.b += "h";
                                    break;
                                case Wa:
                                    this.buf.b += "l";
                                    for (a = a.h; null != a;) b = a.item, a = a.next, this.serialize(b);
                                    this.buf.b += "h";
                                    break;
                                case A:
                                    this.buf.b += "M";
                                    for (b = a.keys(); b.hasNext();) {
                                        c = b.next();
                                        var f = ea.field(c, "__id__");
                                        ea.deleteField(c, "__id__");
                                        this.serialize(c);
                                        c.__id__ = f;
                                        this.serialize(a.h[c.__id__])
                                    }
                                    this.buf.b += "h";
                                    break;
                                case aa:
                                    this.buf.b += "b";
                                    for (b = aa.keysIterator(a.h); b.hasNext();) c = b.next(), this.serializeString(c), this.serialize(a.h[c]);
                                    this.buf.b += "h";
                                    break;
                                case bb:
                                    this.buf.b += "s";
                                    this.buf.b += I.string(Math.ceil(8 * a.length / 6));
                                    this.buf.b += ":";
                                    b = 0;
                                    c = a.length - 2;
                                    f = hd.BASE64_CODES;
                                    if (null == f) {
                                        f = Array(hd.BASE64.length);
                                        d = 0;
                                        for (e = hd.BASE64.length; d < e;) {
                                            var k = d++;
                                            f[k] = Y.cca(hd.BASE64, k)
                                        }
                                        hd.BASE64_CODES = f
                                    }
                                    for (; b <
                                        c;) d = a.b[b++], e = a.b[b++], k = a.b[b++], this.buf.b += String.fromCodePoint(f[d >> 2]), this.buf.b += String.fromCodePoint(f[(d << 4 | e >> 4) & 63]), this.buf.b += String.fromCodePoint(f[(e << 2 | k >> 6) & 63]), this.buf.b += String.fromCodePoint(f[k & 63]);
                                    b == c ? (d = a.b[b++], e = a.b[b++], this.buf.b += String.fromCodePoint(f[d >> 2]), this.buf.b += String.fromCodePoint(f[(d << 4 | e >> 4) & 63]), this.buf.b += String.fromCodePoint(f[e << 2 & 63])) : b == c + 1 && (d = a.b[b++], this.buf.b += String.fromCodePoint(f[d >> 2]), this.buf.b += String.fromCodePoint(f[d << 4 & 63]));
                                    break;
                                default:
                                    this.useCache && this.cache.pop(), null != a.hxSerialize ? (this.buf.b += "C", this.serializeString(b.__name__), this.useCache && this.cache.push(a), a.hxSerialize(this), this.buf.b += "g") : (this.buf.b += "c", this.serializeString(b.__name__), this.useCache && this.cache.push(a), this.serializeFields(a))
                            }
                            break;
                        case 7:
                            b = b.e;
                            if (this.useCache) {
                                if (this.serializeRef(a)) break;
                                this.cache.pop()
                            }
                            this.buf.b += I.string(this.useEnumIndex ? "j" : "w");
                            this.serializeString(b.__ename__);
                            this.useEnumIndex ? (this.buf.b += ":", this.buf.b +=
                                I.string(a._hx_index)) : (b = a, this.serializeString(w[b.__enum__].__constructs__[b._hx_index]));
                            this.buf.b += ":";
                            c = Ua.enumParameters(a);
                            this.buf.b += I.string(c.length);
                            for (b = 0; b < c.length;) f = c[b], ++b, this.serialize(f);
                            this.useCache && this.cache.push(a);
                            break;
                        default:
                            throw F.thrown("Cannot serialize " + I.string(a));
                    }
                },
                __class__: hd
            };
            var If = function(a) {
                var b = this;
                this.id = setInterval(function() {
                    b.run()
                }, a)
            };
            g["haxe.Timer"] = If;
            If.__name__ = "haxe.Timer";
            If.delay = function(a, b) {
                var c = new If(b);
                c.run = function() {
                    c.stop();
                    a()
                };
                return c
            };
            If.prototype = {
                stop: function() {
                    null != this.id && (clearInterval(this.id), this.id = null)
                },
                run: function() {},
                __class__: If
            };
            var ij = function() {};
            g["haxe._Unserializer.DefaultResolver"] = ij;
            ij.__name__ = "haxe._Unserializer.DefaultResolver";
            ij.prototype = {
                resolveClass: function(a) {
                    return g[a]
                },
                resolveEnum: function(a) {
                    return w[a]
                },
                __class__: ij
            };
            var Xc = function(a) {
                this.buf = a;
                this.length = a.length;
                this.pos = 0;
                this.scache = [];
                this.cache = [];
                a = Xc.DEFAULT_RESOLVER;
                null == a && (a = new ij, Xc.DEFAULT_RESOLVER = a);
                this.resolver =
                    a
            };
            g["haxe.Unserializer"] = Xc;
            Xc.__name__ = "haxe.Unserializer";
            Xc.initCodes = function() {
                for (var a = [], b = 0, c = Xc.BASE64.length; b < c;) {
                    var d = b++;
                    a[Xc.BASE64.charCodeAt(d)] = d
                }
                return a
            };
            Xc.run = function(a) {
                return (new Xc(a)).unserialize()
            };
            Xc.prototype = {
                setResolver: function(a) {
                    null == a ? (null == Bg.instance && (Bg.instance = new Bg), this.resolver = Bg.instance) : this.resolver = a
                },
                readDigits: function() {
                    for (var a = 0, b = !1, c = this.pos;;) {
                        var d = this.buf.charCodeAt(this.pos);
                        if (d != d) break;
                        if (45 == d) {
                            if (this.pos != c) break;
                            b = !0
                        } else {
                            if (48 >
                                d || 57 < d) break;
                            a = 10 * a + (d - 48)
                        }
                        this.pos++
                    }
                    b && (a *= -1);
                    return a
                },
                readFloat: function() {
                    for (var a = this.pos;;) {
                        var b = this.buf.charCodeAt(this.pos);
                        if (b != b) break;
                        if (43 <= b && 58 > b || 101 == b || 69 == b) this.pos++;
                        else break
                    }
                    return parseFloat(Y.substr(this.buf, a, this.pos - a))
                },
                unserializeObject: function(a) {
                    for (;;) {
                        if (this.pos >= this.length) throw F.thrown("Invalid object");
                        if (103 == this.buf.charCodeAt(this.pos)) break;
                        var b = this.unserialize();
                        if ("string" != typeof b) throw F.thrown("Invalid object key");
                        var c = this.unserialize();
                        a[b] = c
                    }
                    this.pos++
                },
                unserializeEnum: function(a, b) {
                    if (58 != this.buf.charCodeAt(this.pos++)) throw F.thrown("Invalid enum format");
                    var c = this.readDigits();
                    if (0 == c) return Ua.createEnum(a, b);
                    for (var d = []; 0 < c--;) d.push(this.unserialize());
                    return Ua.createEnum(a, b, d)
                },
                unserialize: function() {
                    switch (this.buf.charCodeAt(this.pos++)) {
                        case 65:
                            var a = this.unserialize(),
                                b = this.resolver.resolveClass(a);
                            if (null == b) throw F.thrown("Class not found " + a);
                            return b;
                        case 66:
                            a = this.unserialize();
                            b = this.resolver.resolveEnum(a);
                            if (null == b) throw F.thrown("Enum not found " + a);
                            return b;
                        case 67:
                            a = this.unserialize();
                            b = this.resolver.resolveClass(a);
                            if (null == b) throw F.thrown("Class not found " + a);
                            a = Object.create(b.prototype);
                            this.cache.push(a);
                            a.hxUnserialize(this);
                            if (103 != this.buf.charCodeAt(this.pos++)) throw F.thrown("Invalid custom data");
                            return a;
                        case 77:
                            b = new A;
                            this.cache.push(b);
                            for (var c; 104 != this.buf.charCodeAt(this.pos);) a = this.unserialize(), b.set(a, this.unserialize());
                            this.pos++;
                            return b;
                        case 82:
                            b = this.readDigits();
                            if (0 >
                                b || b >= this.scache.length) throw F.thrown("Invalid string reference");
                            return this.scache[b];
                        case 97:
                            a = [];
                            for (this.cache.push(a);;) {
                                c = this.buf.charCodeAt(this.pos);
                                if (104 == c) {
                                    this.pos++;
                                    break
                                }
                                117 == c ? (this.pos++, b = this.readDigits(), a[a.length + b - 1] = null) : a.push(this.unserialize())
                            }
                            return a;
                        case 98:
                            b = new aa;
                            for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos);) a = this.unserialize(), c = this.unserialize(), b.h[a] = c;
                            this.pos++;
                            return b;
                        case 99:
                            a = this.unserialize();
                            b = this.resolver.resolveClass(a);
                            if (null ==
                                b) throw F.thrown("Class not found " + a);
                            a = Object.create(b.prototype);
                            this.cache.push(a);
                            this.unserializeObject(a);
                            return a;
                        case 100:
                            return this.readFloat();
                        case 102:
                            return !1;
                        case 105:
                            return this.readDigits();
                        case 106:
                            a = this.unserialize();
                            b = this.resolver.resolveEnum(a);
                            if (null == b) throw F.thrown("Enum not found " + a);
                            this.pos++;
                            c = this.readDigits();
                            var d = b.__constructs__.slice()[c];
                            if (null == d) throw F.thrown("Unknown enum index " + a + "@" + c);
                            b = this.unserializeEnum(b, d);
                            this.cache.push(b);
                            return b;
                        case 107:
                            return NaN;
                        case 108:
                            a = new Wa;
                            for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos);) a.add(this.unserialize());
                            this.pos++;
                            return a;
                        case 109:
                            return -Infinity;
                        case 110:
                            return null;
                        case 111:
                            return a = {}, this.cache.push(a), this.unserializeObject(a), a;
                        case 112:
                            return Infinity;
                        case 113:
                            b = new Tb;
                            this.cache.push(b);
                            for (c = this.buf.charCodeAt(this.pos++); 58 == c;) a = this.readDigits(), c = this.unserialize(), b.h[a] = c, c = this.buf.charCodeAt(this.pos++);
                            if (104 != c) throw F.thrown("Invalid IntMap format");
                            return b;
                        case 114:
                            b = this.readDigits();
                            if (0 > b || b >= this.cache.length) throw F.thrown("Invalid reference");
                            return this.cache[b];
                        case 115:
                            b = this.readDigits();
                            c = this.buf;
                            if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < b) throw F.thrown("Invalid bytes length");
                            d = Xc.CODES;
                            null == d && (d = Xc.initCodes(), Xc.CODES = d);
                            a = this.pos;
                            for (var e = b & 3, f = a + (b - e), k = new bb(new ArrayBuffer(3 * (b >> 2) + (2 <= e ? e - 1 : 0))), p = 0; a < f;) {
                                var m = d[c.charCodeAt(a++)],
                                    h = d[c.charCodeAt(a++)];
                                k.b[p++] = (m << 2 | h >> 4) & 255;
                                m = d[c.charCodeAt(a++)];
                                k.b[p++] = (h << 4 | m >> 2) & 255;
                                h = d[c.charCodeAt(a++)];
                                k.b[p++] = (m << 6 | h) & 255
                            }
                            2 <= e && (m = d[c.charCodeAt(a++)], h = d[c.charCodeAt(a++)], k.b[p++] = (m << 2 | h >> 4) & 255, 3 == e && (m = d[c.charCodeAt(a++)], k.b[p++] = (h << 4 | m >> 2) & 255));
                            this.pos += b;
                            this.cache.push(k);
                            return k;
                        case 116:
                            return !0;
                        case 118:
                            return 48 <= this.buf.charCodeAt(this.pos) && 57 >= this.buf.charCodeAt(this.pos) && 48 <= this.buf.charCodeAt(this.pos + 1) && 57 >= this.buf.charCodeAt(this.pos + 1) && 48 <= this.buf.charCodeAt(this.pos + 2) && 57 >= this.buf.charCodeAt(this.pos + 2) && 48 <= this.buf.charCodeAt(this.pos + 3) && 57 >= this.buf.charCodeAt(this.pos +
                                3) && 45 == this.buf.charCodeAt(this.pos + 4) ? (a = Y.strDate(Y.substr(this.buf, this.pos, 19)), this.pos += 19) : a = new Date(this.readFloat()), this.cache.push(a), a;
                        case 119:
                            a = this.unserialize();
                            b = this.resolver.resolveEnum(a);
                            if (null == b) throw F.thrown("Enum not found " + a);
                            b = this.unserializeEnum(b, this.unserialize());
                            this.cache.push(b);
                            return b;
                        case 120:
                            throw F.thrown(this.unserialize());
                        case 121:
                            b = this.readDigits();
                            if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < b) throw F.thrown("Invalid string length");
                            a = Y.substr(this.buf, this.pos, b);
                            this.pos += b;
                            a = decodeURIComponent(a.split("+").join(" "));
                            this.scache.push(a);
                            return a;
                        case 122:
                            return 0
                    }
                    this.pos--;
                    throw F.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
                },
                __class__: Xc
            };
            var Bg = function() {};
            g["haxe._Unserializer.NullResolver"] = Bg;
            Bg.__name__ = "haxe._Unserializer.NullResolver";
            Bg.prototype = {
                resolveClass: function(a) {
                    return null
                },
                resolveEnum: function(a) {
                    return null
                },
                __class__: Bg
            };
            var zh = function(a, b, c) {
                F.call(this, String(a), b,
                    c);
                this.value = a
            };
            g["haxe.ValueException"] = zh;
            zh.__name__ = "haxe.ValueException";
            zh.__super__ = F;
            zh.prototype = n(F.prototype, {
                unwrap: function() {
                    return this.value
                },
                __class__: zh
            });
            var Cg = function() {
                this.a1 = 1;
                this.a2 = 0
            };
            g["haxe.crypto.Adler32"] = Cg;
            Cg.__name__ = "haxe.crypto.Adler32";
            Cg.read = function(a) {
                var b = new Cg,
                    c = a.readByte(),
                    d = a.readByte(),
                    e = a.readByte();
                a = a.readByte();
                b.a1 = e << 8 | a;
                b.a2 = c << 8 | d;
                return b
            };
            Cg.prototype = {
                update: function(a, b, c) {
                    var d = this.a1,
                        e = this.a2,
                        f = b;
                    for (b += c; f < b;) c = f++, d = (d + a.b[c]) % 65521,
                        e = (e + d) % 65521;
                    this.a1 = d;
                    this.a2 = e
                },
                equals: function(a) {
                    return a.a1 == this.a1 ? a.a2 == this.a2 : !1
                },
                __class__: Cg
            };
            var Ue = function() {};
            g["haxe.crypto.Base64"] = Ue;
            Ue.__name__ = "haxe.crypto.Base64";
            Ue.encode = function(a, b) {
                null == b && (b = !0);
                var c = (new jj(Ue.BYTES)).encodeBytes(a).toString();
                if (b) switch (a.length % 3) {
                    case 1:
                        c += "==";
                        break;
                    case 2:
                        c += "="
                }
                return c
            };
            Ue.decode = function(a, b) {
                null == b && (b = !0);
                if (b)
                    for (; 61 == Y.cca(a, a.length - 1);) a = Y.substr(a, 0, -1);
                return (new jj(Ue.BYTES)).decodeBytes(bb.ofString(a))
            };
            var jj =
                function(a) {
                    for (var b = a.length, c = 1; b > 1 << c;) ++c;
                    if (8 < c || b != 1 << c) throw F.thrown("BaseCode : base length must be a power of two.");
                    this.base = a;
                    this.nbits = c
                };
            g["haxe.crypto.BaseCode"] = jj;
            jj.__name__ = "haxe.crypto.BaseCode";
            jj.prototype = {
                encodeBytes: function(a) {
                    for (var b = this.nbits, c = this.base, d = 8 * a.length / b | 0, e = new bb(new ArrayBuffer(d + (0 == 8 * a.length % b ? 0 : 1))), f = 0, k = 0, p = (1 << b) - 1, m = 0, h = 0; h < d;) {
                        for (; k < b;) k += 8, f <<= 8, f |= a.b[m++];
                        k -= b;
                        e.b[h++] = c.b[f >> k & p] & 255
                    }
                    0 < k && (e.b[h++] = c.b[f << b - k & p] & 255);
                    return e
                },
                initTable: function() {
                    for (var a = [], b = 0; 256 > b;) {
                        var c = b++;
                        a[c] = -1
                    }
                    b = 0;
                    for (var d = this.base.length; b < d;) c = b++, a[this.base.b[c]] = c;
                    this.tbl = a
                },
                decodeBytes: function(a) {
                    var b = this.nbits;
                    null == this.tbl && this.initTable();
                    for (var c = this.tbl, d = a.length * b >> 3, e = new bb(new ArrayBuffer(d)), f = 0, k = 0, p = 0, m = 0; m < d;) {
                        for (; 8 > k;) {
                            k += b;
                            f <<= b;
                            var h = c[a.b[p++]];
                            if (-1 == h) throw F.thrown("BaseCode : invalid encoded char");
                            f |= h
                        }
                        k -= 8;
                        e.b[m++] = f >> k & 255
                    }
                    return e
                },
                __class__: jj
            };
            var Zb = function() {};
            g["haxe.ds.ArraySort"] = Zb;
            Zb.__name__ = "haxe.ds.ArraySort";
            Zb.sort =
                function(a, b) {
                    Zb.rec(a, b, 0, a.length)
                };
            Zb.rec = function(a, b, c, d) {
                var e = c + d >> 1;
                if (12 > d - c) {
                    if (!(d <= c))
                        for (e = c + 1; e < d;)
                            for (var f = e++; f > c;) {
                                if (0 > b(a[f], a[f - 1])) Zb.swap(a, f - 1, f);
                                else break;
                                --f
                            }
                } else Zb.rec(a, b, c, e), Zb.rec(a, b, e, d), Zb.doMerge(a, b, c, e, d, e - c, d - e)
            };
            Zb.doMerge = function(a, b, c, d, e, f, k) {
                if (0 != f && 0 != k)
                    if (2 == f + k) 0 > b(a[d], a[c]) && Zb.swap(a, d, c);
                    else {
                        if (f > k) {
                            var p = f >> 1;
                            var m = c + p;
                            var h = Zb.lower(a, b, d, e, m);
                            var g = h - d
                        } else g = k >> 1, h = d + g, m = Zb.upper(a, b, c, d, h), p = m - c;
                        Zb.rotate(a, b, m, d, h);
                        d = m + g;
                        Zb.doMerge(a, b,
                            c, m, d, p, g);
                        Zb.doMerge(a, b, d, h, e, f - p, k - g)
                    }
            };
            Zb.rotate = function(a, b, c, d, e) {
                if (c != d && d != e)
                    for (b = Zb.gcd(e - c, d - c); 0 != b--;) {
                        for (var f = a[c + b], k = d - c, p = c + b, m = c + b + k; m != c + b;) a[p] = a[m], p = m, m = e - m > k ? m + k : c + (k - (e - m));
                        a[p] = f
                    }
            };
            Zb.gcd = function(a, b) {
                for (; 0 != b;) {
                    var c = a % b;
                    a = b;
                    b = c
                }
                return a
            };
            Zb.upper = function(a, b, c, d, e) {
                d -= c;
                for (var f, k; 0 < d;) f = d >> 1, k = c + f, 0 > b(a[e], a[k]) ? d = f : (c = k + 1, d = d - f - 1);
                return c
            };
            Zb.lower = function(a, b, c, d, e) {
                d -= c;
                for (var f, k; 0 < d;) f = d >> 1, k = c + f, 0 > b(a[k], a[e]) ? (c = k + 1, d = d - f - 1) : d = f;
                return c
            };
            Zb.swap = function(a,
                b, c) {
                var d = a[b];
                a[b] = a[c];
                a[c] = d
            };
            var Ah = function() {};
            g["haxe.ds.BalancedTree"] = Ah;
            Ah.__name__ = "haxe.ds.BalancedTree";
            Ah.__interfaces__ = [Ac];
            Ah.prototype = {
                set: function(a, b) {
                    this.root = this.setLoop(a, b, this.root)
                },
                get: function(a) {
                    for (var b = this.root; null != b;) {
                        var c = this.compare(a, b.key);
                        if (0 == c) return b.value;
                        b = 0 > c ? b.left : b.right
                    }
                    return null
                },
                remove: function(a) {
                    try {
                        return this.root = this.removeLoop(a, this.root), !0
                    } catch (b) {
                        Ca.lastError = b;
                        if ("string" == typeof F.caught(b).unwrap()) return !1;
                        throw b;
                    }
                },
                keys: function() {
                    var a = [];
                    this.keysLoop(this.root, a);
                    return new Je(a)
                },
                setLoop: function(a, b, c) {
                    if (null == c) return new id(null, a, b, null);
                    var d = this.compare(a, c.key);
                    if (0 == d) return new id(c.left, a, b, c.right, null == c ? 0 : c._height);
                    if (0 > d) return a = this.setLoop(a, b, c.left), this.balance(a, c.key, c.value, c.right);
                    a = this.setLoop(a, b, c.right);
                    return this.balance(c.left, c.key, c.value, a)
                },
                removeLoop: function(a, b) {
                    if (null == b) throw F.thrown("Not_found");
                    var c = this.compare(a, b.key);
                    return 0 == c ? this.merge(b.left, b.right) : 0 > c ? this.balance(this.removeLoop(a,
                        b.left), b.key, b.value, b.right) : this.balance(b.left, b.key, b.value, this.removeLoop(a, b.right))
                },
                keysLoop: function(a, b) {
                    null != a && (this.keysLoop(a.left, b), b.push(a.key), this.keysLoop(a.right, b))
                },
                merge: function(a, b) {
                    if (null == a) return b;
                    if (null == b) return a;
                    var c = this.minBinding(b);
                    return this.balance(a, c.key, c.value, this.removeMinBinding(b))
                },
                minBinding: function(a) {
                    if (null == a) throw F.thrown("Not_found");
                    return null == a.left ? a : this.minBinding(a.left)
                },
                removeMinBinding: function(a) {
                    return null == a.left ? a.right :
                        this.balance(this.removeMinBinding(a.left), a.key, a.value, a.right)
                },
                balance: function(a, b, c, d) {
                    var e = null == a ? 0 : a._height,
                        f = null == d ? 0 : d._height;
                    return e > f + 2 ? (e = a.left, f = a.right, (null == e ? 0 : e._height) >= (null == f ? 0 : f._height) ? new id(a.left, a.key, a.value, new id(a.right, b, c, d)) : new id(new id(a.left, a.key, a.value, a.right.left), a.right.key, a.right.value, new id(a.right.right, b, c, d))) : f > e + 2 ? (e = d.right, f = d.left, (null == e ? 0 : e._height) > (null == f ? 0 : f._height) ? new id(new id(a, b, c, d.left), d.key, d.value, d.right) : new id(new id(a,
                        b, c, d.left.left), d.left.key, d.left.value, new id(d.left.right, d.key, d.value, d.right))) : new id(a, b, c, d, (e > f ? e : f) + 1)
                },
                compare: function(a, b) {
                    return ea.compare(a, b)
                },
                __class__: Ah
            };
            var id = function(a, b, c, d, e) {
                null == e && (e = -1);
                this.left = a;
                this.key = b;
                this.value = c;
                this.right = d; - 1 == e ? (a = this.left, b = this.right, a = (null == a ? 0 : a._height) > (null == b ? 0 : b._height) ? this.left : this.right, this._height = (null == a ? 0 : a._height) + 1) : this._height = e
            };
            g["haxe.ds.TreeNode"] = id;
            id.__name__ = "haxe.ds.TreeNode";
            id.prototype = {
                __class__: id
            };
            var kg = function() {};
            g["haxe.ds.EnumValueMap"] = kg;
            kg.__name__ = "haxe.ds.EnumValueMap";
            kg.__interfaces__ = [Ac];
            kg.__super__ = Ah;
            kg.prototype = n(Ah.prototype, {
                compare: function(a, b) {
                    var c = a._hx_index - b._hx_index;
                    if (0 != c) return c;
                    a = Ua.enumParameters(a);
                    b = Ua.enumParameters(b);
                    return 0 == a.length && 0 == b.length ? 0 : this.compareArgs(a, b)
                },
                compareArgs: function(a, b) {
                    var c = a.length - b.length;
                    if (0 != c) return c;
                    c = 0;
                    for (var d = a.length; c < d;) {
                        var e = c++;
                        e = this.compareArg(a[e], b[e]);
                        if (0 != e) return e
                    }
                    return 0
                },
                compareArg: function(a,
                    b) {
                    return ea.isEnumValue(a) && ea.isEnumValue(b) ? this.compare(a, b) : a instanceof Array && b instanceof Array ? this.compareArgs(a, b) : ea.compare(a, b)
                },
                __class__: kg
            });
            var Tb = function() {
                this.h = {}
            };
            g["haxe.ds.IntMap"] = Tb;
            Tb.__name__ = "haxe.ds.IntMap";
            Tb.__interfaces__ = [Ac];
            Tb.prototype = {
                set: function(a, b) {
                    this.h[a] = b
                },
                get: function(a) {
                    return this.h[a]
                },
                remove: function(a) {
                    if (!this.h.hasOwnProperty(a)) return !1;
                    delete this.h[a];
                    return !0
                },
                keys: function() {
                    var a = [],
                        b;
                    for (b in this.h) this.h.hasOwnProperty(b) && a.push(b |
                        0);
                    return new Je(a)
                },
                iterator: function() {
                    return {
                        ref: this.h,
                        it: this.keys(),
                        hasNext: function() {
                            return this.it.hasNext()
                        },
                        next: function() {
                            var a = this.it.next();
                            return this.ref[a]
                        }
                    }
                },
                __class__: Tb
            };
            var Th = function(a, b) {
                this.item = a;
                this.next = b
            };
            g["haxe.ds._List.ListNode"] = Th;
            Th.__name__ = "haxe.ds._List.ListNode";
            Th.prototype = {
                __class__: Th
            };
            var lk = function(a) {
                this.head = a
            };
            g["haxe.ds._List.ListIterator"] = lk;
            lk.__name__ = "haxe.ds._List.ListIterator";
            lk.prototype = {
                hasNext: function() {
                    return null != this.head
                },
                next: function() {
                    var a =
                        this.head.item;
                    this.head = this.head.next;
                    return a
                },
                __class__: lk
            };
            var aa = function() {
                this.h = Object.create(null)
            };
            g["haxe.ds.StringMap"] = aa;
            aa.__name__ = "haxe.ds.StringMap";
            aa.__interfaces__ = [Ac];
            aa.keysIterator = function(a) {
                var b = Object.keys(a),
                    c = b.length,
                    d = 0;
                return {
                    hasNext: function() {
                        return d < c
                    },
                    next: function() {
                        d += 1;
                        return b[d - 1]
                    }
                }
            };
            aa.valueIterator = function(a) {
                var b = Object.keys(a),
                    c = b.length,
                    d = 0;
                return {
                    hasNext: function() {
                        return d < c
                    },
                    next: function() {
                        d += 1;
                        return a[b[d - 1]]
                    }
                }
            };
            aa.prototype = {
                get: function(a) {
                    return this.h[a]
                },
                set: function(a, b) {
                    this.h[a] = b
                },
                remove: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.h, a) ? (delete this.h[a], !0) : !1
                },
                keys: function() {
                    return aa.keysIterator(this.h)
                },
                __class__: aa
            };
            var Bh = function(a) {
                this.url = a;
                this.headers = [];
                this.params = [];
                this.emptyOnData = r(this, this.onData)
            };
            g["haxe.http.HttpBase"] = Bh;
            Bh.__name__ = "haxe.http.HttpBase";
            Bh.prototype = {
                setParameter: function(a, b) {
                    for (var c = 0, d = this.params.length; c < d;) {
                        var e = c++;
                        if (this.params[e].name == a) {
                            this.params[e] = {
                                name: a,
                                value: b
                            };
                            return
                        }
                    }
                    this.params.push({
                        name: a,
                        value: b
                    })
                },
                onData: function(a) {},
                onBytes: function(a) {},
                onError: function(a) {},
                onStatus: function(a) {},
                hasOnData: function() {
                    return !ea.compareMethods(r(this, this.onData), this.emptyOnData)
                },
                success: function(a) {
                    this.responseBytes = a;
                    this.responseAsString = null;
                    if (this.hasOnData()) this.onData(this.get_responseData());
                    this.onBytes(this.responseBytes)
                },
                get_responseData: function() {
                    null == this.responseAsString && null != this.responseBytes && (this.responseAsString = this.responseBytes.getString(0, this.responseBytes.length,
                        Am.UTF8));
                    return this.responseAsString
                },
                __class__: Bh,
                __properties__: {
                    get_responseData: "get_responseData"
                }
            };
            var kj = function(a) {
                this.async = !0;
                this.withCredentials = !1;
                Bh.call(this, a)
            };
            g["haxe.http.HttpJs"] = kj;
            kj.__name__ = "haxe.http.HttpJs";
            kj.__super__ = Bh;
            kj.prototype = n(Bh.prototype, {
                request: function(a) {
                    var b = this;
                    this.responseBytes = this.responseAsString = null;
                    var c = this.req = Ch.createXMLHttpRequest(),
                        d = function(a) {
                            if (4 == c.readyState) {
                                try {
                                    var d = c.status
                                } catch (mk) {
                                    Ca.lastError = mk, d = null
                                }
                                0 == d && "undefined" !=
                                    typeof window && null != C.location && (a = C.location.protocol.toLowerCase(), (new ya("^(?:about|app|app-storage|.+-extension|file|res|widget):$", "")).match(a) && (d = null != c.response ? 200 : 404));
                                void 0 == d && (d = null);
                                if (null != d) b.onStatus(d);
                                if (null != d && 200 <= d && 400 > d) b.req = null, b.success(bb.ofData(c.response));
                                else if (null == d || 0 == d && null == c.response) b.req = null, b.onError("Failed to connect or resolve host");
                                else if (null == d) b.req = null, d = null != c.response ? bb.ofData(c.response) : null, b.responseBytes = d, b.onError("Http Error #" +
                                    c.status);
                                else switch (d) {
                                    case 12007:
                                        b.req = null;
                                        b.onError("Unknown host");
                                        break;
                                    case 12029:
                                        b.req = null;
                                        b.onError("Failed to connect to host");
                                        break;
                                    default:
                                        b.req = null, d = null != c.response ? bb.ofData(c.response) : null, b.responseBytes = d, b.onError("Http Error #" + c.status)
                                }
                            }
                        };
                    this.async && (c.onreadystatechange = d);
                    var e = this.postBytes,
                        f = this.postData;
                    var k = null == f ? null == e ? null : new Blob([e.b.bufferValue]) : null == e ? f : null;
                    if (null != k) a = !0;
                    else
                        for (e = 0, f = this.params; e < f.length;) {
                            var p = f[e];
                            ++e;
                            k = null == k ? "" : (null ==
                                k ? "null" : I.string(k)) + "&";
                            var m = p.name;
                            k = (null == k ? "null" : I.string(k)) + encodeURIComponent(m) + "=" + encodeURIComponent(p.value)
                        }
                    try {
                        if (a) c.open("POST", this.url, this.async);
                        else if (null != k) {
                            var h = 1 >= this.url.split("?").length;
                            c.open("GET", this.url + (h ? "?" : "&") + (null == k ? "null" : I.string(k)), this.async);
                            k = null
                        } else c.open("GET", this.url, this.async);
                        c.responseType = "arraybuffer"
                    } catch (mm) {
                        Ca.lastError = mm;
                        d = F.caught(mm).unwrap();
                        this.req = null;
                        this.onError(d.toString());
                        return
                    }
                    c.withCredentials = this.withCredentials;
                    !Zg.exists(this.headers, function(a) {
                        return "Content-Type" == a.name
                    }) && a && null == this.postData && c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                    e = 0;
                    for (f = this.headers; e < f.length;) a = f[e], ++e, c.setRequestHeader(a.name, a.value);
                    c.send(k);
                    this.async || d(null)
                },
                __class__: kj
            });
            var lj = function() {
                this.size = this.pos = 0
            };
            g["haxe.io.BytesBuffer"] = lj;
            lj.__name__ = "haxe.io.BytesBuffer";
            lj.prototype = {
                addByte: function(a) {
                    this.pos == this.size && this.grow(1);
                    this.view.setUint8(this.pos++, a)
                },
                add: function(a) {
                    this.pos +
                        a.length > this.size && this.grow(a.length);
                    if (0 != this.size) {
                        var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
                        this.u8.set(b, this.pos);
                        this.pos += a.length
                    }
                },
                addBytes: function(a, b, c) {
                    if (0 > b || 0 > c || b + c > a.length) throw F.thrown(yg.OutsideBounds);
                    this.pos + c > this.size && this.grow(c);
                    0 != this.size && (a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, c), this.u8.set(a, this.pos), this.pos += c)
                },
                grow: function(a) {
                    var b = this.pos + a;
                    for (a = 0 == this.size ? 16 : this.size; a < b;) a = 3 * a >> 1;
                    b = new ArrayBuffer(a);
                    var c = new Uint8Array(b);
                    0 < this.size && c.set(this.u8);
                    this.size = a;
                    this.buffer = b;
                    this.u8 = c;
                    this.view = new DataView(this.buffer)
                },
                getBytes: function() {
                    if (0 == this.size) return new bb(new ArrayBuffer(0));
                    var a = new bb(this.buffer);
                    a.length = this.pos;
                    return a
                },
                __class__: lj
            };
            var mj = function() {};
            g["haxe.io.Input"] = mj;
            mj.__name__ = "haxe.io.Input";
            mj.prototype = {
                readByte: function() {
                    throw F.thrown("Not implemented");
                },
                readBytes: function(a, b, c) {
                    var d = c,
                        e = a.b;
                    if (0 > b || 0 > c || b + c > a.length) throw F.thrown(yg.OutsideBounds);
                    try {
                        for (; 0 < d;) e[b] = this.readByte(),
                            ++b, --d
                    } catch (f) {
                        if (Ca.lastError = f, !(F.caught(f).unwrap() instanceof Dh)) throw f;
                    }
                    return c - d
                },
                readFullBytes: function(a, b, c) {
                    for (; 0 < c;) {
                        var d = this.readBytes(a, b, c);
                        if (0 == d) throw F.thrown(yg.Blocked);
                        b += d;
                        c -= d
                    }
                },
                read: function(a) {
                    for (var b = new bb(new ArrayBuffer(a)), c = 0; 0 < a;) {
                        var d = this.readBytes(b, c, a);
                        if (0 == d) throw F.thrown(yg.Blocked);
                        c += d;
                        a -= d
                    }
                    return b
                },
                readInt16: function() {
                    var a = this.readByte(),
                        b = this.readByte();
                    a = this.bigEndian ? b | a << 8 : a | b << 8;
                    return 0 != (a & 32768) ? a - 65536 : a
                },
                readUInt16: function() {
                    var a =
                        this.readByte(),
                        b = this.readByte();
                    return this.bigEndian ? b | a << 8 : a | b << 8
                },
                readInt32: function() {
                    var a = this.readByte(),
                        b = this.readByte(),
                        c = this.readByte(),
                        d = this.readByte();
                    return this.bigEndian ? d | c << 8 | b << 16 | a << 24 : a | b << 8 | c << 16 | d << 24
                },
                readString: function(a, b) {
                    var c = new bb(new ArrayBuffer(a));
                    this.readFullBytes(c, 0, a);
                    return c.getString(0, a, b)
                },
                __class__: mj
            };
            var nj = function(a, b, c) {
                null == b && (b = 0);
                null == c && (c = a.length - b);
                if (0 > b || 0 > c || b + c > a.length) throw F.thrown(yg.OutsideBounds);
                this.b = a.b;
                this.pos = b;
                this.totlen =
                    this.len = c
            };
            g["haxe.io.BytesInput"] = nj;
            nj.__name__ = "haxe.io.BytesInput";
            nj.__super__ = mj;
            nj.prototype = n(mj.prototype, {
                readByte: function() {
                    if (0 == this.len) throw F.thrown(new Dh);
                    this.len--;
                    return this.b[this.pos++]
                },
                readBytes: function(a, b, c) {
                    if (0 > b || 0 > c || b + c > a.length) throw F.thrown(yg.OutsideBounds);
                    if (0 == this.len && 0 < c) throw F.thrown(new Dh);
                    this.len < c && (c = this.len);
                    var d = this.b;
                    a = a.b;
                    for (var e = 0, f = c; e < f;) {
                        var k = e++;
                        a[b + k] = d[this.pos + k]
                    }
                    this.pos += c;
                    this.len -= c;
                    return c
                },
                __class__: nj
            });
            var Am = w["haxe.io.Encoding"] = {
                    __ename__: "haxe.io.Encoding",
                    __constructs__: ["UTF8", "RawNative"],
                    UTF8: {
                        _hx_index: 0,
                        __enum__: "haxe.io.Encoding",
                        toString: h
                    },
                    RawNative: {
                        _hx_index: 1,
                        __enum__: "haxe.io.Encoding",
                        toString: h
                    }
                },
                Dh = function() {};
            g["haxe.io.Eof"] = Dh;
            Dh.__name__ = "haxe.io.Eof";
            Dh.prototype = {
                toString: function() {
                    return "Eof"
                },
                __class__: Dh
            };
            var yg = w["haxe.io.Error"] = {
                    __ename__: "haxe.io.Error",
                    __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"],
                    Blocked: {
                        _hx_index: 0,
                        __enum__: "haxe.io.Error",
                        toString: h
                    },
                    Overflow: {
                        _hx_index: 1,
                        __enum__: "haxe.io.Error",
                        toString: h
                    },
                    OutsideBounds: {
                        _hx_index: 2,
                        __enum__: "haxe.io.Error",
                        toString: h
                    },
                    Custom: (x = function(a) {
                        return {
                            _hx_index: 3,
                            e: a,
                            __enum__: "haxe.io.Error",
                            toString: h
                        }
                    }, x.__params__ = ["e"], x)
                },
                Vf = function(a) {
                    switch (a) {
                        case ".":
                        case "..":
                            this.dir = a;
                            this.file = "";
                            return
                    }
                    var b = a.lastIndexOf("/"),
                        c = a.lastIndexOf("\\");
                    b < c ? (this.dir = Y.substr(a, 0, c), a = Y.substr(a, c + 1, null), this.backslash = !0) : c < b ? (this.dir = Y.substr(a, 0, b), a = Y.substr(a, b + 1, null)) : this.dir = null;
                    b = a.lastIndexOf("."); - 1 != b ? (this.ext =
                        Y.substr(a, b + 1, null), this.file = Y.substr(a, 0, b)) : (this.ext = null, this.file = a)
                };
            g["haxe.io.Path"] = Vf;
            Vf.__name__ = "haxe.io.Path";
            Vf.directory = function(a) {
                a = new Vf(a);
                return null == a.dir ? "" : a.dir
            };
            Vf.prototype = {
                __class__: Vf
            };
            var Je = function(a) {
                this.current = 0;
                this.array = a
            };
            g["haxe.iterators.ArrayIterator"] = Je;
            Je.__name__ = "haxe.iterators.ArrayIterator";
            Je.prototype = {
                hasNext: function() {
                    return this.current < this.array.length
                },
                next: function() {
                    return this.array[this.current++]
                },
                __class__: Je
            };
            var qk = function(a) {
                this.map =
                    a;
                this.keys = a.keys()
            };
            g["haxe.iterators.MapKeyValueIterator"] = qk;
            qk.__name__ = "haxe.iterators.MapKeyValueIterator";
            qk.prototype = {
                hasNext: function() {
                    return this.keys.hasNext()
                },
                next: function() {
                    var a = this.keys.next();
                    return {
                        value: this.map.get(a),
                        key: a
                    }
                },
                __class__: qk
            };
            var Xa = {
                    resolve: function(a, b) {
                        var c = a.elementsNamed(b).next();
                        if (null == c) {
                            if (a.nodeType == S.Document) a = "Document";
                            else {
                                if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                                a = a.nodeName
                            }
                            throw F.thrown(a + " is missing element " + b);
                        }
                        if (c.nodeType != S.Document && c.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                        return c
                    }
                },
                Lb = {
                    resolve: function(a, b) {
                        if (a.nodeType == S.Document) throw F.thrown("Cannot access document attribute " + b);
                        var c = a.get(b);
                        if (null == c) {
                            if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            throw F.thrown(a.nodeName + " is missing attribute " +
                                b);
                        }
                        return c
                    }
                },
                Db = {
                    resolve: function(a, b) {
                        if (a.nodeType == S.Document) throw F.thrown("Cannot access document attribute " + b);
                        return a.exists(b)
                    }
                },
                Fa = {
                    resolve: function(a, b) {
                        return a.elementsNamed(b).hasNext()
                    }
                },
                tb = {
                    resolve: function(a, b) {
                        var c = [];
                        for (b = a.elementsNamed(b); b.hasNext();) {
                            a = b.next();
                            if (a.nodeType != S.Document && a.nodeType != S.Element) throw F.thrown("Invalid nodeType " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            c.push(a)
                        }
                        return c
                    }
                },
                ic = function(a, b, c) {
                    this.xml = b;
                    this.message = a;
                    this.position =
                        c;
                    this.lineNumber = 1;
                    for (a = this.positionAtLine = 0; a < c;) {
                        var d = a++;
                        d = b.charCodeAt(d);
                        10 == d ? (this.lineNumber++, this.positionAtLine = 0) : 13 != d && this.positionAtLine++
                    }
                };
            g["haxe.xml.XmlParserException"] = ic;
            ic.__name__ = "haxe.xml.XmlParserException";
            ic.prototype = {
                toString: function() {
                    return oa.getClass(this).__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine
                },
                __class__: ic
            };
            var sf = function() {};
            g["haxe.xml.Parser"] = sf;
            sf.__name__ = "haxe.xml.Parser";
            sf.parse = function(a, b) {
                null == b &&
                    (b = !1);
                var c = S.createDocument();
                sf.doParse(a, b, 0, c);
                return c
            };
            sf.doParse = function(a, b, c, d) {
                null == c && (c = 0);
                for (var e = null, f = 1, k = 1, p = null, m = 0, h = 0, g = 0, l = a.charCodeAt(c), q = new Oe, n = 1, r = -1; l == l;) {
                    switch (f) {
                        case 0:
                            switch (l) {
                                case 9:
                                case 10:
                                case 13:
                                case 32:
                                    break;
                                default:
                                    f = k;
                                    continue
                            }
                            break;
                        case 1:
                            if (60 == l) f = 0, k = 2;
                            else {
                                m = c;
                                f = 13;
                                continue
                            }
                            break;
                        case 2:
                            switch (l) {
                                case 33:
                                    if (91 == a.charCodeAt(c + 1)) {
                                        c += 2;
                                        if ("CDATA[" != Y.substr(a, c, 6).toUpperCase()) throw F.thrown(new ic("Expected <![CDATA[", a, c));
                                        c += 5;
                                        f = 17
                                    } else if (68 ==
                                        a.charCodeAt(c + 1) || 100 == a.charCodeAt(c + 1)) {
                                        if ("OCTYPE" != Y.substr(a, c + 2, 6).toUpperCase()) throw F.thrown(new ic("Expected <!DOCTYPE", a, c));
                                        c += 8;
                                        f = 16
                                    } else {
                                        if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2)) throw F.thrown(new ic("Expected \x3c!--", a, c));
                                        c += 2;
                                        f = 15
                                    }
                                    m = c + 1;
                                    break;
                                case 47:
                                    if (null == d) throw F.thrown(new ic("Expected node name", a, c));
                                    m = c + 1;
                                    f = 0;
                                    k = 10;
                                    break;
                                case 63:
                                    f = 14;
                                    m = c;
                                    break;
                                default:
                                    f = 3;
                                    m = c;
                                    continue
                            }
                            break;
                        case 3:
                            if (!(97 <= l && 122 >= l || 65 <= l && 90 >= l || 48 <= l && 57 >= l || 58 == l || 46 == l || 95 == l || 45 == l)) {
                                if (c ==
                                    m) throw F.thrown(new ic("Expected node name", a, c));
                                e = S.createElement(Y.substr(a, m, c - m));
                                d.addChild(e);
                                ++h;
                                f = 0;
                                k = 4;
                                continue
                            }
                            break;
                        case 4:
                            switch (l) {
                                case 47:
                                    f = 11;
                                    break;
                                case 62:
                                    f = 9;
                                    break;
                                default:
                                    f = 5;
                                    m = c;
                                    continue
                            }
                            break;
                        case 5:
                            if (!(97 <= l && 122 >= l || 65 <= l && 90 >= l || 48 <= l && 57 >= l || 58 == l || 46 == l || 95 == l || 45 == l)) {
                                if (m == c) throw F.thrown(new ic("Expected attribute name", a, c));
                                p = Y.substr(a, m, c - m);
                                if (e.exists(p)) throw F.thrown(new ic("Duplicate attribute [" + p + "]", a, c));
                                f = 0;
                                k = 6;
                                continue
                            }
                            break;
                        case 6:
                            if (61 == l) f = 0, k = 7;
                            else throw F.thrown(new ic("Expected =",
                                a, c));
                            break;
                        case 7:
                            switch (l) {
                                case 34:
                                case 39:
                                    q = new Oe;
                                    f = 8;
                                    m = c + 1;
                                    r = l;
                                    break;
                                default:
                                    throw F.thrown(new ic('Expected "', a, c));
                            }
                            break;
                        case 8:
                            switch (l) {
                                case 38:
                                    n = c - m;
                                    q.b += null == n ? Y.substr(a, m, null) : Y.substr(a, m, n);
                                    f = 18;
                                    n = 8;
                                    m = c + 1;
                                    break;
                                case 60:
                                case 62:
                                    if (b) throw F.thrown(new ic("Invalid unescaped " + String.fromCodePoint(l) + " in attribute value", a, c));
                                    l == r && (k = c - m, q.b += null == k ? Y.substr(a, m, null) : Y.substr(a, m, k), k = q.b, q = new Oe, e.set(p, k), f = 0, k = 4);
                                    break;
                                default:
                                    l == r && (k = c - m, q.b += null == k ? Y.substr(a, m, null) :
                                        Y.substr(a, m, k), k = q.b, q = new Oe, e.set(p, k), f = 0, k = 4)
                            }
                            break;
                        case 9:
                            m = c = sf.doParse(a, b, c, e);
                            f = 1;
                            break;
                        case 10:
                            if (!(97 <= l && 122 >= l || 65 <= l && 90 >= l || 48 <= l && 57 >= l || 58 == l || 46 == l || 95 == l || 45 == l)) {
                                if (m == c) throw F.thrown(new ic("Expected node name", a, c));
                                k = Y.substr(a, m, c - m);
                                if (null == d || 0 != d.nodeType) throw F.thrown(new ic("Unexpected </" + k + ">, tag is not open", a, c));
                                if (d.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" : Va.toString(d.nodeType)));
                                if (k != d.nodeName) {
                                    if (d.nodeType !=
                                        S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" : Va.toString(d.nodeType)));
                                    throw F.thrown(new ic("Expected </" + d.nodeName + ">", a, c));
                                }
                                f = 0;
                                k = 12;
                                continue
                            }
                            break;
                        case 11:
                            if (62 == l) f = 1;
                            else throw F.thrown(new ic("Expected >", a, c));
                            break;
                        case 12:
                            if (62 == l) return 0 == h && d.addChild(S.createPCData("")), c;
                            throw F.thrown(new ic("Expected >", a, c));
                        case 13:
                            60 == l ? (k = c - m, q.b += null == k ? Y.substr(a, m, null) : Y.substr(a, m, k), k = S.createPCData(q.b), q = new Oe, d.addChild(k), ++h, f = 0,
                                k = 2) : 38 == l && (n = c - m, q.b += null == n ? Y.substr(a, m, null) : Y.substr(a, m, n), f = 18, n = 13, m = c + 1);
                            break;
                        case 14:
                            63 == l && 62 == a.charCodeAt(c + 1) && (++c, l = Y.substr(a, m + 1, c - m - 2), d.addChild(S.createProcessingInstruction(l)), ++h, f = 1);
                            break;
                        case 15:
                            45 == l && 45 == a.charCodeAt(c + 1) && 62 == a.charCodeAt(c + 2) && (d.addChild(S.createComment(Y.substr(a, m, c - m))), ++h, c += 2, f = 1);
                            break;
                        case 16:
                            91 == l ? ++g : 93 == l ? --g : 62 == l && 0 == g && (d.addChild(S.createDocType(Y.substr(a, m, c - m))), ++h, f = 1);
                            break;
                        case 17:
                            93 == l && 93 == a.charCodeAt(c + 1) && 62 == a.charCodeAt(c +
                                2) && (l = S.createCData(Y.substr(a, m, c - m)), d.addChild(l), ++h, c += 2, f = 1);
                            break;
                        case 18:
                            if (59 == l) {
                                m = Y.substr(a, m, c - m);
                                if (35 == m.charCodeAt(0)) m = 120 == m.charCodeAt(1) ? I.parseInt("0" + Y.substr(m, 1, m.length - 1)) : I.parseInt(Y.substr(m, 1, m.length - 1)), q.b += String.fromCodePoint(m);
                                else if (Object.prototype.hasOwnProperty.call(sf.escapes.h, m)) q.b += I.string(sf.escapes.h[m]);
                                else {
                                    if (b) throw F.thrown(new ic("Undefined entity: " + m, a, c));
                                    q.b += I.string("&" + m + ";")
                                }
                                m = c + 1;
                                f = n
                            } else if (!(97 <= l && 122 >= l || 65 <= l && 90 >= l || 48 <= l && 57 >=
                                    l || 58 == l || 46 == l || 95 == l || 45 == l) && 35 != l) {
                                if (b) throw F.thrown(new ic("Invalid character in entity: " + String.fromCodePoint(l), a, c));
                                q.b += String.fromCodePoint(38);
                                l = c - m;
                                q.b += null == l ? Y.substr(a, m, null) : Y.substr(a, m, l);
                                --c;
                                m = c + 1;
                                f = n
                            }
                    }
                    l = a.charCodeAt(++c)
                }
                1 == f && (m = c, f = 13);
                if (13 == f) {
                    if (0 == d.nodeType) {
                        if (d.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" : Va.toString(d.nodeType)));
                        throw F.thrown(new ic("Unclosed node <" + d.nodeName + ">", a, c));
                    }
                    if (c != m || 0 ==
                        h) n = c - m, q.b += null == n ? Y.substr(a, m, null) : Y.substr(a, m, n), d.addChild(S.createPCData(q.b));
                    return c
                }
                if (!b && 18 == f && 13 == n) return q.b += String.fromCodePoint(38), n = c - m, q.b += null == n ? Y.substr(a, m, null) : Y.substr(a, m, n), d.addChild(S.createPCData(q.b)), c;
                throw F.thrown(new ic("Unexpected end", a, c));
            };
            var tf = function(a) {
                this.output = new Oe;
                this.pretty = a
            };
            g["haxe.xml.Printer"] = tf;
            tf.__name__ = "haxe.xml.Printer";
            tf.print = function(a, b) {
                null == b && (b = !1);
                b = new tf(b);
                b.writeNode(a, "");
                return b.output.b
            };
            tf.prototype = {
                writeNode: function(a,
                    b) {
                    switch (a.nodeType) {
                        case 0:
                            this.output.b += I.string(b + "<");
                            if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            this.output.b += I.string(a.nodeName);
                            for (var c = a.attributes(); c.hasNext();) {
                                var d = c.next();
                                this.output.b += I.string(" " + d + '="');
                                d = K.htmlEscape(a.get(d), !0);
                                this.output.b += I.string(d);
                                this.output.b += '"'
                            }
                            if (this.hasChildren(a)) {
                                this.output.b += ">";
                                this.pretty && (this.output.b += "\n");
                                if (a.nodeType != S.Document &&
                                    a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                                c = 0;
                                for (d = a.children; c < d.length;) {
                                    var e = d[c++];
                                    this.writeNode(e, this.pretty ? b + "\t" : b)
                                }
                                this.output.b += I.string(b + "</");
                                if (a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                                this.output.b += I.string(a.nodeName);
                                this.output.b += ">"
                            } else this.output.b += "/>";
                            this.pretty && (this.output.b +=
                                "\n");
                            break;
                        case 1:
                            if (a.nodeType == S.Document || a.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            a = a.nodeValue;
                            0 != a.length && (d = b + K.htmlEscape(a), this.output.b += I.string(d), this.pretty && (this.output.b += "\n"));
                            break;
                        case 2:
                            this.output.b += I.string(b + "<![CDATA[");
                            if (a.nodeType == S.Document || a.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            this.output.b += I.string(a.nodeValue);
                            this.output.b += "]]\x3e";
                            this.pretty && (this.output.b += "\n");
                            break;
                        case 3:
                            if (a.nodeType == S.Document || a.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            a = a.nodeValue;
                            a = a.replace(/[\n\r\t]+/g, "");
                            this.output.b += null == b ? "null" : "" + b;
                            d = K.trim("\x3c!--" + a + "--\x3e");
                            this.output.b += I.string(d);
                            this.pretty && (this.output.b += "\n");
                            break;
                        case 4:
                            if (a.nodeType == S.Document || a.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ?
                                "null" : Va.toString(a.nodeType)));
                            this.output.b += I.string("<!DOCTYPE " + a.nodeValue + ">");
                            this.pretty && (this.output.b += "\n");
                            break;
                        case 5:
                            if (a.nodeType == S.Document || a.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                            this.output.b += I.string("<?" + a.nodeValue + "?>");
                            this.pretty && (this.output.b += "\n");
                            break;
                        case 6:
                            if (a.nodeType != S.Document && a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null ==
                                a.nodeType ? "null" : Va.toString(a.nodeType)));
                            c = 0;
                            for (d = a.children; c < d.length;) e = d[c++], this.writeNode(e, b)
                    }
                },
                hasChildren: function(a) {
                    if (a.nodeType != S.Document && a.nodeType != S.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == a.nodeType ? "null" : Va.toString(a.nodeType)));
                    var b = 0;
                    for (a = a.children; b < a.length;) {
                        var c = a[b++];
                        switch (c.nodeType) {
                            case 0:
                            case 1:
                                return !0;
                            case 2:
                            case 3:
                                if (c.nodeType == S.Document || c.nodeType == S.Element) throw F.thrown("Bad node type, unexpected " +
                                    (null == c.nodeType ? "null" : Va.toString(c.nodeType)));
                                if (0 != K.ltrim(c.nodeValue).length) return !0
                        }
                    }
                    return !1
                },
                __class__: tf
            };
            var Sl = w["haxe.zip.ExtraField"] = {
                    __ename__: "haxe.zip.ExtraField",
                    __constructs__: ["FUnknown", "FInfoZipUnicodePath", "FUtf8"],
                    FUnknown: (x = function(a, b) {
                        return {
                            _hx_index: 0,
                            tag: a,
                            bytes: b,
                            __enum__: "haxe.zip.ExtraField",
                            toString: h
                        }
                    }, x.__params__ = ["tag", "bytes"], x),
                    FInfoZipUnicodePath: (x = function(a, b) {
                        return {
                            _hx_index: 1,
                            name: a,
                            crc: b,
                            __enum__: "haxe.zip.ExtraField",
                            toString: h
                        }
                    }, x.__params__ = ["name", "crc"], x),
                    FUtf8: {
                        _hx_index: 2,
                        __enum__: "haxe.zip.ExtraField",
                        toString: h
                    }
                },
                Wf = w["haxe.zip.Huffman"] = {
                    __ename__: "haxe.zip.Huffman",
                    __constructs__: ["Found", "NeedBit", "NeedBits"],
                    Found: (x = function(a) {
                        return {
                            _hx_index: 0,
                            i: a,
                            __enum__: "haxe.zip.Huffman",
                            toString: h
                        }
                    }, x.__params__ = ["i"], x),
                    NeedBit: (x = function(a, b) {
                        return {
                            _hx_index: 1,
                            left: a,
                            right: b,
                            __enum__: "haxe.zip.Huffman",
                            toString: h
                        }
                    }, x.__params__ = ["left", "right"], x),
                    NeedBits: (x = function(a, b) {
                        return {
                            _hx_index: 2,
                            n: a,
                            table: b,
                            __enum__: "haxe.zip.Huffman",
                            toString: h
                        }
                    }, x.__params__ = ["n", "table"], x)
                },
                Wk = function() {};
            g["haxe.zip.HuffTools"] = Wk;
            Wk.__name__ = "haxe.zip.HuffTools";
            Wk.prototype = {
                treeDepth: function(a) {
                    switch (a._hx_index) {
                        case 0:
                            return 0;
                        case 1:
                            var b = a.right;
                            a = this.treeDepth(a.left);
                            b = this.treeDepth(b);
                            return 1 + (a < b ? a : b);
                        case 2:
                            throw F.thrown("assert");
                    }
                },
                treeCompress: function(a) {
                    var b = this.treeDepth(a);
                    if (0 == b) return a;
                    if (1 == b) {
                        if (1 == a._hx_index) return b = a.right, Wf.NeedBit(this.treeCompress(a.left), this.treeCompress(b));
                        throw F.thrown("assert");
                    }
                    for (var c = [], d = 0, e = 1 << b; d < e;) d++, c.push(Wf.Found(-1));
                    this.treeWalk(c, 0, 0, b, a);
                    return Wf.NeedBits(b, c)
                },
                treeWalk: function(a, b, c, d, e) {
                    if (1 == e._hx_index) {
                        var f = e.right,
                            k = e.left;
                        0 < d ? (this.treeWalk(a, b, c + 1, d - 1, k), this.treeWalk(a, b | 1 << c, c + 1, d - 1, f)) : a[b] = this.treeCompress(e)
                    } else a[b] = this.treeCompress(e)
                },
                treeMake: function(a, b, c, d) {
                    if (d > b) throw F.thrown("Invalid huffman");
                    var e = c << 5 | d;
                    if (a.h.hasOwnProperty(e)) return Wf.Found(a.h[e]);
                    c <<= 1;
                    ++d;
                    return Wf.NeedBit(this.treeMake(a, b, c, d), this.treeMake(a, b,
                        c | 1, d))
                },
                make: function(a, b, c, d) {
                    if (1 == c) return Wf.NeedBit(Wf.Found(0), Wf.Found(0));
                    var e = [],
                        f = [];
                    if (32 < d) throw F.thrown("Invalid huffman");
                    for (var k = 0, p = d; k < p;) k++, e.push(0), f.push(0);
                    k = 0;
                    for (p = c; k < p;) {
                        var m = k++;
                        m = a[m + b];
                        if (m >= d) throw F.thrown("Invalid huffman");
                        e[m]++
                    }
                    var h = 0;
                    k = 1;
                    for (p = d - 1; k < p;) m = k++, h = h + e[m] << 1, f[m] = h;
                    e = new Tb;
                    k = 0;
                    for (p = c; k < p;) m = k++, c = a[m + b], 0 != c && (h = f[c - 1], f[c - 1] = h + 1, e.h[h << 5 | c] = m);
                    return this.treeCompress(Wf.NeedBit(this.treeMake(e, d, 0, 1), this.treeMake(e, d, 1, 1)))
                },
                __class__: Wk
            };
            var Xk = function(a) {
                this.buffer = new bb(new ArrayBuffer(65536));
                this.pos = 0;
                a && (this.crc = new Cg)
            };
            g["haxe.zip._InflateImpl.Window"] = Xk;
            Xk.__name__ = "haxe.zip._InflateImpl.Window";
            Xk.prototype = {
                slide: function() {
                    null != this.crc && this.crc.update(this.buffer, 0, 32768);
                    var a = new bb(new ArrayBuffer(65536));
                    this.pos -= 32768;
                    a.blit(0, this.buffer, 32768, this.pos);
                    this.buffer = a
                },
                addBytes: function(a, b, c) {
                    65536 < this.pos + c && this.slide();
                    this.buffer.blit(this.pos, a, b, c);
                    this.pos += c
                },
                addByte: function(a) {
                    65536 == this.pos &&
                        this.slide();
                    this.buffer.b[this.pos] = a & 255;
                    this.pos++
                },
                getLastChar: function() {
                    return this.buffer.b[this.pos - 1]
                },
                available: function() {
                    return this.pos
                },
                checksum: function() {
                    null != this.crc && this.crc.update(this.buffer, 0, this.pos);
                    return this.crc
                },
                __class__: Xk
            };
            var qd = w["haxe.zip._InflateImpl.State"] = {
                    __ename__: "haxe.zip._InflateImpl.State",
                    __constructs__: "Head Block CData Flat Crc Dist DistOne Done".split(" "),
                    Head: {
                        _hx_index: 0,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    Block: {
                        _hx_index: 1,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    CData: {
                        _hx_index: 2,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    Flat: {
                        _hx_index: 3,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    Crc: {
                        _hx_index: 4,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    Dist: {
                        _hx_index: 5,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    DistOne: {
                        _hx_index: 6,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    },
                    Done: {
                        _hx_index: 7,
                        __enum__: "haxe.zip._InflateImpl.State",
                        toString: h
                    }
                },
                Ic = function(a, b, c) {
                    null == c && (c = !0);
                    null == b && (b = !0);
                    this.isFinal = !1;
                    this.htools =
                        new Wk;
                    this.huffman = this.buildFixedHuffman();
                    this.huffdist = null;
                    this.dist = this.len = 0;
                    this.state = b ? qd.Head : qd.Block;
                    this.input = a;
                    this.needed = this.nbits = this.bits = 0;
                    this.output = null;
                    this.outpos = 0;
                    this.lengths = [];
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.lengths.push(-1);
                    this.window = new Xk(c)
                };
            g["haxe.zip.InflateImpl"] = Ic;
            Ic.__name__ = "haxe.zip.InflateImpl";
            Ic.prototype = {
                buildFixedHuffman: function() {
                    if (null != Ic.FIXED_HUFFMAN) return Ic.FIXED_HUFFMAN;
                    for (var a = [], b = 0; 288 > b;) {
                        var c = b++;
                        a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8)
                    }
                    Ic.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
                    return Ic.FIXED_HUFFMAN
                },
                readBytes: function(a, b, c) {
                    this.needed = c;
                    this.outpos = b;
                    this.output = a;
                    if (0 < c)
                        for (; this.inflateLoop(););
                    return c - this.needed
                },
                getBits: function(a) {
                    for (; this.nbits < a;) this.bits |= this.input.readByte() << this.nbits, this.nbits += 8;
                    var b = this.bits & (1 << a) - 1;
                    this.nbits -= a;
                    this.bits >>= a;
                    return b
                },
                getBit: function() {
                    0 == this.nbits && (this.nbits = 8, this.bits = this.input.readByte());
                    var a = 1 == (this.bits & 1);
                    this.nbits--;
                    this.bits >>= 1;
                    return a
                },
                getRevBits: function(a) {
                    return 0 == a ? 0 : this.getBit() ? 1 << a - 1 | this.getRevBits(a - 1) : this.getRevBits(a - 1)
                },
                resetBits: function() {
                    this.nbits = this.bits = 0
                },
                addBytes: function(a, b, c) {
                    this.window.addBytes(a, b, c);
                    this.output.blit(this.outpos, a, b, c);
                    this.needed -= c;
                    this.outpos += c
                },
                addByte: function(a) {
                    this.window.addByte(a);
                    this.output.b[this.outpos] = a & 255;
                    this.needed--;
                    this.outpos++
                },
                addDistOne: function(a) {
                    for (var b = this.window.getLastChar(), c = 0; c < a;) c++, this.addByte(b)
                },
                addDist: function(a, b) {
                    this.addBytes(this.window.buffer, this.window.pos - a, b)
                },
                applyHuffman: function(a) {
                    switch (a._hx_index) {
                        case 0:
                            return a = a.i;
                        case 1:
                            var b = a.right;
                            a = a.left;
                            return this.applyHuffman(this.getBit() ?
                                b : a);
                        case 2:
                            return b = a.table, a = a.n, this.applyHuffman(b[this.getBits(a)])
                    }
                },
                inflateLengths: function(a, b) {
                    for (var c = 0, d = 0; c < b;) {
                        var e = this.applyHuffman(this.huffman);
                        switch (e) {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                                d = e;
                                a[c] = e;
                                ++c;
                                break;
                            case 16:
                                e = c + 3 + this.getBits(2);
                                if (e > b) throw F.thrown("Invalid data");
                                for (; c < e;) a[c] = d, ++c;
                                break;
                            case 17:
                                c += 3 + this.getBits(3);
                                if (c > b) throw F.thrown("Invalid data");
                                break;
                            case 18:
                                c += 11 + this.getBits(7);
                                if (c > b) throw F.thrown("Invalid data");
                                break;
                            default:
                                throw F.thrown("Invalid data");
                        }
                    }
                },
                inflateLoop: function() {
                    switch (this.state._hx_index) {
                        case 0:
                            var a = this.input.readByte();
                            if (8 != (a & 15)) throw F.thrown("Invalid data");
                            var b = this.input.readByte(),
                                c = 0 != (b & 32);
                            if (0 != ((a << 8) + b) % 31) throw F.thrown("Invalid data");
                            if (c) throw F.thrown("Unsupported dictionary");
                            this.state = qd.Block;
                            return !0;
                        case 1:
                            switch (this.isFinal = this.getBit(), this.getBits(2)) {
                                case 0:
                                    this.len = this.input.readUInt16();
                                    if (this.input.readUInt16() !=
                                        65535 - this.len) throw F.thrown("Invalid data");
                                    this.state = qd.Flat;
                                    a = this.inflateLoop();
                                    this.resetBits();
                                    return a;
                                case 1:
                                    return this.huffman = this.buildFixedHuffman(), this.huffdist = null, this.state = qd.CData, !0;
                                case 2:
                                    a = this.getBits(5) + 257;
                                    b = this.getBits(5) + 1;
                                    var d = this.getBits(4) + 4;
                                    c = 0;
                                    for (var e = d; c < e;) {
                                        var f = c++;
                                        this.lengths[Ic.CODE_LENGTHS_POS[f]] = this.getBits(3)
                                    }
                                    c = d;
                                    for (e = 19; c < e;) f = c++, this.lengths[Ic.CODE_LENGTHS_POS[f]] = 0;
                                    this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                                    d = [];
                                    c = 0;
                                    for (e = a + b; c < e;) c++,
                                        d.push(0);
                                    this.inflateLengths(d, a + b);
                                    this.huffdist = this.htools.make(d, a, b, 16);
                                    this.huffman = this.htools.make(d, 0, a, 16);
                                    this.state = qd.CData;
                                    return !0;
                                default:
                                    throw F.thrown("Invalid data");
                            }
                        case 2:
                            b = this.applyHuffman(this.huffman);
                            if (256 > b) return this.addByte(b), 0 < this.needed;
                            if (256 == b) this.state = this.isFinal ? qd.Crc : qd.Block;
                            else {
                                b -= 257;
                                a = Ic.LEN_EXTRA_BITS_TBL[b];
                                if (-1 == a) throw F.thrown("Invalid data");
                                this.len = Ic.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                                b = null == this.huffdist ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
                                a = Ic.DIST_EXTRA_BITS_TBL[b];
                                if (-1 == a) throw F.thrown("Invalid data");
                                this.dist = Ic.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                                if (this.dist > this.window.available()) throw F.thrown("Invalid data");
                                this.state = 1 == this.dist ? qd.DistOne : qd.Dist
                            }
                            return !0;
                        case 3:
                            return a = this.len < this.needed ? this.len : this.needed, b = this.input.read(a), this.len -= a, this.addBytes(b, 0, a), 0 == this.len && (this.state = this.isFinal ? qd.Crc : qd.Block), 0 < this.needed;
                        case 4:
                            a = this.window.checksum();
                            if (null == a) return this.state = qd.Done, !0;
                            b = Cg.read(this.input);
                            if (!a.equals(b)) throw F.thrown("Invalid CRC");
                            this.state = qd.Done;
                            return !0;
                        case 5:
                            for (; 0 < this.len && 0 < this.needed;) a = this.len < this.dist ? this.len : this.dist, a = this.needed < a ? this.needed : a, this.addDist(this.dist, a), this.len -= a;
                            0 == this.len && (this.state = qd.CData);
                            return 0 < this.needed;
                        case 6:
                            return a = this.len < this.needed ? this.len : this.needed, this.addDistOne(a), this.len -= a, 0 == this.len && (this.state = qd.CData), 0 < this.needed;
                        case 7:
                            return !1
                    }
                },
                __class__: Ic
            };
            var Eh = function(a) {
                this.i = a
            };
            g["haxe.zip.Reader"] = Eh;
            Eh.__name__ =
                "haxe.zip.Reader";
            Eh.readZip = function(a) {
                return (new Eh(a)).read()
            };
            Eh.prototype = {
                readZipDate: function() {
                    var a = this.i.readUInt16(),
                        b = a >> 11 & 31,
                        c = a >> 5 & 63;
                    a &= 31;
                    var d = this.i.readUInt16();
                    return new Date((d >> 9) + 1980, (d >> 5 & 15) - 1, d & 31, b, c, a << 1)
                },
                readExtraFields: function(a) {
                    for (var b = new Wa; 0 < a;) {
                        if (4 > a) throw F.thrown("Invalid extra fields data");
                        var c = this.i.readUInt16(),
                            d = this.i.readUInt16();
                        if (a < d) throw F.thrown("Invalid extra fields data");
                        if (28789 == c) {
                            var e = this.i.readByte();
                            if (1 != e) {
                                var f = new lj;
                                f.addByte(e);
                                f.add(this.i.read(d - 1));
                                b.add(Sl.FUnknown(c, f.getBytes()))
                            } else c = this.i.readInt32(), e = this.i.read(d - 5).toString(), b.add(Sl.FInfoZipUnicodePath(e, c))
                        } else b.add(Sl.FUnknown(c, this.i.read(d)));
                        a -= 4 + d
                    }
                    return b
                },
                readEntryHeader: function() {
                    var a = this.i,
                        b = a.readInt32();
                    if (33639248 == b || 101010256 == b) return null;
                    if (67324752 != b) throw F.thrown("Invalid Zip Data");
                    a.readUInt16();
                    b = a.readUInt16();
                    var c = 0 != (b & 2048),
                        d = a.readUInt16(),
                        e = 0 != d;
                    if (e && 8 != d) throw F.thrown("Unsupported compression " + d);
                    d = this.readZipDate();
                    var f = a.readInt32(),
                        k = a.readInt32(),
                        p = a.readInt32(),
                        m = a.readInt16(),
                        h = a.readInt16();
                    a = a.readString(m);
                    h = this.readExtraFields(h);
                    c && h.push(Sl.FUtf8);
                    0 != (b & 8) && (k = -1);
                    return {
                        fileName: a,
                        fileSize: p,
                        fileTime: d,
                        compressed: e,
                        dataSize: k,
                        data: null,
                        crc32: f,
                        extraFields: h
                    }
                },
                read: function() {
                    for (var a = new Wa, b = null;;) {
                        var c = this.readEntryHeader();
                        if (null == c) break;
                        if (0 > c.dataSize) {
                            null == b && (b = new bb(new ArrayBuffer(65536)));
                            for (var d = new lj, e = new Ic(this.i, !1, !1);;) {
                                var f = e.readBytes(b, 0, 65536);
                                d.addBytes(b, 0, f);
                                if (65536 > f) break
                            }
                            c.data = d.getBytes();
                            c.crc32 = this.i.readInt32();
                            134695760 == c.crc32 && (c.crc32 = this.i.readInt32());
                            c.dataSize = this.i.readInt32();
                            c.fileSize = this.i.readInt32();
                            c.dataSize = c.fileSize;
                            c.compressed = !1
                        } else c.data = this.i.read(c.dataSize);
                        a.add(c)
                    }
                    return a
                },
                __class__: Eh
            };
            var oj = function() {};
            g["io.newgrounds.ICallable"] = oj;
            oj.__name__ = "io.newgrounds.ICallable";
            oj.__isInterface__ = !0;
            oj.prototype = {
                __class__: oj
            };
            var hf = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = !1);
                this._core = a;
                this.component =
                    b;
                this._requireSession = c;
                this._isSecure = d && null != a.encryptionHandler
            };
            g["io.newgrounds.Call"] = hf;
            hf.__name__ = "io.newgrounds.Call";
            hf.__interfaces__ = [oj];
            hf.prototype = {
                addProperty: function(a, b) {
                    null == this._properties && (this._properties = new aa);
                    this._properties.h[a] = b;
                    return this
                },
                addComponentParameter: function(a, b, c) {
                    if (b == c) return this;
                    null == this._parameters && (this._parameters = new aa);
                    this._parameters.h[a] = b;
                    return this
                },
                addDataHandler: function(a) {
                    null == this._dataHandlers && (this._dataHandlers = new pj);
                    this._dataHandlers.add(a);
                    return this
                },
                addSuccessHandler: function(a) {
                    null == this._successHandlers && (this._successHandlers = new Ve);
                    this._successHandlers.add(a);
                    return this
                },
                addErrorHandler: function(a) {
                    null == this._httpErrorHandlers && (this._httpErrorHandlers = new pj);
                    this._httpErrorHandlers.add(a);
                    return this
                },
                send: function() {
                    var a = {};
                    a.app_id = this._core.appId;
                    a.call = {};
                    a.call.component = this.component;
                    this._core.debug && this.addProperty("debug", !0);
                    if (null == this._properties || !Object.prototype.hasOwnProperty.call(this._properties.h,
                            "session_id"))
                        if (null != this._core.sessionId) this.addProperty("session_id", this._core.sessionId);
                        else if (this._requireSession) {
                        this._core.logError(new Dg('cannot send "' + this.component + '" call without a sessionId'), {
                            fileName: "source/io/newgrounds/Call.hx",
                            lineNumber: 137,
                            className: "io.newgrounds.Call",
                            methodName: "send"
                        });
                        return
                    }
                    if (null != this._properties)
                        for (var b = aa.keysIterator(this._properties.h); b.hasNext();) {
                            var c = b.next();
                            a[c] = this._properties.h[c]
                        }
                    if (null != this._parameters)
                        for (a.call.parameters = {}, b = aa.keysIterator(this._parameters.h); b.hasNext();) c = b.next(), a.call.parameters[c] = this._parameters.h[c];
                    b = this._core;
                    c = "Post  - " + JSON.stringify(a);
                    b.verbose && b.log(c, {
                        fileName: "source/io/newgrounds/Call.hx",
                        lineNumber: 156,
                        className: "io.newgrounds.Call",
                        methodName: "send"
                    });
                    this._isSecure && (c = this._core.encryptionHandler(JSON.stringify(a.call)), a.call = {}, a.call.secure = c, b = this._core, b.verbose && b.log("    secure - " + c, {
                        fileName: "source/io/newgrounds/Call.hx",
                        lineNumber: 164,
                        className: "io.newgrounds.Call",
                        methodName: "send"
                    }));
                    this._core.markCallPending_io_newgrounds_Call_T(this);
                    qj.send(this._core, JSON.stringify(a), r(this, this.onData), r(this, this.onHttpError), r(this, this.onStatus))
                },
                onData: function(a) {
                    var b = this._core;
                    b.verbose && b.log("Reply - " + a, {
                        fileName: "source/io/newgrounds/Call.hx",
                        lineNumber: 180,
                        className: "io.newgrounds.Call",
                        methodName: "onData"
                    });
                    if (null != this._dataHandlers || null != this._successHandlers) a = new Yk(this._core, a), null != this._dataHandlers && this._dataHandlers.dispatch(a), a.success &&
                        a.result.success && null != this._successHandlers && this._successHandlers.dispatch(), this.destroy()
                },
                onHttpError: function(a) {
                    this._core.logError(a, {
                        fileName: "source/io/newgrounds/Call.hx",
                        lineNumber: 198,
                        className: "io.newgrounds.Call",
                        methodName: "onHttpError"
                    });
                    null != this._httpErrorHandlers && (a = new Dg(a), this._httpErrorHandlers.dispatch(a))
                },
                onStatus: function(a) {
                    null != this._statusHandlers && this._statusHandlers.dispatch(a)
                },
                destroy: function() {
                    this._statusHandlers = this._httpErrorHandlers = this._successHandlers =
                        this._dataHandlers = this._parameters = this._properties = this._core = null
                },
                __class__: hf
            };
            var Ve = function() {
                this._list = [];
                this._once = []
            };
            g["io.newgrounds.utils.Dispatcher"] = Ve;
            Ve.__name__ = "io.newgrounds.utils.Dispatcher";
            Ve.prototype = {
                add: function(a, b) {
                    null == b && (b = !1);
                    if (-1 != this._list.indexOf(a)) return b || -1 == this._once.indexOf(a) || Y.remove(this._once, a), !1;
                    this._list.unshift(a);
                    b && this._once.unshift(a);
                    return !0
                },
                dispatch: function() {
                    for (var a = this._list.length - 1; 0 <= a;) {
                        var b = this._list[a];
                        Y.remove(this._once,
                            b) && Y.remove(this._list, b);
                        b();
                        --a
                    }
                },
                __class__: Ve
            };
            var Jf = function(a, b, c) {
                null == a && (a = "test");
                this._pendingCalls = [];
                this._queuedCalls = [];
                this.appId = a;
                this.set_sessionId(b);
                this.calls = new Zk(this);
                if (null != this.sessionId) {
                    var d = r(this, this.checkInitialSession),
                        e = r(this, this.initialSessionFail);
                    this.calls.app.checkSession().addDataHandler(function(a) {
                        d(c, a)
                    }).addErrorHandler(function(a) {
                        e(c, a)
                    }).send()
                }
            };
            g["io.newgrounds.NGLite"] = Jf;
            Jf.__name__ = "io.newgrounds.NGLite";
            Jf.getSessionId = function() {
                var a =
                    window.document.location.href,
                    b = a.indexOf("?");
                if (-1 != b) {
                    var c = 0;
                    for (a = Y.substr(a, b + 1, null).split("&"); c < a.length;) {
                        var d = a[c];
                        ++c;
                        b = d.indexOf("=");
                        if (-1 != b && "ngio_session_id" == Y.substr(d, 0, b)) return Y.substr(d, b + 1, null)
                    }
                }
                return null
            };
            Jf.prototype = {
                markCallPending_io_newgrounds_Call_T: function(a) {
                    var b = this;
                    this._pendingCalls.push(a);
                    a.addDataHandler(function(c) {
                        b.onCallComplete(a)
                    });
                    a.addErrorHandler(function(c) {
                        b.onCallComplete(a)
                    })
                },
                set_sessionId: function(a) {
                    return this.sessionId = "" == a ? null : a
                },
                checkInitialSession: function(a, b) {
                    b.success && b.result.success && !b.result.data.session.expired || this.initialSessionFail(a, b.success ? b.result.error : b.error)
                },
                initialSessionFail: function(a, b) {
                    this.set_sessionId(null);
                    null != a && a(b)
                },
                onCallComplete: function(a) {
                    Y.remove(this._pendingCalls, a);
                    this.checkQueue()
                },
                checkQueue: function() {
                    0 == this._pendingCalls.length && 0 < this._queuedCalls.length && this._queuedCalls.shift().send()
                },
                log: function(a, b) {
                    kd.trace("[Newgrounds API] :: " + I.string(a), b)
                },
                logError: function(a,
                    b) {
                    this.log("Error: " + I.string(a), b)
                },
                initEncryption: function(a, b, c) {
                    null == c && (c = "base64");
                    null == b && (b = "rc4");
                    if ("none" == b) this.encryptionHandler = null;
                    else if ("rc4" == b) {
                        var d = r(this, this.encryptRc4),
                            e = c;
                        this.encryptionHandler = function(b) {
                            return d(a, e, b)
                        }
                    } else throw F.thrown("aes not yet implemented");
                },
                encryptRc4: function(a, b, c) {
                    if ("hex" == b) throw F.thrown("hex format not yet implemented");
                    a = "base64" == b ? Ue.decode(a) : null;
                    c = (new $k(a)).crypt(bb.ofString(c));
                    return "base64" == b ? Ue.encode(c) : null
                },
                __class__: Jf,
                __properties__: {
                    set_sessionId: "set_sessionId"
                }
            };
            var Ea = function(a, b, c) {
                null == a && (a = "test");
                this._session = new rj(this);
                this.onLogin = new Ve;
                this.onLogOut = new Ve;
                this.onMedalsLoaded = new Ve;
                this.onScoreBoardsLoaded = new Ve;
                this.attemptingLogin = null != b;
                Jf.call(this, a, b, c)
            };
            g["io.newgrounds.NG"] = Ea;
            Ea.__name__ = "io.newgrounds.NG";
            Ea.create = function(a, b, c) {
                null == a && (a = "test");
                Ea.core = new Ea(a, b, c);
                Ea.onCoreReady.dispatch()
            };
            Ea.createAndCheckSession = function(a, b, c) {
                null == a && (a = "test");
                var d = Jf.getSessionId();
                null == d && (d = b);
                Ea.create(a, d, c);
                Ea.core.host = Ea.getHost();
                null != Ea.core.sessionId && (Ea.core.attemptingLogin = !0)
            };
            Ea.openPassportHelper = function(a) {
                window.open(a, "_blank")
            };
            Ea.getHost = function() {
                var a = window.document.location.href;
                return null == a || "" == a ? "<AppView>" : 0 == a.indexOf("file") ? "<LocalHost>" : Ea.urlParser.match(a) ? Ea.urlParser.matched(1) : "<Unknown>"
            };
            Ea.__super__ = Jf;
            Ea.prototype = n(Jf.prototype, {
                get_user: function() {
                    return null == this._session ? null : this._session.user
                },
                get_passportUrl: function() {
                    return null ==
                        this._session || "request-login" != this._session.get_status() ? null : this._session.passportUrl
                },
                checkInitialSession: function(a, b) {
                    this.onSessionReceive(b, null, null, a)
                },
                requestLogin: function(a, b, c, d) {
                    if (this.attemptingLogin) this.logError("cannot request another login until the previous attempt is complete", {
                        fileName: "source/io/newgrounds/NG.hx",
                        lineNumber: 149,
                        className: "io.newgrounds.NG",
                        methodName: "requestLogin"
                    });
                    else if (this.loggedIn) this.logError("cannot log in, already logged in", {
                        fileName: "source/io/newgrounds/NG.hx",
                        lineNumber: 155,
                        className: "io.newgrounds.NG",
                        methodName: "requestLogin"
                    });
                    else {
                        this.attemptingLogin = !0;
                        this._loginCancelled = !1;
                        this._passportCallback = null;
                        var e = r(this, this.onSessionReceive),
                            f = this.calls.app.startSession(!0).addDataHandler(function(f) {
                                e(f, a, b, c, d)
                            });
                        null != c && f.addErrorHandler(c);
                        f.send()
                    }
                },
                onSessionReceive: function(a, b, c, d, e) {
                    if (a.success && a.result.success)
                        if (this._session.parse(a.result.data.session), this.set_sessionId(this._session.id), d = "session started - status: " + this._session.get_status(),
                            this.verbose && this.log(d, {
                                fileName: "source/io/newgrounds/NG.hx",
                                lineNumber: 194,
                                className: "io.newgrounds.NG",
                                methodName: "onSessionReceive"
                            }), "request-login" == this._session.get_status()) {
                            var f = r(this, this.checkSession);
                            a = null;
                            this._passportCallback = function() {
                                f(a, b, e)
                            };
                            null != c ? c() : this.openPassportUrl()
                        } else this.checkSession(null, b, e);
                    else this.set_sessionId(null), this.endLoginAndCall(null), null != d && d(a.success ? a.result.error : a.error)
                },
                openPassportUrl: function() {
                    if (null != this.get_passportUrl()) {
                        var a =
                            "loading passport: " + this.get_passportUrl();
                        this.verbose && this.log(a, {
                            fileName: "source/io/newgrounds/NG.hx",
                            lineNumber: 216,
                            className: "io.newgrounds.NG",
                            methodName: "openPassportUrl"
                        });
                        Ea.openPassportHelper(this.get_passportUrl());
                        this.onPassportUrlOpen()
                    } else this.logError("Cannot open passport", {
                        fileName: "source/io/newgrounds/NG.hx",
                        lineNumber: 221,
                        className: "io.newgrounds.NG",
                        methodName: "openPassportUrl"
                    })
                },
                onPassportUrlOpen: function() {
                    null != this._passportCallback && this._passportCallback();
                    this._passportCallback =
                        null
                },
                checkSession: function(a, b, c) {
                    var d = this;
                    if (null != a) {
                        if (!a.success || !a.result.success) {
                            this.log("login cancelled via passport", {
                                fileName: "source/io/newgrounds/NG.hx",
                                lineNumber: 268,
                                className: "io.newgrounds.NG",
                                methodName: "checkSession"
                            });
                            this.endLoginAndCall(c);
                            return
                        }
                        this._session.parse(a.result.data.session)
                    }
                    if ("user-loaded" == this._session.get_status()) this.loggedIn = !0, this.endLoginAndCall(b), this.onLogin.dispatch();
                    else if ("request-login" == this._session.get_status()) {
                        var e = r(this, this.checkSession),
                            f = this.calls.app.checkSession().addDataHandler(function(a) {
                                e(a, b, c)
                            });
                        this.timer(3, function() {
                            d._loginCancelled ? (d.log("login cancelled via cancelLoginRequest", {
                                fileName: "source/io/newgrounds/NG.hx",
                                lineNumber: 297,
                                className: "io.newgrounds.NG",
                                methodName: "checkSession"
                            }), d.endLoginAndCall(c)) : f.send()
                        })
                    } else this.endLoginAndCall(c)
                },
                endLoginAndCall: function(a) {
                    this._loginCancelled = this.attemptingLogin = !1;
                    null != a && a()
                },
                requestMedals: function(a, b) {
                    var c = this.calls.medal.getList().addDataHandler(r(this,
                        this.onMedalsReceived));
                    null != a && c.addSuccessHandler(a);
                    null != b && c.addErrorHandler(b);
                    c.send()
                },
                onMedalsReceived: function(a) {
                    if (a.success && a.result.success) {
                        var b = [];
                        if (null == this.medals) {
                            this.medals = new Tb;
                            for (var c = 0, d = a.result.data.medals; c < d.length;) {
                                var e = d[c];
                                ++c;
                                e = new sj(this, e);
                                this.medals.h[e.id] = e;
                                b.push(e.id)
                            }
                        } else
                            for (c = 0, d = a.result.data.medals; c < d.length;) e = d[c], ++c, this.medals.h[e.id].parse(e), b.push(e.id);
                        a = "" + a.result.data.medals.length + " Medals received [" + b.join(", ") + "]";
                        this.verbose &&
                            this.log(a, {
                                fileName: "source/io/newgrounds/NG.hx",
                                lineNumber: 386,
                                className: "io.newgrounds.NG",
                                methodName: "onMedalsReceived"
                            });
                        this.onMedalsLoaded.dispatch()
                    }
                },
                requestScoreBoards: function(a, b) {
                    if (null != this.scoreBoards) this.log("aborting scoreboard request, all scoreboards are loaded", {
                        fileName: "source/io/newgrounds/NG.hx",
                        lineNumber: 399,
                        className: "io.newgrounds.NG",
                        methodName: "requestScoreBoards"
                    }), null != a && a();
                    else {
                        var c = this.calls.scoreBoard.getBoards().addDataHandler(r(this, this.onBoardsReceived));
                        null != a && c.addSuccessHandler(a);
                        null != b && c.addErrorHandler(b);
                        c.send()
                    }
                },
                onBoardsReceived: function(a) {
                    if (a.success && a.result.success) {
                        var b = [];
                        if (null == this.scoreBoards) {
                            this.scoreBoards = new Tb;
                            for (var c = 0, d = a.result.data.scoreboards; c < d.length;) {
                                var e = d[c];
                                ++c;
                                e = new tj(this, e);
                                this.scoreBoards.h[e.id] = e;
                                b.push(e.id)
                            }
                        }
                        a = "" + a.result.data.scoreboards.length + " ScoreBoards received [" + b.join(", ") + "]";
                        this.verbose && this.log(a, {
                            fileName: "source/io/newgrounds/NG.hx",
                            lineNumber: 438,
                            className: "io.newgrounds.NG",
                            methodName: "onBoardsReceived"
                        });
                        this.onScoreBoardsLoaded.dispatch()
                    }
                },
                timer: function(a, b) {
                    var c = new If(1E3 * a | 0);
                    c.run = function() {
                        c.stop();
                        b()
                    }
                },
                __class__: Ea,
                __properties__: n(Jf.prototype.__properties__, {
                    get_passportUrl: "get_passportUrl",
                    get_user: "get_user"
                })
            });
            var rd = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.Component"] = rd;
            rd.__name__ = "io.newgrounds.components.Component";
            rd.prototype = {
                __class__: rd
            };
            var uj = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.AppComponent"] = uj;
            uj.__name__ =
                "io.newgrounds.components.AppComponent";
            uj.__super__ = rd;
            uj.prototype = n(rd.prototype, {
                startSession: function(a) {
                    null == a && (a = !1);
                    return (new hf(this._core, "App.startSession")).addComponentParameter("force", a, !1)
                },
                checkSession: function() {
                    return new hf(this._core, "App.checkSession", !0)
                },
                __class__: uj
            });
            var Zk = function(a) {
                this._core = a;
                this.medal = new vj(this._core);
                this.app = new uj(this._core);
                this.event = new wj(this._core);
                this.scoreBoard = new xj(this._core);
                this.loader = new yj(this._core);
                this.gateway = new zj(this._core)
            };
            g["io.newgrounds.components.ComponentList"] = Zk;
            Zk.__name__ = "io.newgrounds.components.ComponentList";
            Zk.prototype = {
                __class__: Zk
            };
            var wj = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.EventComponent"] = wj;
            wj.__name__ = "io.newgrounds.components.EventComponent";
            wj.__super__ = rd;
            wj.prototype = n(rd.prototype, {
                __class__: wj
            });
            var zj = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.GatewayComponent"] = zj;
            zj.__name__ = "io.newgrounds.components.GatewayComponent";
            zj.__super__ = rd;
            zj.prototype = n(rd.prototype, {
                __class__: zj
            });
            var yj = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.LoaderComponent"] = yj;
            yj.__name__ = "io.newgrounds.components.LoaderComponent";
            yj.__super__ = rd;
            yj.prototype = n(rd.prototype, {
                __class__: yj
            });
            var vj = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.MedalComponent"] = vj;
            vj.__name__ = "io.newgrounds.components.MedalComponent";
            vj.__super__ = rd;
            vj.prototype = n(rd.prototype, {
                unlock: function(a) {
                    return (new hf(this._core, "Medal.unlock", !0, !0)).addComponentParameter("id", a)
                },
                getList: function() {
                    return new hf(this._core,
                        "Medal.getList")
                },
                __class__: vj
            });
            var xj = function(a) {
                this._core = a
            };
            g["io.newgrounds.components.ScoreBoardComponent"] = xj;
            xj.__name__ = "io.newgrounds.components.ScoreBoardComponent";
            xj.__super__ = rd;
            xj.prototype = n(rd.prototype, {
                getBoards: function() {
                    return new hf(this._core, "ScoreBoard.getBoards")
                },
                postScore: function(a, b, c) {
                    return (new hf(this._core, "ScoreBoard.postScore", !0, !0)).addComponentParameter("id", a).addComponentParameter("value", b).addComponentParameter("tag", c, null)
                },
                __class__: xj
            });
            var $k = function(a) {
                this.index1 =
                    this.index2 = 0;
                this.perm = new bb(new ArrayBuffer(256));
                for (var b = 0; 256 > b;) {
                    var c = b++;
                    this.perm.b[c] = c & 255
                }
                var d = 0;
                for (b = 0; 256 > b;) {
                    c = b++;
                    d = (d + this.perm.b[c] + a.b[c % a.length]) % 256;
                    var e = this.perm.b[c];
                    this.perm.b[c] = this.perm.b[d] & 255;
                    this.perm.b[d] = e & 255
                }
            };
            g["io.newgrounds.crypto.Rc4"] = $k;
            $k.__name__ = "io.newgrounds.crypto.Rc4";
            $k.prototype = {
                crypt: function(a) {
                    for (var b = new bb(new ArrayBuffer(a.length)), c = 0, d = a.length; c < d;) {
                        var e = c++;
                        this.index1 = (this.index1 + 1) % 256;
                        this.index2 = (this.index2 + this.perm.b[this.index1]) %
                            256;
                        var f = this.index1,
                            k = this.index2,
                            p = this.perm.b[f];
                        this.perm.b[f] = this.perm.b[k] & 255;
                        this.perm.b[k] = p & 255;
                        b.b[e] = (a.b[e] ^ this.perm.b[(this.perm.b[this.index1] + this.perm.b[this.index2]) % 256]) & 255
                    }
                    return b
                },
                __class__: $k
            };
            var Dg = function(a, b) {
                null == b && (b = 0);
                this.message = a;
                this.code = b
            };
            g["io.newgrounds.objects.Error"] = Dg;
            Dg.__name__ = "io.newgrounds.objects.Error";
            Dg.prototype = {
                toString: function() {
                    return 0 < this.code ? "#" + this.code + " - " + this.message : this.message
                },
                __class__: Dg
            };
            var sd = function(a, b) {
                this._core =
                    a;
                this.onUpdate = new Ve;
                null != b && this.parse(b)
            };
            g["io.newgrounds.objects.Object"] = sd;
            sd.__name__ = "io.newgrounds.objects.Object";
            sd.prototype = {
                parse: function(a) {
                    this.onUpdate.dispatch()
                },
                __class__: sd
            };
            var sj = function(a, b) {
                this.onUnlock = new Ve;
                sd.call(this, a, b)
            };
            g["io.newgrounds.objects.Medal"] = sj;
            sj.__name__ = "io.newgrounds.objects.Medal";
            sj.__super__ = sd;
            sj.prototype = n(sd.prototype, {
                parse: function(a) {
                    var b = !this.unlocked;
                    this.id = a.id;
                    this.name = a.name;
                    this.description = a.description;
                    this.icon = a.icon;
                    this.value =
                        a.value;
                    this.difficulty = a.difficulty;
                    this.secret = 1 == a.secret;
                    this.unlocked = a.unlocked;
                    sd.prototype.parse.call(this, a);
                    b && this.unlocked && this.onUnlock.dispatch()
                },
                sendUnlock: function() {
                    null == this._core.sessionId && (this.unlocked = !0, this.onUnlock.dispatch());
                    this._core.calls.medal.unlock(this.id).addDataHandler(r(this, this.onUnlockResponse)).send()
                },
                onUnlockResponse: function(a) {
                    a.success && a.result.success && (this.parse(a.result.data.medal), this.unlocked || (this.unlocked = !0, this.onUnlock.dispatch()))
                },
                __class__: sj
            });
            var tj = function(a, b) {
                sd.call(this, a, b)
            };
            g["io.newgrounds.objects.ScoreBoard"] = tj;
            tj.__name__ = "io.newgrounds.objects.ScoreBoard";
            tj.__super__ = sd;
            tj.prototype = n(sd.prototype, {
                parse: function(a) {
                    this.id = a.id;
                    this.name = a.name;
                    sd.prototype.parse.call(this, a)
                },
                postScore: function(a, b) {
                    this._core.calls.scoreBoard.postScore(this.id, a, b).addDataHandler(r(this, this.onScorePosted)).send()
                },
                onScorePosted: function(a) {},
                __class__: tj
            });
            var rj = function(a, b) {
                sd.call(this, a, b)
            };
            g["io.newgrounds.objects.Session"] =
                rj;
            rj.__name__ = "io.newgrounds.objects.Session";
            rj.__super__ = sd;
            rj.prototype = n(sd.prototype, {
                parse: function(a) {
                    this.id = a.id;
                    this.expired = a.expired;
                    this.passportUrl = a.passport_url;
                    this.remember = a.remember;
                    null == this.user && (this.user = a.user);
                    sd.prototype.parse.call(this, a)
                },
                get_status: function() {
                    return this.expired || null == this.id || "" == this.id ? "session-expired" : null != this.user && null != this.user.name && "" != this.user.name ? "user-loaded" : "request-login"
                },
                __class__: rj,
                __properties__: {
                    get_status: "get_status"
                }
            });
            var Yk = function(a, b) {
                try {
                    var c = JSON.parse(b)
                } catch (d) {
                    Ca.lastError = d, c = JSON.parse('{"success":false,"error":{"message":"' + (null == b ? "null" : "" + b) + '","code":0}}')
                }
                this.success = c.success;
                this.debug = c.debug;
                this.success ? this.result = new al(a, c.result) : (this.error = new Dg(c.error.message, c.error.code), a.logError("Call unseccessful: " + I.string(this.error), {
                    fileName: "source/io/newgrounds/objects/events/Response.hx",
                    lineNumber: 37,
                    className: "io.newgrounds.objects.events.Response",
                    methodName: "new"
                }))
            };
            g["io.newgrounds.objects.events.Response"] =
                Yk;
            Yk.__name__ = "io.newgrounds.objects.events.Response";
            Yk.prototype = {
                __class__: Yk
            };
            var al = function(a, b) {
                this.echo = b.echo;
                this.component = b.component;
                b = b.data;
                this.success = b.success;
                this.debug = b.debug;
                b.success ? this.data = b : (this.error = new Dg(b.error.message, b.error.code), a.logError("" + this.component + " fail: " + I.string(this.error), {
                    fileName: "source/io/newgrounds/objects/events/Result.hx",
                    lineNumber: 25,
                    className: "io.newgrounds.objects.events.Result",
                    methodName: "new"
                }))
            };
            g["io.newgrounds.objects.events.Result"] =
                al;
            al.__name__ = "io.newgrounds.objects.events.Result";
            al.prototype = {
                __class__: al
            };
            var qj = function() {};
            g["io.newgrounds.utils.AsyncHttp"] = qj;
            qj.__name__ = "io.newgrounds.utils.AsyncHttp";
            qj.send = function(a, b, c, d, e) {
                a.verbose && a.log("sending: " + b, {
                    fileName: "source/io/newgrounds/utils/AsyncHttp.hx",
                    lineNumber: 33,
                    className: "io.newgrounds.utils.AsyncHttp",
                    methodName: "send"
                });
                qj.sendSync(a, b, c, d, e)
            };
            qj.sendSync = function(a, b, c, d, e) {
                a = new kj("https://newgrounds.io/gateway_v3.php");
                a.setParameter("input", b);
                a.onData = c;
                a.onError = d;
                a.onStatus = e;
                a.request(!0)
            };
            var pj = function() {
                this._list = [];
                this._once = []
            };
            g["io.newgrounds.utils.TypedDispatcher"] = pj;
            pj.__name__ = "io.newgrounds.utils.TypedDispatcher";
            pj.prototype = {
                add: function(a, b) {
                    null == b && (b = !1);
                    if (-1 != this._list.indexOf(a)) return b || -1 == this._once.indexOf(a) || Y.remove(this._once, a), !1;
                    this._list.unshift(a);
                    b && this._once.unshift(a);
                    return !0
                },
                dispatch: function(a) {
                    for (var b = this._list.length - 1; 0 <= b;) {
                        var c = this._list[b];
                        Y.remove(this._once, c) && Y.remove(this._list,
                            c);
                        c(a);
                        --b
                    }
                },
                __class__: pj
            };
            var Ch = function() {};
            g["js.Browser"] = Ch;
            Ch.__name__ = "js.Browser";
            Ch.getLocalStorage = function() {
                try {
                    var a = window.localStorage;
                    a.getItem("");
                    if (0 == a.length) {
                        var b = "_hx_" + Math.random();
                        a.setItem(b, b);
                        a.removeItem(b)
                    }
                    return a
                } catch (c) {
                    return Ca.lastError = c, null
                }
            };
            Ch.createXMLHttpRequest = function() {
                if ("undefined" != typeof XMLHttpRequest) return new XMLHttpRequest;
                if ("undefined" != typeof ActiveXObject) return new ActiveXObject("Microsoft.XMLHTTP");
                throw F.thrown("Unable to create XMLHttpRequest object.");
            };
            var Tl = function() {};
            g["js.html._CanvasElement.CanvasUtil"] = Tl;
            Tl.__name__ = "js.html._CanvasElement.CanvasUtil";
            Tl.getContextWebGL = function(a, b) {
                var c = a.getContext("webgl", b);
                if (null != c) return c;
                c = a.getContext("experimental-webgl", b);
                return null != c ? c : null
            };
            var ik = function() {
                this.connected = !0;
                this.buttons = [];
                this.axes = []
            };
            g["lime._internal.backend.html5.GameDeviceData"] = ik;
            ik.__name__ = "lime._internal.backend.html5.GameDeviceData";
            ik.prototype = {
                __class__: ik
            };
            var cl = function(a) {
                this.parent = a;
                this.id = -1;
                this.gain = 1;
                this.position = new bl
            };
            g["lime._internal.backend.html5.HTML5AudioSource"] = cl;
            cl.__name__ = "lime._internal.backend.html5.HTML5AudioSource";
            cl.prototype = {
                dispose: function() {},
                init: function() {},
                play: function() {
                    if (!this.playing && null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        this.playing = !0;
                        var a = this.getCurrentTime();
                        this.completed = !1;
                        var b = this.parent.buffer.__srcHowl._volume;
                        this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
                        this.id = this.parent.buffer.__srcHowl.play();
                        this.parent.buffer.__srcHowl._volume = b;
                        this.setPosition(this.parent.get_position());
                        this.parent.buffer.__srcHowl.on("end", r(this, this.howl_onEnd), this.id);
                        this.setCurrentTime(a)
                    }
                },
                stop: function() {
                    this.playing = !1;
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id), this.parent.buffer.__srcHowl.off("end", r(this, this.howl_onEnd), this.id))
                },
                howl_onEnd: function() {
                    this.playing = !1;
                    0 < this.loops ? (this.loops--, this.stop(), this.play()) : (null != this.parent.buffer &&
                        null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id), this.parent.buffer.__srcHowl.off("end", r(this, this.howl_onEnd), this.id)), this.completed = !0, this.parent.onComplete.dispatch())
                },
                getCurrentTime: function() {
                    if (-1 == this.id) return 0;
                    if (this.completed) return this.getLength();
                    if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        var a = (1E3 * this.parent.buffer.__srcHowl.seek(this.id) | 0) - this.parent.offset;
                        return 0 > a ? 0 : a
                    }
                    return 0
                },
                setCurrentTime: function(a) {
                    if (null !=
                        this.parent.buffer && null != this.parent.buffer.__srcHowl) {
                        var b = (a + this.parent.offset) / 1E3;
                        0 > b && (b = 0);
                        this.parent.buffer.__srcHowl.seek(b, this.id)
                    }
                    return a
                },
                getGain: function() {
                    return this.gain
                },
                setGain: function(a) {
                    null != this.parent.buffer && null != this.parent.buffer.__srcHowl && -1 != this.id && this.parent.buffer.__srcHowl.volume(a, this.id);
                    return this.gain = a
                },
                getLength: function() {
                    return 0 != this.length ? this.length : null != this.parent.buffer && null != this.parent.buffer.__srcHowl ? 1E3 * this.parent.buffer.__srcHowl.duration() |
                        0 : 0
                },
                setLength: function(a) {
                    return this.length = a
                },
                setLoops: function(a) {
                    return this.loops = a
                },
                getPosition: function() {
                    return this.position
                },
                setPosition: function(a) {
                    this.position.x = a.x;
                    this.position.y = a.y;
                    this.position.z = a.z;
                    this.position.w = a.w;
                    null != this.parent.buffer.__srcHowl && null != this.parent.buffer.__srcHowl.pos && this.parent.buffer.__srcHowl.pos(this.position.x, this.position.y, this.position.z, this.id);
                    return this.position
                },
                __class__: cl
            };
            var ra = function() {
                this.validStatus0 = (new ya("Tizen", "gi")).match(window.navigator.userAgent)
            };
            g["lime._internal.backend.html5.HTML5HTTPRequest"] = ra;
            ra.__name__ = "lime._internal.backend.html5.HTML5HTTPRequest";
            ra.loadImage = function(a) {
                var b = new cd;
                ra.activeRequests < ra.requestLimit ? (ra.activeRequests++, ra.__loadImage(a, b, 0)) : ra.requestQueue.add({
                    instance: null,
                    uri: a,
                    promise: b,
                    type: "IMAGE",
                    options: 0
                });
                return b.future
            };
            ra.loadImageFromBytes = function(a, b) {
                var c = URL.createObjectURL(new Blob([a.b.bufferValue], {
                    type: b
                }));
                return null != c ? (a = new cd, ra.activeRequests < ra.requestLimit ? (ra.activeRequests++,
                    ra.__loadImage(c, a, 1)) : ra.requestQueue.add({
                    instance: null,
                    uri: c,
                    promise: a,
                    type: "IMAGE",
                    options: 1
                }), a.future) : ra.loadImage("data:" + b + ";base64," + We.encode(a))
            };
            ra.processQueue = function() {
                if (ra.activeRequests < ra.requestLimit && 0 < ra.requestQueue.length) {
                    ra.activeRequests++;
                    var a = ra.requestQueue.pop();
                    switch (a.type) {
                        case "BINARY":
                            a.instance.__loadData(a.uri, a.promise);
                            break;
                        case "IMAGE":
                            ra.__loadImage(a.uri, a.promise, a.options);
                            break;
                        case "TEXT":
                            a.instance.__loadText(a.uri, a.promise);
                            break;
                        default:
                            ra.activeRequests--
                    }
                }
            };
            ra.__fixHostname = function(a) {
                return null == a ? "" : a
            };
            ra.__fixPort = function(a, b) {
                if (null == a || "" == a) switch (b) {
                    case "ftp:":
                        return "21";
                    case "gopher:":
                        return "70";
                    case "http:":
                        return "80";
                    case "https:":
                        return "443";
                    case "ws:":
                        return "80";
                    case "wss:":
                        return "443";
                    default:
                        return ""
                }
                return a
            };
            ra.__fixProtocol = function(a) {
                return null == a || "" == a ? "http:" : a
            };
            ra.__isInMemoryURI = function(a) {
                return K.startsWith(a, "data:") ? !0 : K.startsWith(a, "blob:")
            };
            ra.__isSameOrigin = function(a) {
                if (null == a || "" == a || ra.__isInMemoryURI(a)) return !0;
                null == ra.originElement && (ra.originElement = window.document.createElement("a"), ra.originHostname = ra.__fixHostname(C.location.hostname), ra.originProtocol = ra.__fixProtocol(C.location.protocol), ra.originPort = ra.__fixPort(C.location.port, ra.originProtocol));
                var b = ra.originElement;
                b.href = a;
                "" == b.hostname && (b.href = b.href);
                var c = ra.__fixHostname(b.hostname);
                a = ra.__fixProtocol(b.protocol);
                b = ra.__fixPort(b.port, a);
                c = "" == c || c == ra.originHostname;
                b = "" == b || b == ra.originPort;
                return "file:" != a && c ? b : !1
            };
            ra.__loadImage =
                function(a, b, c) {
                    var d = new Image;
                    ra.__isSameOrigin(a) || (d.crossOrigin = "Anonymous");
                    null == ra.supportsImageProgress && (ra.supportsImageProgress = "onprogress" in d);
                    if (ra.supportsImageProgress || ra.__isInMemoryURI(a)) d.addEventListener("load", function(e) {
                        ra.__revokeBlobURI(a, c);
                        e = new jf(null, d.width, d.height);
                        e.__srcImage = d;
                        ra.activeRequests--;
                        ra.processQueue();
                        b.complete(new Ia(e))
                    }, !1), d.addEventListener("progress", function(a) {
                        b.progress(a.loaded, a.total)
                    }, !1), d.addEventListener("error", function(d) {
                        ra.__revokeBlobURI(a,
                            c);
                        ra.activeRequests--;
                        ra.processQueue();
                        b.error(d.detail)
                    }, !1), d.src = a;
                    else {
                        var e = new XMLHttpRequest;
                        e.onload = function(a) {
                            ra.activeRequests--;
                            ra.processQueue();
                            (new Ia).__fromBytes(bb.ofData(e.response), function(a) {
                                b.complete(a)
                            })
                        };
                        e.onerror = function(a) {
                            b.error(a.message)
                        };
                        e.onprogress = function(a) {
                            a.lengthComputable && b.progress(a.loaded, a.total)
                        };
                        e.open("GET", a, !0);
                        e.responseType = "arraybuffer";
                        e.overrideMimeType("text/plain; charset=x-user-defined");
                        e.send(null)
                    }
                };
            ra.__revokeBlobURI = function(a, b) {
                0 !=
                    (b & 1) && URL.revokeObjectURL(a)
            };
            ra.prototype = {
                init: function(a) {
                    this.parent = a
                },
                load: function(a, b, c) {
                    this.request = new XMLHttpRequest;
                    "POST" == this.parent.method ? this.request.upload.addEventListener("progress", b, !1) : this.request.addEventListener("progress", b, !1);
                    this.request.onreadystatechange = c;
                    b = "";
                    if (null == this.parent.data) {
                        for (c = aa.keysIterator(this.parent.formData.h); c.hasNext();) {
                            var d = c.next();
                            0 < b.length && (b += "&");
                            var e = this.parent.formData.h[d];
                            if (-1 < d.indexOf("[]") && e instanceof Array) {
                                var f = [];
                                for (e = E(e); e.hasNext();) {
                                    var k = e.next();
                                    f.push(encodeURIComponent(k))
                                }
                                f = f.join("&amp;" + d + "=");
                                b += encodeURIComponent(d) + "=" + f
                            } else f = encodeURIComponent(d) + "=", d = I.string(e), b += f + encodeURIComponent(d)
                        }
                        "GET" == this.parent.method && "" != b && (a = -1 < a.indexOf("?") ? a + ("&" + b) : a + ("?" + b), b = "")
                    }
                    this.request.open(I.string(this.parent.method), a, !0);
                    0 < this.parent.timeout && (this.request.timeout = this.parent.timeout);
                    this.binary && (this.request.responseType = "arraybuffer");
                    a = null;
                    f = 0;
                    for (c = this.parent.headers; f < c.length;) d =
                        c[f], ++f, "Content-Type" == d.name ? a = d.value : this.request.setRequestHeader(d.name, d.value);
                    null != this.parent.contentType && (a = this.parent.contentType);
                    null == a && (null != this.parent.data ? a = "application/octet-stream" : "" != b && (a = "application/x-www-form-urlencoded"));
                    null != a && this.request.setRequestHeader("Content-Type", a);
                    this.parent.withCredentials && (this.request.withCredentials = !0);
                    null != this.parent.data ? this.request.send(this.parent.data.b.bufferValue) : this.request.send(b)
                },
                loadData: function(a) {
                    var b = new cd;
                    ra.activeRequests < ra.requestLimit ? (ra.activeRequests++, this.__loadData(a, b)) : ra.requestQueue.add({
                        instance: this,
                        uri: a,
                        promise: b,
                        type: "BINARY",
                        options: 0
                    });
                    return b.future
                },
                loadText: function(a) {
                    var b = new cd;
                    ra.activeRequests < ra.requestLimit ? (ra.activeRequests++, this.__loadText(a, b)) : ra.requestQueue.add({
                        instance: this,
                        uri: a,
                        promise: b,
                        type: "TEXT",
                        options: 0
                    });
                    return b.future
                },
                processResponse: function() {
                    if (this.parent.enableResponseHeaders) {
                        this.parent.responseHeaders = [];
                        for (var a, b, c = 0, d = this.request.getAllResponseHeaders().split("\n"); c <
                            d.length;) b = d[c], ++c, a = K.trim(Y.substr(b, 0, b.indexOf(":"))), b = K.trim(Y.substr(b, b.indexOf(":") + 1, null)), "" != a && this.parent.responseHeaders.push(new Aj(a, b))
                    }
                    this.parent.responseStatus = this.request.status
                },
                __loadData: function(a, b) {
                    var c = this;
                    this.binary = !0;
                    this.load(a, function(a) {
                        b.progress(a.loaded, a.total)
                    }, function(a) {
                        4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 > c.request.status || c.validStatus0 && 0 == c.request.status) ? (a = null, "" == c.request.responseType ? null != c.request.responseText &&
                            (a = bb.ofString(c.request.responseText)) : null != c.request.response && (a = bb.ofData(c.request.response)), c.processResponse(), b.complete(a)) : (c.processResponse(), b.error(c.request.status)), c.request = null, ra.activeRequests--, ra.processQueue())
                    })
                },
                __loadText: function(a, b) {
                    var c = this;
                    this.binary = !1;
                    this.load(a, function(a) {
                        b.progress(a.loaded, a.total)
                    }, function(a) {
                        4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 >= c.request.status || c.validStatus0 && 0 == c.request.status) ? (c.processResponse(),
                            b.complete(c.request.responseText)) : (c.processResponse(), b.error(c.request.status)), c.request = null, ra.activeRequests--, ra.processQueue())
                    })
                },
                __class__: ra
            };
            var Ka = function(a) {
                this.unusedTouchesPool = new Wa;
                this.scale = 1;
                this.currentTouches = new Tb;
                this.parent = a;
                this.cursor = Mb.DEFAULT;
                this.cacheMouseY = this.cacheMouseX = 0;
                var b = a.__attributes;
                Object.prototype.hasOwnProperty.call(b, "context") || (b.context = {});
                this.renderType = b.context.type;
                Object.prototype.hasOwnProperty.call(b, "element") && (a.element = b.element);
                var c = a.element;
                Object.prototype.hasOwnProperty.call(b, "allowHighDPI") && b.allowHighDPI && "dom" != this.renderType && (this.scale = window.devicePixelRatio);
                a.__scale = this.scale;
                this.setWidth = Object.prototype.hasOwnProperty.call(b, "width") ? b.width : 0;
                this.setHeight = Object.prototype.hasOwnProperty.call(b, "height") ? b.height : 0;
                a.__width = this.setWidth;
                a.__height = this.setHeight;
                a.id = Ka.windowID++;
                c instanceof HTMLCanvasElement ? this.canvas = c : "dom" == this.renderType ? this.div = window.document.createElement("div") : this.canvas =
                    window.document.createElement("canvas");
                if (null != this.canvas) {
                    var d = this.canvas.style;
                    d.setProperty("-webkit-transform", "translateZ(0)", null);
                    d.setProperty("transform", "translateZ(0)", null)
                } else null != this.div && (d = this.div.style, d.setProperty("-webkit-transform", "translate3D(0,0,0)", null), d.setProperty("transform", "translate3D(0,0,0)", null), d.position = "relative", d.overflow = "hidden", d.setProperty("-webkit-user-select", "none", null), d.setProperty("-moz-user-select", "none", null), d.setProperty("-ms-user-select",
                    "none", null), d.setProperty("-o-user-select", "none", null));
                0 == a.__width && 0 == a.__height && (null != c ? (a.__width = c.clientWidth, a.__height = c.clientHeight) : (a.__width = window.innerWidth, a.__height = window.innerHeight), this.cacheElementWidth = a.__width, this.cacheElementHeight = a.__height, this.resizeElement = !0);
                null != this.canvas ? (this.canvas.width = Math.round(a.__width * this.scale), this.canvas.height = Math.round(a.__height * this.scale), this.canvas.style.width = a.__width + "px", this.canvas.style.height = a.__height + "px") :
                    (this.div.style.width = a.__width + "px", this.div.style.height = a.__height + "px");
                if (Object.prototype.hasOwnProperty.call(b, "resizable") && b.resizable || !Object.prototype.hasOwnProperty.call(b, "width") && 0 == this.setWidth && 0 == this.setHeight) a.__resizable = !0;
                this.updateSize();
                if (null != c) {
                    null != this.canvas ? c != this.canvas && c.appendChild(this.canvas) : c.appendChild(this.div);
                    b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(" ");
                    for (d = 0; d < b.length;) {
                        var e = b[d];
                        ++d;
                        c.addEventListener(e, r(this, this.handleMouseEvent), !0)
                    }
                    c.addEventListener("contextmenu", r(this, this.handleContextMenuEvent), !0);
                    c.addEventListener("dragstart", r(this, this.handleDragEvent), !0);
                    c.addEventListener("dragover", r(this, this.handleDragEvent), !0);
                    c.addEventListener("drop", r(this, this.handleDragEvent), !0);
                    c.addEventListener("touchstart", r(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchmove", r(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchend", r(this, this.handleTouchEvent), !0);
                    c.addEventListener("touchcancel", r(this, this.handleTouchEvent), !0);
                    c.addEventListener("gamepadconnected", r(this, this.handleGamepadEvent), !0);
                    c.addEventListener("gamepaddisconnected", r(this, this.handleGamepadEvent), !0)
                }
                this.createContext();
                "webgl" == a.context.type && (this.canvas.addEventListener("webglcontextlost", r(this, this.handleContextEvent), !1), this.canvas.addEventListener("webglcontextrestored", r(this, this.handleContextEvent), !1))
            };
            g["lime._internal.backend.html5.HTML5Window"] = Ka;
            Ka.__name__ = "lime._internal.backend.html5.HTML5Window";
            Ka.prototype = {
                close: function() {
                    this.parent.application.__removeWindow(this.parent)
                },
                createContext: function() {
                    var a = new dl,
                        b = this.parent.__attributes.context;
                    a.window = this.parent;
                    a.attributes = b;
                    if (null != this.div) a.dom = this.div, a.type = "dom", a.version = "";
                    else if (null != this.canvas) {
                        var c = null,
                            d = "canvas" == this.renderType,
                            e = "opengl" == this.renderType || "opengles" == this.renderType || "webgl" == this.renderType,
                            f = !Object.prototype.hasOwnProperty.call(b, "version") || "1" != b.version,
                            k = !1;
                        if (e || !d && (!Object.prototype.hasOwnProperty.call(b, "hardware") || b.hardware)) {
                            d = Object.prototype.hasOwnProperty.call(b,
                                "background") && null == b.background;
                            e = Object.prototype.hasOwnProperty.call(b, "colorDepth") ? b.colorDepth : 16;
                            var p = Object.prototype.hasOwnProperty.call(b, "antialiasing") && 0 < b.antialiasing,
                                m = Object.prototype.hasOwnProperty.call(b, "depth") ? b.depth : !0;
                            b = Object.prototype.hasOwnProperty.call(b, "stencil") && b.stencil;
                            b = {
                                alpha: d || 16 < e,
                                antialias: p,
                                depth: m,
                                premultipliedAlpha: !0,
                                stencil: b,
                                preserveDrawingBuffer: !1,
                                failIfMajorPerformanceCaveat: !0
                            };
                            d = ["webgl", "experimental-webgl"];
                            f && d.unshift("webgl2");
                            for (f = 0; f <
                                d.length && (e = d[f], ++f, c = this.canvas.getContext(e, b), null != c && "webgl2" == e && (k = !0), null == c););
                        }
                        null == c ? (a.canvas2D = this.canvas.getContext("2d"), a.type = "canvas", a.version = "") : (a.webgl = pc.fromWebGL2RenderContext(c), k && (a.webgl2 = c), null == Fh.context && (Fh.context = c, Fh.type = "webgl", Fh.version = k ? 2 : 1), a.type = "webgl", a.version = k ? "2" : "1")
                    }
                    this.parent.context = a
                },
                handleContextEvent: function(a) {
                    switch (a.type) {
                        case "webglcontextlost":
                            a.cancelable && a.preventDefault();
                            this.parent.context = null;
                            this.parent.onRenderContextLost.dispatch();
                            break;
                        case "webglcontextrestored":
                            this.createContext(), this.parent.onRenderContextRestored.dispatch(this.parent.context)
                    }
                },
                handleContextMenuEvent: function(a) {
                    (this.parent.onMouseUp.canceled || this.parent.onMouseDown.canceled) && a.cancelable && a.preventDefault()
                },
                handleCutOrCopyEvent: function(a) {
                    a.clipboardData.setData("text/plain", sc.get_text());
                    a.cancelable && a.preventDefault()
                },
                handleDragEvent: function(a) {
                    switch (a.type) {
                        case "dragover":
                            return a.preventDefault(), !1;
                        case "dragstart":
                            if ("img" == oa.__cast(a.target,
                                    HTMLElement).nodeName.toLowerCase() && a.cancelable) return a.preventDefault(), !1;
                            break;
                        case "drop":
                            if (null != a.dataTransfer && 0 < a.dataTransfer.files.length) return this.parent.onDropFile.dispatch(a.dataTransfer.files), a.preventDefault(), !1
                    }
                    return !0
                },
                handleFocusEvent: function(a) {
                    var b = this;
                    this.textInputEnabled && (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) && If.delay(function() {
                        b.textInputEnabled && Ka.textInput.focus()
                    }, 20)
                },
                handleGamepadEvent: function(a) {
                    switch (a.type) {
                        case "gamepadconnected":
                            Ub.__connect(a.gamepad.index);
                            "standard" == a.gamepad.mapping && ac.__connect(a.gamepad.index);
                            break;
                        case "gamepaddisconnected":
                            Ub.__disconnect(a.gamepad.index), ac.__disconnect(a.gamepad.index)
                    }
                },
                handleInputEvent: function(a) {
                    Ka.textInput.value != Ka.dummyCharacter && (a = K.replace(Ka.textInput.value, Ka.dummyCharacter, ""), 0 < a.length && this.parent.onTextInput.dispatch(a), Ka.textInput.value = Ka.dummyCharacter)
                },
                handleMouseEvent: function(a) {
                    if ("wheel" != a.type) {
                        if (null != this.parent.element)
                            if (null != this.canvas) {
                                var b = this.canvas.getBoundingClientRect();
                                var c = this.parent.__width / b.width * (a.clientX - b.left);
                                b = this.parent.__height / b.height * (a.clientY - b.top)
                            } else null != this.div ? (b = this.div.getBoundingClientRect(), c = a.clientX - b.left, b = a.clientY - b.top) : (b = this.parent.element.getBoundingClientRect(), c = this.parent.__width / b.width * (a.clientX - b.left), b = this.parent.__height / b.height * (a.clientY - b.top));
                        else c = a.clientX, b = a.clientY;
                        switch (a.type) {
                            case "mousedown":
                                a.currentTarget == this.parent.element && window.addEventListener("mouseup", r(this, this.handleMouseEvent));
                                this.parent.onMouseDown.dispatch(c, b, a.button);
                                this.parent.onMouseDown.canceled && a.cancelable && a.preventDefault();
                                break;
                            case "mouseenter":
                                a.target == this.parent.element && (this.parent.onEnter.dispatch(), this.parent.onEnter.canceled && a.cancelable && a.preventDefault());
                                break;
                            case "mouseleave":
                                a.target == this.parent.element && (this.parent.onLeave.dispatch(), this.parent.onLeave.canceled && a.cancelable && a.preventDefault());
                                break;
                            case "mousemove":
                                if (c != this.cacheMouseX || b != this.cacheMouseY) this.parent.onMouseMove.dispatch(c,
                                    b), this.parent.onMouseMoveRelative.dispatch(c - this.cacheMouseX, b - this.cacheMouseY), (this.parent.onMouseMove.canceled || this.parent.onMouseMoveRelative.canceled) && a.cancelable && a.preventDefault();
                                break;
                            case "mouseup":
                                window.removeEventListener("mouseup", r(this, this.handleMouseEvent)), a.currentTarget == this.parent.element && a.stopPropagation(), this.parent.onMouseUp.dispatch(c, b, a.button), this.parent.onMouseUp.canceled && a.cancelable && a.preventDefault()
                        }
                        this.cacheMouseX = c;
                        this.cacheMouseY = b
                    } else {
                        switch (a.deltaMode) {
                            case 0:
                                c =
                                    el.PIXELS;
                                break;
                            case 1:
                                c = el.LINES;
                                break;
                            case 2:
                                c = el.PAGES;
                                break;
                            default:
                                c = el.UNKNOWN
                        }
                        this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
                        this.parent.onMouseWheel.canceled && a.cancelable && a.preventDefault()
                    }
                },
                handlePasteEvent: function(a) {
                    if (-1 < a.clipboardData.types.indexOf("text/plain")) {
                        var b = a.clipboardData.getData("text/plain");
                        sc.set_text(b);
                        this.textInputEnabled && this.parent.onTextInput.dispatch(b);
                        a.cancelable && a.preventDefault()
                    }
                },
                handleResizeEvent: function(a) {
                    this.primaryTouch = null;
                    this.updateSize()
                },
                handleTouchEvent: function(a) {
                    a.cancelable && a.preventDefault();
                    var b = null;
                    null != this.parent.element && (b = null != this.canvas ? this.canvas.getBoundingClientRect() : null != this.div ? this.div.getBoundingClientRect() : this.parent.element.getBoundingClientRect());
                    var c = this.setWidth,
                        d = this.setHeight;
                    if (0 == c || 0 == d) null != b ? (c = b.width, d = b.height) : d = c = 1;
                    for (var e, f, k, p, m, h = 0, g = a.changedTouches; h < g.length;) {
                        var l = g[h];
                        ++h;
                        null != b ? (f = c / b.width * (l.clientX - b.left), k = d / b.height * (l.clientY - b.top)) : (f = l.clientX, k = l.clientY);
                        if ("touchstart" == a.type) e = this.unusedTouchesPool.pop(), null == e ? e = new uc(f / c, k / d, l.identifier, 0, 0, l.force, this.parent.id) : (e.x = f / c, e.y = k / d, e.id = l.identifier, e.dx = 0, e.dy = 0, e.pressure = l.force, e.device = this.parent.id), this.currentTouches.h[l.identifier] = e, uc.onStart.dispatch(e), null == this.primaryTouch && (this.primaryTouch = e), e == this.primaryTouch && this.parent.onMouseDown.dispatch(f, k, 0);
                        else if (e = this.currentTouches.h[l.identifier], null != e) switch (p = e.x, m = e.y, e.x = f / c, e.y = k / d, e.dx = e.x - p, e.dy = e.y - m, e.pressure =
                            l.force, a.type) {
                            case "touchcancel":
                                uc.onCancel.dispatch(e);
                                this.currentTouches.remove(l.identifier);
                                this.unusedTouchesPool.add(e);
                                e == this.primaryTouch && (this.primaryTouch = null);
                                break;
                            case "touchend":
                                uc.onEnd.dispatch(e);
                                this.currentTouches.remove(l.identifier);
                                this.unusedTouchesPool.add(e);
                                e == this.primaryTouch && (this.parent.onMouseUp.dispatch(f, k, 0), this.primaryTouch = null);
                                break;
                            case "touchmove":
                                uc.onMove.dispatch(e), e == this.primaryTouch && this.parent.onMouseMove.dispatch(f, k)
                        }
                    }
                },
                isDescendent: function(a) {
                    if (a ==
                        this.parent.element) return !0;
                    for (; null != a;) {
                        if (a.parentNode == this.parent.element) return !0;
                        a = a.parentNode
                    }
                    return !1
                },
                setClipboard: function(a) {
                    null == Ka.textArea && (Ka.textArea = window.document.createElement("textarea"), Ka.textArea.style.height = "0px", Ka.textArea.style.left = "-100px", Ka.textArea.style.opacity = "0", Ka.textArea.style.position = "fixed", Ka.textArea.style.top = "-100px", Ka.textArea.style.width = "0px", window.document.body.appendChild(Ka.textArea));
                    Ka.textArea.value = a;
                    Ka.textArea.focus();
                    Ka.textArea.select();
                    window.document.queryCommandEnabled("copy") && window.document.execCommand("copy")
                },
                setCursor: function(a) {
                    if (this.cursor != a) {
                        if (null == a) this.parent.element.style.cursor = "none";
                        else {
                            switch (a._hx_index) {
                                case 0:
                                    var b = "default";
                                    break;
                                case 1:
                                    b = "crosshair";
                                    break;
                                case 3:
                                    b = "move";
                                    break;
                                case 4:
                                    b = "pointer";
                                    break;
                                case 5:
                                    b = "nesw-resize";
                                    break;
                                case 6:
                                    b = "ns-resize";
                                    break;
                                case 7:
                                    b = "nwse-resize";
                                    break;
                                case 8:
                                    b = "ew-resize";
                                    break;
                                case 9:
                                    b = "text";
                                    break;
                                case 10:
                                    b = "wait";
                                    break;
                                case 11:
                                    b = "wait";
                                    break;
                                default:
                                    b = "auto"
                            }
                            this.parent.element.style.cursor =
                                b
                        }
                        this.cursor = a
                    }
                    return this.cursor
                },
                setFrameRate: function(a) {
                    null != this.parent.application && (60 <= a ? this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = -1) : 0 < a ? this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = 1E3 / a) : this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = 1E3));
                    return a
                },
                setTextInputEnabled: function(a) {
                    a ? (null == Ka.textInput && (Ka.textInput = window.document.createElement("input"),
                        Ka.textInput.type = "text", Ka.textInput.style.position = "absolute", Ka.textInput.style.opacity = "0", Ka.textInput.style.color = "transparent", Ka.textInput.value = Ka.dummyCharacter, Ka.textInput.autocapitalize = "off", Ka.textInput.autocorrect = "off", Ka.textInput.autocomplete = "off", Ka.textInput.style.left = "0px", Ka.textInput.style.top = "50%", (new ya("(iPad|iPhone|iPod).*OS 8_", "gi")).match(window.navigator.userAgent) ? (Ka.textInput.style.fontSize = "0px", Ka.textInput.style.width = "0px", Ka.textInput.style.height = "0px") :
                        (Ka.textInput.style.width = "1px", Ka.textInput.style.height = "1px"), Ka.textInput.style.pointerEvents = "none", Ka.textInput.style.zIndex = "-10000000"), null == Ka.textInput.parentNode && this.parent.element.appendChild(Ka.textInput), this.textInputEnabled || (Ka.textInput.addEventListener("input", r(this, this.handleInputEvent), !0), Ka.textInput.addEventListener("blur", r(this, this.handleFocusEvent), !0), Ka.textInput.addEventListener("cut", r(this, this.handleCutOrCopyEvent), !0), Ka.textInput.addEventListener("copy", r(this,
                        this.handleCutOrCopyEvent), !0), Ka.textInput.addEventListener("paste", r(this, this.handlePasteEvent), !0)), Ka.textInput.focus(), Ka.textInput.select()) : null != Ka.textInput && (Ka.textInput.removeEventListener("input", r(this, this.handleInputEvent), !0), Ka.textInput.removeEventListener("blur", r(this, this.handleFocusEvent), !0), Ka.textInput.removeEventListener("cut", r(this, this.handleCutOrCopyEvent), !0), Ka.textInput.removeEventListener("copy", r(this, this.handleCutOrCopyEvent), !0), Ka.textInput.removeEventListener("paste",
                        r(this, this.handlePasteEvent), !0), Ka.textInput.blur());
                    return this.textInputEnabled = a
                },
                updateSize: function() {
                    if (this.parent.__resizable) {
                        if (null != this.parent.element) {
                            var a = this.parent.element.clientWidth;
                            var b = this.parent.element.clientHeight
                        } else a = window.innerWidth, b = window.innerHeight;
                        if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
                            this.cacheElementWidth = a;
                            this.cacheElementHeight = b;
                            var c = this.resizeElement || 0 == this.setWidth && 0 == this.setHeight;
                            if (null != this.parent.element && (null == this.div ||
                                    null != this.div && c))
                                if (c) {
                                    if (this.parent.__width != a || this.parent.__height != b) this.parent.__width = a, this.parent.__height = b, null != this.canvas ? this.parent.element != this.canvas && (this.canvas.width = Math.round(a * this.scale), this.canvas.height = Math.round(b * this.scale), this.canvas.style.width = a + "px", this.canvas.style.height = b + "px") : (this.div.style.width = a + "px", this.div.style.height = b + "px"), this.parent.onResize.dispatch(a, b)
                                } else {
                                    c = 0 != this.setWidth ? a / this.setWidth : 1;
                                    var d = 0 != this.setHeight ? b / this.setHeight :
                                        1,
                                        e = a,
                                        f = b,
                                        k = 0,
                                        p = 0;
                                    c < d ? (f = Math.floor(this.setHeight * c), p = Math.floor((b - f) / 2)) : (e = Math.floor(this.setWidth * d), k = Math.floor((a - e) / 2));
                                    null != this.canvas ? this.parent.element != this.canvas && (this.canvas.style.width = e + "px", this.canvas.style.height = f + "px", this.canvas.style.marginLeft = k + "px", this.canvas.style.marginTop = p + "px") : (this.div.style.width = e + "px", this.div.style.height = f + "px", this.div.style.marginLeft = k + "px", this.div.style.marginTop = p + "px")
                                }
                        }
                    }
                },
                __class__: Ka
            };
            var We = function() {};
            g["lime._internal.format.Base64"] =
                We;
            We.__name__ = "lime._internal.format.Base64";
            We.encode = function(a) {
                var b = [],
                    c = We.DICTIONARY,
                    d = We.EXTENDED_DICTIONARY,
                    e = a.length,
                    f = Math.floor(e / 3),
                    k = 2 * f;
                b.length = 2 * Math.ceil(e / 3);
                for (var p = 0, m = 0, h; m < k;) h = a.b[p] << 16 | a.b[p + 1] << 8 | a.b[p + 2], b[m] = d[h >> 12 & 4095], b[m + 1] = d[h & 4095], p += 3, m += 2;
                switch (e - 3 * f) {
                    case 1:
                        h = a.b[p] << 16;
                        b[m] = d[h >> 12 & 4095];
                        b[m + 1] = "==";
                        break;
                    case 2:
                        h = a.b[p] << 16 | a.b[p + 1] << 8, b[m] = d[h >> 12 & 4095], b[m + 1] = c[h >> 6 & 63] + "="
                }
                return b.join("")
            };
            var Ul = function() {};
            g["lime._internal.format.Deflate"] = Ul;
            Ul.__name__ = "lime._internal.format.Deflate";
            Ul.decompress = function(a) {
                a = pako.inflateRaw(a.b.bufferValue);
                return bb.ofData(a)
            };
            var Vl = function() {};
            g["lime._internal.format.GZip"] = Vl;
            Vl.__name__ = "lime._internal.format.GZip";
            Vl.decompress = function(a) {
                a = pako.ungzip(a.b.bufferValue);
                return bb.ofData(a)
            };
            var Wl = function() {};
            g["lime._internal.format.LZMA"] = Wl;
            Wl.__name__ = "lime._internal.format.LZMA";
            Wl.decompress = function(a) {
                return null
            };
            var Xl = function() {};
            g["lime._internal.format.Zlib"] = Xl;
            Xl.__name__ =
                "lime._internal.format.Zlib";
            Xl.decompress = function(a) {
                a = pako.inflate(a.b.bufferValue);
                return bb.ofData(a)
            };
            var Ma = function() {};
            g["lime._internal.graphics.ImageCanvasUtil"] = Ma;
            Ma.__name__ = "lime._internal.graphics.ImageCanvasUtil";
            Ma.colorTransform = function(a, b, c) {
                Ma.convertToData(a);
                xc.colorTransform(a, b, c)
            };
            Ma.convertToCanvas = function(a, b) {
                null == b && (b = !1);
                var c = a.buffer;
                null != c.__srcImage ? (null == c.__srcCanvas && (Ma.createCanvas(a, c.__srcImage.width, c.__srcImage.height), c.__srcContext.drawImage(c.__srcImage,
                    0, 0)), c.__srcImage = null) : null == c.__srcCanvas && null != c.data ? (a.set_transparent(!0), Ma.createCanvas(a, c.width, c.height), Ma.createImageData(a), c.__srcContext.putImageData(c.__srcImageData, 0, 0)) : a.type == Kd.DATA && null != c.__srcImageData && a.dirty && (c.__srcContext.putImageData(c.__srcImageData, 0, 0), a.dirty = !1);
                b ? (c.data = null, c.__srcImageData = null) : null == c.data && null != c.__srcImageData && (c.data = c.__srcImageData.data);
                a.type = Kd.CANVAS
            };
            Ma.convertToData = function(a, b) {
                null == b && (b = !1);
                var c = a.buffer;
                null != c.__srcImage &&
                    Ma.convertToCanvas(a);
                if (null != c.__srcCanvas && null == c.data) Ma.createImageData(a), a.type == Kd.CANVAS && (a.dirty = !1);
                else if (a.type == Kd.CANVAS && null != c.__srcCanvas && a.dirty) {
                    if (null == c.__srcImageData) Ma.createImageData(a);
                    else {
                        c.__srcImageData = c.__srcContext.getImageData(0, 0, c.width, c.height);
                        var d = c.__srcImageData.data.buffer;
                        d = null != d ? new Uint8Array(d) : null;
                        c.data = d
                    }
                    a.dirty = !1
                }
                b && (a.buffer.__srcCanvas = null, a.buffer.__srcContext = null);
                a.type = Kd.DATA
            };
            Ma.copyChannel = function(a, b, c, d, e, f) {
                Ma.convertToData(b);
                Ma.convertToData(a);
                xc.copyChannel(a, b, c, d, e, f)
            };
            Ma.copyPixels = function(a, b, c, d, e, f, k) {
                null == k && (k = !1);
                null == d || d.x >= a.width || d.y >= a.height || null == c || 1 > c.width || 1 > c.height || (null != e && e.get_transparent() && (null == f && (f = new og), b = b.clone(), b.copyChannel(e, new Nd(c.x + f.x, c.y + f.y, c.width, c.height), new og(c.x, c.y), ef.ALPHA, ef.ALPHA)), Ma.convertToCanvas(a, !0), k || a.get_transparent() && b.get_transparent() && a.buffer.__srcContext.clearRect(d.x + a.offsetX, d.y + a.offsetY, c.width + a.offsetX, c.height + a.offsetY), Ma.convertToCanvas(b),
                    null != b.buffer.get_src() && (a.buffer.__srcContext.globalCompositeOperation = "source-over", a.buffer.__srcContext.drawImage(b.buffer.get_src(), c.x + b.offsetX | 0, c.y + b.offsetY | 0, c.width | 0, c.height | 0, d.x + a.offsetX | 0, d.y + a.offsetY | 0, c.width | 0, c.height | 0)), a.dirty = !0, a.version++)
            };
            Ma.createCanvas = function(a, b, c) {
                var d = a.buffer;
                null == d.__srcCanvas && (d.__srcCanvas = window.document.createElement("canvas"), d.__srcCanvas.width = b, d.__srcCanvas.height = c, a.get_transparent() ? d.__srcContext = d.__srcCanvas.getContext("2d") :
                    (a.get_transparent() || d.__srcCanvas.setAttribute("moz-opaque", "true"), d.__srcContext = d.__srcCanvas.getContext("2d", {
                        alpha: !1
                    })))
            };
            Ma.createImageData = function(a) {
                a = a.buffer;
                if (null == a.__srcImageData) {
                    null == a.data ? a.__srcImageData = a.__srcContext.getImageData(0, 0, a.width, a.height) : (a.__srcImageData = a.__srcContext.createImageData(a.width, a.height), a.__srcImageData.data.set(a.data));
                    var b = a.__srcImageData.data.buffer;
                    b = null != b ? new Uint8Array(b) : null;
                    a.data = b
                }
            };
            Ma.fillRect = function(a, b, c, d) {
                Ma.convertToCanvas(a);
                if (1 == d) {
                    d = c >> 16 & 255;
                    var e = c >> 8 & 255;
                    var f = c & 255;
                    c = a.get_transparent() ? c >> 24 & 255 : 255
                } else d = c >> 24 & 255, e = c >> 16 & 255, f = c >> 8 & 255, c = a.get_transparent() ? c & 255 : 255;
                0 == b.x && 0 == b.y && b.width == a.width && b.height == a.height && a.get_transparent() && 0 == c ? a.buffer.__srcCanvas.width = a.buffer.width : (255 > c && a.buffer.__srcContext.clearRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY), 0 < c && (a.buffer.__srcContext.fillStyle = "rgba(" + d + ", " + e + ", " + f + ", " + c / 255 + ")", a.buffer.__srcContext.fillRect(b.x + a.offsetX,
                    b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY)), a.dirty = !0, a.version++)
            };
            Ma.setPixel = function(a, b, c, d, e) {
                Ma.convertToData(a);
                xc.setPixel(a, b, c, d, e)
            };
            Ma.setPixel32 = function(a, b, c, d, e) {
                Ma.convertToData(a);
                xc.setPixel32(a, b, c, d, e)
            };
            Ma.sync = function(a, b) {
                null != a && (a.type != Kd.CANVAS || null == a.buffer.__srcCanvas && null == a.buffer.data ? a.type == Kd.DATA && Ma.convertToData(a, b) : Ma.convertToCanvas(a, b))
            };
            var xc = function() {};
            g["lime._internal.graphics.ImageDataUtil"] = xc;
            xc.__name__ = "lime._internal.graphics.ImageDataUtil";
            xc.colorTransform = function(a, b, c) {
                var d = a.buffer.data;
                if (null != d) {
                    var e = a.buffer.format,
                        f = a.buffer.premultiplied;
                    b = new kf(a, b);
                    var k = tc.getAlphaTable(c),
                        p = tc.getRedTable(c),
                        m = tc.getGreenTable(c);
                    c = tc.getBlueTable(c);
                    for (var h, g, l, q = 0, n = b.height; q < n;) {
                        h = q++;
                        h = b.byteOffset + b.stride * h;
                        for (var r = 0, D = b.width; r < D;) {
                            g = r++;
                            g = h + 4 * g;
                            var w = e,
                                x = f;
                            null == x && (x = !1);
                            null == w && (w = 0);
                            switch (w) {
                                case 0:
                                    l = (d[g] & 255) << 24 | (d[g + 1] & 255) << 16 | (d[g + 2] & 255) << 8 | d[g + 3] & 255;
                                    break;
                                case 1:
                                    l = (d[g + 1] & 255) << 24 | (d[g + 2] & 255) << 16 | (d[g + 3] &
                                        255) << 8 | d[g] & 255;
                                    break;
                                case 2:
                                    l = (d[g + 2] & 255) << 24 | (d[g + 1] & 255) << 16 | (d[g] & 255) << 8 | d[g + 3] & 255
                            }
                            x && 0 != (l & 255) && 255 != (l & 255) && (R.unmult = 255 / (l & 255), l = (R.__clamp[Math.round((l >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((l >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((l >>> 8 & 255) * R.unmult)] & 255) << 8 | l & 255);
                            l = (p[l >>> 24 & 255] & 255) << 24 | (m[l >>> 16 & 255] & 255) << 16 | (c[l >>> 8 & 255] & 255) << 8 | k[l & 255] & 255;
                            w = e;
                            x = f;
                            null == x && (x = !1);
                            null == w && (w = 0);
                            x && (0 == (l & 255) ? 0 != l && (l = 0) : 255 != (l & 255) && (R.a16 = R.__alpha16[l & 255],
                                l = ((l >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((l >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((l >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | l & 255));
                            switch (w) {
                                case 0:
                                    d[g] = l >>> 24 & 255;
                                    d[g + 1] = l >>> 16 & 255;
                                    d[g + 2] = l >>> 8 & 255;
                                    d[g + 3] = l & 255;
                                    break;
                                case 1:
                                    d[g] = l & 255;
                                    d[g + 1] = l >>> 24 & 255;
                                    d[g + 2] = l >>> 16 & 255;
                                    d[g + 3] = l >>> 8 & 255;
                                    break;
                                case 2:
                                    d[g] = l >>> 8 & 255, d[g + 1] = l >>> 16 & 255, d[g + 2] = l >>> 24 & 255, d[g + 3] = l & 255
                            }
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            };
            xc.copyChannel = function(a, b, c, d, e, f) {
                switch (f._hx_index) {
                    case 0:
                        var k = 0;
                        break;
                    case 1:
                        k = 1;
                        break;
                    case 2:
                        k = 2;
                        break;
                    case 3:
                        k = 3
                }
                switch (e._hx_index) {
                    case 0:
                        var p =
                            0;
                        break;
                    case 1:
                        p = 1;
                        break;
                    case 2:
                        p = 2;
                        break;
                    case 3:
                        p = 3
                }
                e = b.buffer.data;
                f = a.buffer.data;
                if (null != e && null != f) {
                    c = new kf(b, c);
                    d = new kf(a, new Nd(d.x, d.y, c.width, c.height));
                    var m = b.buffer.format,
                        h = a.buffer.format;
                    b = b.buffer.premultiplied;
                    for (var g = a.buffer.premultiplied, l, q, n, r, D = 0, w = 0, x = d.height; w < x;) {
                        q = w++;
                        l = c.byteOffset + c.stride * q;
                        q = d.byteOffset + d.stride * q;
                        for (var u = 0, B = d.width; u < B;) {
                            u++;
                            var v = m,
                                y = b;
                            null == y && (y = !1);
                            null == v && (v = 0);
                            switch (v) {
                                case 0:
                                    n = (e[l] & 255) << 24 | (e[l + 1] & 255) << 16 | (e[l + 2] & 255) << 8 | e[l + 3] &
                                        255;
                                    break;
                                case 1:
                                    n = (e[l + 1] & 255) << 24 | (e[l + 2] & 255) << 16 | (e[l + 3] & 255) << 8 | e[l] & 255;
                                    break;
                                case 2:
                                    n = (e[l + 2] & 255) << 24 | (e[l + 1] & 255) << 16 | (e[l] & 255) << 8 | e[l + 3] & 255
                            }
                            y && 0 != (n & 255) && 255 != (n & 255) && (R.unmult = 255 / (n & 255), n = (R.__clamp[Math.round((n >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((n >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((n >>> 8 & 255) * R.unmult)] & 255) << 8 | n & 255);
                            v = h;
                            y = g;
                            null == y && (y = !1);
                            null == v && (v = 0);
                            switch (v) {
                                case 0:
                                    r = (f[q] & 255) << 24 | (f[q + 1] & 255) << 16 | (f[q + 2] & 255) << 8 | f[q + 3] & 255;
                                    break;
                                case 1:
                                    r =
                                        (f[q + 1] & 255) << 24 | (f[q + 2] & 255) << 16 | (f[q + 3] & 255) << 8 | f[q] & 255;
                                    break;
                                case 2:
                                    r = (f[q + 2] & 255) << 24 | (f[q + 1] & 255) << 16 | (f[q] & 255) << 8 | f[q + 3] & 255
                            }
                            y && 0 != (r & 255) && 255 != (r & 255) && (R.unmult = 255 / (r & 255), r = (R.__clamp[Math.round((r >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((r >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((r >>> 8 & 255) * R.unmult)] & 255) << 8 | r & 255);
                            switch (p) {
                                case 0:
                                    D = n >>> 24 & 255;
                                    break;
                                case 1:
                                    D = n >>> 16 & 255;
                                    break;
                                case 2:
                                    D = n >>> 8 & 255;
                                    break;
                                case 3:
                                    D = n & 255
                            }
                            switch (k) {
                                case 0:
                                    r = (D & 255) << 24 | (r >>> 16 & 255) <<
                                        16 | (r >>> 8 & 255) << 8 | r & 255;
                                    break;
                                case 1:
                                    r = (r >>> 24 & 255) << 24 | (D & 255) << 16 | (r >>> 8 & 255) << 8 | r & 255;
                                    break;
                                case 2:
                                    r = (r >>> 24 & 255) << 24 | (r >>> 16 & 255) << 16 | (D & 255) << 8 | r & 255;
                                    break;
                                case 3:
                                    r = (r >>> 24 & 255) << 24 | (r >>> 16 & 255) << 16 | (r >>> 8 & 255) << 8 | D & 255
                            }
                            v = h;
                            y = g;
                            null == y && (y = !1);
                            null == v && (v = 0);
                            y && (0 == (r & 255) ? 0 != r && (r = 0) : 255 != (r & 255) && (R.a16 = R.__alpha16[r & 255], r = ((r >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((r >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((r >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | r & 255));
                            switch (v) {
                                case 0:
                                    f[q] = r >>> 24 & 255;
                                    f[q + 1] = r >>> 16 & 255;
                                    f[q + 2] = r >>> 8 &
                                        255;
                                    f[q + 3] = r & 255;
                                    break;
                                case 1:
                                    f[q] = r & 255;
                                    f[q + 1] = r >>> 24 & 255;
                                    f[q + 2] = r >>> 16 & 255;
                                    f[q + 3] = r >>> 8 & 255;
                                    break;
                                case 2:
                                    f[q] = r >>> 8 & 255, f[q + 1] = r >>> 16 & 255, f[q + 2] = r >>> 24 & 255, f[q + 3] = r & 255
                            }
                            l += 4;
                            q += 4
                        }
                    }
                    a.dirty = !0;
                    a.version++
                }
            };
            xc.copyPixels = function(a, b, c, d, e, f, k) {
                null == k && (k = !1);
                if (a.width == b.width && a.height == b.height && c.width == b.width && c.height == b.height && 0 == c.x && 0 == c.y && 0 == d.x && 0 == d.y && null == e && null == f && 0 == k && a.get_format() == b.get_format()) a.buffer.data.set(b.buffer.data);
                else {
                    var p = b.buffer.data,
                        m = a.buffer.data;
                    if (null == p || null == m) return;
                    c = new kf(b, c);
                    var h = new Nd(d.x, d.y, c.width, c.height);
                    h = new kf(a, h);
                    var g = b.buffer.format,
                        l = a.buffer.format,
                        q = b.buffer.premultiplied,
                        n = a.buffer.premultiplied,
                        r = b.buffer.bitsPerPixel / 8 | 0,
                        D = a.buffer.bitsPerPixel / 8 | 0,
                        w = null != e && e.get_transparent();
                    k = k || w && !a.get_transparent() || !k && !a.get_transparent() && b.get_transparent();
                    if (w)
                        if (D = e.buffer.data, b = e.buffer.format, e = new kf(e, new Nd(c.x + (null == f ? 0 : f.x), c.y + (null == f ? 0 : f.y), c.width, c.height)), h.clip(d.x | 0, d.y | 0, e.width, e.height),
                            k)
                            for (k = 0, r = h.height; k < r;)
                                for (w = k++, d = c.byteOffset + c.stride * w, f = h.byteOffset + h.stride * w, w = e.byteOffset + e.stride * w, J = 0, F = h.width; J < F;) {
                                    J++;
                                    var x = g;
                                    var u = q;
                                    null == u && (u = !1);
                                    null == x && (x = 0);
                                    switch (x) {
                                        case 0:
                                            var B = (p[d] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d + 2] & 255) << 8 | p[d + 3] & 255;
                                            break;
                                        case 1:
                                            B = (p[d + 1] & 255) << 24 | (p[d + 2] & 255) << 16 | (p[d + 3] & 255) << 8 | p[d] & 255;
                                            break;
                                        case 2:
                                            B = (p[d + 2] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d] & 255) << 8 | p[d + 3] & 255
                                    }
                                    u && 0 != (B & 255) && 255 != (B & 255) && (R.unmult = 255 / (B & 255), B = (R.__clamp[Math.round((B >>> 24 & 255) *
                                        R.unmult)] & 255) << 24 | (R.__clamp[Math.round((B >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((B >>> 8 & 255) * R.unmult)] & 255) << 8 | B & 255);
                                    x = l;
                                    u = n;
                                    null == u && (u = !1);
                                    null == x && (x = 0);
                                    switch (x) {
                                        case 0:
                                            var v = (m[f] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f + 2] & 255) << 8 | m[f + 3] & 255;
                                            break;
                                        case 1:
                                            v = (m[f + 1] & 255) << 24 | (m[f + 2] & 255) << 16 | (m[f + 3] & 255) << 8 | m[f] & 255;
                                            break;
                                        case 2:
                                            v = (m[f + 2] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f] & 255) << 8 | m[f + 3] & 255
                                    }
                                    u && 0 != (v & 255) && 255 != (v & 255) && (R.unmult = 255 / (v & 255), v = (R.__clamp[Math.round((v >>> 24 & 255) * R.unmult)] &
                                        255) << 24 | (R.__clamp[Math.round((v >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((v >>> 8 & 255) * R.unmult)] & 255) << 8 | v & 255);
                                    x = b;
                                    u = !1;
                                    null == u && (u = !1);
                                    null == x && (x = 0);
                                    switch (x) {
                                        case 0:
                                            var y = (D[w] & 255) << 24 | (D[w + 1] & 255) << 16 | (D[w + 2] & 255) << 8 | D[w + 3] & 255;
                                            break;
                                        case 1:
                                            y = (D[w + 1] & 255) << 24 | (D[w + 2] & 255) << 16 | (D[w + 3] & 255) << 8 | D[w] & 255;
                                            break;
                                        case 2:
                                            y = (D[w + 2] & 255) << 24 | (D[w + 1] & 255) << 16 | (D[w] & 255) << 8 | D[w + 3] & 255
                                    }
                                    u && 0 != (y & 255) && 255 != (y & 255) && (R.unmult = 255 / (y & 255), y = (R.__clamp[Math.round((y >>> 24 & 255) * R.unmult)] & 255) << 24 |
                                        (R.__clamp[Math.round((y >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((y >>> 8 & 255) * R.unmult)] & 255) << 8 | y & 255);
                                    u = (y & 255) / 255 * ((B & 255) / 255);
                                    if (0 < u) {
                                        var t = (v & 255) / 255;
                                        var A = 1 - u;
                                        x = u + t * A;
                                        L = R.__clamp[Math.round(((B >>> 24 & 255) * u + (v >>> 24 & 255) * t * A) / x)];
                                        v = (L & 255) << 24 | (v >>> 16 & 255) << 16 | (v >>> 8 & 255) << 8 | v & 255;
                                        L = R.__clamp[Math.round(((B >>> 16 & 255) * u + (v >>> 16 & 255) * t * A) / x)];
                                        v = (v >>> 24 & 255) << 24 | (L & 255) << 16 | (v >>> 8 & 255) << 8 | v & 255;
                                        u = R.__clamp[Math.round(((B >>> 8 & 255) * u + (v >>> 8 & 255) * t * A) / x)];
                                        v = (v >>> 24 & 255) << 24 | (v >>> 16 & 255) <<
                                            16 | (u & 255) << 8 | v & 255;
                                        x = R.__clamp[Math.round(255 * x)];
                                        v = (v >>> 24 & 255) << 24 | (v >>> 16 & 255) << 16 | (v >>> 8 & 255) << 8 | x & 255;
                                        x = l;
                                        u = n;
                                        null == u && (u = !1);
                                        null == x && (x = 0);
                                        u && (0 == (v & 255) ? 0 != v && (v = 0) : 255 != (v & 255) && (R.a16 = R.__alpha16[v & 255], v = ((v >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((v >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((v >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | v & 255));
                                        switch (x) {
                                            case 0:
                                                m[f] = v >>> 24 & 255;
                                                m[f + 1] = v >>> 16 & 255;
                                                m[f + 2] = v >>> 8 & 255;
                                                m[f + 3] = v & 255;
                                                break;
                                            case 1:
                                                m[f] = v & 255;
                                                m[f + 1] = v >>> 24 & 255;
                                                m[f + 2] = v >>> 16 & 255;
                                                m[f + 3] = v >>> 8 & 255;
                                                break;
                                            case 2:
                                                m[f] = v >>>
                                                    8 & 255, m[f + 1] = v >>> 16 & 255, m[f + 2] = v >>> 24 & 255, m[f + 3] = v & 255
                                        }
                                    }
                                    d += 4;
                                    f += 4;
                                    w += 4
                                } else
                                    for (k = 0, r = h.height; k < r;)
                                        for (w = k++, d = c.byteOffset + c.stride * w, f = h.byteOffset + h.stride * w, w = e.byteOffset + e.stride * w, J = 0, F = h.width; J < F;) {
                                            J++;
                                            x = g;
                                            u = q;
                                            null == u && (u = !1);
                                            null == x && (x = 0);
                                            switch (x) {
                                                case 0:
                                                    B = (p[d] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d + 2] & 255) << 8 | p[d + 3] & 255;
                                                    break;
                                                case 1:
                                                    B = (p[d + 1] & 255) << 24 | (p[d + 2] & 255) << 16 | (p[d + 3] & 255) << 8 | p[d] & 255;
                                                    break;
                                                case 2:
                                                    B = (p[d + 2] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d] & 255) << 8 | p[d + 3] & 255
                                            }
                                            u && 0 != (B & 255) && 255 != (B & 255) &&
                                                (R.unmult = 255 / (B & 255), B = (R.__clamp[Math.round((B >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((B >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((B >>> 8 & 255) * R.unmult)] & 255) << 8 | B & 255);
                                            x = b;
                                            u = !1;
                                            null == u && (u = !1);
                                            null == x && (x = 0);
                                            switch (x) {
                                                case 0:
                                                    y = (D[w] & 255) << 24 | (D[w + 1] & 255) << 16 | (D[w + 2] & 255) << 8 | D[w + 3] & 255;
                                                    break;
                                                case 1:
                                                    y = (D[w + 1] & 255) << 24 | (D[w + 2] & 255) << 16 | (D[w + 3] & 255) << 8 | D[w] & 255;
                                                    break;
                                                case 2:
                                                    y = (D[w + 2] & 255) << 24 | (D[w + 1] & 255) << 16 | (D[w] & 255) << 8 | D[w + 3] & 255
                                            }
                                            u && 0 != (y & 255) && 255 != (y & 255) && (R.unmult = 255 /
                                                (y & 255), y = (R.__clamp[Math.round((y >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((y >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((y >>> 8 & 255) * R.unmult)] & 255) << 8 | y & 255);
                                            L = Math.round((y & 255) / 255 * (B & 255));
                                            B = (B >>> 24 & 255) << 24 | (B >>> 16 & 255) << 16 | (B >>> 8 & 255) << 8 | L & 255;
                                            x = l;
                                            u = n;
                                            null == u && (u = !1);
                                            null == x && (x = 0);
                                            u && (0 == (B & 255) ? 0 != B && (B = 0) : 255 != (B & 255) && (R.a16 = R.__alpha16[B & 255], B = ((B >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((B >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((B >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | B & 255));
                                            switch (x) {
                                                case 0:
                                                    m[f] =
                                                        B >>> 24 & 255;
                                                    m[f + 1] = B >>> 16 & 255;
                                                    m[f + 2] = B >>> 8 & 255;
                                                    m[f + 3] = B & 255;
                                                    break;
                                                case 1:
                                                    m[f] = B & 255;
                                                    m[f + 1] = B >>> 24 & 255;
                                                    m[f + 2] = B >>> 16 & 255;
                                                    m[f + 3] = B >>> 8 & 255;
                                                    break;
                                                case 2:
                                                    m[f] = B >>> 8 & 255, m[f + 1] = B >>> 16 & 255, m[f + 2] = B >>> 24 & 255, m[f + 3] = B & 255
                                            }
                                            d += 4;
                                            f += 4;
                                            w += 4
                                        } else if (k)
                                            for (k = 0, r = h.height; k < r;) {
                                                w = k++;
                                                d = c.byteOffset + c.stride * w;
                                                f = h.byteOffset + h.stride * w;
                                                for (var J = 0, F = h.width; J < F;) {
                                                    J++;
                                                    x = g;
                                                    u = q;
                                                    null == u && (u = !1);
                                                    null == x && (x = 0);
                                                    switch (x) {
                                                        case 0:
                                                            B = (p[d] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d + 2] & 255) << 8 | p[d + 3] & 255;
                                                            break;
                                                        case 1:
                                                            B = (p[d + 1] & 255) << 24 |
                                                                (p[d + 2] & 255) << 16 | (p[d + 3] & 255) << 8 | p[d] & 255;
                                                            break;
                                                        case 2:
                                                            B = (p[d + 2] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d] & 255) << 8 | p[d + 3] & 255
                                                    }
                                                    u && 0 != (B & 255) && 255 != (B & 255) && (R.unmult = 255 / (B & 255), B = (R.__clamp[Math.round((B >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((B >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((B >>> 8 & 255) * R.unmult)] & 255) << 8 | B & 255);
                                                    x = l;
                                                    u = n;
                                                    null == u && (u = !1);
                                                    null == x && (x = 0);
                                                    switch (x) {
                                                        case 0:
                                                            v = (m[f] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f + 2] & 255) << 8 | m[f + 3] & 255;
                                                            break;
                                                        case 1:
                                                            v = (m[f + 1] & 255) << 24 | (m[f + 2] & 255) <<
                                                                16 | (m[f + 3] & 255) << 8 | m[f] & 255;
                                                            break;
                                                        case 2:
                                                            v = (m[f + 2] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f] & 255) << 8 | m[f + 3] & 255
                                                    }
                                                    u && 0 != (v & 255) && 255 != (v & 255) && (R.unmult = 255 / (v & 255), v = (R.__clamp[Math.round((v >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((v >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((v >>> 8 & 255) * R.unmult)] & 255) << 8 | v & 255);
                                                    u = (B & 255) / 255;
                                                    t = (v & 255) / 255;
                                                    A = 1 - u;
                                                    x = u + t * A;
                                                    if (0 == x) v = 0;
                                                    else {
                                                        var L = R.__clamp[Math.round(((B >>> 24 & 255) * u + (v >>> 24 & 255) * t * A) / x)];
                                                        v = (L & 255) << 24 | (v >>> 16 & 255) << 16 | (v >>> 8 & 255) << 8 | v & 255;
                                                        L = R.__clamp[Math.round(((B >>> 16 & 255) * u + (v >>> 16 & 255) * t * A) / x)];
                                                        v = (v >>> 24 & 255) << 24 | (L & 255) << 16 | (v >>> 8 & 255) << 8 | v & 255;
                                                        u = R.__clamp[Math.round(((B >>> 8 & 255) * u + (v >>> 8 & 255) * t * A) / x)];
                                                        v = (v >>> 24 & 255) << 24 | (v >>> 16 & 255) << 16 | (u & 255) << 8 | v & 255;
                                                        x = R.__clamp[Math.round(255 * x)];
                                                        v = (v >>> 24 & 255) << 24 | (v >>> 16 & 255) << 16 | (v >>> 8 & 255) << 8 | x & 255
                                                    }
                                                    x = l;
                                                    u = n;
                                                    null == u && (u = !1);
                                                    null == x && (x = 0);
                                                    u && (0 == (v & 255) ? 0 != v && (v = 0) : 255 != (v & 255) && (R.a16 = R.__alpha16[v & 255], v = ((v >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((v >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((v >>> 8 & 255) * R.a16 >>
                                                        16 & 255) << 8 | v & 255));
                                                    switch (x) {
                                                        case 0:
                                                            m[f] = v >>> 24 & 255;
                                                            m[f + 1] = v >>> 16 & 255;
                                                            m[f + 2] = v >>> 8 & 255;
                                                            m[f + 3] = v & 255;
                                                            break;
                                                        case 1:
                                                            m[f] = v & 255;
                                                            m[f + 1] = v >>> 24 & 255;
                                                            m[f + 2] = v >>> 16 & 255;
                                                            m[f + 3] = v >>> 8 & 255;
                                                            break;
                                                        case 2:
                                                            m[f] = v >>> 8 & 255, m[f + 1] = v >>> 16 & 255, m[f + 2] = v >>> 24 & 255, m[f + 3] = v & 255
                                                    }
                                                    d += 4;
                                                    f += 4
                                                }
                                            } else if (g == l && q == n && r == D)
                                                for (k = 0, r = h.height; k < r;) w = k++, d = c.byteOffset + c.stride * w, f = h.byteOffset + h.stride * w, m.set(p.subarray(d, d + h.width * D), f);
                                            else
                                                for (k = 0, r = h.height; k < r;)
                                                    for (w = k++, d = c.byteOffset + c.stride * w, f = h.byteOffset + h.stride * w, J = 0,
                                                        F = h.width; J < F;) {
                                                        J++;
                                                        x = g;
                                                        u = q;
                                                        null == u && (u = !1);
                                                        null == x && (x = 0);
                                                        switch (x) {
                                                            case 0:
                                                                B = (p[d] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d + 2] & 255) << 8 | p[d + 3] & 255;
                                                                break;
                                                            case 1:
                                                                B = (p[d + 1] & 255) << 24 | (p[d + 2] & 255) << 16 | (p[d + 3] & 255) << 8 | p[d] & 255;
                                                                break;
                                                            case 2:
                                                                B = (p[d + 2] & 255) << 24 | (p[d + 1] & 255) << 16 | (p[d] & 255) << 8 | p[d + 3] & 255
                                                        }
                                                        u && 0 != (B & 255) && 255 != (B & 255) && (R.unmult = 255 / (B & 255), B = (R.__clamp[Math.round((B >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((B >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((B >>> 8 & 255) * R.unmult)] & 255) << 8 |
                                                            B & 255);
                                                        x = l;
                                                        u = n;
                                                        null == u && (u = !1);
                                                        null == x && (x = 0);
                                                        u && (0 == (B & 255) ? 0 != B && (B = 0) : 255 != (B & 255) && (R.a16 = R.__alpha16[B & 255], B = ((B >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((B >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((B >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | B & 255));
                                                        switch (x) {
                                                            case 0:
                                                                m[f] = B >>> 24 & 255;
                                                                m[f + 1] = B >>> 16 & 255;
                                                                m[f + 2] = B >>> 8 & 255;
                                                                m[f + 3] = B & 255;
                                                                break;
                                                            case 1:
                                                                m[f] = B & 255;
                                                                m[f + 1] = B >>> 24 & 255;
                                                                m[f + 2] = B >>> 16 & 255;
                                                                m[f + 3] = B >>> 8 & 255;
                                                                break;
                                                            case 2:
                                                                m[f] = B >>> 8 & 255, m[f + 1] = B >>> 16 & 255, m[f + 2] = B >>> 24 & 255, m[f + 3] = B & 255
                                                        }
                                                        d += 4;
                                                        f += 4
                                                    }
                }
                a.dirty = !0;
                a.version++
            };
            xc.fillRect =
                function(a, b, c, d) {
                    switch (d) {
                        case 1:
                            c = (c >>> 16 & 255) << 24 | (c >>> 8 & 255) << 16 | (c & 255) << 8 | c >>> 24 & 255;
                            break;
                        case 2:
                            c = (c >>> 8 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 24 & 255) << 8 | c & 255
                    }
                    a.get_transparent() || (c = (c >>> 24 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 8 & 255) << 8 | 255);
                    var e = a.buffer.data;
                    if (null != e) {
                        d = a.buffer.format;
                        var f = a.buffer.premultiplied;
                        f && (0 == (c & 255) ? 0 != c && (c = 0) : 255 != (c & 255) && (R.a16 = R.__alpha16[c & 255], c = ((c >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((c >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((c >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | c & 255));
                        b = new kf(a,
                            b);
                        for (var k, p = 0, m = b.height; p < m;) {
                            f = p++;
                            k = b.byteOffset + b.stride * f;
                            for (var h = 0, g = b.width; h < g;) {
                                f = h++;
                                var l = k + 4 * f,
                                    q = d;
                                f = !1;
                                null == f && (f = !1);
                                null == q && (q = 0);
                                f && (0 == (c & 255) ? 0 != c && (c = 0) : 255 != (c & 255) && (R.a16 = R.__alpha16[c & 255], c = ((c >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((c >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((c >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | c & 255));
                                switch (q) {
                                    case 0:
                                        e[l] = c >>> 24 & 255;
                                        e[l + 1] = c >>> 16 & 255;
                                        e[l + 2] = c >>> 8 & 255;
                                        e[l + 3] = c & 255;
                                        break;
                                    case 1:
                                        e[l] = c & 255;
                                        e[l + 1] = c >>> 24 & 255;
                                        e[l + 2] = c >>> 16 & 255;
                                        e[l + 3] = c >>> 8 & 255;
                                        break;
                                    case 2:
                                        e[l] =
                                            c >>> 8 & 255, e[l + 1] = c >>> 16 & 255, e[l + 2] = c >>> 24 & 255, e[l + 3] = c & 255
                                }
                            }
                        }
                        a.dirty = !0;
                        a.version++
                    }
                };
            xc.setFormat = function(a, b) {
                var c = a.buffer.data;
                if (null != c) {
                    var d = c.length / 4 | 0;
                    switch (a.get_format()) {
                        case 0:
                            var e = 0;
                            var f = 1;
                            var k = 2;
                            var p = 3;
                            break;
                        case 1:
                            e = 1;
                            f = 2;
                            k = 3;
                            p = 0;
                            break;
                        case 2:
                            e = 2, f = 1, k = 0, p = 3
                    }
                    switch (b) {
                        case 0:
                            var m = 0;
                            var h = 1;
                            var g = 2;
                            var l = 3;
                            break;
                        case 1:
                            m = 1;
                            h = 2;
                            g = 3;
                            l = 0;
                            break;
                        case 2:
                            m = 2, h = 1, g = 0, l = 3
                    }
                    for (var q = 0; q < d;) {
                        var n = 4 * q++;
                        var r = c[n + e];
                        var D = c[n + f];
                        var w = c[n + k];
                        var x = c[n + p];
                        c[n + m] = r;
                        c[n + h] = D;
                        c[n + g] = w;
                        c[n +
                            l] = x
                    }
                    a.buffer.format = b;
                    a.dirty = !0;
                    a.version++
                }
            };
            xc.setPixel = function(a, b, c, d, e) {
                switch (e) {
                    case 1:
                        d = (d >>> 16 & 255) << 24 | (d >>> 8 & 255) << 16 | (d & 255) << 8 | d >>> 24 & 255;
                        break;
                    case 2:
                        d = (d >>> 8 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 24 & 255) << 8 | d & 255
                }
                var f = 0,
                    k = a.buffer.data,
                    p = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                e = a.buffer.format;
                var m = a.buffer.premultiplied;
                null == m && (m = !1);
                null == e && (e = 0);
                switch (e) {
                    case 0:
                        f = (k[p] & 255) << 24 | (k[p + 1] & 255) << 16 | (k[p + 2] & 255) << 8 | k[p + 3] & 255;
                        break;
                    case 1:
                        f = (k[p + 1] & 255) << 24 | (k[p + 2] & 255) << 16 |
                            (k[p + 3] & 255) << 8 | k[p] & 255;
                        break;
                    case 2:
                        f = (k[p + 2] & 255) << 24 | (k[p + 1] & 255) << 16 | (k[p] & 255) << 8 | k[p + 3] & 255
                }
                m && 0 != (f & 255) && 255 != (f & 255) && (R.unmult = 255 / (f & 255), f = (R.__clamp[Math.round((f >>> 24 & 255) * R.unmult)] & 255) << 24 | (R.__clamp[Math.round((f >>> 16 & 255) * R.unmult)] & 255) << 16 | (R.__clamp[Math.round((f >>> 8 & 255) * R.unmult)] & 255) << 8 | f & 255);
                d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | f & 255;
                k = a.buffer.data;
                p = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                e = a.buffer.format;
                m = a.buffer.premultiplied;
                null == m && (m = !1);
                null == e && (e = 0);
                m && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (R.a16 = R.__alpha16[d & 255], d = ((d >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * R.a16 >> 16 & 255) << 8 | d & 255));
                switch (e) {
                    case 0:
                        k[p] = d >>> 24 & 255;
                        k[p + 1] = d >>> 16 & 255;
                        k[p + 2] = d >>> 8 & 255;
                        k[p + 3] = d & 255;
                        break;
                    case 1:
                        k[p] = d & 255;
                        k[p + 1] = d >>> 24 & 255;
                        k[p + 2] = d >>> 16 & 255;
                        k[p + 3] = d >>> 8 & 255;
                        break;
                    case 2:
                        k[p] = d >>> 8 & 255, k[p + 1] = d >>> 16 & 255, k[p + 2] = d >>> 24 & 255, k[p + 3] = d & 255
                }
                a.dirty = !0;
                a.version++
            };
            xc.setPixel32 = function(a, b, c, d, e) {
                switch (e) {
                    case 1:
                        d =
                            (d >>> 16 & 255) << 24 | (d >>> 8 & 255) << 16 | (d & 255) << 8 | d >>> 24 & 255;
                        break;
                    case 2:
                        d = (d >>> 8 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 24 & 255) << 8 | d & 255
                }
                a.get_transparent() || (d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | 255);
                var f = a.buffer.data;
                b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
                e = a.buffer.format;
                c = a.buffer.premultiplied;
                null == c && (c = !1);
                null == e && (e = 0);
                c && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (R.a16 = R.__alpha16[d & 255], d = ((d >>> 24 & 255) * R.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * R.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * R.a16 >>
                    16 & 255) << 8 | d & 255));
                switch (e) {
                    case 0:
                        f[b] = d >>> 24 & 255;
                        f[b + 1] = d >>> 16 & 255;
                        f[b + 2] = d >>> 8 & 255;
                        f[b + 3] = d & 255;
                        break;
                    case 1:
                        f[b] = d & 255;
                        f[b + 1] = d >>> 24 & 255;
                        f[b + 2] = d >>> 16 & 255;
                        f[b + 3] = d >>> 8 & 255;
                        break;
                    case 2:
                        f[b] = d >>> 8 & 255, f[b + 1] = d >>> 16 & 255, f[b + 2] = d >>> 24 & 255, f[b + 3] = d & 255
                }
                a.dirty = !0;
                a.version++
            };
            var kf = function(a, b) {
                this.image = a;
                null == b ? this.rect = a.get_rect() : (0 > b.x && (b.x = 0), 0 > b.y && (b.y = 0), b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), 0 > b.width && (b.width = 0), 0 > b.height && (b.height =
                    0), this.rect = b);
                this.stride = a.buffer.get_stride();
                this.__update()
            };
            g["lime._internal.graphics._ImageDataUtil.ImageDataView"] = kf;
            kf.__name__ = "lime._internal.graphics._ImageDataUtil.ImageDataView";
            kf.prototype = {
                clip: function(a, b, c, d) {
                    null == this.tempRect && (this.tempRect = new Nd);
                    this.tempRect.setTo(a, b, c, d);
                    this.rect.intersection(this.tempRect, this.rect);
                    this.__update()
                },
                __update: function() {
                    this.x = Math.ceil(this.rect.x);
                    this.y = Math.ceil(this.rect.y);
                    this.width = Math.floor(this.rect.width);
                    this.height =
                        Math.floor(this.rect.height);
                    this.byteOffset = this.stride * (this.y + this.image.offsetY) + 4 * (this.x + this.image.offsetX)
                },
                __class__: kf
            };
            var Sa = function(a, b) {
                null == b && (b = !1);
                if (null != a)
                    if (b) b = new cd, b.future = this, Yc.queue({
                        promise: b,
                        work: a
                    });
                    else try {
                        this.value = a(), this.isComplete = !0
                    } catch (c) {
                        Ca.lastError = c, this.error = F.caught(c).unwrap(), this.isError = !0
                    }
            };
            g["lime.app.Future"] = Sa;
            Sa.__name__ = "lime.app.Future";
            Sa.withValue = function(a) {
                var b = new Sa;
                b.isComplete = !0;
                b.value = a;
                return b
            };
            Sa.prototype = {
                onComplete: function(a) {
                    null !=
                        a && (this.isComplete ? a(this.value) : this.isError || (null == this.__completeListeners && (this.__completeListeners = []), this.__completeListeners.push(a)));
                    return this
                },
                onError: function(a) {
                    null != a && (this.isError ? a(this.error) : this.isComplete || (null == this.__errorListeners && (this.__errorListeners = []), this.__errorListeners.push(a)));
                    return this
                },
                onProgress: function(a) {
                    null != a && (null == this.__progressListeners && (this.__progressListeners = []), this.__progressListeners.push(a));
                    return this
                },
                then: function(a) {
                    if (this.isComplete) return a(this.value);
                    if (this.isError) {
                        var b = new Sa;
                        b.isError = !0;
                        b.error = this.error;
                        return b
                    }
                    var c = new cd;
                    this.onError(r(c, c.error));
                    this.onProgress(r(c, c.progress));
                    this.onComplete(function(b) {
                        b = a(b);
                        b.onError(r(c, c.error));
                        b.onComplete(r(c, c.complete))
                    });
                    return c.future
                },
                __class__: Sa
            };
            var Yc = function() {};
            g["lime.app._Future.FutureWork"] = Yc;
            Yc.__name__ = "lime.app._Future.FutureWork";
            Yc.queue = function(a) {
                null == Yc.threadPool && (Yc.threadPool = new fl, Yc.threadPool.doWork.add(Yc.threadPool_doWork), Yc.threadPool.onComplete.add(Yc.threadPool_onComplete),
                    Yc.threadPool.onError.add(Yc.threadPool_onError));
                Yc.threadPool.queue(a)
            };
            Yc.threadPool_doWork = function(a) {
                try {
                    var b = a.work();
                    Yc.threadPool.sendComplete({
                        promise: a.promise,
                        result: b
                    })
                } catch (c) {
                    Ca.lastError = c, b = F.caught(c).unwrap(), Yc.threadPool.sendError({
                        promise: a.promise,
                        error: b
                    })
                }
            };
            Yc.threadPool_onComplete = function(a) {
                a.promise.complete(a.result)
            };
            Yc.threadPool_onError = function(a) {
                a.promise.error(a.error)
            };
            var cd = function() {
                this.future = new Sa
            };
            g["lime.app.Promise"] = cd;
            cd.__name__ = "lime.app.Promise";
            cd.prototype = {
                complete: function(a) {
                    if (!this.future.isError && (this.future.isComplete = !0, this.future.value = a, null != this.future.__completeListeners)) {
                        for (var b = 0, c = this.future.__completeListeners; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d(a)
                        }
                        this.future.__completeListeners = null
                    }
                    return this
                },
                completeWith: function(a) {
                    a.onComplete(r(this, this.complete));
                    a.onError(r(this, this.error));
                    a.onProgress(r(this, this.progress));
                    return this
                },
                error: function(a) {
                    if (!this.future.isComplete && (this.future.isError = !0, this.future.error =
                            a, null != this.future.__errorListeners)) {
                        for (var b = 0, c = this.future.__errorListeners; b < c.length;) {
                            var d = c[b];
                            ++b;
                            d(a)
                        }
                        this.future.__errorListeners = null
                    }
                    return this
                },
                progress: function(a, b) {
                    if (!this.future.isError && !this.future.isComplete && null != this.future.__progressListeners)
                        for (var c = 0, d = this.future.__progressListeners; c < d.length;) {
                            var e = d[c];
                            ++c;
                            e(a, b)
                        }
                    return this
                },
                __class__: cd
            };
            var Eg = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Dynamic_Void"] =
                Eg;
            Eg.__name__ = "lime.app._Event_Dynamic_Void";
            Eg.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1),
                        this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Eg
            };
            var gl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Float_Void"] = gl;
            gl.__name__ = "lime.app._Event_Float_Float_Float_Void";
            gl.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d <
                        e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length &&
                        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: gl
            };
            var hl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Int_Void"] = hl;
            hl.__name__ = "lime.app._Event_Float_Float_Int_Void";
            hl.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: hl
            };
            var Gh = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_Void"] = Gh;
            Gh.__name__ = "lime.app._Event_Float_Float_Void";
            Gh.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b =
                            this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: Gh
            };
            var il = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_lime_ui_MouseButton_Void"] = il;
            il.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseButton_Void";
            il.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b,
                        1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: il
            };
            var jl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"] = jl;
            jl.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void";
            jl.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d =
                            0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b, c) {
                    this.canceled = !1;
                    for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
                },
                __class__: jl
            };
            var kl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Float_Float_Void"] = kl;
            kl.__name__ = "lime.app._Event_Int_Float_Float_Void";
            kl.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0,
                                a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __class__: kl
            };
            var ll = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Float_Void"] = ll;
            ll.__name__ = "lime.app._Event_Int_Float_Void";
            ll.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f,
                                0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: ll
            };
            var Bj = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Int_Void"] = Bj;
            Bj.__name__ = "lime.app._Event_Int_Int_Void";
            Bj.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b =
                            this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: Bj
            };
            var Of = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_Void"] = Of;
            Of.__name__ = "lime.app._Event_Int_Void";
            Of.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Of
            };
            var ml = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = ml;
            ml.__name__ = "lime.app._Event_Int_lime_ui_JoystickHatPosition_Void";
            ml.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f,
                                0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __class__: ml
            };
            var nl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_String_Int_Int_Void"] = nl;
            nl.__name__ = "lime.app._Event_String_Int_Int_Void";
            nl.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f,
                                0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                __class__: nl
            };
            var Cj = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_String_Void"] = Cj;
            Cj.__name__ = "lime.app._Event_String_Void";
            Cj.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f,
                                0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                has: function(a) {
                    for (var b = 0, c = this.__listeners; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ea.compareMethods(d, a)) return !0
                    }
                    return !1
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Cj
            };
            var $b = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_Void_Void"] = $b;
            $b.__name__ = "lime.app._Event_Void_Void";
            $b.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f,
                                0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                has: function(a) {
                    for (var b = 0, c = this.__listeners; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (ea.compareMethods(d, a)) return !0
                    }
                    return !1
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function() {
                    this.canceled = !1;
                    for (var a = this.__listeners, b = this.__repeat,
                            c = 0; c < a.length && (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled););
                },
                __class__: $b
            };
            var Dj = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_graphics_RenderContext_Void"] = Dj;
            Dj.__name__ = "lime.app._Event_lime_graphics_RenderContext_Void";
            Dj.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f,
                                0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Dj
            };
            var ol = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = ol;
            ol.__name__ = "lime.app._Event_lime_ui_GamepadAxis_Float_Void";
            ol.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: ol
            };
            var Ej = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_GamepadButton_Void"] =
                Ej;
            Ej.__name__ = "lime.app._Event_lime_ui_GamepadButton_Void";
            Ej.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b,
                        1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Ej
            };
            var pl = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Gamepad_Void"] = pl;
            pl.__name__ = "lime.app._Event_lime_ui_Gamepad_Void";
            pl.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d <
                        e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length &&
                        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: pl
            };
            var ql = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Joystick_Void"] = ql;
            ql.__name__ = "lime.app._Event_lime_ui_Joystick_Void";
            ql.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: ql
            };
            var Fj = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = Fj;
            Fj.__name__ = "lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void";
            Fj.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                cancel: function() {
                    this.canceled = !0
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a, b) {
                    this.canceled = !1;
                    for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
                },
                __class__: Fj
            };
            var Fg = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Touch_Void"] = Fg;
            Fg.__name__ = "lime.app._Event_lime_ui_Touch_Void";
            Fg.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d < e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b,
                        1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: Fg
            };
            var jk = function() {
                this.canceled = !1;
                this.__listeners = [];
                this.__priorities = [];
                this.__repeat = []
            };
            g["lime.app._Event_lime_ui_Window_Void"] = jk;
            jk.__name__ = "lime.app._Event_lime_ui_Window_Void";
            jk.prototype = {
                add: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = !1);
                    for (var d = 0, e = this.__priorities.length; d <
                        e;) {
                        var f = d++;
                        if (c > this.__priorities[f]) {
                            this.__listeners.splice(f, 0, a);
                            this.__priorities.splice(f, 0, c);
                            this.__repeat.splice(f, 0, !b);
                            return
                        }
                    }
                    this.__listeners.push(a);
                    this.__priorities.push(c);
                    this.__repeat.push(!b)
                },
                remove: function(a) {
                    for (var b = this.__listeners.length; 0 <= --b;) ea.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
                },
                dispatch: function(a) {
                    this.canceled = !1;
                    for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length &&
                        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
                },
                __class__: jk
            };
            var Ia = function(a, b, c, d, e, f, k) {
                null == e && (e = -1);
                null == d && (d = -1);
                null == c && (c = 0);
                null == b && (b = 0);
                this.offsetX = b;
                this.offsetY = c;
                this.width = d;
                this.height = e;
                this.version = 0;
                null == k && (k = Kd.CANVAS);
                this.type = k;
                if (null == a) {
                    if (0 < d && 0 < e) switch (this.type._hx_index) {
                        case 0:
                            this.buffer = new jf(null, d, e);
                            Ma.createCanvas(this, d, e);
                            null != f && 0 != f && this.fillRect(new Nd(0, 0, d, e), f);
                            break;
                        case 1:
                            a = d * e * 4, a = null != a ? new Uint8Array(a) : null, this.buffer = new jf(a,
                                d, e), null != f && 0 != f && this.fillRect(new Nd(0, 0, d, e), f)
                    }
                } else this.__fromImageBuffer(a)
            };
            g["lime.graphics.Image"] = Ia;
            Ia.__name__ = "lime.graphics.Image";
            Ia.fromCanvas = function(a) {
                if (null == a) return null;
                var b = new jf(null, a.width, a.height);
                b.set_src(a);
                a = new Ia(b);
                a.type = Kd.CANVAS;
                return a
            };
            Ia.fromFile = function(a) {
                if (null == a) return null;
                var b = new Ia;
                return b.__fromFile(a) ? b : null
            };
            Ia.loadFromBase64 = function(a, b) {
                return null == a || null == b ? Sa.withValue(null) : ra.loadImage("data:" + b + ";base64," + a)
            };
            Ia.loadFromBytes =
                function(a) {
                    if (null == a) return Sa.withValue(null);
                    if (Ia.__isPNG(a)) var b = "image/png";
                    else if (Ia.__isJPG(a)) b = "image/jpeg";
                    else if (Ia.__isGIF(a)) b = "image/gif";
                    else if (Ia.__isWebP(a)) b = "image/webp";
                    else return Sa.withValue(null);
                    return ra.loadImageFromBytes(a, b)
                };
            Ia.loadFromFile = function(a) {
                return null == a ? Sa.withValue(null) : ra.loadImage(a)
            };
            Ia.__isGIF = function(a) {
                if (null == a || 6 > a.length) return !1;
                a = a.getString(0, 6);
                return "GIF87a" != a ? "GIF89a" == a : !0
            };
            Ia.__isJPG = function(a) {
                return null == a || 4 > a.length ? !1 :
                    255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2] ? 217 == a.b[a.length - 1] : !1
            };
            Ia.__isPNG = function(a) {
                return null == a || 8 > a.length ? !1 : 137 == a.b[0] && 80 == a.b[1] && 78 == a.b[2] && 71 == a.b[3] && 13 == a.b[4] && 10 == a.b[5] && 26 == a.b[6] ? 10 == a.b[7] : !1
            };
            Ia.__isWebP = function(a) {
                return null == a || 16 > a.length ? !1 : "RIFF" == a.getString(0, 4) ? "WEBP" == a.getString(8, 4) : !1
            };
            Ia.prototype = {
                clone: function() {
                    if (null != this.buffer) {
                        this.type == Kd.CANVAS ? Ma.convertToCanvas(this) : Ma.convertToData(this);
                        var a = new Ia(this.buffer.clone(), this.offsetX,
                            this.offsetY, this.width, this.height, null, this.type);
                        a.version = this.version;
                        return a
                    }
                    return new Ia(null, this.offsetX, this.offsetY, this.width, this.height, null, this.type)
                },
                colorTransform: function(a, b) {
                    a = this.__clipRect(a);
                    if (null != this.buffer && null != a) switch (this.type._hx_index) {
                        case 0:
                            Ma.colorTransform(this, a, b);
                            break;
                        case 1:
                            Ma.convertToData(this);
                            xc.colorTransform(this, a, b);
                            break;
                        case 2:
                            a.offset(this.offsetX, this.offsetY), this.buffer.__srcBitmapData.colorTransform(a.__toFlashRectangle(), tc.__toFlashColorTransform(b))
                    }
                },
                copyChannel: function(a, b, c, d, e) {
                    b = this.__clipRect(b);
                    if (null != this.buffer && null != b && !(e == ef.ALPHA && !this.get_transparent() || 0 >= b.width || 0 >= b.height)) switch (b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), this.type._hx_index) {
                        case 0:
                            Ma.copyChannel(this, a, b, c, d, e);
                            break;
                        case 1:
                            Ma.convertToData(this);
                            Ma.convertToData(a);
                            xc.copyChannel(this, a, b, c, d, e);
                            break;
                        case 2:
                            switch (d._hx_index) {
                                case 0:
                                    var f = 1;
                                    break;
                                case 1:
                                    f = 2;
                                    break;
                                case 2:
                                    f = 4;
                                    break;
                                case 3:
                                    f = 8
                            }
                            switch (e._hx_index) {
                                case 0:
                                    var k =
                                        1;
                                    break;
                                case 1:
                                    k = 2;
                                    break;
                                case 2:
                                    k = 4;
                                    break;
                                case 3:
                                    k = 8
                            }
                            b.offset(a.offsetX, a.offsetY);
                            c.offset(this.offsetX, this.offsetY);
                            this.buffer.__srcBitmapData.copyChannel(a.buffer.get_src(), b.__toFlashRectangle(), c.__toFlashPoint(), f, k)
                    }
                },
                copyPixels: function(a, b, c, d, e, f) {
                    null == f && (f = !1);
                    if (null != this.buffer && null != a && !(0 >= b.width || 0 >= b.height || 0 >= this.width || 0 >= this.height)) switch (b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), 0 > b.x && (b.width += b.x, b.x = 0), 0 > b.y && (b.height +=
                        b.y, b.y = 0), c.x + b.width > this.width && (b.width = this.width - c.x), c.y + b.height > this.height && (b.height = this.height - c.y), 0 > c.x && (b.width += c.x, b.x -= c.x, c.x = 0), 0 > c.y && (b.height += c.y, b.y -= c.y, c.y = 0), a == this && c.x < b.get_right() && c.y < b.get_bottom() && (a = this.clone()), d == a && (null == e || 0 == e.x && 0 == e.y) && (e = d = null), this.type._hx_index) {
                        case 0:
                            null != d ? (Ma.convertToData(this), Ma.convertToData(a), null != d && Ma.convertToData(d), xc.copyPixels(this, a, b, c, d, e, f)) : (Ma.convertToCanvas(this), Ma.convertToCanvas(a), Ma.copyPixels(this,
                                a, b, c, d, e, f));
                            break;
                        case 1:
                            Ma.convertToData(this);
                            Ma.convertToData(a);
                            null != d && Ma.convertToData(d);
                            xc.copyPixels(this, a, b, c, d, e, f);
                            break;
                        case 2:
                            b.offset(a.offsetX, a.offsetY), c.offset(this.offsetX, this.offsetY), null != d && null != e && e.offset(d.offsetX, d.offsetY), this.buffer.__srcBitmapData.copyPixels(a.buffer.__srcBitmapData, b.__toFlashRectangle(), c.__toFlashPoint(), null != d ? d.buffer.get_src() : null, null != e ? e.__toFlashPoint() : null, f)
                    }
                },
                fillRect: function(a, b, c) {
                    a = this.__clipRect(a);
                    if (null != this.buffer &&
                        null != a) switch (this.type._hx_index) {
                        case 0:
                            Ma.fillRect(this, a, b, c);
                            break;
                        case 1:
                            Ma.convertToData(this);
                            if (0 == this.buffer.data.length) break;
                            xc.fillRect(this, a, b, c);
                            break;
                        case 2:
                            a.offset(this.offsetX, this.offsetY);
                            if (null == c) b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255;
                            else switch (c) {
                                case 1:
                                    break;
                                case 2:
                                    b = (b & 255) << 24 | (b >>> 8 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 24 & 255;
                                    break;
                                default:
                                    b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255
                            }
                            this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(),
                                b)
                    }
                },
                setPixel: function(a, b, c, d) {
                    if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height)) switch (this.type._hx_index) {
                        case 0:
                            Ma.setPixel(this, a, b, c, d);
                            break;
                        case 1:
                            Ma.convertToData(this);
                            xc.setPixel(this, a, b, c, d);
                            break;
                        case 2:
                            if (null == d) c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
                            else switch (d) {
                                case 1:
                                    break;
                                case 2:
                                    c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                                    break;
                                default:
                                    c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
                            }
                            this.buffer.__srcBitmapData.setPixel(a +
                                this.offsetX, b + this.offsetX, c)
                    }
                },
                setPixel32: function(a, b, c, d) {
                    if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height)) switch (this.type._hx_index) {
                        case 0:
                            Ma.setPixel32(this, a, b, c, d);
                            break;
                        case 1:
                            Ma.convertToData(this);
                            xc.setPixel32(this, a, b, c, d);
                            break;
                        case 2:
                            if (null == d) c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
                            else switch (d) {
                                case 1:
                                    break;
                                case 2:
                                    c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                                    break;
                                default:
                                    c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
                            }
                            this.buffer.__srcBitmapData.setPixel32(a +
                                this.offsetX, b + this.offsetY, c)
                    }
                },
                __clipRect: function(a) {
                    return null == a || 0 > a.x && (a.width -= -a.x, a.x = 0, 0 >= a.x + a.width) || 0 > a.y && (a.height -= -a.y, a.y = 0, 0 >= a.y + a.height) || a.x + a.width >= this.width && (a.width -= a.x + a.width - this.width, 0 >= a.width) || a.y + a.height >= this.height && (a.height -= a.y + a.height - this.height, 0 >= a.height) ? null : a
                },
                __fromBase64: function(a, b, c) {
                    var d = this,
                        e = new Image;
                    e.addEventListener("load", function(a) {
                        d.buffer = new jf(null, e.width, e.height);
                        d.buffer.__srcImage = e;
                        d.offsetX = 0;
                        d.offsetY = 0;
                        d.width =
                            d.buffer.width;
                        d.height = d.buffer.height;
                        null != c && c(d)
                    }, !1);
                    e.src = "data:" + b + ";base64," + a
                },
                __fromBytes: function(a, b) {
                    if (Ia.__isPNG(a)) var c = "image/png";
                    else if (Ia.__isJPG(a)) c = "image/jpeg";
                    else if (Ia.__isGIF(a)) c = "image/gif";
                    else return !1;
                    this.__fromBase64(We.encode(a), c, b);
                    return !0
                },
                __fromFile: function(a, b, c) {
                    var d = this,
                        e = new Image;
                    ra.__isSameOrigin(a) || (e.crossOrigin = "Anonymous");
                    e.onload = function(a) {
                        d.buffer = new jf(null, e.width, e.height);
                        d.buffer.__srcImage = e;
                        d.width = e.width;
                        d.height = e.height;
                        null !=
                            b && b(d)
                    };
                    e.onerror = function(a) {
                        null != c && c()
                    };
                    e.src = a;
                    return !0
                },
                __fromImageBuffer: function(a) {
                    this.buffer = a;
                    null != a && (-1 == this.width && (this.width = a.width), -1 == this.height && (this.height = a.height))
                },
                get_data: function() {
                    null == this.buffer.data && 0 < this.buffer.width && 0 < this.buffer.height && Ma.convertToData(this);
                    return this.buffer.data
                },
                get_format: function() {
                    return this.buffer.format
                },
                set_format: function(a) {
                    this.buffer.format != a && 1 == this.type._hx_index && xc.setFormat(this, a);
                    return this.buffer.format = a
                },
                get_premultiplied: function() {
                    return this.buffer.premultiplied
                },
                get_rect: function() {
                    return new Nd(0, 0, this.width, this.height)
                },
                get_src: function() {
                    null != this.buffer.__srcCanvas || null == this.buffer.data && this.type != Kd.DATA || Ma.convertToCanvas(this);
                    return this.buffer.get_src()
                },
                get_transparent: function() {
                    return null == this.buffer ? !1 : this.buffer.transparent
                },
                set_transparent: function(a) {
                    return null == this.buffer ? !1 : this.buffer.transparent = a
                },
                __class__: Ia,
                __properties__: {
                    set_transparent: "set_transparent",
                    get_transparent: "get_transparent",
                    get_src: "get_src",
                    get_rect: "get_rect",
                    get_premultiplied: "get_premultiplied",
                    set_format: "set_format",
                    get_format: "get_format",
                    get_data: "get_data"
                }
            };
            var jf = function(a, b, c, d, e) {
                null == d && (d = 32);
                null == c && (c = 0);
                null == b && (b = 0);
                this.data = a;
                this.width = b;
                this.height = c;
                this.bitsPerPixel = d;
                this.format = null == e ? 0 : e;
                this.premultiplied = !1;
                this.transparent = !0
            };
            g["lime.graphics.ImageBuffer"] = jf;
            jf.__name__ = "lime.graphics.ImageBuffer";
            jf.prototype = {
                clone: function() {
                    var a = new jf(this.data, this.width, this.height, this.bitsPerPixel);
                    if (null != this.data) {
                        var b =
                            this.data.byteLength,
                            c = null,
                            d = null,
                            e = null,
                            f = null,
                            k = null;
                        b = null != b ? new Uint8Array(b) : null != c ? new Uint8Array(c) : null != d ? new Uint8Array(d.__array) : null != e ? new Uint8Array(e) : null != f ? null == k ? new Uint8Array(f, 0) : new Uint8Array(f, 0, k) : null;
                        a.data = b;
                        d = c = b = null;
                        e = this.data;
                        k = f = null;
                        b = null != b ? new Uint8Array(b) : null != c ? new Uint8Array(c) : null != d ? new Uint8Array(d.__array) : null != e ? new Uint8Array(e) : null != f ? null == k ? new Uint8Array(f, 0) : new Uint8Array(f, 0, k) : null;
                        a.data.set(b)
                    } else null != this.__srcImageData ? (a.__srcCanvas =
                        window.document.createElement("canvas"), a.__srcContext = a.__srcCanvas.getContext("2d"), a.__srcCanvas.width = this.__srcImageData.width, a.__srcCanvas.height = this.__srcImageData.height, a.__srcImageData = a.__srcContext.createImageData(this.__srcImageData.width, this.__srcImageData.height), b = new Uint8ClampedArray(this.__srcImageData.data), a.__srcImageData.data.set(b)) : null != this.__srcCanvas ? (a.__srcCanvas = window.document.createElement("canvas"), a.__srcContext = a.__srcCanvas.getContext("2d"), a.__srcCanvas.width =
                        this.__srcCanvas.width, a.__srcCanvas.height = this.__srcCanvas.height, a.__srcContext.drawImage(this.__srcCanvas, 0, 0)) : a.__srcImage = this.__srcImage;
                    a.bitsPerPixel = this.bitsPerPixel;
                    a.format = this.format;
                    a.premultiplied = this.premultiplied;
                    a.transparent = this.transparent;
                    return a
                },
                get_src: function() {
                    return null != this.__srcImage ? this.__srcImage : this.__srcCanvas
                },
                set_src: function(a) {
                    a instanceof Image ? this.__srcImage = a : a instanceof HTMLCanvasElement && (this.__srcCanvas = a, this.__srcContext = this.__srcCanvas.getContext("2d"));
                    return a
                },
                get_stride: function() {
                    return this.width * (this.bitsPerPixel / 8 | 0)
                },
                __class__: jf,
                __properties__: {
                    get_stride: "get_stride",
                    set_src: "set_src",
                    get_src: "get_src"
                }
            };
            var ef = w["lime.graphics.ImageChannel"] = {
                    __ename__: "lime.graphics.ImageChannel",
                    __constructs__: ["RED", "GREEN", "BLUE", "ALPHA"],
                    RED: {
                        _hx_index: 0,
                        __enum__: "lime.graphics.ImageChannel",
                        toString: h
                    },
                    GREEN: {
                        _hx_index: 1,
                        __enum__: "lime.graphics.ImageChannel",
                        toString: h
                    },
                    BLUE: {
                        _hx_index: 2,
                        __enum__: "lime.graphics.ImageChannel",
                        toString: h
                    },
                    ALPHA: {
                        _hx_index: 3,
                        __enum__: "lime.graphics.ImageChannel",
                        toString: h
                    }
                },
                Kd = w["lime.graphics.ImageType"] = {
                    __ename__: "lime.graphics.ImageType",
                    __constructs__: ["CANVAS", "DATA", "FLASH", "CUSTOM"],
                    CANVAS: {
                        _hx_index: 0,
                        __enum__: "lime.graphics.ImageType",
                        toString: h
                    },
                    DATA: {
                        _hx_index: 1,
                        __enum__: "lime.graphics.ImageType",
                        toString: h
                    },
                    FLASH: {
                        _hx_index: 2,
                        __enum__: "lime.graphics.ImageType",
                        toString: h
                    },
                    CUSTOM: {
                        _hx_index: 3,
                        __enum__: "lime.graphics.ImageType",
                        toString: h
                    }
                },
                dl = function() {};
            g["lime.graphics.RenderContext"] = dl;
            dl.__name__ = "lime.graphics.RenderContext";
            dl.prototype = {
                __class__: dl
            };
            var Bm = {
                    uniform2fv: function(a, b, c, d, e) {
                        null != d ? a.uniform2fv(b, c, d, e) : a.uniform2fv(b, c)
                    }
                },
                pc = {
                    bufferData: function(a, b, c, d) {
                        a.bufferData(b, c, d)
                    },
                    texImage2D: function(a, b, c, d, e, f, k, p, m, h) {
                        null != p ? a.texImage2D(b, c, d, e, f, k, p, m, h) : a.texImage2D(b, c, d, e, f, k)
                    },
                    uniformMatrix2fv: function(a, b, c, d) {
                        a.uniformMatrix2fv(b, c, d)
                    },
                    uniformMatrix3fv: function(a, b, c, d) {
                        a.uniformMatrix3fv(b, c, d)
                    },
                    uniformMatrix4fv: function(a, b, c, d) {
                        a.uniformMatrix4fv(b, c, d)
                    },
                    fromWebGL2RenderContext: function(a) {
                        return a
                    }
                },
                Yl = function(a) {};
            g["lime.graphics.cairo.Cairo"] = Yl;
            Yl.__name__ = "lime.graphics.cairo.Cairo";
            Yl.prototype = {
                clip: function() {},
                identityMatrix: function() {},
                newPath: function() {},
                paint: function() {},
                rectangle: function(a, b, c, d) {},
                restore: function() {},
                save: function() {},
                setOperator: function(a) {
                    return a
                },
                setSourceRGB: function(a, b, c) {},
                set_matrix: function(a) {
                    return a
                },
                __class__: Yl,
                __properties__: {
                    set_matrix: "set_matrix"
                }
            };
            var xm = {
                    flush: function(a) {}
                },
                Fh = function() {};
            g["lime.graphics.opengl.GL"] = Fh;
            Fh.__name__ =
                "lime.graphics.opengl.GL";
            var Zl = function() {
                this.STACK_UNDERFLOW = 1284;
                this.STACK_OVERFLOW = 1283;
                this.CONTEXT_FLAG_DEBUG_BIT = 2;
                this.DEBUG_OUTPUT = 37600;
                this.DEBUG_SEVERITY_LOW = 37192;
                this.DEBUG_SEVERITY_MEDIUM = 37191;
                this.DEBUG_SEVERITY_HIGH = 37190;
                this.DEBUG_LOGGED_MESSAGES = 37189;
                this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
                this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
                this.MAX_LABEL_LENGTH = 33512;
                this.SAMPLER = 33510;
                this.QUERY = 33507;
                this.PROGRAM = 33506;
                this.SHADER = 33505;
                this.BUFFER = 33504;
                this.DEBUG_GROUP_STACK_DEPTH = 33389;
                this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
                this.DEBUG_SEVERITY_NOTIFICATION = 33387;
                this.DEBUG_TYPE_POP_GROUP = 33386;
                this.DEBUG_TYPE_PUSH_GROUP = 33385;
                this.DEBUG_TYPE_MARKER = 33384;
                this.DEBUG_TYPE_OTHER = 33361;
                this.DEBUG_TYPE_PERFORMANCE = 33360;
                this.DEBUG_TYPE_PORTABILITY = 33359;
                this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
                this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
                this.DEBUG_TYPE_ERROR = 33356;
                this.DEBUG_SOURCE_OTHER = 33355;
                this.DEBUG_SOURCE_APPLICATION = 33354;
                this.DEBUG_SOURCE_THIRD_PARTY = 33353;
                this.DEBUG_SOURCE_SHADER_COMPILER =
                    33352;
                this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
                this.DEBUG_SOURCE_API = 33350;
                this.DEBUG_CALLBACK_USER_PARAM = 33349;
                this.DEBUG_CALLBACK_FUNCTION = 33348;
                this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
                this.DEBUG_OUTPUT_SYNCHRONOUS = 33346
            };
            g["lime.graphics.opengl.ext.KHR_debug"] = Zl;
            Zl.__name__ = "lime.graphics.opengl.ext.KHR_debug";
            Zl.prototype = {
                __class__: Zl
            };
            var tc = {
                    getAlphaTable: function(a) {
                        if (null == tc.__alphaTable) {
                            var b = new Uint8Array(256);
                            tc.__alphaTable = b
                        }
                        tc.__alphaTable[0] = 0;
                        for (var c = 1; 256 > c;) {
                            var d = c++;
                            b =
                                Math.floor(d * a[18] + 255 * a[19]);
                            255 < b && (b = 255);
                            0 > b && (b = 0);
                            tc.__alphaTable[d] = b
                        }
                        return tc.__alphaTable
                    },
                    getBlueTable: function(a) {
                        if (null == tc.__blueTable) {
                            var b = new Uint8Array(256);
                            tc.__blueTable = b
                        }
                        for (var c = 0; 256 > c;) {
                            var d = c++;
                            b = Math.floor(d * a[12] + 255 * a[14]);
                            255 < b && (b = 255);
                            0 > b && (b = 0);
                            tc.__blueTable[d] = b
                        }
                        return tc.__blueTable
                    },
                    getGreenTable: function(a) {
                        if (null == tc.__greenTable) {
                            var b = new Uint8Array(256);
                            tc.__greenTable = b
                        }
                        for (var c = 0; 256 > c;) {
                            var d = c++;
                            b = Math.floor(d * a[6] + 255 * a[9]);
                            255 < b && (b = 255);
                            0 > b &&
                                (b = 0);
                            tc.__greenTable[d] = b
                        }
                        return tc.__greenTable
                    },
                    getRedTable: function(a) {
                        if (null == tc.__redTable) {
                            var b = new Uint8Array(256);
                            tc.__redTable = b
                        }
                        for (var c = 0; 256 > c;) {
                            var d = c++;
                            b = Math.floor(d * a[0] + 255 * a[4]);
                            255 < b && (b = 255);
                            0 > b && (b = 0);
                            tc.__redTable[d] = b
                        }
                        return tc.__redTable
                    },
                    __toFlashColorTransform: function(a) {
                        return null
                    }
                },
                ab = {
                    _new: function(a) {
                        if (null == a || 16 != a.length) a = ab.__identity, a = null != a ? new Float32Array(a) : null;
                        return a
                    },
                    append: function(a, b) {
                        var c = a[0],
                            d = a[4],
                            e = a[8],
                            f = a[12],
                            k = a[1],
                            p = a[5],
                            m = a[9],
                            h =
                            a[13],
                            g = a[2],
                            l = a[6],
                            q = a[10],
                            n = a[14],
                            r = a[3],
                            D = a[7],
                            w = a[11],
                            x = a[15],
                            B = ab.get(b, 0),
                            u = ab.get(b, 4),
                            v = ab.get(b, 8),
                            y = ab.get(b, 12),
                            t = ab.get(b, 1),
                            A = ab.get(b, 5),
                            J = ab.get(b, 9),
                            F = ab.get(b, 13),
                            L = ab.get(b, 2),
                            ma = ab.get(b, 6),
                            ya = ab.get(b, 10),
                            da = ab.get(b, 14),
                            G = ab.get(b, 3),
                            C = ab.get(b, 7),
                            z = ab.get(b, 11);
                        b = ab.get(b, 15);
                        a[0] = c * B + k * u + g * v + r * y;
                        a[1] = c * t + k * A + g * J + r * F;
                        a[2] = c * L + k * ma + g * ya + r * da;
                        a[3] = c * G + k * C + g * z + r * b;
                        a[4] = d * B + p * u + l * v + D * y;
                        a[5] = d * t + p * A + l * J + D * F;
                        a[6] = d * L + p * ma + l * ya + D * da;
                        a[7] = d * G + p * C + l * z + D * b;
                        a[8] = e * B + m * u + q * v + w * y;
                        a[9] = e *
                            t + m * A + q * J + w * F;
                        a[10] = e * L + m * ma + q * ya + w * da;
                        a[11] = e * G + m * C + q * z + w * b;
                        a[12] = f * B + h * u + n * v + x * y;
                        a[13] = f * t + h * A + n * J + x * F;
                        a[14] = f * L + h * ma + n * ya + x * da;
                        a[15] = f * G + h * C + n * z + x * b
                    },
                    createOrtho: function(a, b, c, d, e, f, k) {
                        var p = 1 / (c - b),
                            m = 1 / (e - d),
                            h = 1 / (k - f);
                        a[0] = 2 * p;
                        a[1] = 0;
                        a[2] = 0;
                        a[3] = 0;
                        a[4] = 0;
                        a[5] = 2 * m;
                        a[6] = 0;
                        a[7] = 0;
                        a[8] = 0;
                        a[9] = 0;
                        a[10] = -2 * h;
                        a[11] = 0;
                        a[12] = -(b + c) * p;
                        a[13] = -(d + e) * m;
                        a[14] = -(f + k) * h;
                        a[15] = 1
                    },
                    identity: function(a) {
                        a[0] = 1;
                        a[1] = 0;
                        a[2] = 0;
                        a[3] = 0;
                        a[4] = 0;
                        a[5] = 1;
                        a[6] = 0;
                        a[7] = 0;
                        a[8] = 0;
                        a[9] = 0;
                        a[10] = 1;
                        a[11] = 0;
                        a[12] = 0;
                        a[13] = 0;
                        a[14] = 0;
                        a[15] = 1
                    },
                    get: function(a, b) {
                        return a[b]
                    },
                    set: function(a, b, c) {
                        return a[b] = c
                    }
                },
                R = {},
                Nd = function(a, b, c, d) {
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.x = a;
                    this.y = b;
                    this.width = c;
                    this.height = d
                };
            g["lime.math.Rectangle"] = Nd;
            Nd.__name__ = "lime.math.Rectangle";
            Nd.prototype = {
                intersection: function(a, b) {
                    null == b && (b = new Nd);
                    var c = this.x < a.x ? a.x : this.x,
                        d = this.get_right() > a.get_right() ? a.get_right() : this.get_right();
                    if (d <= c) return b.setEmpty(), b;
                    var e = this.y < a.y ? a.y : this.y;
                    a = this.get_bottom() >
                        a.get_bottom() ? a.get_bottom() : this.get_bottom();
                    if (a <= e) return b.setEmpty(), b;
                    b.x = c;
                    b.y = e;
                    b.width = d - c;
                    b.height = a - e;
                    return b
                },
                offset: function(a, b) {
                    this.x += a;
                    this.y += b
                },
                setEmpty: function() {
                    this.x = this.y = this.width = this.height = 0
                },
                setTo: function(a, b, c, d) {
                    this.x = a;
                    this.y = b;
                    this.width = c;
                    this.height = d
                },
                __toFlashRectangle: function() {
                    return null
                },
                get_bottom: function() {
                    return this.y + this.height
                },
                get_right: function() {
                    return this.x + this.width
                },
                __class__: Nd,
                __properties__: {
                    get_right: "get_right",
                    get_bottom: "get_bottom"
                }
            };
            var bl = function(a, b, c, d) {
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                null == a && (a = 0);
                this.w = d;
                this.x = a;
                this.y = b;
                this.z = c
            };
            g["lime.math.Vector4"] = bl;
            bl.__name__ = "lime.math.Vector4";
            bl.prototype = {
                __class__: bl
            };
            var jc = function() {};
            g["lime.media.AudioBuffer"] = jc;
            jc.__name__ = "lime.media.AudioBuffer";
            jc.fromBytes = function(a) {
                if (null == a) return null;
                var b = new jc;
                b.set_src(new Howl({
                    src: ["data:" + jc.__getCodec(a) + ";base64," + We.encode(a)],
                    html5: !0,
                    preload: !1
                }));
                return b
            };
            jc.fromFile = function(a) {
                if (null == a) return null;
                var b = new jc;
                b.__srcHowl = new Howl({
                    src: [a],
                    preload: !1
                });
                return b
            };
            jc.fromFiles = function(a) {
                var b = new jc;
                b.__srcHowl = new Howl({
                    src: a,
                    preload: !1
                });
                return b
            };
            jc.loadFromFile = function(a) {
                var b = new cd,
                    c = jc.fromFile(a);
                null != c ? null != c && (c.__srcHowl.on("load", function() {
                    b.complete(c)
                }), c.__srcHowl.on("loaderror", function(a, c) {
                    b.error(c)
                }), c.__srcHowl.load()) : b.error(null);
                return b.future
            };
            jc.loadFromFiles = function(a) {
                var b = new cd,
                    c = jc.fromFiles(a);
                null != c ? (c.__srcHowl.on("load", function() {
                        b.complete(c)
                    }),
                    c.__srcHowl.on("loaderror", function() {
                        b.error(null)
                    }), c.__srcHowl.load()) : b.error(null);
                return b.future
            };
            jc.__getCodec = function(a) {
                switch (a.getString(0, 4)) {
                    case "OggS":
                        return "audio/ogg";
                    case "RIFF":
                        if ("WAVE" == a.getString(8, 4)) return "audio/wav";
                        var b = a.b[2],
                            c = a.b[1];
                        switch (a.b[0]) {
                            case 73:
                                if (68 == c && 51 == b) return "audio/mp3";
                                break;
                            case 255:
                                switch (c) {
                                    case 243:
                                    case 250:
                                    case 251:
                                        return "audio/mp3"
                                }
                        }
                        break;
                    case "fLaC":
                        return "audio/flac";
                    default:
                        switch (b = a.b[2], c = a.b[1], a.b[0]) {
                            case 73:
                                if (68 == c && 51 == b) return "audio/mp3";
                                break;
                            case 255:
                                switch (c) {
                                    case 243:
                                    case 250:
                                    case 251:
                                        return "audio/mp3"
                                }
                        }
                }
                Aa.error("Unsupported sound format", {
                    fileName: "lime/media/AudioBuffer.hx",
                    lineNumber: 362,
                    className: "lime.media.AudioBuffer",
                    methodName: "__getCodec"
                });
                return null
            };
            jc.prototype = {
                get_src: function() {
                    return this.__srcHowl
                },
                set_src: function(a) {
                    return this.__srcHowl = a
                },
                __class__: jc,
                __properties__: {
                    set_src: "set_src",
                    get_src: "get_src"
                }
            };
            var sl = function(a) {
                if ("custom" != a) {
                    if (null == a || "web" == a) try {
                        window.AudioContext = window.AudioContext ||
                            window.webkitAudioContext, this.web = new window.AudioContext, this.type = "web"
                    } catch (b) {
                        Ca.lastError = b
                    }
                    null == this.web && "web" != a && (this.html5 = new rl, this.type = "html5")
                } else this.type = "custom"
            };
            g["lime.media.AudioContext"] = sl;
            sl.__name__ = "lime.media.AudioContext";
            sl.prototype = {
                __class__: sl
            };
            var fg = function() {};
            g["lime.media.AudioManager"] = fg;
            fg.__name__ = "lime.media.AudioManager";
            fg.init = function(a) {
                if (null == fg.context) {
                    if (null == a && (fg.context = new sl, a = fg.context, "openal" == a.type)) {
                        var b = a.openal,
                            c = b.openDevice();
                        c = b.createContext(c);
                        b.makeContextCurrent(c);
                        b.processContext(c)
                    }
                    fg.context = a
                }
            };
            var tl = function(a, b, c, d) {
                null == d && (d = 0);
                null == b && (b = 0);
                this.onComplete = new $b;
                this.buffer = a;
                this.offset = b;
                this.__backend = new cl(this);
                null != c && 0 != c && this.set_length(c);
                this.set_loops(d);
                null != a && this.init()
            };
            g["lime.media.AudioSource"] = tl;
            tl.__name__ = "lime.media.AudioSource";
            tl.prototype = {
                dispose: function() {
                    this.__backend.dispose()
                },
                init: function() {
                    this.__backend.init()
                },
                play: function() {
                    this.__backend.play()
                },
                stop: function() {
                    this.__backend.stop()
                },
                get_currentTime: function() {
                    return this.__backend.getCurrentTime()
                },
                set_currentTime: function(a) {
                    return this.__backend.setCurrentTime(a)
                },
                get_gain: function() {
                    return this.__backend.getGain()
                },
                set_gain: function(a) {
                    return this.__backend.setGain(a)
                },
                set_length: function(a) {
                    return this.__backend.setLength(a)
                },
                set_loops: function(a) {
                    return this.__backend.setLoops(a)
                },
                get_position: function() {
                    return this.__backend.getPosition()
                },
                set_position: function(a) {
                    return this.__backend.setPosition(a)
                },
                __class__: tl,
                __properties__: {
                    set_loops: "set_loops",
                    set_length: "set_length",
                    set_position: "set_position",
                    get_position: "get_position",
                    set_gain: "set_gain",
                    get_gain: "get_gain",
                    set_currentTime: "set_currentTime",
                    get_currentTime: "get_currentTime"
                }
            };
            var rl = function() {};
            g["lime.media.HTML5AudioContext"] = rl;
            rl.__name__ = "lime.media.HTML5AudioContext";
            rl.prototype = {
                __class__: rl
            };
            var $l = function() {};
            g["lime.media.OpenALAudioContext"] = $l;
            $l.__name__ = "lime.media.OpenALAudioContext";
            $l.prototype = {
                createContext: function(a, b) {
                    return Kf.createContext(a, b)
                },
                makeContextCurrent: function(a) {
                    return Kf.makeContextCurrent(a)
                },
                openDevice: function(a) {
                    return Kf.openDevice(a)
                },
                processContext: function(a) {
                    Kf.processContext(a)
                },
                __class__: $l
            };
            var Kf = function() {};
            g["lime.media.openal.ALC"] = Kf;
            Kf.__name__ = "lime.media.openal.ALC";
            Kf.createContext = function(a, b) {
                return null
            };
            Kf.makeContextCurrent = function(a) {
                return !1
            };
            Kf.openDevice = function(a) {
                return null
            };
            Kf.processContext = function(a) {};
            var Gj = function() {};
            g["lime.net._IHTTPRequest"] = Gj;
            Gj.__name__ = "lime.net._IHTTPRequest";
            Gj.__isInterface__ = !0;
            Gj.prototype = {
                __class__: Gj
            };
            var He =
                function(a) {
                    this.uri = a;
                    this.contentType = "application/x-www-form-urlencoded";
                    this.followRedirects = !0;
                    this.enableResponseHeaders = !1;
                    this.formData = new aa;
                    this.headers = [];
                    this.method = "GET";
                    this.timeout = 3E4;
                    this.withCredentials = !1;
                    this.__backend = new ra;
                    this.__backend.init(this)
                };
            g["lime.net._HTTPRequest.AbstractHTTPRequest"] = He;
            He.__name__ = "lime.net._HTTPRequest.AbstractHTTPRequest";
            He.__interfaces__ = [Gj];
            He.prototype = {
                __class__: He
            };
            var Xf = function(a) {
                He.call(this, a)
            };
            g["lime.net._HTTPRequest_Bytes"] =
                Xf;
            Xf.__name__ = "lime.net._HTTPRequest_Bytes";
            Xf.__super__ = He;
            Xf.prototype = n(He.prototype, {
                fromBytes: function(a) {
                    return a
                },
                load: function(a) {
                    var b = this;
                    null != a && (this.uri = a);
                    var c = new cd;
                    a = this.__backend.loadData(this.uri);
                    a.onProgress(r(c, c.progress));
                    a.onError(r(c, c.error));
                    a.onComplete(function(a) {
                        b.responseData = b.fromBytes(a);
                        c.complete(b.responseData)
                    });
                    return c.future
                },
                __class__: Xf
            });
            var Hh = function(a) {
                He.call(this, a)
            };
            g["lime.net._HTTPRequest_String"] = Hh;
            Hh.__name__ = "lime.net._HTTPRequest_String";
            Hh.__super__ = He;
            Hh.prototype = n(He.prototype, {
                load: function(a) {
                    var b = this;
                    null != a && (this.uri = a);
                    var c = new cd;
                    a = this.__backend.loadText(this.uri);
                    a.onProgress(r(c, c.progress));
                    a.onError(r(c, c.error));
                    a.onComplete(function(a) {
                        b.responseData = a;
                        c.complete(b.responseData)
                    });
                    return c.future
                },
                __class__: Hh
            });
            var Aj = function(a, b) {
                null == b && (b = "");
                this.name = a;
                this.value = b
            };
            g["lime.net.HTTPRequestHeader"] = Aj;
            Aj.__name__ = "lime.net.HTTPRequestHeader";
            Aj.prototype = {
                __class__: Aj
            };
            var Hj = function(a) {
                He.call(this, a)
            };
            g["lime.net._HTTPRequest_lime_utils_Bytes"] = Hj;
            Hj.__name__ = "lime.net._HTTPRequest_lime_utils_Bytes";
            Hj.__super__ = Xf;
            Hj.prototype = n(Xf.prototype, {
                fromBytes: function(a) {
                    return Yf.fromBytes(a)
                },
                __class__: Hj
            });
            var Ij = function(a) {
                He.call(this, a)
            };
            g["lime.net._HTTPRequest_openfl_utils_ByteArray"] = Ij;
            Ij.__name__ = "lime.net._HTTPRequest_openfl_utils_ByteArray";
            Ij.__super__ = Xf;
            Ij.prototype = n(Xf.prototype, {
                fromBytes: function(a) {
                    return am.fromBytes(a)
                },
                __class__: Ij
            });
            var sc = function() {};
            g["lime.system.Clipboard"] =
                sc;
            sc.__name__ = "lime.system.Clipboard";
            sc.__properties__ = {
                set_text: "set_text",
                get_text: "get_text"
            };
            sc.__update = function() {
                var a = sc._text;
                sc._text = null;
                sc._text != a && sc.onUpdate.dispatch()
            };
            sc.get_text = function() {
                sc.__update();
                return sc._text
            };
            sc.set_text = function(a) {
                var b = sc._text;
                sc._text = a;
                var c = Ga.current.__window;
                null != c && c.__backend.setClipboard(a);
                sc._text != b && sc.onUpdate.dispatch();
                return a
            };
            var jm = w["lime.system.Endian"] = {
                    __ename__: "lime.system.Endian",
                    __constructs__: ["LITTLE_ENDIAN", "BIG_ENDIAN"],
                    LITTLE_ENDIAN: {
                        _hx_index: 0,
                        __enum__: "lime.system.Endian",
                        toString: h
                    },
                    BIG_ENDIAN: {
                        _hx_index: 1,
                        __enum__: "lime.system.Endian",
                        toString: h
                    }
                },
                wd = function(a, b) {
                    this.onUpdate = new gl;
                    this.type = a;
                    this.id = b
                };
            g["lime.system.Sensor"] = wd;
            wd.__name__ = "lime.system.Sensor";
            wd.getSensors = function(a) {
                if (null == a) return wd.sensors.slice();
                for (var b = [], c = 0, d = wd.sensors; c < d.length;) {
                    var e = d[c];
                    ++c;
                    e.type == a && b.push(e)
                }
                return b
            };
            wd.registerSensor = function(a, b) {
                a = new wd(a, b);
                wd.sensors.push(a);
                return wd.sensorByID.h[b] = a
            };
            wd.prototype = {
                __class__: wd
            };
            var lm = w["lime.system.SensorType"] = {
                    __ename__: "lime.system.SensorType",
                    __constructs__: ["ACCELEROMETER"],
                    ACCELEROMETER: {
                        _hx_index: 0,
                        __enum__: "lime.system.SensorType",
                        toString: h
                    }
                },
                bc = function() {};
            g["lime.system.System"] = bc;
            bc.__name__ = "lime.system.System";
            bc.__properties__ = {
                get_endianness: "get_endianness"
            };
            bc.embed = t.lime.embed = function(a, b, c, d, e) {
                if (null != bc.__applicationEntryPoint && Object.prototype.hasOwnProperty.call(bc.__applicationEntryPoint.h, a)) {
                    var f = "string" == typeof b ?
                        window.document.getElementById(b) : null == b ? window.document.createElement("div") : b;
                    null == f ? window.console.log("[lime.embed] ERROR: Cannot find target element: " + I.string(b)) : (null == c && (c = 0), null == d && (d = 0), null == e && (e = {}), Object.prototype.hasOwnProperty.call(e, "background") && "string" == typeof e.background && (b = K.replace(I.string(e.background), "#", ""), -1 < b.indexOf("0x") ? e.background = I.parseInt(b) : e.background = I.parseInt("0x" + b)), e.element = f, e.width = c, e.height = d, bc.__applicationEntryPoint.h[a](e))
                }
            };
            bc.exit =
                function(a) {};
            bc.getTimer = function() {
                return window.performance.now() | 0
            };
            bc.openURL = function(a, b) {
                null == b && (b = "_blank");
                null != a && window.open(a, b)
            };
            bc.__registerEntryPoint = function(a, b) {
                null == bc.__applicationEntryPoint && (bc.__applicationEntryPoint = new aa);
                bc.__applicationEntryPoint.h[a] = b
            };
            bc.get_endianness = function() {
                if (null == bc.__endianness) {
                    var a = new ArrayBuffer(2),
                        b = null,
                        c = null,
                        d = null,
                        e = null,
                        f = null,
                        k = b = null != b ? new Uint8Array(b) : null != c ? new Uint8Array(c) : null != d ? new Uint8Array(d.__array) : null != e ?
                        new Uint8Array(e) : null != a ? null == f ? new Uint8Array(a, 0) : new Uint8Array(a, 0, f) : null;
                    f = e = d = c = b = null;
                    b = null != b ? new Uint16Array(b) : null != c ? new Uint16Array(c) : null != d ? new Uint16Array(d.__array) : null != e ? new Uint16Array(e) : null != a ? null == f ? new Uint16Array(a, 0) : new Uint16Array(a, 0, f) : null;
                    k[0] = 170;
                    k[1] = 187;
                    bc.__endianness = 43707 == b[0] ? jm.BIG_ENDIAN : jm.LITTLE_ENDIAN
                }
                return bc.__endianness
            };
            var fl = function(a, b) {
                null == b && (b = 1);
                null == a && (a = 0);
                this.onRun = new Eg;
                this.onError = new Eg;
                this.onComplete = new Eg;
                this.doWork =
                    new Eg;
                this.minThreads = a;
                this.maxThreads = b;
                this.currentThreads = 0
            };
            g["lime.system.ThreadPool"] = fl;
            fl.__name__ = "lime.system.ThreadPool";
            fl.prototype = {
                queue: function(a) {
                    this.runWork(a)
                },
                sendComplete: function(a) {
                    this.onComplete.dispatch(a)
                },
                sendError: function(a) {
                    this.onError.dispatch(a)
                },
                runWork: function(a) {
                    this.onRun.dispatch(a);
                    this.doWork.dispatch(a)
                },
                __class__: fl
            };
            var ac = function(a) {
                this.onDisconnect = new $b;
                this.onButtonUp = new Ej;
                this.onButtonDown = new Ej;
                this.onAxisMove = new ol;
                this.id = a;
                this.connected = !0
            };
            g["lime.ui.Gamepad"] = ac;
            ac.__name__ = "lime.ui.Gamepad";
            ac.__connect = function(a) {
                if (!ac.devices.h.hasOwnProperty(a)) {
                    var b = new ac(a);
                    ac.devices.h[a] = b;
                    ac.onConnect.dispatch(b)
                }
            };
            ac.__disconnect = function(a) {
                var b = ac.devices.h[a];
                null != b && (b.connected = !1);
                ac.devices.remove(a);
                null != b && b.onDisconnect.dispatch()
            };
            ac.prototype = {
                __class__: ac
            };
            var Ub = function(a) {
                this.onTrackballMove = new kl;
                this.onHatMove = new ml;
                this.onDisconnect = new $b;
                this.onButtonUp = new Of;
                this.onButtonDown = new Of;
                this.onAxisMove = new ll;
                this.id = a;
                this.connected = !0
            };
            g["lime.ui.Joystick"] = Ub;
            Ub.__name__ = "lime.ui.Joystick";
            Ub.__connect = function(a) {
                if (!Ub.devices.h.hasOwnProperty(a)) {
                    var b = new Ub(a);
                    Ub.devices.h[a] = b;
                    Ub.onConnect.dispatch(b)
                }
            };
            Ub.__disconnect = function(a) {
                var b = Ub.devices.h[a];
                null != b && (b.connected = !1);
                Ub.devices.remove(a);
                null != b && b.onDisconnect.dispatch()
            };
            Ub.__getDeviceData = function() {
                return navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null
            };
            Ub.prototype = {
                __class__: Ub
            };
            var Ib = {
                    __properties__: {
                        get_shiftKey: "get_shiftKey",
                        get_metaKey: "get_metaKey",
                        get_ctrlKey: "get_ctrlKey",
                        get_altKey: "get_altKey"
                    },
                    get_altKey: function(a) {
                        return 0 >= (a & 256) ? 0 < (a & 512) : !0
                    },
                    get_ctrlKey: function(a) {
                        return 0 >= (a & 64) ? 0 < (a & 128) : !0
                    },
                    get_metaKey: function(a) {
                        return 0 >= (a & 1024) ? 0 < (a & 2048) : !0
                    },
                    get_shiftKey: function(a) {
                        return 0 >= (a & 1) ? 0 < (a & 2) : !0
                    }
                },
                Mb = w["lime.ui.MouseCursor"] = {
                    __ename__: "lime.ui.MouseCursor",
                    __constructs__: "ARROW CROSSHAIR DEFAULT MOVE POINTER RESIZE_NESW RESIZE_NS RESIZE_NWSE RESIZE_WE TEXT WAIT WAIT_ARROW CUSTOM".split(" "),
                    ARROW: {
                        _hx_index: 0,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    CROSSHAIR: {
                        _hx_index: 1,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    DEFAULT: {
                        _hx_index: 2,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    MOVE: {
                        _hx_index: 3,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    POINTER: {
                        _hx_index: 4,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    RESIZE_NESW: {
                        _hx_index: 5,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    RESIZE_NS: {
                        _hx_index: 6,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    RESIZE_NWSE: {
                        _hx_index: 7,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    RESIZE_WE: {
                        _hx_index: 8,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    TEXT: {
                        _hx_index: 9,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    WAIT: {
                        _hx_index: 10,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    WAIT_ARROW: {
                        _hx_index: 11,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    },
                    CUSTOM: {
                        _hx_index: 12,
                        __enum__: "lime.ui.MouseCursor",
                        toString: h
                    }
                },
                el = w["lime.ui.MouseWheelMode"] = {
                    __ename__: "lime.ui.MouseWheelMode",
                    __constructs__: ["PIXELS", "LINES", "PAGES", "UNKNOWN"],
                    PIXELS: {
                        _hx_index: 0,
                        __enum__: "lime.ui.MouseWheelMode",
                        toString: h
                    },
                    LINES: {
                        _hx_index: 1,
                        __enum__: "lime.ui.MouseWheelMode",
                        toString: h
                    },
                    PAGES: {
                        _hx_index: 2,
                        __enum__: "lime.ui.MouseWheelMode",
                        toString: h
                    },
                    UNKNOWN: {
                        _hx_index: 3,
                        __enum__: "lime.ui.MouseWheelMode",
                        toString: h
                    }
                },
                uc = function(a, b, c, d, e, f, k) {
                    this.x = a;
                    this.y = b;
                    this.id = c;
                    this.dx = d;
                    this.dy = e;
                    this.pressure = f;
                    this.device = k
                };
            g["lime.ui.Touch"] = uc;
            uc.__name__ = "lime.ui.Touch";
            uc.prototype = {
                __class__: uc
            };
            var Ih = function(a, b) {
                this.onTextInput = new Cj;
                this.onTextEdit = new nl;
                this.onRestore = new $b;
                this.onResize = new Bj;
                this.onRenderContextRestored = new Dj;
                this.onRenderContextLost = new $b;
                this.onRender = new Dj;
                this.onMove = new Gh;
                this.onMouseWheel = new jl;
                this.onMouseUp = new hl;
                this.onMouseMoveRelative = new Gh;
                this.onMouseMove = new Gh;
                this.onMouseDown = new il;
                this.onMinimize = new $b;
                this.onLeave = new $b;
                this.onKeyUp = new Fj;
                this.onKeyDown = new Fj;
                this.onFullscreen = new $b;
                this.onFocusOut = new $b;
                this.onFocusIn = new $b;
                this.onExpose = new $b;
                this.onEnter = new $b;
                this.onDropFile = new Cj;
                this.onDeactivate = new $b;
                this.onClose = new $b;
                this.onActivate =
                    new $b;
                this.application = a;
                this.__attributes = null != b ? b : {};
                Object.prototype.hasOwnProperty.call(this.__attributes, "parameters") && (this.parameters = this.__attributes.parameters);
                this.__height = this.__width = 0;
                this.__fullscreen = !1;
                this.__scale = 1;
                this.__y = this.__x = 0;
                this.__title = "";
                this.id = -1;
                this.__backend = new Ka(this)
            };
            g["lime.ui.Window"] = Ih;
            Ih.__name__ = "lime.ui.Window";
            Ih.prototype = {
                close: function() {
                    this.__backend.close()
                },
                set_cursor: function(a) {
                    return this.__backend.setCursor(a)
                },
                __class__: Ih,
                __properties__: {
                    set_cursor: "set_cursor"
                }
            };
            var Ie = function() {
                this.data = new aa;
                this.paths = []
            };
            g["lime.utils.AssetBundle"] = Ie;
            Ie.__name__ = "lime.utils.AssetBundle";
            Ie.fromBytes = function(a) {
                a = new nj(a);
                return Ie.__extractBundle(a)
            };
            Ie.loadFromBytes = function(a) {
                return Sa.withValue(Ie.fromBytes(a))
            };
            Ie.loadFromFile = function(a) {
                return Yf.loadFromFile(a).then(Ie.loadFromBytes)
            };
            Ie.__extractBundle = function(a) {
                var b = Eh.readZip(a);
                a = new Ie;
                for (b = b.h; null != b;) {
                    var c = b.item;
                    b = b.next;
                    if (c.compressed) {
                        var d = a.data,
                            e = c.fileName,
                            f = Yf.decompress(c.data, Cm.DEFLATE);
                        d.h[e] = f
                    } else a.data.h[c.fileName] = c.data;
                    a.paths.push(c.fileName)
                }
                return a
            };
            Ie.prototype = {
                __class__: Ie
            };
            var ul = function() {
                this.enabled = !0;
                this.audio = new aa;
                this.font = new aa;
                this.image = new aa;
                this.version = 769463
            };
            g["lime.utils.AssetCache"] = ul;
            ul.__name__ = "lime.utils.AssetCache";
            ul.prototype = {
                exists: function(a, b) {
                    return ("IMAGE" == b || null == b) && Object.prototype.hasOwnProperty.call(this.image.h, a) || ("FONT" == b || null == b) && Object.prototype.hasOwnProperty.call(this.font.h, a) || ("SOUND" == b || "MUSIC" == b || null ==
                        b) && Object.prototype.hasOwnProperty.call(this.audio.h, a) ? !0 : !1
                },
                set: function(a, b, c) {
                    switch (b) {
                        case "FONT":
                            this.font.h[a] = c;
                            break;
                        case "IMAGE":
                            if (!(c instanceof Ia)) throw F.thrown("Cannot cache non-Image asset: " + I.string(c) + " as Image");
                            this.image.h[a] = c;
                            break;
                        case "MUSIC":
                        case "SOUND":
                            if (!(c instanceof jc)) throw F.thrown("Cannot cache non-AudioBuffer asset: " + I.string(c) + " as AudioBuffer");
                            this.audio.h[a] = c;
                            break;
                        default:
                            throw F.thrown(b + " assets are not cachable");
                    }
                },
                clear: function(a) {
                    if (null ==
                        a) this.audio = new aa, this.font = new aa, this.image = new aa;
                    else {
                        for (var b = aa.keysIterator(this.audio.h); b.hasNext();) {
                            var c = b.next();
                            if (K.startsWith(c, a)) {
                                var d = this.audio;
                                Object.prototype.hasOwnProperty.call(d.h, c) && delete d.h[c]
                            }
                        }
                        for (b = aa.keysIterator(this.font.h); b.hasNext();) c = b.next(), K.startsWith(c, a) && (d = this.font, Object.prototype.hasOwnProperty.call(d.h, c) && delete d.h[c]);
                        for (b = aa.keysIterator(this.image.h); b.hasNext();) c = b.next(), K.startsWith(c, a) && (d = this.image, Object.prototype.hasOwnProperty.call(d.h,
                            c) && delete d.h[c])
                    }
                },
                __class__: ul
            };
            var Me = function() {
                this.types = new aa;
                this.sizes = new aa;
                this.preload = new aa;
                this.paths = new aa;
                this.pathGroups = new aa;
                this.classTypes = new aa;
                this.cachedText = new aa;
                this.cachedImages = new aa;
                this.cachedFonts = new aa;
                this.cachedBytes = new aa;
                this.cachedAudioBuffers = new aa;
                this.onChange = new $b;
                this.bytesTotal = this.bytesLoaded = 0
            };
            g["lime.utils.AssetLibrary"] = Me;
            Me.__name__ = "lime.utils.AssetLibrary";
            Me.fromBundle = function(a) {
                if (Object.prototype.hasOwnProperty.call(a.data.h,
                        "library.json")) {
                    var b = bd.fromBytes(a.data.h["library.json"]);
                    if (null != b) {
                        if (null == b.libraryType) var c = new Me;
                        else if (c = g[b.libraryType], null != c) c = Ua.createInstance(c, b.libraryArgs);
                        else return Aa.warn("Could not find library type: " + b.libraryType, {
                            fileName: "lime/utils/AssetLibrary.hx",
                            lineNumber: 122,
                            className: "lime.utils.AssetLibrary",
                            methodName: "fromBundle"
                        }), null;
                        c.__fromBundle(a, b);
                        return c
                    }
                } else return c = new Me, c.__fromBundle(a), c;
                return null
            };
            Me.fromManifest = function(a) {
                if (null == a) return null;
                if (null == a.libraryType) var b = new Me;
                else if (b = g[a.libraryType], null != b) b = Ua.createInstance(b, a.libraryArgs);
                else return Aa.warn("Could not find library type: " + a.libraryType, {
                    fileName: "lime/utils/AssetLibrary.hx",
                    lineNumber: 160,
                    className: "lime.utils.AssetLibrary",
                    methodName: "fromManifest"
                }), null;
                b.__fromManifest(a);
                return b
            };
            Me.prototype = {
                exists: function(a, b) {
                    b = null != b ? oa.__cast(b, String) : null;
                    a = this.types.h[a];
                    return null == a || a != b && ("SOUND" != b && "MUSIC" != b || "MUSIC" != a && "SOUND" != a) && "BINARY" != b && null !=
                        b && ("BINARY" != a || "TEXT" != b) ? !1 : !0
                },
                getAsset: function(a, b) {
                    switch (b) {
                        case "BINARY":
                            return this.getBytes(a);
                        case "FONT":
                            return this.getFont(a);
                        case "IMAGE":
                            return this.getImage(a);
                        case "MUSIC":
                        case "SOUND":
                            return this.getAudioBuffer(a);
                        case "TEMPLATE":
                            throw F.thrown("Not sure how to get template: " + a);
                        case "TEXT":
                            return this.getText(a);
                        default:
                            throw F.thrown("Unknown asset type: " + b);
                    }
                },
                getAudioBuffer: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? this.cachedAudioBuffers.h[a] :
                        Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? jc.fromBytes(oa.__cast(Ua.createInstance(this.classTypes.h[a], []), bb)) : jc.fromFile(this.paths.h[a])
                },
                getBytes: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)) return this.cachedBytes.h[a];
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
                        var b = Yf.ofString(this.cachedText.h[a]);
                        return this.cachedBytes.h[a] = b
                    }
                    return Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? oa.__cast(Ua.createInstance(this.classTypes.h[a], []), bb) : Yf.fromFile(this.paths.h[a])
                },
                getFont: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a) ? this.cachedFonts.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? oa.__cast(Ua.createInstance(this.classTypes.h[a], []), Gb) : Gb.fromFile(this.paths.h[a])
                },
                getImage: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ? this.cachedImages.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? oa.__cast(Ua.createInstance(this.classTypes.h[a], []), Ia) : Ia.fromFile(this.paths.h[a])
                },
                getText: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) return this.cachedText.h[a];
                    a = this.getBytes(a);
                    return null == a ? null : a.getString(0, a.length)
                },
                isLocal: function(a, b) {
                    if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a)) return !0;
                    b = null != b ? oa.__cast(b, String) : null;
                    if (null == b) return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? !0 : Object.prototype.hasOwnProperty.call(this.cachedText.h, a);
                    switch (b) {
                        case "FONT":
                            return Object.prototype.hasOwnProperty.call(this.cachedFonts.h,
                                a);
                        case "IMAGE":
                            return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a);
                        case "MUSIC":
                        case "SOUND":
                            return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a);
                        default:
                            return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? !0 : Object.prototype.hasOwnProperty.call(this.cachedText.h, a)
                    }
                },
                load: function() {
                    if (this.loaded) return Sa.withValue(this);
                    if (null == this.promise) {
                        this.promise = new cd;
                        this.bytesLoadedCache = new aa;
                        this.assetsLoaded = 0;
                        this.assetsTotal = 1;
                        for (var a = aa.keysIterator(this.preload.h); a.hasNext();) {
                            var b =
                                a.next();
                            if (this.preload.h[b]) {
                                Aa.verbose("Preloading asset: " + b + " [" + this.types.h[b] + "]", {
                                    fileName: "lime/utils/AssetLibrary.hx",
                                    lineNumber: 405,
                                    className: "lime.utils.AssetLibrary",
                                    methodName: "load"
                                });
                                var c = this.types.h[b];
                                if (null != c) switch (c) {
                                    case "BINARY":
                                        this.assetsTotal++;
                                        c = this.loadBytes(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [r(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.load_onError)]));
                                        c.onComplete(function(a,
                                            b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.loadBytes_onComplete)]));
                                        break;
                                    case "FONT":
                                        this.assetsTotal++;
                                        c = this.loadFont(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [r(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.load_onError)]));
                                        c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.loadFont_onComplete)]));
                                        break;
                                    case "IMAGE":
                                        this.assetsTotal++;
                                        c = this.loadImage(b);
                                        c.onProgress(function(a,
                                            b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [r(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.load_onError)]));
                                        c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.loadImage_onComplete)]));
                                        break;
                                    case "MUSIC":
                                    case "SOUND":
                                        this.assetsTotal++;
                                        c = this.loadAudioBuffer(b);
                                        c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [r(this, this.load_onProgress)]));
                                        c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0],
                                                    c)
                                            }
                                        }([b], [r(this, this.loadAudioBuffer_onError)]));
                                        c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.loadAudioBuffer_onComplete)]));
                                        break;
                                    case "TEXT":
                                        this.assetsTotal++, c = this.loadText(b), c.onProgress(function(a, b) {
                                            return function(c, d) {
                                                b[0](a[0], c, d)
                                            }
                                        }([b], [r(this, this.load_onProgress)])), c.onError(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.load_onError)])), c.onComplete(function(a, b) {
                                            return function(c) {
                                                b[0](a[0], c)
                                            }
                                        }([b], [r(this, this.loadText_onComplete)]))
                                }
                            }
                        }
                        this.__assetLoaded(null)
                    }
                    return this.promise.future
                },
                loadAudioBuffer: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? Sa.withValue(this.cachedAudioBuffers.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Sa.withValue(Ua.createInstance(this.classTypes.h[a], [])) : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a) ? jc.loadFromFiles(this.pathGroups.h[a]) : jc.loadFromFile(this.paths.h[a])
                },
                loadBytes: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? Sa.withValue(this.cachedBytes.h[a]) :
                        Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Sa.withValue(Ua.createInstance(this.classTypes.h[a], [])) : Yf.loadFromFile(this.paths.h[a])
                },
                loadFont: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a) ? Sa.withValue(this.cachedFonts.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? (a = Ua.createInstance(this.classTypes.h[a], []), a.__loadFromName(a.name)) : Gb.loadFromName(this.paths.h[a])
                },
                loadImage: function(a) {
                    var b = this;
                    return Object.prototype.hasOwnProperty.call(this.cachedImages.h,
                        a) ? Sa.withValue(this.cachedImages.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Sa.withValue(Ua.createInstance(this.classTypes.h[a], [])) : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? Ia.loadFromBytes(this.cachedBytes.h[a]).then(function(c) {
                        var d = b.cachedBytes;
                        Object.prototype.hasOwnProperty.call(d.h, a) && delete d.h[a];
                        b.cachedImages.h[a] = c;
                        return Sa.withValue(c)
                    }) : Ia.loadFromFile(this.paths.h[a])
                },
                loadText: function(a) {
                    if (Object.prototype.hasOwnProperty.call(this.cachedText.h,
                            a)) return Sa.withValue(this.cachedText.h[a]);
                    if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) || Object.prototype.hasOwnProperty.call(this.classTypes.h, a)) {
                        var b = this.getBytes(a);
                        if (null == b) return Sa.withValue(null);
                        b = b.getString(0, b.length);
                        this.cachedText.h[a] = b;
                        return Sa.withValue(b)
                    }
                    return (new Hh).load(this.paths.h[a])
                },
                unload: function() {},
                __assetLoaded: function(a) {
                    this.assetsLoaded++;
                    null != a && Aa.verbose("Loaded asset: " + a + " [" + this.types.h[a] + "] (" + (this.assetsLoaded - 1) + "/" + (this.assetsTotal -
                        1) + ")", {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 619,
                        className: "lime.utils.AssetLibrary",
                        methodName: "__assetLoaded"
                    });
                    if (null != a) {
                        var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a) ? this.sizes.h[a] : 0;
                        if (Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)) {
                            var c = this.bytesLoadedCache.h[a];
                            c < b && (this.bytesLoaded += b - c)
                        } else this.bytesLoaded += b;
                        this.bytesLoadedCache.h[a] = b
                    }
                    this.assetsLoaded < this.assetsTotal ? this.promise.progress(this.bytesLoaded, this.bytesTotal) : (this.loaded = !0, this.promise.progress(this.bytesTotal, this.bytesTotal), this.promise.complete(this))
                },
                __cacheBreak: function(a) {
                    return qa.__cacheBreak(a)
                },
                __fromBundle: function(a, b) {
                    if (null != b) {
                        var c = 0;
                        for (b = b.assets; c < b.length;) {
                            var d = b[c];
                            ++c;
                            var e = Object.prototype.hasOwnProperty.call(d, "id") ? d.id : d.path;
                            var f = a.data.h[d.path];
                            if (Object.prototype.hasOwnProperty.call(d, "type")) {
                                var k = d.type;
                                "TEXT" == k ? this.cachedText.h[e] = null != f ? I.string(f) : null : this.cachedBytes.h[e] = f;
                                this.types.h[e] = d.type
                            } else this.cachedBytes.h[e] =
                                f, this.types.h[e] = "BINARY"
                        }
                    } else
                        for (c = 0, b = a.paths; c < b.length;) e = b[c], ++c, this.cachedBytes.h[e] = a.data.h[e], this.types.h[e] = "BINARY"
                },
                __fromManifest: function(a) {
                    var b = 2 <= a.version,
                        c = a.rootPath;
                    null == c && (c = "");
                    "" != c && (c += "/");
                    for (var d = 0, e = a.assets; d < e.length;) {
                        var f = e[d];
                        ++d;
                        var k = b && Object.prototype.hasOwnProperty.call(f, "size") ? f.size : 100;
                        var p = Object.prototype.hasOwnProperty.call(f, "id") ? f.id : f.path;
                        if (Object.prototype.hasOwnProperty.call(f, "path")) {
                            var m = this.paths;
                            var h = this.__cacheBreak(this.__resolvePath(c +
                                I.string(ea.field(f, "path"))));
                            m.h[p] = h
                        }
                        if (Object.prototype.hasOwnProperty.call(f, "pathGroup")) {
                            m = ea.field(f, "pathGroup");
                            h = 0;
                            for (var q = m.length; h < q;) {
                                var l = h++;
                                m[l] = this.__cacheBreak(this.__resolvePath(c + m[l]))
                            }
                            this.pathGroups.h[p] = m
                        }
                        this.sizes.h[p] = k;
                        this.types.h[p] = f.type;
                        Object.prototype.hasOwnProperty.call(f, "preload") && (this.preload.h[p] = ea.field(f, "preload"));
                        Object.prototype.hasOwnProperty.call(f, "className") && (k = ea.field(f, "className"), k = g[k], this.classTypes.h[p] = k)
                    }
                    d = this.bytesTotal = 0;
                    for (e =
                        a.assets; d < e.length;) f = e[d], ++d, p = Object.prototype.hasOwnProperty.call(f, "id") ? f.id : f.path, Object.prototype.hasOwnProperty.call(this.preload.h, p) && this.preload.h[p] && Object.prototype.hasOwnProperty.call(this.sizes.h, p) && (this.bytesTotal += this.sizes.h[p])
                },
                __resolvePath: function(a) {
                    a = K.replace(a, "\\", "/");
                    var b = a.indexOf(":");
                    K.startsWith(a, "http") && 0 < b ? (b += 3, a = Y.substr(a, 0, b) + K.replace(Y.substr(a, b, null), "//", "/")) : a = K.replace(a, "//", "/");
                    if (-1 < a.indexOf("./")) {
                        a = a.split("/");
                        b = [];
                        for (var c = 0, d = a.length; c <
                            d;) {
                            var e = c++;
                            ".." == a[e] ? 0 == e || ".." == b[e - 1] ? b.push("..") : b.pop() : "." == a[e] ? 0 == e && b.push(".") : b.push(a[e])
                        }
                        a = b.join("/")
                    }
                    return a
                },
                loadAudioBuffer_onComplete: function(a, b) {
                    this.cachedAudioBuffers.h[a] = b;
                    if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
                        for (var c = this.pathGroups.h[a], d = aa.keysIterator(this.pathGroups.h); d.hasNext();) {
                            var e = d.next();
                            if (e != a)
                                for (var f = 0; f < c.length;) {
                                    var k = c[f];
                                    ++f;
                                    if (-1 < this.pathGroups.h[e].indexOf(k)) {
                                        this.cachedAudioBuffers.h[e] = b;
                                        break
                                    }
                                }
                        }
                    this.__assetLoaded(a)
                },
                loadAudioBuffer_onError: function(a, b) {
                    null != b && "" != b ? Aa.warn('Could not load "' + a + '": ' + I.string(b), {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 865,
                        className: "lime.utils.AssetLibrary",
                        methodName: "loadAudioBuffer_onError"
                    }) : Aa.warn('Could not load "' + a + '"', {
                        fileName: "lime/utils/AssetLibrary.hx",
                        lineNumber: 869,
                        className: "lime.utils.AssetLibrary",
                        methodName: "loadAudioBuffer_onError"
                    });
                    this.loadAudioBuffer_onComplete(a, new jc)
                },
                loadBytes_onComplete: function(a, b) {
                    this.cachedBytes.h[a] = b;
                    this.__assetLoaded(a)
                },
                loadFont_onComplete: function(a, b) {
                    this.cachedFonts.h[a] = b;
                    this.__assetLoaded(a)
                },
                loadImage_onComplete: function(a, b) {
                    this.cachedImages.h[a] = b;
                    this.__assetLoaded(a)
                },
                loadText_onComplete: function(a, b) {
                    this.cachedText.h[a] = b;
                    this.__assetLoaded(a)
                },
                load_onError: function(a, b) {
                    null != b && "" != b ? this.promise.error('Error loading asset "' + a + '": ' + I.string(b)) : this.promise.error('Error loading asset "' + a + '"')
                },
                load_onProgress: function(a, b, c) {
                    if (0 < b) {
                        var d = this.sizes.h[a];
                        0 < c ? (b /= c, 1 < b && (b = 1), b = Math.floor(b * d)) :
                            b > d && (b = d);
                        Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a) ? (d = this.bytesLoadedCache.h[a], b != d && (this.bytesLoaded += b - d)) : this.bytesLoaded += b;
                        this.bytesLoadedCache.h[a] = b;
                        this.promise.progress(this.bytesLoaded, this.bytesTotal)
                    }
                },
                __class__: Me
            };
            var bd = function() {
                this.assets = [];
                this.libraryArgs = [];
                this.version = 2
            };
            g["lime.utils.AssetManifest"] = bd;
            bd.__name__ = "lime.utils.AssetManifest";
            bd.fromBytes = function(a, b) {
                return null != a ? bd.parse(a.getString(0, a.length), b) : null
            };
            bd.loadFromFile = function(a,
                b) {
                a = bd.__resolvePath(a);
                b = bd.__resolveRootPath(b, a);
                return null == a ? null : Yf.loadFromFile(a).then(function(a) {
                    return Sa.withValue(bd.fromBytes(a, b))
                })
            };
            bd.parse = function(a, b) {
                if (null == a || "" == a) return null;
                a = JSON.parse(a);
                var c = new bd;
                Object.prototype.hasOwnProperty.call(a, "name") && (c.name = a.name);
                Object.prototype.hasOwnProperty.call(a, "libraryType") && (c.libraryType = a.libraryType);
                Object.prototype.hasOwnProperty.call(a, "libraryArgs") && (c.libraryArgs = a.libraryArgs);
                if (Object.prototype.hasOwnProperty.call(a,
                        "assets")) {
                    var d = a.assets;
                    Object.prototype.hasOwnProperty.call(a, "version") && 2 >= a.version ? c.assets = Xc.run(d) : c.assets = d
                }
                Object.prototype.hasOwnProperty.call(a, "rootPath") && (c.rootPath = a.rootPath);
                null != b && "" != b && (c.rootPath = null == c.rootPath || "" == c.rootPath ? b : b + "/" + c.rootPath);
                return c
            };
            bd.__resolvePath = function(a) {
                if (null == a) return null;
                var b = a.indexOf("?");
                var c = -1 < b ? Y.substr(a, 0, b) : a;
                for (c = K.replace(c, "\\", "/"); K.endsWith(c, "/");) c = Y.substr(c, 0, c.length - 1);
                return K.endsWith(c, ".bundle") ? -1 < b ? c +
                    "/library.json" + Y.substr(a, b, null) : c + "/library.json" : a
            };
            bd.__resolveRootPath = function(a, b) {
                if (null != a) return a;
                a = b.indexOf("?");
                a = -1 < a ? Y.substr(b, 0, a) : b;
                for (a = K.replace(a, "\\", "/"); K.endsWith(a, "/");) {
                    if ("/" == a) return a;
                    a = Y.substr(a, 0, a.length - 1)
                }
                return K.endsWith(a, ".bundle") ? a : Vf.directory(a)
            };
            bd.prototype = {
                __class__: bd
            };
            var qa = function() {};
            g["lime.utils.Assets"] = qa;
            qa.__name__ = "lime.utils.Assets";
            qa.exists = function(a, b) {
                null == b && (b = "BINARY");
                var c = a.indexOf(":"),
                    d = a.substring(0, c);
                a = a.substring(c +
                    1);
                d = qa.getLibrary(d);
                return null != d ? d.exists(a, b) : !1
            };
            qa.getAsset = function(a, b, c) {
                if (c && qa.cache.enabled) switch (b) {
                    case "BINARY":
                    case "TEXT":
                        c = !1;
                        break;
                    case "FONT":
                        var d = qa.cache.font.h[a];
                        if (null != d) return d;
                        break;
                    case "IMAGE":
                        d = qa.cache.image.h[a];
                        if (qa.isValidImage(d)) return d;
                        break;
                    case "MUSIC":
                    case "SOUND":
                        d = qa.cache.audio.h[a];
                        if (qa.isValidAudio(d)) return d;
                        break;
                    case "TEMPLATE":
                        throw F.thrown("Not sure how to get template: " + a);
                    default:
                        return null
                }
                var e = a.indexOf(":");
                d = a.substring(0, e);
                e =
                    a.substring(e + 1);
                var f = qa.getLibrary(d);
                if (null != f)
                    if (f.exists(e, b)) {
                        if (f.isLocal(e, b)) return d = f.getAsset(e, b), c && qa.cache.enabled && qa.cache.set(a, b, d), d;
                        Aa.error(b + ' asset "' + a + '" exists, but only asynchronously', {
                            fileName: "lime/utils/Assets.hx",
                            lineNumber: 133,
                            className: "lime.utils.Assets",
                            methodName: "getAsset"
                        })
                    } else Aa.error("There is no " + b + ' asset with an ID of "' + a + '"', {
                        fileName: "lime/utils/Assets.hx",
                        lineNumber: 138,
                        className: "lime.utils.Assets",
                        methodName: "getAsset"
                    });
                else Aa.error(qa.__libraryNotFound(d), {
                    fileName: "lime/utils/Assets.hx",
                    lineNumber: 143,
                    className: "lime.utils.Assets",
                    methodName: "getAsset"
                });
                return null
            };
            qa.getAudioBuffer = function(a, b) {
                null == b && (b = !0);
                return qa.getAsset(a, "SOUND", b)
            };
            qa.getBytes = function(a) {
                return qa.getAsset(a, "BINARY", !1)
            };
            qa.getFont = function(a, b) {
                null == b && (b = !0);
                return qa.getAsset(a, "FONT", b)
            };
            qa.getImage = function(a, b) {
                null == b && (b = !0);
                return qa.getAsset(a, "IMAGE", b)
            };
            qa.getLibrary = function(a) {
                if (null == a || "" == a) a = "default";
                return qa.libraries.h[a]
            };
            qa.getText = function(a) {
                return qa.getAsset(a,
                    "TEXT", !1)
            };
            qa.isLocal = function(a, b, c) {
                null == c && (c = !0);
                if (c && qa.cache.enabled && qa.cache.exists(a, b)) return !0;
                var d = a.indexOf(":");
                c = a.substring(0, d);
                a = a.substring(d + 1);
                c = qa.getLibrary(c);
                return null != c ? c.isLocal(a, b) : !1
            };
            qa.isValidAudio = function(a) {
                return null != a
            };
            qa.isValidImage = function(a) {
                return null != a ? null != a.buffer : !1
            };
            qa.loadLibrary = function(a) {
                var b = new cd,
                    c = qa.getLibrary(a);
                if (null != c) return c.load();
                c = a;
                var d = null;
                if (Object.prototype.hasOwnProperty.call(qa.bundlePaths.h, a)) Ie.loadFromFile(qa.bundlePaths.h[a]).onComplete(function(c) {
                    null ==
                        c ? b.error('Cannot load bundle for library "' + a + '"') : (c = Me.fromBundle(c), null == c ? b.error('Cannot open library "' + a + '"') : (qa.libraries.h[a] = c, c.onChange.add((x = qa.onChange, r(x, x.dispatch))), b.completeWith(c.load())))
                }).onError(function(c) {
                    b.error('There is no asset library with an ID of "' + a + '"')
                });
                else Object.prototype.hasOwnProperty.call(qa.libraryPaths.h, a) ? (c = qa.libraryPaths.h[a], d = Vf.directory(c)) : (K.endsWith(c, ".bundle") ? (d = c, c += "/library.json") : d = Vf.directory(c), c = qa.__cacheBreak(c)), bd.loadFromFile(c,
                    d).onComplete(function(c) {
                    null == c ? b.error('Cannot parse asset manifest for library "' + a + '"') : (c = Me.fromManifest(c), null == c ? b.error('Cannot open library "' + a + '"') : (qa.libraries.h[a] = c, c.onChange.add((x = qa.onChange, r(x, x.dispatch))), b.completeWith(c.load())))
                }).onError(function(c) {
                    b.error('There is no asset library with an ID of "' + a + '"')
                });
                return b.future
            };
            qa.registerLibrary = function(a, b) {
                if (Object.prototype.hasOwnProperty.call(qa.libraries.h, a)) {
                    if (qa.libraries.h[a] == b) return;
                    qa.unloadLibrary(a)
                }
                null !=
                    b && b.onChange.add(qa.library_onChange);
                qa.libraries.h[a] = b
            };
            qa.unloadLibrary = function(a) {
                if (null == a || "" == a) a = "default";
                var b = qa.libraries.h[a];
                null != b && (qa.cache.clear(a + ":"), b.onChange.remove(qa.library_onChange), b.unload());
                b = qa.libraries;
                Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a]
            };
            qa.__cacheBreak = function(a) {
                0 < qa.cache.version && (a = -1 < a.indexOf("?") ? a + ("&" + qa.cache.version) : a + ("?" + qa.cache.version));
                return a
            };
            qa.__libraryNotFound = function(a) {
                if (null == a || "" == a) a = "default";
                return null ==
                    Ga.current || null == Ga.current.__preloader || Ga.current.__preloader.complete ? 'There is no asset library named "' + a + '"' : 'There is no asset library named "' + a + '", or it is not yet preloaded'
            };
            qa.library_onChange = function() {
                qa.cache.clear();
                qa.onChange.dispatch()
            };
            var vl = function(a, b) {
                this.bytes = a;
                this.offset = b
            };
            g["lime.utils.BytePointerData"] = vl;
            vl.__name__ = "lime.utils.BytePointerData";
            vl.prototype = {
                __class__: vl
            };
            var Yf = {
                    _new: function(a, b) {
                        return new bb(b)
                    },
                    decompress: function(a, b) {
                        switch (b._hx_index) {
                            case 0:
                                return Ul.decompress(a);
                            case 1:
                                return Vl.decompress(a);
                            case 2:
                                return Wl.decompress(a);
                            case 3:
                                return Xl.decompress(a)
                        }
                    },
                    fromBytes: function(a) {
                        return null == a ? null : Yf._new(a.length, a.b.bufferValue)
                    },
                    fromFile: function(a) {
                        return null
                    },
                    loadFromFile: function(a) {
                        return (new Hj).load(a)
                    },
                    ofString: function(a) {
                        a = bb.ofString(a);
                        return Yf._new(a.length, a.b.bufferValue)
                    }
                },
                Cm = w["lime.utils.CompressionAlgorithm"] = {
                    __ename__: "lime.utils.CompressionAlgorithm",
                    __constructs__: ["DEFLATE", "GZIP", "LZMA", "ZLIB"],
                    DEFLATE: {
                        _hx_index: 0,
                        __enum__: "lime.utils.CompressionAlgorithm",
                        toString: h
                    },
                    GZIP: {
                        _hx_index: 1,
                        __enum__: "lime.utils.CompressionAlgorithm",
                        toString: h
                    },
                    LZMA: {
                        _hx_index: 2,
                        __enum__: "lime.utils.CompressionAlgorithm",
                        toString: h
                    },
                    ZLIB: {
                        _hx_index: 3,
                        __enum__: "lime.utils.CompressionAlgorithm",
                        toString: h
                    }
                },
                si = {
                    toArrayBufferView: function(a) {
                        return a
                    }
                },
                Aa = function() {};
            g["lime.utils.Log"] = Aa;
            Aa.__name__ = "lime.utils.Log";
            Aa.error = function(a, b) {
                if (1 <= Aa.level) {
                    a = "[" + b.className + "] ERROR: " + I.string(a);
                    if (Aa.throwErrors) throw F.thrown(a);
                    console.error(a)
                }
            };
            Aa.info = function(a, b) {
                3 <=
                    Aa.level && console.info("[" + b.className + "] " + I.string(a))
            };
            Aa.verbose = function(a, b) {
                5 <= Aa.level && (a = "[" + b.className + "] " + I.string(a), console.log(a))
            };
            Aa.warn = function(a, b) {
                2 <= Aa.level && console.warn("[" + b.className + "] WARNING: " + I.string(a))
            };
            var kk = function() {
                this.bytesTotalCache = new aa;
                this.bytesLoadedCache2 = new aa;
                this.bytesLoadedCache = new A;
                this.onProgress = new Bj;
                this.onComplete = new $b;
                this.bytesTotal = this.bytesLoaded = 0;
                this.libraries = [];
                this.libraryNames = [];
                this.onProgress.add(r(this, this.update))
            };
            g["lime.utils.Preloader"] = kk;
            kk.__name__ = "lime.utils.Preloader";
            kk.prototype = {
                addLibrary: function(a) {
                    this.libraries.push(a)
                },
                addLibraryName: function(a) {
                    -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a)
                },
                load: function() {
                    for (var a = this, b = 0, c = this.libraries; b < c.length;) {
                        var d = c[b];
                        ++b;
                        this.bytesTotal += d.bytesTotal
                    }
                    this.loadedLibraries = -1;
                    this.preloadStarted = !1;
                    b = 0;
                    for (c = this.libraries; b < c.length;) d = [c[b]], ++b, Aa.verbose("Preloading asset library", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 132,
                        className: "lime.utils.Preloader",
                        methodName: "load"
                    }), d[0].load().onProgress(function(b) {
                        return function(c, d) {
                            a.bytesLoaded = null == a.bytesLoadedCache.h.__keys__[b[0].__id__] ? a.bytesLoaded + c : a.bytesLoaded + (c - a.bytesLoadedCache.h[b[0].__id__]);
                            a.bytesLoadedCache.set(b[0], c);
                            a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal)
                        }
                    }(d)).onComplete(function(b) {
                        return function(c) {
                            a.bytesLoaded = null == a.bytesLoadedCache.h.__keys__[b[0].__id__] ? a.bytesLoaded + b[0].bytesTotal : a.bytesLoaded + (b[0].bytesTotal -
                                a.bytesLoadedCache.h[b[0].__id__]);
                            a.loadedAssetLibrary()
                        }
                    }(d)).onError(function() {
                        return function(a) {
                            Aa.error(a, {
                                fileName: "lime/utils/Preloader.hx",
                                lineNumber: 168,
                                className: "lime.utils.Preloader",
                                methodName: "load"
                            })
                        }
                    }());
                    b = 0;
                    for (c = this.libraryNames; b < c.length;) ++b, this.bytesTotal += 200;
                    this.loadedLibraries++;
                    this.preloadStarted = !0;
                    this.updateProgress()
                },
                loadedAssetLibrary: function(a) {
                    this.loadedLibraries++;
                    var b = this.loadedLibraries;
                    this.preloadStarted || ++b;
                    var c = this.libraries.length + this.libraryNames.length;
                    null != a ? Aa.verbose("Loaded asset library: " + a + " [" + b + "/" + c + "]", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 195,
                        className: "lime.utils.Preloader",
                        methodName: "loadedAssetLibrary"
                    }) : Aa.verbose("Loaded asset library [" + b + "/" + c + "]", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 199,
                        className: "lime.utils.Preloader",
                        methodName: "loadedAssetLibrary"
                    });
                    this.updateProgress()
                },
                start: function() {
                    this.complete || this.simulateProgress || !this.preloadComplete || (this.complete = !0, this.onComplete.dispatch())
                },
                update: function(a,
                    b) {},
                updateProgress: function() {
                    var a = this;
                    this.simulateProgress || this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
                    if (this.loadedLibraries == this.libraries.length && !this.initLibraryNames) {
                        this.initLibraryNames = !0;
                        for (var b = 0, c = this.libraryNames; b < c.length;) {
                            var d = [c[b]];
                            ++b;
                            Aa.verbose("Preloading asset library: " + d[0], {
                                fileName: "lime/utils/Preloader.hx",
                                lineNumber: 236,
                                className: "lime.utils.Preloader",
                                methodName: "updateProgress"
                            });
                            qa.loadLibrary(d[0]).onProgress(function(b) {
                                return function(c,
                                    d) {
                                    0 < d && (Object.prototype.hasOwnProperty.call(a.bytesTotalCache.h, b[0]) || (a.bytesTotalCache.h[b[0]] = d, a.bytesTotal += d - 200), c > d && (c = d), Object.prototype.hasOwnProperty.call(a.bytesLoadedCache2.h, b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]] : a.bytesLoaded += c, a.bytesLoadedCache2.h[b[0]] = c, a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal))
                                }
                            }(d)).onComplete(function(b) {
                                return function(c) {
                                    c = 200;
                                    Object.prototype.hasOwnProperty.call(a.bytesTotalCache.h, b[0]) && (c = a.bytesTotalCache.h[b[0]]);
                                    Object.prototype.hasOwnProperty.call(a.bytesLoadedCache2.h, b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]] : a.bytesLoaded += c;
                                    a.loadedAssetLibrary(b[0])
                                }
                            }(d)).onError(function() {
                                return function(a) {
                                    Aa.error(a, {
                                        fileName: "lime/utils/Preloader.hx",
                                        lineNumber: 290,
                                        className: "lime.utils.Preloader",
                                        methodName: "updateProgress"
                                    })
                                }
                            }())
                        }
                    }
                    this.simulateProgress || this.loadedLibraries != this.libraries.length + this.libraryNames.length || (this.preloadComplete || (this.preloadComplete = !0, Aa.verbose("Preload complete", {
                        fileName: "lime/utils/Preloader.hx",
                        lineNumber: 301,
                        className: "lime.utils.Preloader",
                        methodName: "updateProgress"
                    })), this.start())
                },
                __class__: kk
            };
            var la = function() {};
            g["openfl.Lib"] = la;
            la.__name__ = "openfl.Lib";
            la.__properties__ = {
                get_current: "get_current"
            };
            la.getTimer = function() {
                return bc.getTimer()
            };
            la.getURL = function(a, b) {
                la.navigateToURL(a, b)
            };
            la.navigateToURL = function(a, b) {
                null == b && (b = "_blank");
                var c = a.url;
                if (Ua.typeof(a.data) == Jd.TObject) {
                    for (var d = "", e = ea.fields(a.data), f = 0; f < e.length;) {
                        var k = e[f];
                        ++f;
                        0 < d.length && (d += "&");
                        var p =
                            encodeURIComponent(k) + "=";
                        k = I.string(ea.field(a.data, k));
                        d += p + encodeURIComponent(k)
                    }
                    c = -1 < c.indexOf("?") ? c + ("&" + d) : c + ("?" + d)
                }
                bc.openURL(c, b)
            };
            la.get_current = function() {
                null == Sc.current && (Sc.current = new $e);
                return Sc.current
            };
            var Zf = function() {};
            g["openfl._Vector.IVector"] = Zf;
            Zf.__name__ = "openfl._Vector.IVector";
            Zf.__isInterface__ = !0;
            var Jj = function(a, b, c) {
                null == b && (b = !1);
                null == a && (a = 0);
                null == c && (c = []);
                this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.BoolVector"] = Jj;
            Jj.__name__ =
                "openfl._Vector.BoolVector";
            Jj.__interfaces__ = [Zf];
            Jj.prototype = {
                toJSON: function() {
                    return this.__array
                },
                set_length: function(a) {
                    if (!this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) {
                                var c = b++;
                                this.__array[c] = !1
                            } else
                                for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: Jj,
                __properties__: {
                    set_length: "set_length"
                }
            };
            var Ke = function(a, b, c, d) {
                null == d && (d = !1);
                null == b && (b = !1);
                null == a && (a = 0);
                if (d) {
                    if (this.__array = [], null != c) {
                        d = 0;
                        for (var e = c.length; d < e;) {
                            var f =
                                d++;
                            this.__array[f] = c[f]
                        }
                    }
                } else null == c && (c = []), this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.FloatVector"] = Ke;
            Ke.__name__ = "openfl._Vector.FloatVector";
            Ke.__interfaces__ = [Zf];
            Ke.prototype = {
                concat: function(a) {
                    return null == a ? new Ke(0, !1, this.__array.slice()) : 0 < a.__array.length ? new Ke(0, !1, this.__array.concat(a.__array)) : new Ke(0, !1, this.__array.slice())
                },
                copy: function() {
                    return new Ke(0, this.fixed, this.__array.slice())
                },
                get: function(a) {
                    return this.__array[a]
                },
                push: function(a) {
                    return this.fixed ?
                        this.__array.length : this.__array.push(a)
                },
                set: function(a, b) {
                    return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
                },
                splice: function(a, b) {
                    return new Ke(0, !1, this.__array.splice(a, b))
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                set_length: function(a) {
                    if (a != this.__array.length && !this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) {
                                var c = b++;
                                this.__array[c] = 0
                            } else
                                for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: Ke,
                __properties__: {
                    set_length: "set_length",
                    get_length: "get_length"
                }
            };
            var Kj = function(a, b, c) {
                null == b && (b = !1);
                null == a && (a = 0);
                null == c && (c = []);
                this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.FunctionVector"] = Kj;
            Kj.__name__ = "openfl._Vector.FunctionVector";
            Kj.__interfaces__ = [Zf];
            Kj.prototype = {
                toJSON: function() {
                    return this.__array
                },
                set_length: function(a) {
                    if (!this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) {
                                var c = b++;
                                this.__array[c] = null
                            } else
                                for (; this.__array.length >
                                    a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: Kj,
                __properties__: {
                    set_length: "set_length"
                }
            };
            var hg = function(a, b, c) {
                null == b && (b = !1);
                null == a && (a = 0);
                null == c && (c = []);
                this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.IntVector"] = hg;
            hg.__name__ = "openfl._Vector.IntVector";
            hg.__interfaces__ = [Zf];
            hg.prototype = {
                get: function(a) {
                    return this.__array[a]
                },
                iterator: function() {
                    return new Je(this.__array)
                },
                push: function(a) {
                    return this.fixed ? this.__array.length : this.__array.push(a)
                },
                set: function(a, b) {
                    return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
                },
                splice: function(a, b) {
                    return new hg(0, !1, this.__array.splice(a, b))
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                set_length: function(a) {
                    if (!this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) {
                                var c = b++;
                                this.__array[c] = 0
                            } else
                                for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: hg,
                __properties__: {
                    set_length: "set_length",
                    get_length: "get_length"
                }
            };
            var ig = function(a, b, c, d) {
                null == d && (d = !1);
                null == b && (b = !1);
                null == a && (a = 0);
                if (d) {
                    if (this.__array = [], null != c) {
                        d = 0;
                        for (var e = c.length; d < e;) {
                            var f = d++;
                            this.__array[f] = c[f]
                        }
                    }
                } else null == c && (c = []), this.__array = c;
                0 < a && this.set_length(a);
                this.fixed = b
            };
            g["openfl._Vector.ObjectVector"] = ig;
            ig.__name__ = "openfl._Vector.ObjectVector";
            ig.__interfaces__ = [Zf];
            ig.prototype = {
                get: function(a) {
                    return this.__array[a]
                },
                insertAt: function(a, b) {
                    (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b)
                },
                iterator: function() {
                    return new Je(this.__array)
                },
                push: function(a) {
                    return this.fixed ? this.__array.length : this.__array.push(a)
                },
                set: function(a, b) {
                    return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
                },
                splice: function(a, b) {
                    return new ig(0, !1, this.__array.splice(a, b))
                },
                toJSON: function() {
                    return this.__array
                },
                get_length: function() {
                    return this.__array.length
                },
                set_length: function(a) {
                    if (!this.fixed) {
                        var b = this.__array.length;
                        0 > a && (a = 0);
                        if (a > b)
                            for (; b < a;) b++, this.__array.push(null);
                        else
                            for (; this.__array.length > a;) this.__array.pop()
                    }
                    return this.__array.length
                },
                __class__: ig,
                __properties__: {
                    set_length: "set_length",
                    get_length: "get_length"
                }
            };
            var Sc = function() {};
            g["openfl._internal.Lib"] = Sc;
            Sc.__name__ = "openfl._internal.Lib";
            var Na = function() {};
            g["openfl._internal.formats.html.HTMLParser"] = Na;
            Na.__name__ = "openfl._internal.formats.html.HTMLParser";
            Na.parse = function(a, b, c) {
                a = a.replace(Na.__regexBreakTag.r, "\n");
                a = a.replace(Na.__regexEntities[0].r, '"');
                a = a.replace(Na.__regexEntities[1].r, "'");
                a = a.replace(Na.__regexEntities[2].r, "&");
                a = a.replace(Na.__regexEntities[5].r,
                    " ");
                var d = a.split("<");
                if (1 == d.length) a = a.replace(Na.__regexHTMLTag.r, ""), 1 < c.get_length() && c.splice(1, c.get_length() - 1), a = a.replace(Na.__regexEntities[3].r, "<"), a = a.replace(Na.__regexEntities[4].r, ">"), c = c.get(0), c.format = b, c.start = 0, c.end = a.length;
                else {
                    c.splice(0, c.get_length());
                    a = "";
                    for (var e, f = 0, k = d.length; f < k;) {
                        var p = f++;
                        e = d[p];
                        e = e.replace(Na.__regexEntities[3].r, "<");
                        e = e.replace(Na.__regexEntities[4].r, ">");
                        d[p] = e
                    }
                    p = [b.clone()];
                    var m = [],
                        h = !1;
                    for (f = 0; f < d.length;)
                        if (e = d[f], ++f, "" != e) {
                            var g = "/" ==
                                Y.substr(e, 0, 1);
                            k = e.indexOf(">");
                            var l = k + 1,
                                q = e.indexOf(" ");
                            q = e.substring(g ? 1 : 0, -1 < q && q < k ? q : k);
                            if (g) 0 == m.length || q.toLowerCase() != m[m.length - 1].toLowerCase() ? Aa.info("Invalid HTML, unexpected closing tag ignored: " + q, {
                                fileName: "openfl/_internal/formats/html/HTMLParser.hx",
                                lineNumber: 97,
                                className: "openfl._internal.formats.html.HTMLParser",
                                methodName: "parse"
                            }) : (m.pop(), p.pop(), g = p[p.length - 1].clone(), "p" == q.toLowerCase() && 0 < c.get_length() && (a += "\n", h = !0), l < e.length && (e = Y.substr(e, l, null), c.push(new lf(g,
                                a.length, a.length + e.length)), a += e, h = !1));
                            else if (g = p[p.length - 1].clone(), -1 < k) {
                                switch (q.toLowerCase()) {
                                    case "a":
                                        Na.__regexHref.match(e) && (g.url = Na.__getAttributeMatch(Na.__regexHref));
                                        break;
                                    case "b":
                                        g.bold = !0;
                                        break;
                                    case "em":
                                    case "i":
                                        g.italic = !0;
                                        break;
                                    case "font":
                                        Na.__regexFace.match(e) && (g.font = Na.__getAttributeMatch(Na.__regexFace));
                                        Na.__regexColor.match(e) && (g.color = I.parseInt("0x" + Na.__getAttributeMatch(Na.__regexColor)));
                                        if (Na.__regexSize.match(e)) {
                                            k = Na.__getAttributeMatch(Na.__regexSize);
                                            var n =
                                                Y.cca(k, 0);
                                            g.size = 43 == n || 45 == n ? (2 <= p.length ? p[p.length - 2] : b).size + I.parseInt(k) : I.parseInt(k)
                                        }
                                        break;
                                    case "p":
                                        0 < c.get_length() && !h && (a += "\n");
                                        Na.__regexAlign.match(e) && (k = Na.__getAttributeMatch(Na.__regexAlign).toLowerCase(), g.align = Dm.fromString(k));
                                        break;
                                    case "textformat":
                                        Na.__regexBlockIndent.match(e) && (g.blockIndent = I.parseInt(Na.__getAttributeMatch(Na.__regexBlockIndent)));
                                        Na.__regexIndent.match(e) && (g.indent = I.parseInt(Na.__getAttributeMatch(Na.__regexIndent)));
                                        Na.__regexLeading.match(e) && (g.leading =
                                            I.parseInt(Na.__getAttributeMatch(Na.__regexLeading)));
                                        Na.__regexLeftMargin.match(e) && (g.leftMargin = I.parseInt(Na.__getAttributeMatch(Na.__regexLeftMargin)));
                                        Na.__regexRightMargin.match(e) && (g.rightMargin = I.parseInt(Na.__getAttributeMatch(Na.__regexRightMargin)));
                                        if (Na.__regexTabStops.match(e)) {
                                            n = Na.__getAttributeMatch(Na.__regexTabStops).split(" ");
                                            var r = [];
                                            for (k = 0; k < n.length;) {
                                                var D = n[k];
                                                ++k;
                                                r.push(I.parseInt(D))
                                            }
                                            g.tabStops = r
                                        }
                                        break;
                                    case "u":
                                        g.underline = !0
                                }
                                p.push(g);
                                m.push(q);
                                l < e.length && (e = e.substring(l),
                                    c.push(new lf(g, a.length, a.length + e.length)), a += e, h = !1)
                            } else c.push(new lf(g, a.length, a.length + e.length)), a += e, h = !1
                        }
                    0 == c.get_length() && c.push(new lf(p[0], 0, 0))
                }
                return a
            };
            Na.__getAttributeMatch = function(a) {
                return null != a.matched(2) ? a.matched(2) : a.matched(3)
            };
            var $f = function() {
                this.rollOutStack = []
            };
            g["openfl._internal.utils.TouchData"] = $f;
            $f.__name__ = "openfl._internal.utils.TouchData";
            $f.prototype = {
                reset: function() {
                    this.touchOverTarget = this.touchDownTarget = this.touch = null;
                    this.rollOutStack.splice(0,
                        this.rollOutStack.length)
                },
                __class__: $f
            };
            var Rg = function() {
                Ga.call(this);
                null == Sc.application && (Sc.application = this);
                null == Sc.current && (Sc.current = new $e);
                Sc.current.__loaderInfo = Xe.create(null);
                Sc.current.__loaderInfo.content = Sc.current
            };
            g["openfl.display.Application"] = Rg;
            Rg.__name__ = "openfl.display.Application";
            Rg.__super__ = Ga;
            Rg.prototype = n(Ga.prototype, {
                createWindow: function(a) {
                    var b = new gg(this, a);
                    this.__windows.push(b);
                    this.__windowByID.h[b.id] = b;
                    var c = r(this, this.__onWindowClose);
                    b.onClose.add(function() {
                        c(b)
                    }, !1, -1E4);
                    null == this.__window && (this.__window = b, b.onActivate.add(r(this, this.onWindowActivate)), b.onRenderContextLost.add(r(this, this.onRenderContextLost)), b.onRenderContextRestored.add(r(this, this.onRenderContextRestored)), b.onDeactivate.add(r(this, this.onWindowDeactivate)), b.onDropFile.add(r(this, this.onWindowDropFile)), b.onEnter.add(r(this, this.onWindowEnter)), b.onExpose.add(r(this, this.onWindowExpose)), b.onFocusIn.add(r(this, this.onWindowFocusIn)), b.onFocusOut.add(r(this, this.onWindowFocusOut)),
                        b.onFullscreen.add(r(this, this.onWindowFullscreen)), b.onKeyDown.add(r(this, this.onKeyDown)), b.onKeyUp.add(r(this, this.onKeyUp)), b.onLeave.add(r(this, this.onWindowLeave)), b.onMinimize.add(r(this, this.onWindowMinimize)), b.onMouseDown.add(r(this, this.onMouseDown)), b.onMouseMove.add(r(this, this.onMouseMove)), b.onMouseMoveRelative.add(r(this, this.onMouseMoveRelative)), b.onMouseUp.add(r(this, this.onMouseUp)), b.onMouseWheel.add(r(this, this.onMouseWheel)), b.onMove.add(r(this, this.onWindowMove)), b.onRender.add(r(this,
                            this.render)), b.onResize.add(r(this, this.onWindowResize)), b.onRestore.add(r(this, this.onWindowRestore)), b.onTextEdit.add(r(this, this.onTextEdit)), b.onTextInput.add(r(this, this.onTextInput)), this.onWindowCreate());
                    this.onCreateWindow.dispatch(b);
                    return b
                },
                __class__: Rg
            });
            var Jb = function(a, b, c) {
                null == c && (c = !1);
                za.call(this);
                this.__bitmapData = a;
                this.pixelSnapping = b;
                this.smoothing = c;
                null == b && (this.pixelSnapping = 1)
            };
            g["openfl.display.Bitmap"] = Jb;
            Jb.__name__ = "openfl.display.Bitmap";
            Jb.__super__ = za;
            Jb.prototype =
                n(za.prototype, {
                    __enterFrame: function(a) {
                        null == this.__bitmapData || null == this.__bitmapData.image || this.__bitmapData.image.version == this.__imageVersion || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
                    },
                    __getBounds: function(a, b) {
                        var c = fa.__pool.get();
                        null != this.__bitmapData ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height) : c.setTo(0, 0, 0, 0);
                        c.__transform(c, b);
                        a.__expand(c.x, c.y, c.width, c.height);
                        fa.__pool.release(c)
                    },
                    __hitTest: function(a, b, c, d, e, f) {
                        if (!f.get_visible() ||
                            this.__isMask || null == this.__bitmapData || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                        this.__getRenderTransform();
                        var k = this.__renderTransform,
                            p = k.a * k.d - k.b * k.c;
                        c = 0 == p ? -k.tx : 1 / p * (k.c * (k.ty - b) + k.d * (a - k.tx));
                        k = this.__renderTransform;
                        p = k.a * k.d - k.b * k.c;
                        a = 0 == p ? -k.ty : 1 / p * (k.a * (b - k.ty) + k.b * (k.tx - a));
                        if (0 < c && 0 < a && c <= this.__bitmapData.width && a <= this.__bitmapData.height) {
                            if (null != this.__scrollRect && !this.__scrollRect.contains(c, a)) return !1;
                            null == d || e || d.push(f);
                            return !0
                        }
                        return !1
                    },
                    __hitTestMask: function(a,
                        b) {
                        if (null == this.__bitmapData) return !1;
                        this.__getRenderTransform();
                        var c = this.__renderTransform,
                            d = c.a * c.d - c.b * c.c,
                            e = 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - b) + c.d * (a - c.tx));
                        c = this.__renderTransform;
                        d = c.a * c.d - c.b * c.c;
                        a = 0 == d ? -c.ty : 1 / d * (c.a * (b - c.ty) + c.b * (c.tx - a));
                        return 0 < e && 0 < a && e <= this.__bitmapData.width && a <= this.__bitmapData.height ? !0 : !1
                    },
                    __renderCairo: function(a) {},
                    __renderCairoMask: function(a) {
                        a.cairo.rectangle(0, 0, this.get_width(), this.get_height())
                    },
                    __renderCanvas: function(a) {
                        this.__updateCacheBitmap(a, !1);
                        null != this.__bitmapData && null != this.__bitmapData.image && (this.__imageVersion = this.__bitmapData.image.version);
                        if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                            if (!(null == this.opaqueBackground && null == this.__graphics || !this.__renderable || (D = a.__getAlpha(this.__worldAlpha), 0 >= D))) {
                                if (null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && 0 < this.get_height()) {
                                    a.__setBlendMode(this.__worldBlendMode);
                                    a.__pushMaskObject(this);
                                    w = a.context;
                                    a.setTransform(this.__renderTransform,
                                        w);
                                    var b = this.opaqueBackground;
                                    w.fillStyle = "rgb(" + (b >>> 16 & 255) + "," + (b >>> 8 & 255) + "," + (b & 255) + ")";
                                    w.fillRect(0, 0, this.get_width(), this.get_height());
                                    a.__popMaskObject(this)
                                }
                                if (null != this.__graphics && this.__renderable && (D = a.__getAlpha(this.__worldAlpha), !(0 >= D))) {
                                    var c = this.__graphics;
                                    if (null != c) {
                                        v.render(c, a);
                                        var d = c.__width,
                                            e = c.__height;
                                        b = c.__canvas;
                                        if (null != b && c.__visible && 1 <= d && 1 <= e) {
                                            var f = c.__worldTransform;
                                            w = a.context;
                                            x = this.__scrollRect;
                                            var k = this.__worldScale9Grid;
                                            if (null == x || 0 < x.width && 0 < x.height) {
                                                a.__setBlendMode(this.__worldBlendMode);
                                                a.__pushMaskObject(this);
                                                w.globalAlpha = D;
                                                if (null != k && 0 == f.b && 0 == f.c) {
                                                    w.setTransform(1, 0, 0, 1, f.tx, f.ty);
                                                    var p = c.__bounds,
                                                        m = c.__renderTransform.a,
                                                        h = c.__renderTransform.d,
                                                        g = f.a,
                                                        l = f.d;
                                                    f = Math.max(1, Math.round(k.x * m));
                                                    c = Math.round(k.y * h);
                                                    D = Math.max(1, Math.round((p.get_right() - k.get_right()) * m));
                                                    x = Math.round((p.get_bottom() - k.get_bottom()) * h);
                                                    m = Math.round(k.width * m);
                                                    h = Math.round(k.height * h);
                                                    var q = Math.round(k.x * g),
                                                        n = Math.round(k.y * l),
                                                        r = Math.round((p.get_right() - k.get_right()) * g);
                                                    k = Math.round((p.get_bottom() -
                                                        k.get_bottom()) * l);
                                                    p = Math.round(d * g) - q - r;
                                                    g = Math.round(e * l) - n - k;
                                                    a.applySmoothing(w, !1);
                                                    0 != m && 0 != h ? (w.drawImage(b, 0, 0, f, c, 0, 0, q, n), w.drawImage(b, f, 0, m, c, q, 0, p, n), w.drawImage(b, f + m, 0, D, c, q + p, 0, r, n), w.drawImage(b, 0, c, f, h, 0, n, q, g), w.drawImage(b, f, c, m, h, q, n, p, g), w.drawImage(b, f + m, c, D, h, q + p, n, r, g), w.drawImage(b, 0, c + h, f, x, 0, n + g, q, k), w.drawImage(b, f, c + h, m, x, q, n + g, p, k), w.drawImage(b, f + m, c + h, D, x, q + p, n + g, r, k)) : 0 == m && 0 != h ? (e = q + p + r, w.drawImage(b, 0, 0, d, c, 0, 0, e, n), w.drawImage(b, 0, c, d, h, 0, n, e, g), w.drawImage(b, 0, c +
                                                        h, d, x, 0, n + g, e, k)) : 0 == h && 0 != m && (d = n + g + k, w.drawImage(b, 0, 0, f, e, 0, 0, q, d), w.drawImage(b, f, 0, m, e, q, 0, p, d), w.drawImage(b, f + m, 0, D, e, q + p, 0, r, d))
                                                } else a.setTransform(f, w), a.__isDOM && (k = 1 / a.pixelRatio, w.scale(k, k)), w.drawImage(b, 0, 0, d, e);
                                                a.__popMaskObject(this)
                                            }
                                        }
                                    }
                                }
                            }
                            this.__renderable && (D = a.__getAlpha(this.__worldAlpha), 0 < D && null != this.__bitmapData && this.__bitmapData.__isValid && this.__bitmapData.readable && (w = a.context, a.__setBlendMode(this.__worldBlendMode), a.__pushMaskObject(this, !1), Ma.convertToCanvas(this.__bitmapData.image),
                                w.globalAlpha = D, x = this.__scrollRect, a.setTransform(this.__renderTransform, w), a.__allowSmoothing && this.smoothing || (w.imageSmoothingEnabled = !1), null == x ? w.drawImage(this.__bitmapData.image.get_src(), 0, 0, this.__bitmapData.image.width, this.__bitmapData.image.height) : w.drawImage(this.__bitmapData.image.get_src(), x.x, x.y, x.width, x.height), a.__allowSmoothing && this.smoothing || (w.imageSmoothingEnabled = !0), a.__popMaskObject(this, !1)))
                        } else if (b = this.__cacheBitmap, b.__renderable) {
                            var D = a.__getAlpha(b.__worldAlpha);
                            if (0 < D && null != b.__bitmapData && b.__bitmapData.__isValid && b.__bitmapData.readable) {
                                var w = a.context;
                                a.__setBlendMode(b.__worldBlendMode);
                                a.__pushMaskObject(b, !1);
                                Ma.convertToCanvas(b.__bitmapData.image);
                                w.globalAlpha = D;
                                var x = b.__scrollRect;
                                a.setTransform(b.__renderTransform, w);
                                a.__allowSmoothing && b.smoothing || (w.imageSmoothingEnabled = !1);
                                null == x ? w.drawImage(b.__bitmapData.image.get_src(), 0, 0, b.__bitmapData.image.width, b.__bitmapData.image.height) : w.drawImage(b.__bitmapData.image.get_src(), x.x, x.y, x.width,
                                    x.height);
                                a.__allowSmoothing && b.smoothing || (w.imageSmoothingEnabled = !0);
                                a.__popMaskObject(b, !1)
                            }
                        }
                        this.__renderEvent(a)
                    },
                    __renderCanvasMask: function(a) {
                        a.context.rect(0, 0, this.get_width(), this.get_height())
                    },
                    __renderDOM: function(a) {
                        this.__updateCacheBitmap(a, !1);
                        if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                            null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && this.get_height();
                            var b = this.__graphics;
                            if (null != this.stage && this.__worldVisible && this.__renderable && null !=
                                b) {
                                v.render(b, a.__canvasRenderer);
                                if (b.__softwareDirty || this.__worldAlphaChanged || this.__canvas != b.__canvas) null != b.__canvas ? this.__canvas != b.__canvas && (null != this.__canvas && a.element.removeChild(this.__canvas), this.__canvas = b.__canvas, this.__context = b.__context, a.__initializeElement(this, this.__canvas)) : Qf.clear(this, a);
                                if (null != this.__canvas) {
                                    a.__pushMaskObject(this);
                                    var c = this.__renderTransform;
                                    this.__renderTransform = b.__worldTransform;
                                    b.__transformDirty && (b.__transformDirty = !1, this.__renderTransformChanged = !0);
                                    a.__updateClip(this);
                                    a.__applyStyle(this, !0, !0, !0);
                                    this.__renderTransform = c;
                                    a.__popMaskObject(this)
                                }
                            } else Qf.clear(this, a);
                            null != this.stage && this.__worldVisible && this.__renderable && null != this.__bitmapData && this.__bitmapData.__isValid && this.__bitmapData.readable ? (a.__pushMaskObject(this), null != this.__bitmapData.image.buffer.__srcImage ? Bc.renderImage(this, a) : Bc.renderCanvas(this, a), a.__popMaskObject(this)) : Bc.clear(this, a)
                        } else this.__renderDOMClear(a), this.__cacheBitmap.stage = this.stage, b = this.__cacheBitmap,
                            null != b.stage && b.__worldVisible && b.__renderable && null != b.__bitmapData && b.__bitmapData.__isValid && b.__bitmapData.readable ? (a.__pushMaskObject(b), null != b.__bitmapData.image.buffer.__srcImage ? Bc.renderImage(b, a) : Bc.renderCanvas(b, a), a.__popMaskObject(b)) : Bc.clear(b, a);
                        this.__renderEvent(a)
                    },
                    __renderDOMClear: function(a) {
                        Bc.clear(this, a)
                    },
                    __renderGL: function(a) {
                        this.__updateCacheBitmap(a, !1);
                        null != this.__bitmapData && null != this.__bitmapData.image && (this.__imageVersion = this.__bitmapData.image.version);
                        if (null ==
                            this.__cacheBitmap || this.__isCacheBitmapRender) {
                            if (!(null == this.opaqueBackground && null == this.__graphics || !this.__renderable || 0 >= this.__worldAlpha)) {
                                if (null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && 0 < this.get_height()) {
                                    a.__setBlendMode(this.__worldBlendMode);
                                    a.__pushMaskObject(this);
                                    var b = a.__context3D,
                                        c = fa.__pool.get();
                                    c.setTo(0, 0, this.get_width(), this.get_height());
                                    a.__pushMaskRect(c, this.__renderTransform);
                                    var d = this.opaqueBackground;
                                    b.clear((d >>> 16 & 255) / 255, (d >>>
                                        8 & 255) / 255, (d & 255) / 255, 1, 0, 0, 1);
                                    a.__popMaskRect();
                                    a.__popMaskObject(this);
                                    fa.__pool.release(c)
                                }
                                null != this.__graphics && of .render(this, a)
                            }
                            nf.render(this, a)
                        } else nf.render(this.__cacheBitmap, a);
                        this.__renderEvent(a)
                    },
                    __renderGLMask: function(a) {
                        nf.renderMask(this, a)
                    },
                    __updateCacheBitmap: function(a, b) {
                        return null == this.__bitmapData || null == this.__filters && "opengl" == a.__type && null == this.__cacheBitmap ? !1 : za.prototype.__updateCacheBitmap.call(this, a, null != this.__bitmapData.image && this.__bitmapData.image.version !=
                            this.__imageVersion)
                    },
                    get_bitmapData: function() {
                        return this.__bitmapData
                    },
                    set_bitmapData: function(a) {
                        this.__bitmapData = a;
                        this.smoothing = !1;
                        this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                        this.__imageVersion = -1;
                        return this.__bitmapData
                    },
                    set_height: function(a) {
                        null != this.__bitmapData ? this.set_scaleY(a / this.__bitmapData.height) : this.set_scaleY(0);
                        return a
                    },
                    set_width: function(a) {
                        null != this.__bitmapData ? this.set_scaleX(a / this.__bitmapData.width) : this.set_scaleX(0);
                        return a
                    },
                    __class__: Jb,
                    __properties__: n(za.prototype.__properties__, {
                        set_bitmapData: "set_bitmapData",
                        get_bitmapData: "get_bitmapData"
                    })
                });
            var Zc = function() {
                ua.call(this);
                this.__allowSmoothing = !0;
                this.__tempColorTransform = new wb;
                this.__worldAlpha = 1
            };
            g["openfl.display.DisplayObjectRenderer"] = Zc;
            Zc.__name__ = "openfl.display.DisplayObjectRenderer";
            Zc.__super__ = ua;
            Zc.prototype = n(ua.prototype, {
                __clear: function() {},
                __getAlpha: function(a) {
                    return a * this.__worldAlpha
                },
                __popMaskObject: function(a, b) {},
                __pushMaskObject: function(a, b) {},
                __render: function(a) {},
                __resize: function(a, b) {},
                __setBlendMode: function(a) {},
                __class__: Zc
            });
            var Lj = function(a) {
                Zc.call(this)
            };
            g["openfl.display.CairoRenderer"] = Lj;
            Lj.__name__ = "openfl.display.CairoRenderer";
            Lj.__super__ = Zc;
            Lj.prototype = n(Zc.prototype, {
                applyMatrix: function(a, b) {
                    null == b && (b = this.cairo);
                    this.__matrix.copyFrom(a);
                    this.cairo == b && null != this.__worldTransform && this.__matrix.concat(this.__worldTransform);
                    this.__matrix3.a = this.__matrix.a;
                    this.__matrix3.b = this.__matrix.b;
                    this.__matrix3.c = this.__matrix.c;
                    this.__matrix3.d = this.__matrix.d;
                    this.__roundPixels ? (this.__matrix3.tx = Math.round(this.__matrix.tx), this.__matrix3.ty = Math.round(this.__matrix.ty)) : (this.__matrix3.tx = this.__matrix.tx, this.__matrix3.ty = this.__matrix.ty);
                    b.set_matrix(this.__matrix3)
                },
                __clear: function() {
                    if (null != this.cairo && (this.cairo.identityMatrix(), null != this.__stage && this.__stage.__clearBeforeRender)) {
                        var a = this.__blendMode;
                        this.__setBlendMode(10);
                        this.cairo.setSourceRGB(this.__stage.__colorSplit[0], this.__stage.__colorSplit[1],
                            this.__stage.__colorSplit[2]);
                        this.cairo.paint();
                        this.__setBlendMode(a)
                    }
                },
                __popMask: function() {
                    this.cairo.restore()
                },
                __popMaskObject: function(a, b) {
                    null == b && (b = !0);
                    a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
                    b && null != a.__scrollRect && this.__popMaskRect()
                },
                __popMaskRect: function() {
                    this.cairo.restore()
                },
                __pushMask: function(a) {
                    this.cairo.save();
                    this.applyMatrix(a.__renderTransform, this.cairo);
                    this.cairo.newPath();
                    a.__renderCairoMask(this);
                    this.cairo.clip()
                },
                __pushMaskObject: function(a, b) {
                    null ==
                        b && (b = !0);
                    b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
                    a.__isCacheBitmapRender || null == a.__mask || this.__pushMask(a.__mask)
                },
                __pushMaskRect: function(a, b) {
                    this.cairo.save();
                    this.applyMatrix(b, this.cairo);
                    this.cairo.newPath();
                    this.cairo.rectangle(a.x, a.y, a.width, a.height);
                    this.cairo.clip()
                },
                __render: function(a) {
                    null != this.cairo && a.__renderCairo(this)
                },
                __setBlendMode: function(a) {
                    null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                    this.__blendMode != a && (this.__blendMode =
                        a, this.__setBlendModeCairo(this.cairo, a))
                },
                __setBlendModeCairo: function(a, b) {
                    switch (b) {
                        case 0:
                            a.setOperator(12);
                            break;
                        case 2:
                            a.setOperator(17);
                            break;
                        case 3:
                            a.setOperator(23);
                            break;
                        case 5:
                            a.setOperator(21);
                            break;
                        case 7:
                            a.setOperator(2);
                            break;
                        case 8:
                            a.setOperator(18);
                            break;
                        case 9:
                            a.setOperator(14);
                            break;
                        case 11:
                            a.setOperator(16);
                            break;
                        case 12:
                            a.setOperator(15);
                            break;
                        default:
                            a.setOperator(2)
                    }
                },
                __class__: Lj
            });
            var Le = function(a) {
                this.pixelRatio = 1;
                Zc.call(this);
                this.context = a;
                this.__tempMatrix = new xa;
                this.__type =
                    "canvas"
            };
            g["openfl.display.CanvasRenderer"] = Le;
            Le.__name__ = "openfl.display.CanvasRenderer";
            Le.__super__ = Zc;
            Le.prototype = n(Zc.prototype, {
                applySmoothing: function(a, b) {
                    a.imageSmoothingEnabled = b
                },
                setTransform: function(a, b) {
                    null == b ? b = this.context : this.context == b && null != this.__worldTransform && (this.__tempMatrix.copyFrom(a), this.__tempMatrix.concat(this.__worldTransform), a = this.__tempMatrix);
                    this.__roundPixels ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0) : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty)
                },
                __clear: function() {
                    if (null !=
                        this.__stage) {
                        var a = this.__blendMode;
                        this.__blendMode = null;
                        this.__setBlendMode(10);
                        this.context.setTransform(1, 0, 0, 1, 0, 0);
                        this.context.globalAlpha = 1;
                        !this.__stage.__transparent && this.__stage.__clearBeforeRender ? (this.context.fillStyle = this.__stage.__colorString, this.context.fillRect(0, 0, this.__stage.stageWidth * this.__stage.window.__scale, this.__stage.stageHeight * this.__stage.window.__scale)) : this.__stage.__transparent && this.__stage.__clearBeforeRender && this.context.clearRect(0, 0, this.__stage.stageWidth *
                            this.__stage.window.__scale, this.__stage.stageHeight * this.__stage.window.__scale);
                        this.__setBlendMode(a)
                    }
                },
                __popMask: function() {
                    this.context.restore()
                },
                __popMaskObject: function(a, b) {
                    null == b && (b = !0);
                    a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
                    b && null != a.__scrollRect && this.__popMaskRect()
                },
                __popMaskRect: function() {
                    this.context.restore()
                },
                __pushMask: function(a) {
                    this.context.save();
                    this.setTransform(a.__renderTransform, this.context);
                    this.context.beginPath();
                    a.__renderCanvasMask(this);
                    this.context.closePath();
                    this.context.clip()
                },
                __pushMaskObject: function(a, b) {
                    null == b && (b = !0);
                    b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
                    a.__isCacheBitmapRender || null == a.__mask || this.__pushMask(a.__mask)
                },
                __pushMaskRect: function(a, b) {
                    this.context.save();
                    this.setTransform(b, this.context);
                    this.context.beginPath();
                    this.context.rect(a.x, a.y, a.width, a.height);
                    this.context.clip()
                },
                __render: function(a) {
                    a.__renderCanvas(this)
                },
                __setBlendMode: function(a) {
                    null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                    this.__blendMode != a && (this.__blendMode = a, this.__setBlendModeContext(this.context, a))
                },
                __setBlendModeContext: function(a, b) {
                    switch (b) {
                        case 0:
                            a.globalCompositeOperation = "lighter";
                            break;
                        case 2:
                            a.globalCompositeOperation = "darken";
                            break;
                        case 3:
                            a.globalCompositeOperation = "difference";
                            break;
                        case 5:
                            a.globalCompositeOperation = "hard-light";
                            break;
                        case 8:
                            a.globalCompositeOperation = "lighten";
                            break;
                        case 9:
                            a.globalCompositeOperation = "multiply";
                            break;
                        case 11:
                            a.globalCompositeOperation = "overlay";
                            break;
                        case 12:
                            a.globalCompositeOperation =
                                "screen";
                            break;
                        default:
                            a.globalCompositeOperation = "source-over"
                    }
                },
                __class__: Le
            });
            var Em = {
                    toString: function(a) {
                        switch (a) {
                            case 0:
                                return "none";
                            case 1:
                                return "round";
                            case 2:
                                return "square";
                            default:
                                return null
                        }
                    }
                },
                Gg = function(a) {
                    this.pixelRatio = 1;
                    Zc.call(this);
                    this.element = a;
                    za.__supportDOM = !0;
                    a = window.getComputedStyle(document.documentElement, "");
                    a = (Array.prototype.slice.call(a).join("").match(/-(moz|webkit|ms)-/) || "" === a.OLink && ["", "o"])[1];
                    "WebKit|Moz|MS|O".match(new RegExp("(" + a + ")", "i"));
                    a[0].toUpperCase();
                    a.substr(1);
                    this.__vendorPrefix = a;
                    this.__transformProperty = "webkit" == a ? "-webkit-transform" : "transform";
                    this.__transformOriginProperty = "webkit" == a ? "-webkit-transform-origin" : "transform-origin";
                    this.__clipRects = [];
                    this.__z = this.__numClipRects = 0;
                    this.__type = "dom";
                    this.__canvasRenderer = new Le(null);
                    this.__canvasRenderer.__isDOM = !0
                };
            g["openfl.display.DOMRenderer"] = Gg;
            Gg.__name__ = "openfl.display.DOMRenderer";
            Gg.__super__ = Zc;
            Gg.prototype = n(Zc.prototype, {
                __applyStyle: function(a, b, c, d) {
                    var e = a.__style;
                    if (b &&
                        a.__renderTransformChanged) {
                        b = a.__renderTransform;
                        var f = this.__roundPixels;
                        null == f && (f = !1);
                        e.setProperty(this.__transformProperty, f ? "matrix3d(" + b.a + ", " + b.b + ", 0, 0, " + b.c + ", " + b.d + ", 0, 0, 0, 0, 1, 0, " + (b.tx | 0) + ", " + (b.ty | 0) + ", 0, 1)" : "matrix3d(" + b.a + ", " + b.b + ", 0, 0, " + b.c + ", " + b.d + ", 0, 0, 0, 0, 1, 0, " + b.tx + ", " + b.ty + ", 0, 1)", null)
                    }
                    a.__worldZ != ++this.__z && (a.__worldZ = this.__z, e.setProperty("z-index", null == a.__worldZ ? "null" : "" + a.__worldZ, null));
                    c && a.__worldAlphaChanged && (1 > a.__worldAlpha ? e.setProperty("opacity",
                        null == a.__worldAlpha ? "null" : "" + a.__worldAlpha, null) : e.removeProperty("opacity"));
                    d && a.__worldClipChanged && (null == a.__worldClip ? e.removeProperty("clip") : (a = a.__worldClip, e.setProperty("clip", "rect(" + a.y + "px, " + a.get_right() + "px, " + a.get_bottom() + "px, " + a.x + "px)", null)))
                },
                __initializeElement: function(a, b) {
                    var c = a.__style = b.style;
                    c.setProperty("position", "absolute", null);
                    c.setProperty("top", "0", null);
                    c.setProperty("left", "0", null);
                    c.setProperty(this.__transformOriginProperty, "0 0 0", null);
                    this.element.appendChild(b);
                    a.__worldAlphaChanged = !0;
                    a.__renderTransformChanged = !0;
                    a.__worldVisibleChanged = !0;
                    a.__worldClipChanged = !0;
                    a.__worldClip = null;
                    a.__worldZ = -1
                },
                __popMask: function() {
                    this.__popMaskRect()
                },
                __popMaskObject: function(a, b) {
                    null == b && (b = !0);
                    null != a.__mask && this.__popMask();
                    b && null != a.__scrollRect && this.__popMaskRect()
                },
                __popMaskRect: function() {
                    0 < this.__numClipRects && (this.__numClipRects--, this.__currentClipRect = 0 < this.__numClipRects ? this.__clipRects[this.__numClipRects - 1] : null)
                },
                __pushMask: function(a) {
                    this.__pushMaskRect(a.getBounds(a),
                        a.__renderTransform)
                },
                __pushMaskObject: function(a, b) {
                    null == b && (b = !0);
                    b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
                    null != a.__mask && this.__pushMask(a.__mask)
                },
                __pushMaskRect: function(a, b) {
                    this.__numClipRects == this.__clipRects.length && (this.__clipRects[this.__numClipRects] = new fa);
                    var c = this.__clipRects[this.__numClipRects];
                    a.__transform(c, b);
                    0 < this.__numClipRects && (a = this.__clipRects[this.__numClipRects - 1], c.__contract(a.x, a.y, a.width, a.height));
                    0 > c.height && (c.height =
                        0);
                    0 > c.width && (c.width = 0);
                    this.__currentClipRect = c;
                    this.__numClipRects++
                },
                __render: function(a) {
                    this.element.style.background = this.__stage.__transparent ? "none" : this.__stage.__colorString;
                    this.__z = 1;
                    a.__renderDOM(this)
                },
                __setBlendMode: function(a) {
                    null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                    this.__blendMode != a && (this.__blendMode = a)
                },
                __updateClip: function(a) {
                    if (null == this.__currentClipRect) a.__worldClipChanged = null != a.__worldClip, a.__worldClip = null;
                    else {
                        null == a.__worldClip && (a.__worldClip =
                            new fa);
                        var b = fa.__pool.get(),
                            c = xa.__pool.get();
                        c.copyFrom(a.__renderTransform);
                        c.invert();
                        this.__currentClipRect.__transform(b, c);
                        b.equals(a.__worldClip) ? a.__worldClipChanged = !1 : (a.__worldClip.copyFrom(b), a.__worldClipChanged = !0);
                        fa.__pool.release(b);
                        xa.__pool.release(c)
                    }
                },
                __class__: Gg
            });
            var Mj = function(a) {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Pd.call(this, a);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.display.DisplayObjectShader"] = Mj;
            Mj.__name__ = "openfl.display.DisplayObjectShader";
            Mj.__super__ = Pd;
            Mj.prototype = n(Pd.prototype, {
                __class__: Mj
            });
            var Vb = function() {
                this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
                pa.call(this);
                this.__caretIndex = -1;
                this.__displayAsPassword = !1;
                this.__graphics = new ad(this);
                this.__textEngine = new lb(this);
                this.__layoutDirty = !0;
                this.__offsetY = this.__offsetX = 0;
                this.__mouseWheelEnabled = !0;
                this.__text =
                    "";
                this.doubleClickEnabled = !0;
                null == Vb.__defaultTextFormat && (Vb.__defaultTextFormat = new nc("Times New Roman", 12, 0, !1, !1, !1, "", "", 3, 0, 0, 0, 0), Vb.__defaultTextFormat.blockIndent = 0, Vb.__defaultTextFormat.bullet = !1, Vb.__defaultTextFormat.letterSpacing = 0, Vb.__defaultTextFormat.kerning = !1);
                this.__textFormat = Vb.__defaultTextFormat.clone();
                this.__textEngine.textFormatRanges.push(new lf(this.__textFormat, 0, 0));
                this.addEventListener("mouseDown", r(this, this.this_onMouseDown));
                this.addEventListener("focusIn",
                    r(this, this.this_onFocusIn));
                this.addEventListener("focusOut", r(this, this.this_onFocusOut));
                this.addEventListener("keyDown", r(this, this.this_onKeyDown));
                this.addEventListener("mouseWheel", r(this, this.this_onMouseWheel));
                this.addEventListener("doubleClick", r(this, this.this_onDoubleClick))
            };
            g["openfl.text.TextField"] = Vb;
            Vb.__name__ = "openfl.text.TextField";
            Vb.__super__ = pa;
            Vb.prototype = n(pa.prototype, {
                appendText: function(a) {
                    null != a && "" != a && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__updateText(this.__text + a), this.__textEngine.textFormatRanges.get(this.__textEngine.textFormatRanges.get_length() - 1).end = this.__text.length, this.__updateScrollV(), this.__updateScrollH())
                },
                getCharBoundaries: function(a) {
                    if (0 > a || a > this.__text.length - 1) return null;
                    var b = new fa;
                    return this.__getCharBoundaries(a, b) ? b : null
                },
                getLineIndexOfChar: function(a) {
                    if (0 > a || a > this.__text.length) return -1;
                    this.__updateLayout();
                    for (var b = this.__textEngine.layoutGroups.iterator(); b.hasNext();) {
                        var c =
                            b.next();
                        if (c.startIndex <= a && c.endIndex >= a) return c.lineIndex
                    }
                    return -1
                },
                getLineOffset: function(a) {
                    this.__updateLayout();
                    if (0 > a || a > this.__textEngine.numLines - 1) return -1;
                    for (var b = this.__textEngine.layoutGroups.iterator(); b.hasNext();) {
                        var c = b.next();
                        if (c.lineIndex == a) return c.startIndex
                    }
                    return 0
                },
                replaceSelectedText: function(a) {
                    this.__replaceSelectedText(a, !1)
                },
                replaceText: function(a, b, c) {
                    this.__replaceText(a, b, c, !1)
                },
                setSelection: function(a, b) {
                    this.__selectionIndex = a;
                    this.__caretIndex = b;
                    this.__updateScrollV();
                    this.__stopCursorTimer();
                    this.__startCursorTimer()
                },
                setTextFormat: function(a, b, c) {
                    null == c && (c = 0);
                    null == b && (b = 0);
                    var d = this.get_text().length;
                    0 > b && (b = 0);
                    0 > c && (c = 0);
                    0 == c && (c = 0 == b ? d : b + 1);
                    if (!(c < b)) {
                        if (0 == b && c >= d)
                            for (this.__textFormat.__merge(a), b = 0, c = this.__textEngine.textFormatRanges.get_length(); b < c;) d = b++, d = this.__textEngine.textFormatRanges.get(d), d.format.__merge(a);
                        else
                            for (var e = 0, f; e < this.__textEngine.textFormatRanges.get_length();) {
                                d = this.__textEngine.textFormatRanges.get(e);
                                if (d.start == b &&
                                    d.end == c) {
                                    d.format.__merge(a);
                                    break
                                } else d.start >= b && d.end <= c ? d.format.__merge(a) : d.start >= b && d.start < c && d.end > b ? (f = new lf(d.format.clone(), d.start, c), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(e, f), d.start = c, ++e) : d.start < b && d.end > b && d.end >= c && (f = new lf(d.format.clone(), b, d.end), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(e + 1, f), d.end = b, ++e);
                                ++e
                            }
                        this.__layoutDirty = this.__dirty = !0;
                        this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
                    }
                },
                __allowMouseFocus: function() {
                    return 1 ==
                        this.__textEngine.type || this.get_tabEnabled() ? !0 : this.get_selectable()
                },
                __caretBeginningOfLine: function() {
                    this.__selectionIndex == this.__caretIndex || this.__caretIndex < this.__selectionIndex ? this.__caretIndex = this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) : this.__selectionIndex = this.getLineOffset(this.getLineIndexOfChar(this.__selectionIndex))
                },
                __caretEndOfLine: function() {
                    var a = this.__selectionIndex == this.__caretIndex ? this.getLineIndexOfChar(this.__caretIndex) : this.getLineIndexOfChar(Math.max(this.__caretIndex,
                        this.__selectionIndex) | 0);
                    this.__caretIndex = a < this.__textEngine.numLines - 1 ? this.getLineOffset(a + 1) - 1 : this.__text.length
                },
                __caretNextCharacter: function() {
                    this.__caretIndex < this.__text.length && this.__caretIndex++
                },
                __caretNextLine: function(a, b) {
                    null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
                    a < this.__textEngine.numLines - 1 ? (null == b && (b = this.__caretIndex), this.__caretIndex = this.__getCharIndexOnDifferentLine(b, a + 1)) : this.__caretIndex = this.__text.length
                },
                __caretPreviousCharacter: function() {
                    0 < this.__caretIndex &&
                        this.__caretIndex--
                },
                __caretPreviousLine: function(a, b) {
                    null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
                    0 < a ? (null == b && (b = this.__caretIndex), this.__caretIndex = this.__getCharIndexOnDifferentLine(b, a - 1)) : this.__caretIndex = 0
                },
                __disableInput: function() {
                    this.__inputEnabled && null != this.stage && (this.stage.window.__backend.setTextInputEnabled(!1), this.stage.window.onTextInput.remove(r(this, this.window_onTextInput)), this.stage.window.onKeyDown.remove(r(this, this.window_onKeyDown)), this.__inputEnabled = !1, this.__stopCursorTimer())
                },
                __dispatch: function(a) {
                    if (2 == a.eventPhase && "mouseUp" == a.type) {
                        var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
                        null != b && (b = b.format.url, null != b && "" != b && (K.startsWith(b, "event:") ? this.dispatchEvent(new Ye("link", !1, !1, Y.substr(b, 6, null))) : la.getURL(new $g(b))))
                    }
                    return pa.prototype.__dispatch.call(this, a)
                },
                __enableInput: function() {
                    null != this.stage && (this.stage.window.__backend.setTextInputEnabled(!0), this.__inputEnabled || (this.stage.window.__backend.setTextInputEnabled(!0),
                        this.stage.window.onTextInput.has(r(this, this.window_onTextInput)) || (this.stage.window.onTextInput.add(r(this, this.window_onTextInput)), this.stage.window.onKeyDown.add(r(this, this.window_onKeyDown))), this.__inputEnabled = !0, this.__startCursorTimer()))
                },
                __getBounds: function(a, b) {
                    this.__updateLayout();
                    var c = fa.__pool.get();
                    c.copyFrom(this.__textEngine.bounds);
                    b.tx += this.__offsetX;
                    b.ty += this.__offsetY;
                    c.__transform(c, b);
                    a.__expand(c.x, c.y, c.width, c.height);
                    fa.__pool.release(c)
                },
                __getCharBoundaries: function(a,
                    b) {
                    if (0 > a || a > this.__text.length - 1) return !1;
                    this.__updateLayout();
                    for (var c = this.__textEngine.layoutGroups.iterator(); c.hasNext();) {
                        var d = c.next();
                        if (a >= d.startIndex && a < d.endIndex) try {
                            for (var e = d.offsetX, f = 0, k = a - d.startIndex; f < k;) {
                                var p = f++;
                                e += d.positions[p]
                            }
                            b.setTo(e, d.offsetY, d.positions[a - d.startIndex], d.ascent + d.descent);
                            return !0
                        } catch (m) {
                            Ca.lastError = m
                        }
                    }
                    return !1
                },
                __getCharIndexOnDifferentLine: function(a, b) {
                    if (0 > a || a > this.__text.length || 0 > b || b > this.__textEngine.numLines - 1) return -1;
                    for (var c = null,
                            d = null, e = this.__textEngine.layoutGroups.iterator(); e.hasNext();) {
                        var f = e.next();
                        if (a >= f.startIndex && a <= f.endIndex) {
                            c = f.offsetX;
                            for (var k = 0, p = a - f.startIndex; k < p;) {
                                var m = k++;
                                c += f.positions[m]
                            }
                            if (null != d) return this.__getPosition(c, d)
                        }
                        if (f.lineIndex == b) {
                            d = f.offsetY + f.height / 2;
                            f = 0;
                            for (k = this.get_scrollV() - 1; f < k;) p = f++, d -= this.__textEngine.lineHeights.get(p);
                            if (null != c) return this.__getPosition(c, d)
                        }
                    }
                    return -1
                },
                __getCursor: function() {
                    var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
                    return null !=
                        a && "" != a.format.url ? "button" : this.__textEngine.selectable ? "ibeam" : null
                },
                __getGroup: function(a, b, c) {
                    null == c && (c = !1);
                    this.__updateLayout();
                    a += this.get_scrollH();
                    for (var d = 0, e = this.get_scrollV() - 1; d < e;) {
                        var f = d++;
                        b += this.__textEngine.lineHeights.get(f)
                    }!c && b > this.__textEngine.textHeight && (b = this.__textEngine.textHeight);
                    var k = !0;
                    d = 0;
                    for (e = this.__textEngine.layoutGroups.get_length(); d < e;) {
                        f = d++;
                        var p = this.__textEngine.layoutGroups.get(f);
                        f = f < this.__textEngine.layoutGroups.get_length() - 1 ? this.__textEngine.layoutGroups.get(f +
                            1) : null;
                        k && (b < p.offsetY && (b = p.offsetY), a < p.offsetX && (a = p.offsetX), k = !1);
                        if (b >= p.offsetY && b <= p.offsetY + p.height || !c && null == f)
                            if (a >= p.offsetX && a <= p.offsetX + p.width || !c && (null == f || f.lineIndex != p.lineIndex)) return p
                    }
                    return null
                },
                __getPosition: function(a, b) {
                    b = this.__getGroup(a, b);
                    if (null == b) return this.__text.length;
                    for (var c = 0, d = 0, e = b.positions.length; d < e;) {
                        var f = d++;
                        c += b.positions[f];
                        if (a <= b.offsetX + c) {
                            if (a <= b.offsetX + (c - b.positions[f]) + b.positions[f] / 2) return b.startIndex + f;
                            if (b.startIndex + f < b.endIndex) return b.startIndex +
                                f + 1;
                            break
                        }
                    }
                    return b.endIndex
                },
                __hitTest: function(a, b, c, d, e, f) {
                    if (!f.get_visible() || this.__isMask || e && !this.mouseEnabled || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
                    this.__getRenderTransform();
                    this.__updateLayout();
                    c = this.__renderTransform;
                    e = c.a * c.d - c.b * c.c;
                    var k = 0 == e ? -c.tx : 1 / e * (c.c * (c.ty - b) + c.d * (a - c.tx));
                    c = this.__renderTransform;
                    e = c.a * c.d - c.b * c.c;
                    return this.__textEngine.bounds.contains(k, 0 == e ? -c.ty : 1 / e * (c.a * (b - c.ty) + c.b * (c.tx - a))) ? (null != d && d.push(f), !0) : !1
                },
                __hitTestMask: function(a,
                    b) {
                    this.__getRenderTransform();
                    this.__updateLayout();
                    var c = this.__renderTransform,
                        d = c.a * c.d - c.b * c.c,
                        e = 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - b) + c.d * (a - c.tx));
                    c = this.__renderTransform;
                    d = c.a * c.d - c.b * c.c;
                    return this.__textEngine.bounds.contains(e, 0 == d ? -c.ty : 1 / d * (c.a * (b - c.ty) + c.b * (c.tx - a))) ? !0 : !1
                },
                __renderCairo: function(a) {},
                __renderCanvas: function(a) {
                    a.__isDOM && !this.__renderedOnCanvasWhileOnDOM && (this.__renderedOnCanvasWhileOnDOM = !0, 1 == this.get_type() && this.replaceText(0, this.__text.length, this.__text), this.__isHTML &&
                        this.__updateText(Na.parse(this.__text, this.__textFormat, this.__textEngine.textFormatRanges)), this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    if (null == this.get_mask() || 0 < this.get_mask().get_width() && 0 < this.get_mask().get_height())
                        if (this.__updateCacheBitmap(a, this.__dirty), null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                            var b = this.__textEngine,
                                c = b.background || b.border ? b.bounds : b.textBounds,
                                d = this.__graphics;
                            this.__dirty && (this.__updateLayout(),
                                null == d.__bounds && (d.__bounds = new fa), d.__bounds.copyFrom(c));
                            d.__update(a.__worldTransform);
                            if (this.__dirty || d.__softwareDirty) {
                                var e = d.__width,
                                    f = d.__height;
                                if (!(null != b.text && "" != b.text || b.background || b.border || b.__hasFocus || 1 == b.type && b.selectable) || (0 >= b.width || 0 >= b.height) && 2 != b.autoSize) this.__graphics.__canvas = null, this.__graphics.__context = null, this.__graphics.__bitmap = null, this.__graphics.__softwareDirty = !1, this.__graphics.set___dirty(!1), this.__dirty = !1;
                                else {
                                    null == this.__graphics.__canvas &&
                                        (this.__graphics.__canvas = window.document.createElement("canvas"), this.__graphics.__context = this.__graphics.__canvas.getContext("2d"));
                                    N.context = d.__context;
                                    var k = d.__renderTransform;
                                    if (a.__isDOM) {
                                        var p = a.pixelRatio;
                                        d.__canvas.width = e * p | 0;
                                        d.__canvas.height = f * p | 0;
                                        d.__canvas.style.width = e + "px";
                                        d.__canvas.style.height = f + "px";
                                        e = xa.__pool.get();
                                        e.copyFrom(k);
                                        e.scale(p, p);
                                        a.setTransform(e, N.context);
                                        xa.__pool.release(e)
                                    } else d.__canvas.width = e, d.__canvas.height = f, N.context.setTransform(k.a, k.b, k.c, k.d,
                                        k.tx, k.ty);
                                    null == N.clearRect && (N.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
                                    N.clearRect && N.context.clearRect(0, 0, d.__canvas.width, d.__canvas.height);
                                    if (null != b.text && "" != b.text || b.__hasFocus) {
                                        e = b.text;
                                        d.__context.imageSmoothingEnabled = !a.__allowSmoothing || 0 == b.antiAliasType && 400 == b.sharpness ? !1 : !0;
                                        if (b.border || b.background) {
                                            N.context.rect(.5, .5, c.width - 1, c.height - 1);
                                            if (b.background) {
                                                var m = K.hex(b.backgroundColor & 16777215, 6);
                                                N.context.fillStyle = "#" + m;
                                                N.context.fill()
                                            }
                                            b.border &&
                                                (N.context.lineWidth = 1, m = K.hex(b.borderColor & 16777215, 6), N.context.strokeStyle = "#" + m, N.context.stroke())
                                        }
                                        N.context.textBaseline = "alphabetic";
                                        N.context.textAlign = "start";
                                        f = -this.get_scrollH();
                                        var h = p = 0;
                                        for (m = this.get_scrollV() - 1; h < m;) {
                                            var g = h++;
                                            p -= b.lineHeights.get(g)
                                        }
                                        for (var l, q = b.layoutGroups.iterator(); q.hasNext();) {
                                            var n = q.next();
                                            if (!(n.lineIndex < this.get_scrollV() - 1)) {
                                                if (n.lineIndex > b.get_bottomScrollV() - 1) break;
                                                k = "#" + K.hex(n.format.color & 16777215, 6);
                                                N.context.font = lb.getFont(n.format);
                                                N.context.fillStyle =
                                                    k;
                                                N.context.fillText(e.substring(n.startIndex, n.endIndex), n.offsetX + f - c.x, n.offsetY + n.ascent + p - c.y);
                                                if (-1 < this.__caretIndex && b.selectable)
                                                    if (this.__selectionIndex == this.__caretIndex) {
                                                        if (this.__showCursor && n.startIndex <= this.__caretIndex && n.endIndex >= this.__caretIndex) {
                                                            h = l = 0;
                                                            for (m = this.__caretIndex - n.startIndex; h < m;) {
                                                                g = h++;
                                                                if (n.positions.length <= g) break;
                                                                l += n.positions[g]
                                                            }
                                                            h = 0;
                                                            m = this.get_scrollV();
                                                            for (g = n.lineIndex + 1; m < g;) {
                                                                var r = m++;
                                                                h += b.lineHeights.get(r - 1)
                                                            }
                                                            N.context.beginPath();
                                                            m = K.hex(n.format.color &
                                                                16777215, 6);
                                                            N.context.strokeStyle = "#" + m;
                                                            N.context.moveTo(n.offsetX + l - this.get_scrollH() - c.x, h + 2 - c.y);
                                                            N.context.lineWidth = 1;
                                                            N.context.lineTo(n.offsetX + l - this.get_scrollH() - c.x, h + lb.getFormatHeight(this.get_defaultTextFormat()) - 1 - c.y);
                                                            N.context.stroke();
                                                            N.context.closePath()
                                                        }
                                                    } else if (n.startIndex <= this.__caretIndex && n.endIndex >= this.__caretIndex || n.startIndex <= this.__selectionIndex && n.endIndex >= this.__selectionIndex || n.startIndex > this.__caretIndex && n.endIndex < this.__selectionIndex || n.startIndex > this.__selectionIndex &&
                                                    n.endIndex < this.__caretIndex) l = Math.min(this.__selectionIndex, this.__caretIndex) | 0, h = Math.max(this.__selectionIndex, this.__caretIndex) | 0, n.startIndex > l && (l = n.startIndex), n.endIndex < h && (h = n.endIndex), g = this.getCharBoundaries(l), h >= n.endIndex ? (m = this.getCharBoundaries(n.endIndex - 1), null != m && (m.x += m.width + 2)) : m = this.getCharBoundaries(h), null != g && null != m && (N.context.fillStyle = "#000000", N.context.fillRect(g.x + f, g.y + p, m.x - g.x, n.height), N.context.fillStyle = "#FFFFFF", N.context.fillText(e.substring(l, h), f +
                                                    g.x, n.offsetY + n.ascent + p));
                                                n.format.underline && (N.context.beginPath(), N.context.strokeStyle = k, N.context.lineWidth = 1, k = n.offsetX + f - c.x, l = Math.floor(n.offsetY + p + n.ascent - c.y) + .5, N.context.moveTo(k, l), N.context.lineTo(k + n.width, l), N.context.stroke(), N.context.closePath())
                                            }
                                        }
                                    } else {
                                        if (b.border || b.background) b.border ? N.context.rect(.5, .5, c.width - 1, c.height - 1) : N.context.rect(0, 0, c.width, c.height), b.background && (m = K.hex(b.backgroundColor & 16777215, 6), N.context.fillStyle = "#" + m, N.context.fill()), b.border && (N.context.lineWidth =
                                            1, N.context.lineCap = "square", m = K.hex(b.borderColor & 16777215, 6), N.context.strokeStyle = "#" + m, N.context.stroke());
                                        if (-1 < this.__caretIndex && b.selectable && this.__showCursor) {
                                            f = -this.get_scrollH();
                                            h = p = 0;
                                            for (m = this.get_scrollV() - 1; h < m;) g = h++, p += b.lineHeights.get(g);
                                            N.context.beginPath();
                                            m = K.hex(this.get_defaultTextFormat().color & 16777215, 6);
                                            N.context.strokeStyle = "#" + m;
                                            N.context.moveTo(f + 2.5, p + 2.5);
                                            N.context.lineWidth = 1;
                                            N.context.lineTo(f + 2.5, p + lb.getFormatHeight(this.get_defaultTextFormat()) - 1);
                                            N.context.stroke();
                                            N.context.closePath()
                                        }
                                    }
                                    d.__bitmap = H.fromCanvas(this.__graphics.__canvas);
                                    d.__visible = !0;
                                    this.__dirty = !1;
                                    d.__softwareDirty = !1;
                                    d.set___dirty(!1)
                                }
                            }
                            p = !1;
                            0 == this.__textEngine.antiAliasType && 1 == this.__textEngine.gridFitType && (p = a.context.imageSmoothingEnabled) && (a.context.imageSmoothingEnabled = !1);
                            if ((null != this.opaqueBackground || null != this.__graphics) && this.__renderable && (c = a.__getAlpha(this.__worldAlpha), !(0 >= c) && (null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && 0 < this.get_height() &&
                                    (a.__setBlendMode(this.__worldBlendMode), a.__pushMaskObject(this), b = a.context, a.setTransform(this.__renderTransform, b), k = this.opaqueBackground, b.fillStyle = "rgb(" + (k >>> 16 & 255) + "," + (k >>> 8 & 255) + "," + (k & 255) + ")", b.fillRect(0, 0, this.get_width(), this.get_height()), a.__popMaskObject(this)), null != this.__graphics && this.__renderable && (c = a.__getAlpha(this.__worldAlpha), !(0 >= c) && (d = this.__graphics, null != d && (v.render(d, a), e = d.__width, f = d.__height, q = d.__canvas, null != q && d.__visible && 1 <= e && 1 <= f && (k = d.__worldTransform,
                                        b = a.context, l = this.__scrollRect, n = this.__worldScale9Grid, null == l || 0 < l.width && 0 < l.height))))))) {
                                a.__setBlendMode(this.__worldBlendMode);
                                a.__pushMaskObject(this);
                                b.globalAlpha = c;
                                if (null != n && 0 == k.b && 0 == k.c) {
                                    b.setTransform(1, 0, 0, 1, k.tx, k.ty);
                                    c = d.__bounds;
                                    m = d.__renderTransform.a;
                                    var D = d.__renderTransform.d;
                                    g = k.a;
                                    r = k.d;
                                    d = Math.max(1, Math.round(n.x * m));
                                    k = Math.round(n.y * D);
                                    l = Math.max(1, Math.round((c.get_right() - n.get_right()) * m));
                                    h = Math.round((c.get_bottom() - n.get_bottom()) * D);
                                    m = Math.round(n.width * m);
                                    D = Math.round(n.height *
                                        D);
                                    var w = Math.round(n.x * g),
                                        x = Math.round(n.y * r),
                                        B = Math.round((c.get_right() - n.get_right()) * g);
                                    c = Math.round((c.get_bottom() - n.get_bottom()) * r);
                                    n = Math.round(e * g) - w - B;
                                    g = Math.round(f * r) - x - c;
                                    a.applySmoothing(b, !1);
                                    0 != m && 0 != D ? (b.drawImage(q, 0, 0, d, k, 0, 0, w, x), b.drawImage(q, d, 0, m, k, w, 0, n, x), b.drawImage(q, d + m, 0, l, k, w + n, 0, B, x), b.drawImage(q, 0, k, d, D, 0, x, w, g), b.drawImage(q, d, k, m, D, w, x, n, g), b.drawImage(q, d + m, k, l, D, w + n, x, B, g), b.drawImage(q, 0, k + D, d, h, 0, x + g, w, c), b.drawImage(q, d, k + D, m, h, w, x + g, n, c), b.drawImage(q, d + m,
                                        k + D, l, h, w + n, x + g, B, c)) : 0 == m && 0 != D ? (d = w + n + B, b.drawImage(q, 0, 0, e, k, 0, 0, d, x), b.drawImage(q, 0, k, e, D, 0, x, d, g), b.drawImage(q, 0, k + D, e, h, 0, x + g, d, c)) : 0 == D && 0 != m && (c = x + g + c, b.drawImage(q, 0, 0, d, f, 0, 0, w, c), b.drawImage(q, d, 0, m, f, w, 0, n, c), b.drawImage(q, d + m, 0, l, f, w + n, 0, B, c))
                                } else a.setTransform(k, b), a.__isDOM && (c = 1 / a.pixelRatio, b.scale(c, c)), b.drawImage(q, 0, 0, e, f);
                                a.__popMaskObject(this)
                            }
                            p && (a.context.imageSmoothingEnabled = !0)
                        } else d = this.__cacheBitmap, d.__renderable && (c = a.__getAlpha(d.__worldAlpha), 0 < c && null != d.__bitmapData &&
                            d.__bitmapData.__isValid && d.__bitmapData.readable && (b = a.context, a.__setBlendMode(d.__worldBlendMode), a.__pushMaskObject(d, !1), Ma.convertToCanvas(d.__bitmapData.image), b.globalAlpha = c, l = d.__scrollRect, a.setTransform(d.__renderTransform, b), a.__allowSmoothing && d.smoothing || (b.imageSmoothingEnabled = !1), null == l ? b.drawImage(d.__bitmapData.image.get_src(), 0, 0, d.__bitmapData.image.width, d.__bitmapData.image.height) : b.drawImage(d.__bitmapData.image.get_src(), l.x, l.y, l.width, l.height), a.__allowSmoothing && d.smoothing ||
                                (b.imageSmoothingEnabled = !0), a.__popMaskObject(d, !1)))
                },
                __renderDOM: function(a) {
                    this.__domRender = !0;
                    this.__updateCacheBitmap(a, this.__forceCachedBitmapUpdate);
                    this.__domRender = this.__forceCachedBitmapUpdate = !1;
                    if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                        this.__renderedOnCanvasWhileOnDOM && (this.__renderedOnCanvasWhileOnDOM = !1, this.__isHTML && null != this.__rawHtmlText && (this.__updateText(this.__rawHtmlText), this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())));
                        var b = this,
                            c = b.__textEngine;
                        if (null != b.stage && b.__worldVisible && b.__renderable) {
                            if (b.__dirty || b.__renderTransformChanged || null == b.__div)
                                if ("" != c.text || c.background || c.border || 1 == c.type) {
                                    null == b.__div && (b.__div = window.document.createElement("div"), a.__initializeElement(b, b.__div), b.__style.setProperty("outline", "none", null), b.__div.addEventListener("input", function(a) {
                                        a.preventDefault();
                                        b.get_htmlText() != b.__div.innerHTML && (b.set_htmlText(b.__div.innerHTML), b.__dirty = !1, b.dispatchEvent(new Ye("textInput", !1, !1, b.get_htmlText())))
                                    }, !0));
                                    c.wordWrap ? b.__style.setProperty("word-wrap", "break-word", null) : b.__style.setProperty("white-space", "nowrap", null);
                                    b.__style.setProperty("overflow", "hidden", null);
                                    c.selectable ? (b.__style.setProperty("cursor", "text", null), b.__style.setProperty("-webkit-user-select", "text", null), b.__style.setProperty("-moz-user-select", "text", null), b.__style.setProperty("-ms-user-select", "text", null), b.__style.setProperty("-o-user-select", "text", null)) : b.__style.setProperty("cursor",
                                        "inherit", null);
                                    b.__div.contentEditable = 1 == c.type;
                                    var d = b.__style;
                                    c.background ? d.setProperty("background-color", "#" + K.hex(c.backgroundColor & 16777215, 6), null) : d.removeProperty("background-color");
                                    var e = c.width,
                                        f = c.height,
                                        k = 1,
                                        p = b.__textFormat.size,
                                        m = p,
                                        h = b.__renderTransform;
                                    if (1 != h.a || 1 != h.d) h.a == h.d ? (k = h.a, h.a = h.d = 1) : h.a > h.d ? (k = h.a, h.d /= h.a, h.a = 1) : (k = h.d, h.a /= h.d, h.d = 1), m *= k, e = Math.ceil(e * k), f = Math.ceil(f * k);
                                    b.__textFormat.size = m;
                                    h = c.text;
                                    var g = 0;
                                    if (b.__isHTML) {
                                        for (var l = h; Wb.__regexFont.match(l);) {
                                            l =
                                                Wb.__regexFont.matched(0);
                                            var q = "";
                                            Wb.__regexFace.match(l) && (q += "font-family:'" + Wb.__getAttributeMatch(Wb.__regexFace) + "';");
                                            Wb.__regexColor.match(l) && (q += "color:#" + Wb.__getAttributeMatch(Wb.__regexColor) + ";");
                                            if (Wb.__regexSize.match(l)) {
                                                g = Wb.__getAttributeMatch(Wb.__regexSize);
                                                var n = Y.cca(g, 0);
                                                g = parseFloat(g) * k;
                                                q += "font-size:" + (43 == n || 45 == n ? m + g : g) + "px;"
                                            }
                                            h = K.replace(h, l, "<span style='" + q + "'>");
                                            l = Wb.__regexFont.matchedRight()
                                        }
                                        h = h.replace(Wb.__regexCloseFont.r, "</span>")
                                    } else h = K.htmlEscape(h);
                                    h = K.replace(h,
                                        "<p ", "<p style='margin-top:0; margin-bottom:0;' ");
                                    k = b.__textFormat.leading;
                                    b.__textFormat.leading += g | 0;
                                    m = /\r\n/g;
                                    h = h.replace(m, "<br>");
                                    b.__div.innerHTML = h;
                                    m = /\n/g;
                                    h = b.__div.innerHTML.replace(m, "<br>");
                                    b.__div.innerHTML = h;
                                    m = /\r/g;
                                    h = b.__div.innerHTML.replace(m, "<br>");
                                    b.__div.innerHTML = h;
                                    d.setProperty("font", lb.getFont(b.__textFormat), null);
                                    b.__textFormat.size = p;
                                    b.__textFormat.leading = k;
                                    d.setProperty("top", "3px", null);
                                    c.border ? (d.setProperty("border", "solid 1px #" + K.hex(c.borderColor & 16777215, 6),
                                        null), b.__renderTransform.translate(-1, -1), b.__renderTransformChanged = !0, b.__transformDirty = !0) : "" != d.border && (d.removeProperty("border"), b.__renderTransformChanged = !0);
                                    d.setProperty("color", "#" + K.hex(b.__textFormat.color & 16777215, 6), null);
                                    d.setProperty("width", e + "px", null);
                                    d.setProperty("height", f + "px", null);
                                    switch (b.__textFormat.align) {
                                        case 0:
                                            d.setProperty("text-align", "center", null);
                                            break;
                                        case 4:
                                            d.setProperty("text-align", "right", null);
                                            break;
                                        default:
                                            d.setProperty("text-align", "left", null)
                                    }
                                    b.__dirty = !1
                                } else null != b.__div && (a.element.removeChild(b.__div), b.__div = null);
                            null != b.__div && (c = a.__roundPixels, a.__roundPixels = !0, a.__updateClip(b), a.__applyStyle(b, !0, !0, !0), a.__roundPixels = c)
                        } else Wb.clear(b, a)
                    } else this.__renderDOMClear(a), this.__cacheBitmap.stage = this.stage, c = this.__cacheBitmap, null != c.stage && c.__worldVisible && c.__renderable && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable ? (a.__pushMaskObject(c), null != c.__bitmapData.image.buffer.__srcImage ? Bc.renderImage(c, a) :
                        Bc.renderCanvas(c, a), a.__popMaskObject(c)) : Bc.clear(c, a);
                    this.__renderEvent(a)
                },
                __renderDOMClear: function(a) {
                    Wb.clear(this, a)
                },
                __renderGL: function(a) {
                    this.__updateCacheBitmap(a, !1);
                    if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
                        if (Jh.render(this, a), !(null == this.opaqueBackground && null == this.__graphics || !this.__renderable || 0 >= this.__worldAlpha)) {
                            if (null != this.opaqueBackground && !this.__isCacheBitmapRender && 0 < this.get_width() && 0 < this.get_height()) {
                                a.__setBlendMode(this.__worldBlendMode);
                                a.__pushMaskObject(this);
                                var b = a.__context3D,
                                    c = fa.__pool.get();
                                c.setTo(0, 0, this.get_width(), this.get_height());
                                a.__pushMaskRect(c, this.__renderTransform);
                                var d = this.opaqueBackground;
                                b.clear((d >>> 16 & 255) / 255, (d >>> 8 & 255) / 255, (d & 255) / 255, 1, 0, 0, 1);
                                a.__popMaskRect();
                                a.__popMaskObject(this);
                                fa.__pool.release(c)
                            }
                            null != this.__graphics && of .render(this, a)
                        }
                    } else nf.render(this.__cacheBitmap, a);
                    this.__renderEvent(a)
                },
                __renderGLMask: function(a) {
                    Jh.renderMask(this, a);
                    pa.prototype.__renderGLMask.call(this, a)
                },
                __replaceSelectedText: function(a,
                    b) {
                    null == b && (b = !0);
                    null == a && (a = "");
                    if ("" != a || this.__selectionIndex != this.__caretIndex) {
                        var c = this.__caretIndex < this.__selectionIndex ? this.__caretIndex : this.__selectionIndex,
                            d = this.__caretIndex > this.__selectionIndex ? this.__caretIndex : this.__selectionIndex;
                        if (!(c == d && 0 < this.__textEngine.maxChars && this.__text.length == this.__textEngine.maxChars)) {
                            c > this.__text.length && (c = this.__text.length);
                            d > this.__text.length && (d = this.__text.length);
                            if (d < c) {
                                var e = d;
                                d = c;
                                c = e
                            }
                            0 > c && (c = 0);
                            this.__replaceText(c, d, a, b);
                            a = c +
                                oa.__cast(a, String).length;
                            a > this.__text.length && (a = this.__text.length);
                            this.setSelection(a, a);
                            this.__updateScrollH()
                        }
                    }
                },
                __replaceText: function(a, b, c, d) {
                    if (!(b < a || 0 > a || b > this.__text.length || null == c)) {
                        d && (c = this.__textEngine.restrictText(c), 0 < this.__textEngine.maxChars && (d = this.__textEngine.maxChars - this.__text.length + (b - a), 0 >= d ? c = "" : d < c.length && (c = Y.substr(c, 0, d))));
                        this.__updateText(this.__text.substring(0, a) + c + this.__text.substring(b));
                        b > this.__text.length && (b = this.__text.length);
                        d = c.length - (b -
                            a);
                        for (var e = 0, f; e < this.__textEngine.textFormatRanges.get_length();) f = this.__textEngine.textFormatRanges.get(e), f.start <= a && f.end >= b ? (f.end += d, ++e) : f.start >= a && f.end <= b ? (0 < e ? this.__textEngine.textFormatRanges.splice(e, 1) : (f.start = 0, f.end = a + c.length, ++e), d -= f.end - f.start) : (f.start > a && f.start <= b && (f.start += d), ++e);
                        this.__updateScrollV();
                        this.__updateScrollH();
                        this.__layoutDirty = this.__dirty = !0;
                        this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
                    }
                },
                __shouldCacheHardware: function(a) {
                    return 1 ==
                        a ? !0 : !1
                },
                __startCursorTimer: function() {
                    this.__cursorTimer = If.delay(r(this, this.__startCursorTimer), 600);
                    this.__showCursor = !this.__showCursor;
                    this.__dirty = !0;
                    this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
                },
                __startTextInput: function() {
                    0 > this.__caretIndex && (this.__selectionIndex = this.__caretIndex = this.__text.length);
                    (za.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) && this.__enableInput()
                },
                __stopCursorTimer: function() {
                    null != this.__cursorTimer && (this.__cursorTimer.stop(),
                        this.__cursorTimer = null);
                    this.__showCursor && (this.__showCursor = !1, this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()))
                },
                __stopTextInput: function() {
                    (za.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) && this.__disableInput()
                },
                __updateCacheBitmap: function(a, b) {
                    if (null == this.__filters && "opengl" == a.__type && null == this.__cacheBitmap && !this.__domRender) return !1;
                    b && (this.__renderDirty = !0);
                    return pa.prototype.__updateCacheBitmap.call(this, a, b || this.__dirty) ? (null != this.__cacheBitmap &&
                        (this.__cacheBitmap.__renderTransform.tx -= this.__offsetX, this.__cacheBitmap.__renderTransform.ty -= this.__offsetY), !0) : !1
                },
                __updateLayout: function() {
                    if (this.__layoutDirty) {
                        var a = this.__textEngine.width;
                        this.__textEngine.update();
                        if (2 != this.__textEngine.autoSize) {
                            if (this.__textEngine.width != a) switch (this.__textEngine.autoSize) {
                                case 0:
                                    var b = this;
                                    b.set_x(b.get_x() + (a - this.__textEngine.width) / 2);
                                    break;
                                case 3:
                                    b = this, b.set_x(b.get_x() + (a - this.__textEngine.width))
                            }
                            this.__textEngine.getBounds()
                        }
                        this.__layoutDirty = !1
                    }
                },
                __updateScrollH: function() {
                    if (!this.get_multiline() && 1 == this.get_type()) {
                        this.__layoutDirty = !0;
                        this.__updateLayout();
                        var a = this.__textEngine.textWidth - this.__textEngine.width + 4;
                        0 < a ? this.__caretIndex >= this.get_text().length ? this.set_scrollH(Math.ceil(a)) : (a = fa.__pool.get(), this.__getCharBoundaries(this.__caretIndex, a), a.x < this.get_scrollH() ? this.set_scrollH(Math.floor(a.x - 2)) : a.x > this.get_scrollH() + this.__textEngine.width && this.set_scrollH(Math.ceil(a.x - this.__textEngine.width - 2)), fa.__pool.release(a)) :
                            this.set_scrollH(0)
                    }
                },
                __updateScrollV: function() {
                    this.__layoutDirty = !0;
                    this.__updateLayout();
                    var a = this.getLineIndexOfChar(this.__caretIndex); - 1 == a && 0 < this.__caretIndex && (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
                    if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
                    else if (a + 1 > this.get_bottomScrollV()) {
                        for (var b = 0; 0 <= a;)
                            if (b + this.__textEngine.lineHeights.get(a) <= this.get_height() - 4) b += this.__textEngine.lineHeights.get(a), --a;
                            else break;
                        this.set_scrollV(a + 2)
                    } else this.set_scrollV(this.get_scrollV())
                },
                __updateText: function(a) {
                    za.__supportDOM && this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = this.__text != a);
                    this.__textEngine.set_text(a);
                    this.__text = this.__textEngine.text;
                    this.__text.length < this.__caretIndex && (this.__selectionIndex = this.__caretIndex = this.__text.length);
                    if (!this.__displayAsPassword || za.__supportDOM && !this.__renderedOnCanvasWhileOnDOM) this.__textEngine.set_text(this.__text);
                    else {
                        a = "";
                        for (var b = 0, c = this.get_text().length; b < c;) b++, a += "*";
                        this.__textEngine.set_text(a)
                    }
                },
                __updateTransforms: function(a) {
                    pa.prototype.__updateTransforms.call(this, a);
                    a = this.__renderTransform;
                    var b = this.__offsetX,
                        c = this.__offsetY;
                    a.tx = b * a.a + c * a.c + a.tx;
                    a.ty = b * a.b + c * a.d + a.ty
                },
                set_autoSize: function(a) {
                    a != this.__textEngine.autoSize && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    return this.__textEngine.autoSize = a
                },
                get_bottomScrollV: function() {
                    this.__updateLayout();
                    return this.__textEngine.get_bottomScrollV()
                },
                get_defaultTextFormat: function() {
                    return this.__textFormat.clone()
                },
                set_defaultTextFormat: function(a) {
                    this.__textFormat.__merge(a);
                    this.__dirty = this.__layoutDirty = !0;
                    this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
                    return a
                },
                set_displayAsPassword: function(a) {
                    a != this.__displayAsPassword && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__displayAsPassword = a, this.__updateText(this.__text));
                    return a
                },
                set_embedFonts: function(a) {
                    return this.__textEngine.embedFonts = a
                },
                get_height: function() {
                    this.__updateLayout();
                    return this.__textEngine.height * Math.abs(this.get_scaleY())
                },
                set_height: function(a) {
                    a != this.__textEngine.height && (this.__setTransformDirty(), this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.height = a);
                    return this.__textEngine.height * Math.abs(this.get_scaleY())
                },
                get_htmlText: function() {
                    return this.__isHTML ? this.__rawHtmlText : this.__text
                },
                set_htmlText: function(a) {
                    this.__isHTML && this.__text == a || (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    this.__isHTML = !0;
                    this.__rawHtmlText = a;
                    a = Na.parse(a, this.__textFormat, this.__textEngine.textFormatRanges);
                    if (za.__supportDOM) {
                        1 < this.__textEngine.textFormatRanges.get_length() && this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.get_length() - 1);
                        var b = this.__textEngine.textFormatRanges.get(0);
                        b.format = this.__textFormat;
                        b.start = 0;
                        this.__renderedOnCanvasWhileOnDOM ? (b.end = a.length, this.__updateText(a)) :
                            (b.end = this.__rawHtmlText.length, this.__updateText(this.__rawHtmlText))
                    } else this.__updateText(a);
                    this.__updateScrollV();
                    return a
                },
                get_mouseWheelEnabled: function() {
                    return this.__mouseWheelEnabled
                },
                get_multiline: function() {
                    return this.__textEngine.multiline
                },
                set_multiline: function(a) {
                    a != this.__textEngine.multiline && (this.__layoutDirty = this.__dirty = !0, this.__updateText(this.__text), this.__updateScrollH(), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    return this.__textEngine.multiline =
                        a
                },
                get_numLines: function() {
                    this.__updateLayout();
                    return this.__textEngine.numLines
                },
                get_scrollH: function() {
                    return this.__textEngine.scrollH
                },
                set_scrollH: function(a) {
                    this.__updateLayout();
                    a > this.__textEngine.maxScrollH && (a = this.__textEngine.maxScrollH);
                    0 > a && (a = 0);
                    a != this.__textEngine.scrollH && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.scrollH = a, this.dispatchEvent(new sa("scroll")));
                    return this.__textEngine.scrollH
                },
                get_scrollV: function() {
                    return this.__textEngine.get_scrollV()
                },
                set_scrollV: function(a) {
                    this.__updateLayout();
                    0 < a && a != this.__textEngine.get_scrollV() && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.set_scrollV(a), this.dispatchEvent(new sa("scroll")));
                    return this.__textEngine.get_scrollV()
                },
                get_selectable: function() {
                    return this.__textEngine.selectable
                },
                set_selectable: function(a) {
                    a != this.__textEngine.selectable && 1 == this.get_type() && (null != this.stage && this.stage.get_focus() == this ? this.__startTextInput() :
                        a || this.__stopTextInput());
                    return this.__textEngine.selectable = a
                },
                set_sharpness: function(a) {
                    a != this.__textEngine.sharpness && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    return this.__textEngine.sharpness = a
                },
                get_tabEnabled: function() {
                    return null == this.__tabEnabled ? 1 == this.__textEngine.type : this.__tabEnabled
                },
                get_text: function() {
                    return this.__text
                },
                set_text: function(a) {
                    if (this.__isHTML || this.__text != a) this.__layoutDirty = this.__dirty = !0, this.__renderDirty ||
                        (this.__renderDirty = !0, this.__setParentRenderDirty());
                    else return a;
                    1 < this.__textEngine.textFormatRanges.get_length() && this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.get_length() - 1);
                    var b = this.__textEngine.textFormatRanges.get(0);
                    b.format = this.__textFormat;
                    b.start = 0;
                    b.end = a.length;
                    this.__isHTML = !1;
                    this.__updateText(a);
                    this.__updateScrollV();
                    return a
                },
                set_textColor: function(a) {
                    a != this.__textFormat.color && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    for (var b = this.__textEngine.textFormatRanges.iterator(); b.hasNext();) b.next().format.color = a;
                    return this.__textFormat.color = a
                },
                get_textWidth: function() {
                    this.__updateLayout();
                    return this.__textEngine.textWidth
                },
                get_textHeight: function() {
                    this.__updateLayout();
                    return this.__textEngine.textHeight
                },
                get_type: function() {
                    return this.__textEngine.type
                },
                get_width: function() {
                    this.__updateLayout();
                    return this.__textEngine.width * Math.abs(this.__scaleX)
                },
                set_width: function(a) {
                    a != this.__textEngine.width && (this.__setTransformDirty(),
                        this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.width = a);
                    return this.__textEngine.width * Math.abs(this.__scaleX)
                },
                get_wordWrap: function() {
                    return this.__textEngine.wordWrap
                },
                set_wordWrap: function(a) {
                    a != this.__textEngine.wordWrap && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
                    return this.__textEngine.wordWrap = a
                },
                get_x: function() {
                    return this.__transform.tx + this.__offsetX
                },
                set_x: function(a) {
                    a != this.__transform.tx + this.__offsetX && this.__setTransformDirty();
                    return this.__transform.tx = a - this.__offsetX
                },
                get_y: function() {
                    return this.__transform.ty + this.__offsetY
                },
                set_y: function(a) {
                    a != this.__transform.ty + this.__offsetY && this.__setTransformDirty();
                    return this.__transform.ty = a - this.__offsetY
                },
                stage_onMouseMove: function(a) {
                    null != this.stage && this.get_selectable() && 0 <= this.__selectionIndex && (this.__updateLayout(), a = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY()),
                        a != this.__caretIndex && (this.__caretIndex = a, a = !0, za.__supportDOM && (this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0), a = !1), a && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()))))
                },
                stage_onMouseUp: function(a) {
                    if (null != this.stage && (this.stage.removeEventListener("mouseMove", r(this, this.stage_onMouseMove)), this.stage.removeEventListener("mouseUp", r(this, this.stage_onMouseUp)), this.stage.get_focus() == this)) {
                        this.__getWorldTransform();
                        this.__updateLayout();
                        a = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY());
                        var b = Math.max(this.__selectionIndex, a) | 0;
                        this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
                        this.__caretIndex = b;
                        this.__inputEnabled && (this.this_onFocusIn(null), this.__stopCursorTimer(), this.__startCursorTimer(), za.__supportDOM && this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0))
                    }
                },
                this_onFocusIn: function(a) {
                    1 == this.get_type() && null != this.stage && this.stage.get_focus() == this && this.__startTextInput()
                },
                this_onFocusOut: function(a) {
                    this.__stopCursorTimer();
                    null != a.relatedObject && a.relatedObject instanceof Vb ? (null != this.stage && (this.stage.window.onTextInput.remove(r(this, this.window_onTextInput)), this.stage.window.onKeyDown.remove(r(this, this.window_onKeyDown))), this.__inputEnabled = !1) : this.__stopTextInput();
                    this.__selectionIndex != this.__caretIndex && (this.__selectionIndex = this.__caretIndex, this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()))
                },
                this_onKeyDown: function(a) {
                    this.get_selectable() &&
                        1 != this.get_type() && 67 == a.keyCode && (a.commandKey || a.ctrlKey) && this.__caretIndex != this.__selectionIndex && sc.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex))
                },
                this_onMouseDown: function(a) {
                    if (this.get_selectable() || 1 == this.get_type()) this.__updateLayout(), this.__selectionIndex = this.__caretIndex = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY()), za.__supportDOM || (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())),
                        this.stage.addEventListener("mouseMove", r(this, this.stage_onMouseMove)), this.stage.addEventListener("mouseUp", r(this, this.stage_onMouseUp))
                },
                this_onMouseWheel: function(a) {
                    this.get_mouseWheelEnabled() && this.set_scrollV(this.get_scrollV() - a.delta)
                },
                this_onDoubleClick: function(a) {
                    if (this.get_selectable()) {
                        this.__updateLayout();
                        a = "\n.!?, ;:()-_/".split("");
                        var b = this.__text,
                            c = -1,
                            d = b.length,
                            e = Math.max(this.__caretIndex, 1) | 0;
                        if (0 < b.length && 0 <= this.__caretIndex && d >= this.__caretIndex) {
                            for (var f = 0; f < a.length;) {
                                var k =
                                    a[f];
                                ++f;
                                var p = b.lastIndexOf(k, e - 1);
                                p > c && (c = p + 1);
                                p = b.indexOf(k, e);
                                p < d && -1 != p && (d = p)
                            }
                            c != d && (this.setSelection(c, d), a = !0, za.__supportDOM && (this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0), a = !1), a && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())))
                        }
                    }
                },
                window_onKeyDown: function(a, b) {
                    switch (a) {
                        case 8:
                            this.__selectionIndex == this.__caretIndex && 0 < this.__caretIndex && (this.__selectionIndex = this.__caretIndex - 1);
                            this.__selectionIndex != this.__caretIndex &&
                                (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new sa("change", !0)));
                            break;
                        case 97:
                            this.get_selectable() && (Ib.get_metaKey(b) || Ib.get_ctrlKey(b)) && (this.__caretIndex = this.__text.length, this.__selectionIndex = 0);
                            break;
                        case 99:
                            (Ib.get_metaKey(b) || Ib.get_ctrlKey(b)) && this.__caretIndex != this.__selectionIndex && sc.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex));
                            break;
                        case 120:
                            (Ib.get_metaKey(b) || Ib.get_ctrlKey(b)) && this.__caretIndex != this.__selectionIndex &&
                                (sc.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex)), this.replaceSelectedText(""), this.dispatchEvent(new sa("change", !0)));
                            break;
                        case 127:
                            this.__selectionIndex == this.__caretIndex && this.__caretIndex < this.__text.length && (this.__selectionIndex = this.__caretIndex + 1);
                            this.__selectionIndex != this.__caretIndex && (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new sa("change", !0)));
                            break;
                        case 1073741898:
                            this.get_selectable() && (this.__caretBeginningOfLine(),
                                this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741901:
                            this.get_selectable() && (this.__caretEndOfLine(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741903:
                            this.get_selectable() && (Ib.get_metaKey(b) ? (this.__caretEndOfLine(), Ib.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex)) : Ib.get_shiftKey(b) ? this.__caretNextCharacter() : (this.__selectionIndex == this.__caretIndex ? this.__caretNextCharacter() : this.__caretIndex = Math.max(this.__caretIndex, this.__selectionIndex) |
                                0, this.__selectionIndex = this.__caretIndex), this.__updateScrollH(), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741904:
                            this.get_selectable() && (Ib.get_metaKey(b) ? (this.__caretBeginningOfLine(), Ib.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex)) : Ib.get_shiftKey(b) ? this.__caretPreviousCharacter() : (this.__selectionIndex == this.__caretIndex ? this.__caretPreviousCharacter() : this.__caretIndex = Math.min(this.__caretIndex, this.__selectionIndex) | 0, this.__selectionIndex =
                                this.__caretIndex), this.__updateScrollH(), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741905:
                            this.get_selectable() && this.__textEngine.multiline && (Ib.get_shiftKey(b) ? this.__caretNextLine() : (this.__selectionIndex == this.__caretIndex ? this.__caretNextLine() : (a = this.getLineIndexOfChar(Math.max(this.__caretIndex, this.__selectionIndex) | 0), this.__caretNextLine(a, Math.min(this.__caretIndex, this.__selectionIndex) | 0)), this.__selectionIndex = this.__caretIndex), this.__updateScrollV(),
                                this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 1073741906:
                            this.get_selectable() && this.__textEngine.multiline && (Ib.get_shiftKey(b) ? this.__caretPreviousLine() : (this.__selectionIndex == this.__caretIndex ? this.__caretPreviousLine() : (a = this.getLineIndexOfChar(Math.min(this.__caretIndex, this.__selectionIndex) | 0), this.__caretPreviousLine(a, Math.min(this.__caretIndex, this.__selectionIndex) | 0)), this.__selectionIndex = this.__caretIndex), this.__updateScrollV(), this.__stopCursorTimer(), this.__startCursorTimer());
                            break;
                        case 13:
                        case 1073741912:
                            this.__textEngine.multiline && (a = new Ye("textInput", !0, !0, "\n"), this.dispatchEvent(a), a.isDefaultPrevented() || (this.__replaceSelectedText("\n", !0), this.dispatchEvent(new sa("change", !0))))
                    }
                },
                window_onTextInput: function(a) {
                    this.__replaceSelectedText(a, !0);
                    this.dispatchEvent(new sa("change", !0))
                },
                __class__: Vb,
                __properties__: n(pa.prototype.__properties__, {
                    set_textColor: "set_textColor",
                    set_sharpness: "set_sharpness",
                    set_embedFonts: "set_embedFonts",
                    set_displayAsPassword: "set_displayAsPassword",
                    set_autoSize: "set_autoSize",
                    set_wordWrap: "set_wordWrap",
                    get_wordWrap: "get_wordWrap",
                    get_type: "get_type",
                    get_textWidth: "get_textWidth",
                    get_textHeight: "get_textHeight",
                    set_text: "set_text",
                    get_text: "get_text",
                    set_selectable: "set_selectable",
                    get_selectable: "get_selectable",
                    set_scrollV: "set_scrollV",
                    get_scrollV: "get_scrollV",
                    set_scrollH: "set_scrollH",
                    get_scrollH: "get_scrollH",
                    get_numLines: "get_numLines",
                    set_multiline: "set_multiline",
                    get_multiline: "get_multiline",
                    get_mouseWheelEnabled: "get_mouseWheelEnabled",
                    set_htmlText: "set_htmlText",
                    get_htmlText: "get_htmlText",
                    set_defaultTextFormat: "set_defaultTextFormat",
                    get_defaultTextFormat: "get_defaultTextFormat",
                    get_bottomScrollV: "get_bottomScrollV"
                })
            });
            var Yh = function(a, b, c) {
                null == c && (c = 0);
                null == b && (b = 10);
                null == a && (a = 10);
                Vb.call(this);
                this.set_x(a);
                this.set_y(b);
                this.currentFPS = 0;
                this.set_selectable(!1);
                this.mouseEnabled = !1;
                this.set_defaultTextFormat(new nc("_sans", 12, c));
                this.set_text("FPS: ");
                this.currentTime = this.cacheCount = 0;
                this.times = []
            };
            g["openfl.display.FPS"] =
                Yh;
            Yh.__name__ = "openfl.display.FPS";
            Yh.__super__ = Vb;
            Yh.prototype = n(Vb.prototype, {
                __enterFrame: function(a) {
                    this.currentTime += a;
                    for (this.times.push(this.currentTime); this.times[0] < this.currentTime - 1E3;) this.times.shift();
                    a = this.times.length;
                    this.currentFPS = Math.round((a + this.cacheCount) / 2);
                    a != this.cacheCount && this.set_text("FPS: " + this.currentFPS);
                    this.cacheCount = a
                },
                __class__: Yh
            });
            var wl = function(a, b) {
                ua.call(this);
                this.name = a;
                this.frame = b
            };
            g["openfl.display.FrameLabel"] = wl;
            wl.__name__ = "openfl.display.FrameLabel";
            wl.__super__ = ua;
            wl.prototype = n(ua.prototype, {
                __class__: wl
            });
            var ad = function(a) {
                this.__dirty = !0;
                this.__owner = a;
                this.__commands = new $c;
                this.__positionY = this.__positionX = this.__strokePadding = 0;
                this.__renderTransform = new xa;
                this.__usedShaderBuffers = new Wa;
                this.__worldTransform = new xa;
                this.__height = this.__width = 0;
                this.__shaderBufferPool = new mb(function() {
                    return new Nj
                });
                this.moveTo(0, 0)
            };
            g["openfl.display.Graphics"] = ad;
            ad.__name__ = "openfl.display.Graphics";
            ad.prototype = {
                beginBitmapFill: function(a, b, c,
                    d) {
                    null == d && (d = !1);
                    null == c && (c = !0);
                    this.__commands.beginBitmapFill(a, null != b ? b.clone() : null, c, d);
                    this.__visible = !0
                },
                beginFill: function(a, b) {
                    null == b && (b = 1);
                    null == a && (a = 0);
                    this.__commands.beginFill(a & 16777215, b);
                    0 < b && (this.__visible = !0)
                },
                beginGradientFill: function(a, b, c, d, e, f, k, p) {
                    null == p && (p = 0);
                    null == k && (k = 1);
                    null == f && (f = 0);
                    if (null != b && 0 != b.length) {
                        if (null == c) {
                            c = [];
                            for (var m = 0, h = b.length; m < h;) m++, c.push(1)
                        }
                        if (null == d)
                            for (d = [], m = 0, h = b.length; m < h;) {
                                var g = m++;
                                d.push(Math.ceil(g / b.length * 255))
                            }
                        if (!(c.length <
                                b.length || d.length < b.length))
                            for (this.__commands.beginGradientFill(a, b, c, d, e, f, k, p), m = 0; m < c.length;)
                                if (a = c[m], ++m, 0 < a) {
                                    this.__visible = !0;
                                    break
                                }
                    }
                },
                beginShaderFill: function(a, b) {
                    null != a && (b = this.__shaderBufferPool.get(), this.__usedShaderBuffers.add(b), b.update(a), this.__commands.beginShaderFill(b))
                },
                clear: function() {
                    for (var a = this.__usedShaderBuffers.h; null != a;) {
                        var b = a.item;
                        a = a.next;
                        this.__shaderBufferPool.release(b)
                    }
                    this.__usedShaderBuffers.clear();
                    this.__commands.clear();
                    this.__strokePadding = 0;
                    null !=
                        this.__bounds && (this.set___dirty(!0), this.__transformDirty = !0, this.__bounds = null);
                    this.__visible = !1;
                    this.__positionY = this.__positionX = 0;
                    this.moveTo(0, 0)
                },
                cubicCurveTo: function(a, b, c, d, e, f) {
                    this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
                    this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
                    var k = e,
                        p = e;
                    if (!(a < e && a > this.__positionX || a > e && a < this.__positionX) || !(c < e && c > this.__positionX || c > e && c < this.__positionX)) {
                        var m =
                            2 * this.__positionX - 4 * a + 2 * c,
                            h = a - this.__positionX,
                            g = -this.__positionX + 3 * a + e - 3 * c,
                            l = (-m + Math.sqrt(m * m - 4 * h * g)) / (2 * g);
                        m = (-m - Math.sqrt(m * m - 4 * h * g)) / (2 * g);
                        0 < l && 1 > l && (k = this.__calculateBezierCubicPoint(l, this.__positionX, a, c, e));
                        0 < m && 1 > m && (p = this.__calculateBezierCubicPoint(m, this.__positionX, a, c, e))
                    }
                    var q = f,
                        n = f;
                    (b < f && b > this.__positionX || b > f && b < this.__positionX) && (d < f && d > this.__positionX || d > f && d < this.__positionX) || (m = 2 * this.__positionX - 4 * b + 2 * d, h = b - this.__positionX, g = -this.__positionX + 3 * b + f - 3 * d, l = (-m + Math.sqrt(m *
                        m - 4 * h * g)) / (2 * g), m = (-m - Math.sqrt(m * m - 4 * h * g)) / (2 * g), 0 < l && 1 > l && (q = this.__calculateBezierCubicPoint(l, this.__positionX, b, d, f)), 0 < m && 1 > m && (n = this.__calculateBezierCubicPoint(m, this.__positionX, b, d, f)));
                    this.__inflateBounds(k - this.__strokePadding, q - this.__strokePadding);
                    this.__inflateBounds(k + this.__strokePadding, q + this.__strokePadding);
                    this.__inflateBounds(p - this.__strokePadding, n - this.__strokePadding);
                    this.__inflateBounds(p + this.__strokePadding, n + this.__strokePadding);
                    this.__positionX = e;
                    this.__positionY =
                        f;
                    this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
                    this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
                    this.__commands.cubicCurveTo(a, b, c, d, e, f);
                    this.set___dirty(!0)
                },
                curveTo: function(a, b, c, d) {
                    this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
                    this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
                    var e = a < c && a > this.__positionX ||
                        a > c && a < this.__positionX ? c : this.__calculateBezierQuadPoint((this.__positionX - a) / (this.__positionX - 2 * a + c), this.__positionX, a, c);
                    var f = b < d && b > this.__positionY || b > d && b < this.__positionY ? d : this.__calculateBezierQuadPoint((this.__positionY - b) / (this.__positionY - 2 * b + d), this.__positionY, b, d);
                    this.__inflateBounds(e - this.__strokePadding, f - this.__strokePadding);
                    this.__inflateBounds(e + this.__strokePadding, f + this.__strokePadding);
                    this.__positionX = c;
                    this.__positionY = d;
                    this.__commands.curveTo(a, b, c, d);
                    this.set___dirty(!0)
                },
                drawCircle: function(a, b, c) {
                    0 >= c || (this.__inflateBounds(a - c - this.__strokePadding, b - c - this.__strokePadding), this.__inflateBounds(a + c + this.__strokePadding, b + c + this.__strokePadding), this.__commands.drawCircle(a, b, c), this.set___dirty(!0))
                },
                drawPath: function(a, b, c) {
                    null == c && (c = 0);
                    var d = 0;
                    1 == c && this.__commands.windingNonZero();
                    a = a.iterator();
                    a: for (; a.hasNext();) switch (a.next()) {
                        case 1:
                            this.moveTo(b.get(d), b.get(d + 1));
                            d += 2;
                            break;
                        case 2:
                            this.lineTo(b.get(d), b.get(d + 1));
                            d += 2;
                            break;
                        case 3:
                            this.curveTo(b.get(d),
                                b.get(d + 1), b.get(d + 2), b.get(d + 3));
                            d += 4;
                            break;
                        case 4:
                            this.moveTo(b.get(d + 2), b.get(d + 3));
                            break a;
                        case 5:
                            this.lineTo(b.get(d + 2), b.get(d + 3));
                            break a;
                        case 6:
                            this.cubicCurveTo(b.get(d), b.get(d + 1), b.get(d + 2), b.get(d + 3), b.get(d + 4), b.get(d + 5)), d += 6
                    }
                },
                drawQuads: function(a, b, c) {
                    if (null != a) {
                        var d = null != b,
                            e = !1,
                            f = !1,
                            k = d ? b.get_length() : Math.floor(a.get_length() / 4);
                        if (0 != k) {
                            null != c && (c.get_length() >= 6 * k ? f = e = !0 : c.get_length() >= 4 * k ? e = !0 : c.get_length() >= 2 * k && (f = !0));
                            for (var p = fa.__pool.get(), m = xa.__pool.get(), h = Infinity,
                                    g = Infinity, l = -Infinity, q = -Infinity, n, r = 0; r < k;) {
                                var D = r++;
                                n = d ? 4 * b.get(D) : 4 * D;
                                0 > n || (p.setTo(0, 0, a.get(n + 2), a.get(n + 3)), 0 >= p.width || 0 >= p.height || (e && f ? (n = 6 * D, m.setTo(c.get(n), c.get(n + 1), c.get(n + 2), c.get(n + 3), c.get(n + 4), c.get(n + 5))) : e ? (n = 4 * D, m.setTo(c.get(n), c.get(n + 1), c.get(n + 2), c.get(n + 3), p.x, p.y)) : f ? (n = 2 * D, m.tx = c.get(n), m.ty = c.get(n + 1)) : (m.tx = p.x, m.ty = p.y), p.__transform(p, m), h > p.x && (h = p.x), g > p.y && (g = p.y), l < p.get_right() && (l = p.get_right()), q < p.get_bottom() && (q = p.get_bottom())))
                            }
                            this.__inflateBounds(h,
                                g);
                            this.__inflateBounds(l, q);
                            this.__commands.drawQuads(a, b, c);
                            this.set___dirty(!0);
                            this.__visible = !0;
                            fa.__pool.release(p);
                            xa.__pool.release(m)
                        }
                    }
                },
                drawRect: function(a, b, c, d) {
                    if (0 != c || 0 != d) {
                        var e = 0 > c ? -1 : 1,
                            f = 0 > d ? -1 : 1;
                        this.__inflateBounds(a - this.__strokePadding * e, b - this.__strokePadding * f);
                        this.__inflateBounds(a + c + this.__strokePadding * e, b + d + this.__strokePadding * f);
                        this.__commands.drawRect(a, b, c, d);
                        this.set___dirty(!0)
                    }
                },
                drawTriangles: function(a, b, c, d) {
                    null == d && (d = 1);
                    if (null != a && 0 != a.get_length()) {
                        var e =
                            a.get_length() / 2 | 0;
                        if (null == b) {
                            if (0 != e % 3) throw F.thrown(new jg("Not enough vertices to close a triangle."));
                            b = ib.toIntVector(null);
                            for (var f = 0, k = e; f < k;) {
                                var p = f++;
                                b.push(p)
                            }
                        }
                        null == d && (d = 1);
                        var m = Infinity,
                            h = Infinity,
                            g = -Infinity,
                            l = -Infinity;
                        f = 0;
                        for (k = e; f < k;) p = f++, e = a.get(2 * p), p = a.get(2 * p + 1), m > e && (m = e), h > p && (h = p), g < e && (g = e), l < p && (l = p);
                        this.__inflateBounds(m, h);
                        this.__inflateBounds(g, l);
                        this.__commands.drawTriangles(a, b, c, d);
                        this.set___dirty(!0);
                        this.__visible = !0
                    }
                },
                endFill: function() {
                    this.__commands.endFill()
                },
                lineStyle: function(a, b, c, d, e, f, k, p) {
                    null == p && (p = 3);
                    null == e && (e = 2);
                    null == d && (d = !1);
                    null == c && (c = 1);
                    null == b && (b = 0);
                    null != a && (1 == k ? a > this.__strokePadding && (this.__strokePadding = a) : a / 2 > this.__strokePadding && (this.__strokePadding = a / 2));
                    this.__commands.lineStyle(a, b, c, d, e, f, k, p);
                    null != a && (this.__visible = !0)
                },
                lineTo: function(a, b) {
                    isFinite(a) && isFinite(b) && (this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + this.__strokePadding,
                        this.__positionY + this.__strokePadding), this.__positionX = a, this.__positionY = b, this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + 2 * this.__strokePadding, this.__positionY + this.__strokePadding), this.__commands.lineTo(a, b), this.set___dirty(!0))
                },
                moveTo: function(a, b) {
                    this.__positionX = a;
                    this.__positionY = b;
                    this.__commands.moveTo(a, b)
                },
                overrideBlendMode: function(a) {
                    null == a && (a = 10);
                    this.__commands.overrideBlendMode(a)
                },
                __calculateBezierCubicPoint: function(a,
                    b, c, d, e) {
                    var f = 1 - a;
                    return b * f * f * f + 3 * c * a * f * f + 3 * d * f * a * a + e * a * a * a
                },
                __calculateBezierQuadPoint: function(a, b, c, d) {
                    var e = 1 - a;
                    return e * e * b + 2 * e * a * c + a * a * d
                },
                __cleanup: function() {
                    null != this.__bounds && null != this.__canvas && (this.set___dirty(!0), this.__transformDirty = !0);
                    this.__context = this.__canvas = this.__bitmap = null
                },
                __getBounds: function(a, b) {
                    if (null != this.__bounds) {
                        var c = fa.__pool.get();
                        this.__bounds.__transform(c, b);
                        a.__expand(c.x, c.y, c.width, c.height);
                        fa.__pool.release(c)
                    }
                },
                __hitTest: function(a, b, c, d) {
                    if (null ==
                        this.__bounds) return !1;
                    var e = d.a * d.d - d.b * d.c,
                        f = 0 == e ? -d.tx : 1 / e * (d.c * (d.ty - b) + d.d * (a - d.tx));
                    e = d.a * d.d - d.b * d.c;
                    a = 0 == e ? -d.ty : 1 / e * (d.a * (b - d.ty) + d.b * (d.tx - a));
                    return f > this.__bounds.x && a > this.__bounds.y && this.__bounds.contains(f, a) ? c ? v.hitTest(this, f, a) : !0 : !1
                },
                __inflateBounds: function(a, b) {
                    null == this.__bounds ? (this.__bounds = new fa(a, b, 0, 0), this.__transformDirty = !0) : (a < this.__bounds.x && (this.__bounds.width += this.__bounds.x - a, this.__bounds.x = a, this.__transformDirty = !0), b < this.__bounds.y && (this.__bounds.height +=
                        this.__bounds.y - b, this.__bounds.y = b, this.__transformDirty = !0), a > this.__bounds.x + this.__bounds.width && (this.__bounds.width = a - this.__bounds.x), b > this.__bounds.y + this.__bounds.height && (this.__bounds.height = b - this.__bounds.y))
                },
                __update: function(a) {
                    if (!(null == this.__bounds || 0 >= this.__bounds.width || 0 >= this.__bounds.height)) {
                        var b = this.__owner.__renderTransform;
                        if (null != b) {
                            var c = 0 == b.b ? Math.abs(b.a) : Math.sqrt(b.a * b.a + b.b * b.b);
                            var d = 0 == b.c ? Math.abs(b.d) : Math.sqrt(b.c * b.c + b.d * b.d);
                            null != a && (c = 0 == a.b ? c * a.a :
                                c * Math.sqrt(a.a * a.a + a.b * a.b), d = 0 == a.c ? d * a.d : d * Math.sqrt(a.c * a.c + a.d * a.d));
                            a = this.__bounds.width * c;
                            d *= this.__bounds.height;
                            if (1 > a || 1 > d)(1 <= this.__width || 1 <= this.__height) && this.set___dirty(!0), this.__height = this.__width = 0;
                            else {
                                null != ad.maxTextureWidth && a > ad.maxTextureWidth && (a = ad.maxTextureWidth);
                                null != ad.maxTextureWidth && d > ad.maxTextureHeight && (d = ad.maxTextureHeight);
                                this.__renderTransform.a = a / this.__bounds.width;
                                this.__renderTransform.d = d / this.__bounds.height;
                                c = 1 / this.__renderTransform.a;
                                var e = 1 /
                                    this.__renderTransform.d;
                                this.__worldTransform.a = c * b.a;
                                this.__worldTransform.b = c * b.b;
                                this.__worldTransform.c = e * b.c;
                                this.__worldTransform.d = e * b.d;
                                e = this.__bounds.x;
                                var f = this.__bounds.y;
                                c = e * b.a + f * b.c + b.tx;
                                b = e * b.b + f * b.d + b.ty;
                                this.__worldTransform.tx = Math.round(c);
                                this.__worldTransform.ty = Math.round(b);
                                e = this.__worldTransform;
                                f = e.a * e.d - e.b * e.c;
                                this.__renderTransform.tx = 0 == f ? -e.tx : 1 / f * (e.c * (e.ty - b) + e.d * (c - e.tx));
                                e = this.__worldTransform;
                                f = e.a * e.d - e.b * e.c;
                                this.__renderTransform.ty = 0 == f ? -e.ty : 1 / f * (e.a * (b -
                                    e.ty) + e.b * (e.tx - c));
                                a = Math.ceil(a + 1);
                                d = Math.ceil(d + 1);
                                a == this.__width && d == this.__height || this.set___dirty(!0);
                                this.__width = a;
                                this.__height = d
                            }
                        }
                    }
                },
                set___dirty: function(a) {
                    if (a && null != this.__owner) {
                        var b = this.__owner;
                        b.__renderDirty || (b.__renderDirty = !0, b.__setParentRenderDirty())
                    }
                    a && (this.__hardwareDirty = this.__softwareDirty = !0);
                    return this.__dirty = a
                },
                __class__: ad,
                __properties__: {
                    set___dirty: "set___dirty"
                }
            };
            var Fm = {
                    toString: function(a) {
                        switch (a) {
                            case 0:
                                return "bevel";
                            case 1:
                                return "miter";
                            case 2:
                                return "round";
                            default:
                                return null
                        }
                    }
                },
                xl = function() {
                    wa.call(this);
                    this.contentLoaderInfo = Xe.create(this);
                    this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
                    this.__unloaded = !0
                };
            g["openfl.display.Loader"] = xl;
            xl.__name__ = "openfl.display.Loader";
            xl.__super__ = wa;
            xl.prototype = n(wa.prototype, {
                __class__: xl
            });
            var Xe = function() {
                ua.call(this);
                this.applicationDomain = Hg.currentDomain;
                this.bytesTotal = this.bytesLoaded = 0;
                this.childAllowsParent = !0;
                this.parameters = {}
            };
            g["openfl.display.LoaderInfo"] = Xe;
            Xe.__name__ =
                "openfl.display.LoaderInfo";
            Xe.create = function(a) {
                var b = new Xe;
                b.uncaughtErrorEvents = new Oj;
                null != a ? b.loader = a : b.url = Xe.__rootURL;
                return b
            };
            Xe.__super__ = ua;
            Xe.prototype = n(ua.prototype, {
                __complete: function() {
                    this.__completed || (this.bytesLoaded < this.bytesTotal && (this.bytesLoaded = this.bytesTotal), this.__update(this.bytesLoaded, this.bytesTotal), this.__completed = !0, this.dispatchEvent(new sa("complete")))
                },
                __update: function(a, b) {
                    this.bytesLoaded = a;
                    this.bytesTotal = b;
                    this.dispatchEvent(new Ig("progress", !1, !1, a, b))
                },
                __class__: Xe
            });
            var $e = function() {
                Z.call(this);
                this.__enabled = !0;
                if (null != $e.__constructor) {
                    var a = $e.__constructor;
                    $e.__constructor = null;
                    a(this)
                }
            };
            g["openfl.display.MovieClip"] = $e;
            $e.__name__ = "openfl.display.MovieClip";
            $e.__super__ = Z;
            $e.prototype = n(Z.prototype, {
                __enterFrame: function(a) {
                    null != this.__timeline && this.__timeline.__enterFrame(a);
                    for (var b = 0, c = this.__children; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.__enterFrame(a)
                    }
                },
                __tabTest: function(a) {
                    this.__enabled && Z.prototype.__tabTest.call(this,
                        a)
                },
                __class__: $e
            });
            var Oa = function(a, b) {
                Zc.call(this);
                this.__context3D = a;
                this.__context = a.__context;
                this.__gl = this.gl = a.__context.webgl;
                this.__defaultRenderTarget = b;
                this.__flipped = null == this.__defaultRenderTarget;
                null == ad.maxTextureWidth && (ad.maxTextureWidth = ad.maxTextureHeight = this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
                this.__matrix = ab._new();
                this.__values = [];
                this.__softwareRenderer = new Le(null);
                this.__type = "opengl";
                this.__setBlendMode(10);
                this.__context3D.__setGLBlend(!0);
                this.__clipRects = [];
                this.__maskObjects = [];
                this.__numClipRects = 0;
                this.__projection = ab._new();
                this.__projectionFlipped = ab._new();
                this.__stencilReference = 0;
                this.__tempRect = new fa;
                this.__defaultDisplayShader = new Mj;
                this.__defaultGraphicsShader = new Tf;
                this.__defaultShader = this.__defaultDisplayShader;
                this.__initShader(this.__defaultShader);
                this.__scrollRectMasks = new mb(function() {
                    return new ff
                });
                this.__maskShader = new Jg
            };
            g["openfl.display.OpenGLRenderer"] = Oa;
            Oa.__name__ = "openfl.display.OpenGLRenderer";
            Oa.__super__ = Zc;
            Oa.prototype =
                n(Zc.prototype, {
                    applyAlpha: function(a) {
                        Oa.__alphaValue[0] = a;
                        null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addFloatOverride("openfl_Alpha", Oa.__alphaValue) : null != this.__currentShader && null != this.__currentShader.__alpha && (this.__currentShader.__alpha.value = Oa.__alphaValue)
                    },
                    applyBitmapData: function(a, b, c) {
                        null == c && (c = !1);
                        null != this.__currentShaderBuffer ? null != a && (Oa.__textureSizeValue[0] = a.__textureWidth, Oa.__textureSizeValue[1] = a.__textureHeight, this.__currentShaderBuffer.addFloatOverride("openfl_TextureSize",
                            Oa.__textureSizeValue)) : null != this.__currentShader && (null != this.__currentShader.__bitmap && (this.__currentShader.__bitmap.input = a, this.__currentShader.__bitmap.filter = b && this.__allowSmoothing ? 4 : 5, this.__currentShader.__bitmap.mipFilter = 2, this.__currentShader.__bitmap.wrap = c ? 2 : 0), null != this.__currentShader.__texture && (this.__currentShader.__texture.input = a, this.__currentShader.__texture.filter = b && this.__allowSmoothing ? 4 : 5, this.__currentShader.__texture.mipFilter = 2, this.__currentShader.__texture.wrap =
                            c ? 2 : 0), null != this.__currentShader.__textureSize && (null != a ? (Oa.__textureSizeValue[0] = a.__textureWidth, Oa.__textureSizeValue[1] = a.__textureHeight, this.__currentShader.__textureSize.value = Oa.__textureSizeValue) : this.__currentShader.__textureSize.value = null))
                    },
                    applyColorTransform: function(a) {
                        var b = null != a && !a.__isDefault(!0);
                        this.applyHasColorTransform(b);
                        b ? (a.__setArrays(Oa.__colorMultipliersValue, Oa.__colorOffsetsValue), null != this.__currentShaderBuffer ? (this.__currentShaderBuffer.addFloatOverride("openfl_ColorMultiplier",
                            Oa.__colorMultipliersValue), this.__currentShaderBuffer.addFloatOverride("openfl_ColorOffset", Oa.__colorOffsetsValue)) : null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.value = Oa.__colorMultipliersValue), null != this.__currentShader.__colorOffset && (this.__currentShader.__colorOffset.value = Oa.__colorOffsetsValue))) : null != this.__currentShaderBuffer ? (this.__currentShaderBuffer.addFloatOverride("openfl_ColorMultiplier", Oa.__emptyColorValue),
                            this.__currentShaderBuffer.addFloatOverride("openfl_ColorOffset", Oa.__emptyColorValue)) : null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.value = Oa.__emptyColorValue), null != this.__currentShader.__colorOffset && (this.__currentShader.__colorOffset.value = Oa.__emptyColorValue))
                    },
                    applyHasColorTransform: function(a) {
                        Oa.__hasColorTransformValue[0] = a;
                        null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addBoolOverride("openfl_HasColorTransform",
                            Oa.__hasColorTransformValue) : null != this.__currentShader && null != this.__currentShader.__hasColorTransform && (this.__currentShader.__hasColorTransform.value = Oa.__hasColorTransformValue)
                    },
                    applyMatrix: function(a) {
                        null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addFloatOverride("openfl_Matrix", a) : null != this.__currentShader && null != this.__currentShader.__matrix && (this.__currentShader.__matrix.value = a)
                    },
                    setShader: function(a) {
                        this.__currentShaderBuffer = null;
                        this.__currentShader != a && (null == a ? (this.__currentShader =
                            null, this.__context3D.setProgram(null)) : (this.__currentShader = a, this.__initShader(a), this.__context3D.setProgram(a.program), this.__context3D.__flushGLProgram(), this.__currentShader.__enable(), this.__context3D.__state.shader = a))
                    },
                    setViewport: function() {
                        this.__gl.viewport(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight)
                    },
                    updateShader: function() {
                        null != this.__currentShader && (null != this.__currentShader.__position && (this.__currentShader.__position.__useArray = !0), null != this.__currentShader.__textureCoord &&
                            (this.__currentShader.__textureCoord.__useArray = !0), this.__context3D.setProgram(this.__currentShader.program), this.__context3D.__flushGLProgram(), this.__context3D.__flushGLTextures(), this.__currentShader.__update())
                    },
                    __clear: function() {
                        null == this.__stage || this.__stage.__transparent ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1) : this.__context3D.clear(this.__stage.__colorSplit[0], this.__stage.__colorSplit[1], this.__stage.__colorSplit[2], 1, 0, 0, 1);
                        this.__cleared = !0
                    },
                    __clearShader: function() {
                        null != this.__currentShader &&
                            (null == this.__currentShaderBuffer ? null != this.__currentShader.__bitmap && (this.__currentShader.__bitmap.input = null) : this.__currentShaderBuffer.clearOverride(), null != this.__currentShader.__texture && (this.__currentShader.__texture.input = null), null != this.__currentShader.__textureSize && (this.__currentShader.__textureSize.value = null), null != this.__currentShader.__hasColorTransform && (this.__currentShader.__hasColorTransform.value = null), null != this.__currentShader.__position && (this.__currentShader.__position.value =
                                null), null != this.__currentShader.__matrix && (this.__currentShader.__matrix.value = null), this.__currentShader.__clearUseArray())
                    },
                    __copyShader: function(a) {
                        this.__currentShader = a.__currentShader;
                        this.__currentShaderBuffer = a.__currentShaderBuffer;
                        this.__currentDisplayShader = a.__currentDisplayShader;
                        this.__currentGraphicsShader = a.__currentGraphicsShader
                    },
                    __getMatrix: function(a, b) {
                        var c = xa.__pool.get();
                        c.copyFrom(a);
                        c.concat(this.__worldTransform);
                        if (0 == b || 1 == b && 0 == c.b && 0 == c.c && 1.001 > c.a && .999 < c.a && 1.001 >
                            c.d && .999 < c.d) c.tx = Math.round(c.tx), c.ty = Math.round(c.ty);
                        ab.identity(this.__matrix);
                        ab.set(this.__matrix, 0, c.a);
                        ab.set(this.__matrix, 1, c.b);
                        ab.set(this.__matrix, 4, c.c);
                        ab.set(this.__matrix, 5, c.d);
                        ab.set(this.__matrix, 12, c.tx);
                        ab.set(this.__matrix, 13, c.ty);
                        ab.append(this.__matrix, this.__flipped ? this.__projectionFlipped : this.__projection);
                        this.__values[0] = ab.get(this.__matrix, 0);
                        this.__values[1] = ab.get(this.__matrix, 1);
                        this.__values[2] = ab.get(this.__matrix, 2);
                        this.__values[3] = ab.get(this.__matrix,
                            3);
                        this.__values[4] = ab.get(this.__matrix, 4);
                        this.__values[5] = ab.get(this.__matrix, 5);
                        this.__values[6] = ab.get(this.__matrix, 6);
                        this.__values[7] = ab.get(this.__matrix, 7);
                        this.__values[8] = ab.get(this.__matrix, 8);
                        this.__values[9] = ab.get(this.__matrix, 9);
                        this.__values[10] = ab.get(this.__matrix, 10);
                        this.__values[11] = ab.get(this.__matrix, 11);
                        this.__values[12] = ab.get(this.__matrix, 12);
                        this.__values[13] = ab.get(this.__matrix, 13);
                        this.__values[14] = ab.get(this.__matrix, 14);
                        this.__values[15] = ab.get(this.__matrix,
                            15);
                        xa.__pool.release(c);
                        return this.__values
                    },
                    __initShader: function(a) {
                        return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultShader
                    },
                    __initDisplayShader: function(a) {
                        return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultDisplayShader
                    },
                    __initGraphicsShader: function(a) {
                        return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultGraphicsShader
                    },
                    __initShaderBuffer: function(a) {
                        return null !=
                            a ? this.__initGraphicsShader(a.shader) : this.__defaultGraphicsShader
                    },
                    __popMask: function() {
                        if (0 != this.__stencilReference) {
                            var a = this.__maskObjects.pop();
                            1 < this.__stencilReference ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 255), this.__context3D.setColorMask(!1, !1, !1, !1), a.__renderGLMask(this), this.__stencilReference--, this.__context3D.setStencilActions(2, 1, 5, 5, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference,
                                255, 0), this.__context3D.setColorMask(!0, !0, !0, !0)) : (this.__stencilReference = 0, this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0))
                        }
                    },
                    __popMaskObject: function(a, b) {
                        null == b && (b = !0);
                        null != a.__mask && this.__popMask();
                        b && null != a.__scrollRect && (0 != a.__renderTransform.b || 0 != a.__renderTransform.c ? (this.__scrollRectMasks.release(this.__maskObjects[this.__maskObjects.length - 1]), this.__popMask()) : this.__popMaskRect())
                    },
                    __popMaskRect: function() {
                        0 < this.__numClipRects && (this.__numClipRects--,
                            0 < this.__numClipRects ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1]) : this.__scissorRect())
                    },
                    __pushMask: function(a) {
                        0 == this.__stencilReference && (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4), this.__updatedStencil = !0);
                        this.__context3D.setStencilActions(2, 1, 2, 5, 5);
                        this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 255);
                        this.__context3D.setColorMask(!1, !1, !1, !1);
                        a.__renderGLMask(this);
                        this.__maskObjects.push(a);
                        this.__stencilReference++;
                        this.__context3D.setStencilActions(2, 1, 5,
                            5, 5);
                        this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0);
                        this.__context3D.setColorMask(!0, !0, !0, !0)
                    },
                    __pushMaskObject: function(a, b) {
                        null == b && (b = !0);
                        b && null != a.__scrollRect && (0 != a.__renderTransform.b || 0 != a.__renderTransform.c ? (b = this.__scrollRectMasks.get(), b.get_graphics().clear(), b.get_graphics().beginFill(65280), b.get_graphics().drawRect(a.__scrollRect.x, a.__scrollRect.y, a.__scrollRect.width, a.__scrollRect.height), b.__renderTransform.copyFrom(a.__renderTransform), this.__pushMask(b)) :
                            this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
                        null != a.__mask && this.__pushMask(a.__mask)
                    },
                    __pushMaskRect: function(a, b) {
                        this.__numClipRects == this.__clipRects.length && (this.__clipRects[this.__numClipRects] = new fa);
                        var c = xa.__pool.get();
                        c.copyFrom(b);
                        c.concat(this.__worldTransform);
                        b = this.__clipRects[this.__numClipRects];
                        a.__transform(b, c);
                        0 < this.__numClipRects && (a = this.__clipRects[this.__numClipRects - 1], b.__contract(a.x, a.y, a.width, a.height));
                        0 > b.height && (b.height = 0);
                        0 > b.width && (b.width = 0);
                        xa.__pool.release(c);
                        this.__scissorRect(b);
                        this.__numClipRects++
                    },
                    __render: function(a) {
                        this.__context3D.setColorMask(!0, !0, !0, !0);
                        this.__context3D.setCulling(3);
                        this.__context3D.setDepthTest(!1, 0);
                        this.__context3D.setStencilActions();
                        this.__context3D.setStencilReferenceValue(0, 0, 0);
                        this.__context3D.setScissorRectangle(null);
                        this.__blendMode = null;
                        this.__setBlendMode(10);
                        if (null == this.__defaultRenderTarget) {
                            if (Oa.__scissorRectangle.setTo(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight),
                                this.__context3D.setScissorRectangle(Oa.__scissorRectangle), this.__upscaled = 1 != this.__worldTransform.a || 1 != this.__worldTransform.d, a.__renderGL(this), 0 < this.__offsetX || 0 < this.__offsetY) 0 < this.__offsetX && (Oa.__scissorRectangle.setTo(0, 0, this.__offsetX, this.__height), this.__context3D.setScissorRectangle(Oa.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT), Oa.__scissorRectangle.setTo(this.__offsetX + this.__displayWidth, 0, this.__width,
                                this.__height), this.__context3D.setScissorRectangle(Oa.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)), 0 < this.__offsetY && (Oa.__scissorRectangle.setTo(0, 0, this.__width, this.__offsetY), this.__context3D.setScissorRectangle(Oa.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT), Oa.__scissorRectangle.setTo(0, this.__offsetY + this.__displayHeight, this.__width,
                                this.__height), this.__context3D.setScissorRectangle(Oa.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)), this.__context3D.setScissorRectangle(null)
                        } else {
                            Oa.__scissorRectangle.setTo(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight);
                            this.__context3D.setScissorRectangle(Oa.__scissorRectangle);
                            var b = a.__mask,
                                c = a.__scrollRect;
                            a.__mask = null;
                            a.__scrollRect = null;
                            a.__renderGL(this);
                            a.__mask = b;
                            a.__scrollRect = c
                        }
                        this.__context3D.present()
                    },
                    __renderFilterPass: function(a, b, c, d) {
                        null == d && (d = !0);
                        if (null != a && null != b && null != this.__defaultRenderTarget) {
                            var e = this.__context3D.__state.renderToTexture,
                                f = this.__context3D.__state.renderToTextureDepthStencil,
                                k = this.__context3D.__state.renderToTextureAntiAlias,
                                p = this.__context3D.__state.renderToTextureSurfaceSelector;
                            this.__context3D.setRenderToTexture(this.__defaultRenderTarget.getTexture(this.__context3D), !1);
                            d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
                            b = this.__initShader(b);
                            this.setShader(b);
                            this.applyAlpha(1);
                            this.applyBitmapData(a, c);
                            this.applyColorTransform(null);
                            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
                            this.updateShader();
                            c = a.getVertexBuffer(this.__context3D);
                            null != b.__position && this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
                            null != b.__textureCoord && this.__context3D.setVertexBufferAt(b.__textureCoord.index, c, 3, 2);
                            a = a.getIndexBuffer(this.__context3D);
                            this.__context3D.drawTriangles(a);
                            null != e ? this.__context3D.setRenderToTexture(e, f, k, p) : this.__context3D.setRenderToBackBuffer();
                            this.__clearShader()
                        }
                    },
                    __resize: function(a, b) {
                        this.__width = a;
                        this.__height = b;
                        a = null == this.__defaultRenderTarget ? this.__stage.stageWidth : this.__defaultRenderTarget.width;
                        b = null == this.__defaultRenderTarget ? this.__stage.stageHeight : this.__defaultRenderTarget.height;
                        if (null == this.__defaultRenderTarget) {
                            var c = this.__worldTransform;
                            c = Math.round(0 * c.a + 0 * c.c + c.tx)
                        } else c = 0;
                        this.__offsetX = c;
                        null == this.__defaultRenderTarget ? (c = this.__worldTransform, c = Math.round(0 * c.b + 0 * c.d + c.ty)) : c = 0;
                        this.__offsetY = c;
                        null ==
                            this.__defaultRenderTarget ? (c = this.__worldTransform, c = Math.round(a * c.a + 0 * c.c + c.tx - this.__offsetX)) : c = a;
                        this.__displayWidth = c;
                        null == this.__defaultRenderTarget ? (c = this.__worldTransform, c = Math.round(0 * c.b + b * c.d + c.ty - this.__offsetY)) : c = b;
                        this.__displayHeight = c;
                        ab.createOrtho(this.__projection, 0, this.__displayWidth + 2 * this.__offsetX, 0, this.__displayHeight + 2 * this.__offsetY, -1E3, 1E3);
                        ab.createOrtho(this.__projectionFlipped, 0, this.__displayWidth + 2 * this.__offsetX, this.__displayHeight + 2 * this.__offsetY, 0, -1E3,
                            1E3)
                    },
                    __resumeClipAndMask: function(a) {
                        0 < this.__stencilReference ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0)) : (this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
                        0 < this.__numClipRects ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1]) : this.__scissorRect()
                    },
                    __scissorRect: function(a) {
                        if (null != a) {
                            var b = Math.floor(a.x),
                                c = Math.floor(a.y),
                                d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0;
                            a = 0 < a.height ?
                                Math.ceil(a.get_bottom()) - c : 0;
                            0 > d && (d = 0);
                            0 > a && (a = 0);
                            Oa.__scissorRectangle.setTo(b, c, d, a);
                            this.__context3D.setScissorRectangle(Oa.__scissorRectangle)
                        } else this.__context3D.setScissorRectangle(null)
                    },
                    __setBlendMode: function(a) {
                        null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
                        if (this.__blendMode != a) switch (this.__blendMode = a, a) {
                            case 0:
                                this.__context3D.setBlendFactors(2, 2);
                                break;
                            case 9:
                                this.__context3D.setBlendFactors(1, 5);
                                break;
                            case 12:
                                this.__context3D.setBlendFactors(2, 6);
                                break;
                            case 14:
                                this.__context3D.setBlendFactors(2,
                                    2);
                                this.__context3D.__setGLBlendEquation(this.__gl.FUNC_REVERSE_SUBTRACT);
                                break;
                            default:
                                this.__context3D.setBlendFactors(2, 5)
                        }
                    },
                    __setRenderTarget: function(a) {
                        this.__defaultRenderTarget = a;
                        this.__flipped = null == a;
                        null != a && this.__resize(a.width, a.height)
                    },
                    __setShaderBuffer: function(a) {
                        this.setShader(a.shader);
                        this.__currentShaderBuffer = a
                    },
                    __suspendClipAndMask: function() {
                        0 < this.__stencilReference && (this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
                        0 < this.__numClipRects &&
                            this.__scissorRect()
                    },
                    __updateShaderBuffer: function(a) {
                        null != this.__currentShader && null != this.__currentShaderBuffer && this.__currentShader.__updateFromBuffer(this.__currentShaderBuffer, a)
                    },
                    __class__: Oa
                });
            var Rh = function(a) {
                this.onComplete = new $b;
                this.display = a;
                null != a && (a.addEventListener("unload", r(this, this.display_onUnload)), la.get_current().addChild(a))
            };
            g["openfl.display.Preloader"] = Rh;
            Rh.__name__ = "openfl.display.Preloader";
            Rh.prototype = {
                start: function() {
                    this.ready = !0;
                    la.get_current().get_loaderInfo().__complete();
                    if (null != this.display) {
                        var a = new sa("complete", !0, !0);
                        this.display.dispatchEvent(a);
                        a.isDefaultPrevented() || this.display.dispatchEvent(new sa("unload"))
                    } else this.complete || (this.complete = !0, this.onComplete.dispatch())
                },
                update: function(a, b) {
                    la.get_current().get_loaderInfo().__update(a, b);
                    null != this.display && this.display.dispatchEvent(new Ig("progress", !0, !0, a, b))
                },
                display_onUnload: function(a) {
                    null != this.display && (this.display.removeEventListener("unload", r(this, this.display_onUnload)), this.display.parent ==
                        la.get_current() && la.get_current().removeChild(this.display), la.get_current().stage.set_focus(null), this.display = null);
                    this.ready && !this.complete && (this.complete = !0, this.onComplete.dispatch())
                },
                __class__: Rh
            };
            var Pj = function() {
                Z.call(this);
                var a = this.getBackgroundColor(),
                    b = 0;
                70 > .299 * (a >> 16 & 255) + .587 * (a >> 8 & 255) + .114 * (a & 255) && (b = 16777215);
                a = this.getHeight() / 2 - 3.5;
                var c = this.getWidth() - 60;
                this.outline = new ff;
                this.outline.get_graphics().beginFill(b, .07);
                this.outline.get_graphics().drawRect(0, 0, c, 7);
                this.outline.set_x(30);
                this.outline.set_y(a);
                this.outline.set_alpha(0);
                this.addChild(this.outline);
                this.progress = new ff;
                this.progress.get_graphics().beginFill(b, .35);
                this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
                this.progress.set_x(32);
                this.progress.set_y(a + 2);
                this.progress.set_scaleX(0);
                this.progress.set_alpha(0);
                this.addChild(this.progress);
                this.startAnimation = la.getTimer() + 100;
                this.endAnimation = this.startAnimation + 1E3;
                this.addEventListener("addedToStage", r(this, this.this_onAddedToStage))
            };
            g["openfl.display.DefaultPreloader"] =
                Pj;
            Pj.__name__ = "openfl.display.DefaultPreloader";
            Pj.__super__ = Z;
            Pj.prototype = n(Z.prototype, {
                getBackgroundColor: function() {
                    var a = la.get_current().stage.window.context.attributes;
                    return Object.prototype.hasOwnProperty.call(a, "background") && null != a.background ? a.background : 0
                },
                getHeight: function() {
                    var a = la.get_current().stage.window.__height;
                    return 0 < a ? a : la.get_current().stage.stageHeight
                },
                getWidth: function() {
                    var a = la.get_current().stage.window.__width;
                    return 0 < a ? a : la.get_current().stage.stageWidth
                },
                onInit: function() {
                    this.addEventListener("enterFrame",
                        r(this, this.this_onEnterFrame))
                },
                onLoaded: function() {
                    this.removeEventListener("enterFrame", r(this, this.this_onEnterFrame));
                    this.dispatchEvent(new sa("unload"))
                },
                onUpdate: function(a, b) {
                    var c = 0;
                    0 < b && (c = a / b, 1 < c && (c = 1));
                    this.progress.set_scaleX(c)
                },
                this_onAddedToStage: function(a) {
                    this.removeEventListener("addedToStage", r(this, this.this_onAddedToStage));
                    this.onInit();
                    this.onUpdate(this.get_loaderInfo().bytesLoaded, this.get_loaderInfo().bytesTotal);
                    this.addEventListener("progress", r(this, this.this_onProgress));
                    this.addEventListener("complete", r(this, this.this_onComplete))
                },
                this_onComplete: function(a) {
                    a.preventDefault();
                    this.removeEventListener("progress", r(this, this.this_onProgress));
                    this.removeEventListener("complete", r(this, this.this_onComplete));
                    this.onLoaded()
                },
                this_onEnterFrame: function(a) {
                    a = (la.getTimer() - this.startAnimation) / (this.endAnimation - this.startAnimation);
                    0 > a && (a = 0);
                    1 < a && (a = 1);
                    this.outline.set_alpha(this.progress.set_alpha(a))
                },
                this_onProgress: function(a) {
                    this.onUpdate(a.bytesLoaded | 0, a.bytesTotal |
                        0)
                },
                __class__: Pj
            });
            var om = {
                    _new: function(a) {
                        return {}
                    }
                },
                Ci = function() {
                    this.channels = 0;
                    this.filter = 5;
                    this.index = this.height = 0;
                    this.mipFilter = 2;
                    this.wrap = this.width = 0
                };
            g["openfl.display.ShaderInput"] = Ci;
            Ci.__name__ = "openfl.display.ShaderInput";
            Ci.prototype = {
                __disableGL: function(a, b) {
                    a.setTextureAt(b, null)
                },
                __updateGL: function(a, b, c, d, e, f) {
                    c = null != c ? c : this.input;
                    d = null != d ? d : this.filter;
                    e = null != e ? e : this.mipFilter;
                    f = null != f ? f : this.wrap;
                    null != c ? (a.setTextureAt(b, c.getTexture(a)), a.setSamplerStateAt(b, f,
                        d, e)) : a.setTextureAt(b, null)
                },
                __class__: Ci
            };
            var sg = function() {
                this.index = 0
            };
            g["openfl.display.ShaderParameter"] = sg;
            sg.__name__ = "openfl.display.ShaderParameter";
            sg.prototype = {
                __disableGL: function(a) {
                    a = a.gl;
                    if (!this.__isUniform)
                        for (var b = 0, c = this.__arrayLength; b < c;) {
                            var d = b++;
                            a.disableVertexAttribArray(this.index + d)
                        }
                },
                __updateGL: function(a, b) {
                    a = a.gl;
                    b = null != b ? b : this.value;
                    var c = this.__isBool ? b : null,
                        d = this.__isFloat ? b : null,
                        e = this.__isInt ? b : null;
                    if (this.__isUniform)
                        if (null != b && b.length >= this.__length) switch (this.type) {
                            case 0:
                                a.uniform1i(this.index,
                                    c[0] ? 1 : 0);
                                break;
                            case 1:
                                a.uniform2i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                                break;
                            case 2:
                                a.uniform3i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0);
                                break;
                            case 3:
                                a.uniform4i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0, c[3] ? 1 : 0);
                                break;
                            case 4:
                                a.uniform1f(this.index, d[0]);
                                break;
                            case 5:
                                a.uniform2f(this.index, d[0], d[1]);
                                break;
                            case 6:
                                a.uniform3f(this.index, d[0], d[1], d[2]);
                                break;
                            case 7:
                                a.uniform4f(this.index, d[0], d[1], d[2], d[3]);
                                break;
                            case 8:
                                a.uniform1i(this.index, e[0]);
                                break;
                            case 9:
                                a.uniform2i(this.index, e[0], e[1]);
                                break;
                            case 10:
                                a.uniform3i(this.index,
                                    e[0], e[1], e[2]);
                                break;
                            case 11:
                                a.uniform4i(this.index, e[0], e[1], e[2], e[3]);
                                break;
                            case 12:
                                this.__uniformMatrix[0] = d[0];
                                this.__uniformMatrix[1] = d[1];
                                this.__uniformMatrix[2] = d[2];
                                this.__uniformMatrix[3] = d[3];
                                pc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 16:
                                this.__uniformMatrix[0] = d[0];
                                this.__uniformMatrix[1] = d[1];
                                this.__uniformMatrix[2] = d[2];
                                this.__uniformMatrix[3] = d[3];
                                this.__uniformMatrix[4] = d[4];
                                this.__uniformMatrix[5] = d[5];
                                this.__uniformMatrix[6] = d[6];
                                this.__uniformMatrix[7] =
                                    d[7];
                                this.__uniformMatrix[8] = d[8];
                                pc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 20:
                                this.__uniformMatrix[0] = d[0], this.__uniformMatrix[1] = d[1], this.__uniformMatrix[2] = d[2], this.__uniformMatrix[3] = d[3], this.__uniformMatrix[4] = d[4], this.__uniformMatrix[5] = d[5], this.__uniformMatrix[6] = d[6], this.__uniformMatrix[7] = d[7], this.__uniformMatrix[8] = d[8], this.__uniformMatrix[9] = d[9], this.__uniformMatrix[10] = d[10], this.__uniformMatrix[11] = d[11], this.__uniformMatrix[12] = d[12], this.__uniformMatrix[13] =
                                    d[13], this.__uniformMatrix[14] = d[14], this.__uniformMatrix[15] = d[15], pc.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
                        } else switch (this.type) {
                                case 1:
                                case 9:
                                    a.uniform2i(this.index, 0, 0);
                                    break;
                                case 3:
                                case 11:
                                    a.uniform4i(this.index, 0, 0, 0, 0);
                                    break;
                                case 4:
                                    a.uniform1f(this.index, 0);
                                    break;
                                case 5:
                                    a.uniform2f(this.index, 0, 0);
                                    break;
                                case 6:
                                    a.uniform3f(this.index, 0, 0, 0);
                                    break;
                                case 7:
                                    a.uniform4f(this.index, 0, 0, 0, 0);
                                    break;
                                case 0:
                                case 8:
                                    a.uniform1i(this.index, 0);
                                    break;
                                case 2:
                                case 10:
                                    a.uniform3i(this.index,
                                        0, 0, 0);
                                    break;
                                case 12:
                                    this.__uniformMatrix[0] = 0;
                                    this.__uniformMatrix[1] = 0;
                                    this.__uniformMatrix[2] = 0;
                                    this.__uniformMatrix[3] = 0;
                                    pc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                                    break;
                                case 16:
                                    this.__uniformMatrix[0] = 0;
                                    this.__uniformMatrix[1] = 0;
                                    this.__uniformMatrix[2] = 0;
                                    this.__uniformMatrix[3] = 0;
                                    this.__uniformMatrix[4] = 0;
                                    this.__uniformMatrix[5] = 0;
                                    this.__uniformMatrix[6] = 0;
                                    this.__uniformMatrix[7] = 0;
                                    this.__uniformMatrix[8] = 0;
                                    pc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                                    break;
                                case 20:
                                    this.__uniformMatrix[0] =
                                        0, this.__uniformMatrix[1] = 0, this.__uniformMatrix[2] = 0, this.__uniformMatrix[3] = 0, this.__uniformMatrix[4] = 0, this.__uniformMatrix[5] = 0, this.__uniformMatrix[6] = 0, this.__uniformMatrix[7] = 0, this.__uniformMatrix[8] = 0, this.__uniformMatrix[9] = 0, this.__uniformMatrix[10] = 0, this.__uniformMatrix[11] = 0, this.__uniformMatrix[12] = 0, this.__uniformMatrix[13] = 0, this.__uniformMatrix[14] = 0, this.__uniformMatrix[15] = 0, pc.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
                            } else if (this.__useArray || null != b && b.length != this.__length)
                                for (f =
                                    0, k = this.__arrayLength; f < k;) p = f++, a.enableVertexAttribArray(this.index + p);
                            else {
                                for (var f = 0, k = this.__arrayLength; f < k;) {
                                    var p = f++;
                                    a.disableVertexAttribArray(this.index + p)
                                }
                                if (null != b) switch (this.type) {
                                    case 0:
                                        a.vertexAttrib1f(this.index, c[0] ? 1 : 0);
                                        break;
                                    case 1:
                                        a.vertexAttrib2f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                                        break;
                                    case 2:
                                        a.vertexAttrib3f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0);
                                        break;
                                    case 3:
                                        a.vertexAttrib4f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0, c[3] ? 1 : 0);
                                        break;
                                    case 4:
                                        a.vertexAttrib1f(this.index, d[0]);
                                        break;
                                    case 5:
                                        a.vertexAttrib2f(this.index, d[0], d[1]);
                                        break;
                                    case 6:
                                        a.vertexAttrib3f(this.index, d[0], d[1], d[2]);
                                        break;
                                    case 7:
                                        a.vertexAttrib4f(this.index, d[0], d[1], d[2], d[3]);
                                        break;
                                    case 8:
                                        a.vertexAttrib1f(this.index, e[0]);
                                        break;
                                    case 9:
                                        a.vertexAttrib2f(this.index, e[0], e[1]);
                                        break;
                                    case 10:
                                        a.vertexAttrib3f(this.index, e[0], e[1], e[2]);
                                        break;
                                    case 11:
                                        a.vertexAttrib4f(this.index, e[0], e[1], e[2], e[3]);
                                        break;
                                    case 12:
                                        a.vertexAttrib2f(this.index + 0, d[0], d[1]);
                                        a.vertexAttrib2f(this.index + 1, d[2], d[3]);
                                        break;
                                    case 16:
                                        a.vertexAttrib3f(this.index +
                                            0, d[0], d[1], d[2]);
                                        a.vertexAttrib3f(this.index + 1, d[3], d[4], d[5]);
                                        a.vertexAttrib3f(this.index + 2, d[6], d[7], d[8]);
                                        break;
                                    case 20:
                                        a.vertexAttrib4f(this.index + 0, d[0], d[1], d[2], d[3]), a.vertexAttrib4f(this.index + 1, d[4], d[5], d[6], d[7]), a.vertexAttrib4f(this.index + 2, d[8], d[9], d[10], d[11]), a.vertexAttrib4f(this.index + 3, d[12], d[13], d[14], d[15])
                                } else switch (this.type) {
                                    case 1:
                                    case 5:
                                    case 9:
                                        a.vertexAttrib2f(this.index, 0, 0);
                                        break;
                                    case 3:
                                    case 7:
                                    case 11:
                                        a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                                        break;
                                    case 0:
                                    case 4:
                                    case 8:
                                        a.vertexAttrib1f(this.index,
                                            0);
                                        break;
                                    case 2:
                                    case 6:
                                    case 10:
                                        a.vertexAttrib3f(this.index, 0, 0, 0);
                                        break;
                                    case 12:
                                        a.vertexAttrib2f(this.index + 0, 0, 0);
                                        a.vertexAttrib2f(this.index + 1, 0, 0);
                                        break;
                                    case 16:
                                        a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                                        a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                                        a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                                        break;
                                    case 20:
                                        a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0)
                                }
                            }
                },
                __updateGLFromBuffer: function(a, b, c, d, e) {
                    a = a.gl;
                    if (this.__isUniform) {
                        if (d >=
                            this.__length) switch (this.type) {
                            case 1:
                            case 9:
                                a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
                                break;
                            case 3:
                            case 11:
                                a.uniform4i(this.index, b[c] | 0, b[c + 1] | 0, b[c + 2] | 0, b[c + 3] | 0);
                                break;
                            case 4:
                                a.uniform1f(this.index, b[c]);
                                break;
                            case 5:
                                a.uniform2f(this.index, b[c], b[c + 1]);
                                break;
                            case 6:
                                a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
                                break;
                            case 7:
                                a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                                break;
                            case 0:
                            case 8:
                                a.uniform1i(this.index, b[c] | 0);
                                break;
                            case 2:
                            case 10:
                                a.uniform3i(this.index, b[c] | 0, b[c + 1] | 0, b[c + 2] | 0);
                                break;
                            case 12:
                                this.__uniformMatrix[0] = b[c];
                                this.__uniformMatrix[1] = b[c + 1];
                                this.__uniformMatrix[2] = b[c + 2];
                                this.__uniformMatrix[3] = b[c + 3];
                                pc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                                break;
                            case 16:
                                this.__uniformMatrix[0] = b[c];
                                this.__uniformMatrix[1] = b[c + 1];
                                this.__uniformMatrix[2] = b[c + 2];
                                this.__uniformMatrix[3] = b[c + 3];
                                this.__uniformMatrix[4] = b[c + 4];
                                this.__uniformMatrix[5] = b[c + 5];
                                this.__uniformMatrix[6] = b[c + 6];
                                this.__uniformMatrix[7] = b[c + 7];
                                this.__uniformMatrix[8] = b[c + 8];
                                pc.uniformMatrix3fv(a,
                                    this.index, !1, this.__uniformMatrix);
                                break;
                            case 20:
                                this.__uniformMatrix[0] = b[c], this.__uniformMatrix[1] = b[c + 1], this.__uniformMatrix[2] = b[c + 2], this.__uniformMatrix[3] = b[c + 3], this.__uniformMatrix[4] = b[c + 4], this.__uniformMatrix[5] = b[c + 5], this.__uniformMatrix[6] = b[c + 6], this.__uniformMatrix[7] = b[c + 7], this.__uniformMatrix[8] = b[c + 8], this.__uniformMatrix[9] = b[c + 9], this.__uniformMatrix[10] = b[c + 10], this.__uniformMatrix[11] = b[c + 11], this.__uniformMatrix[12] = b[c + 12], this.__uniformMatrix[13] = b[c + 13], this.__uniformMatrix[14] =
                                    b[c + 14], this.__uniformMatrix[15] = b[c + 15], pc.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
                        }
                    } else if (this.__internal || 0 != d && d != this.__length) {
                        b = a.FLOAT;
                        this.__isBool ? b = a.INT : this.__isInt && (b = a.INT);
                        f = 0;
                        for (k = this.__arrayLength; f < k;) p = f++, a.enableVertexAttribArray(this.index + p);
                        if (0 < d)
                            for (f = 0, k = this.__arrayLength; f < k;) p = f++, a.vertexAttribPointer(this.index + p, this.__length, b, !1, 4 * this.__length, 4 * (c + e * this.__length + p * this.__arrayLength))
                    } else {
                        for (var f = 0, k = this.__arrayLength; f < k;) {
                            var p = f++;
                            a.disableVertexAttribArray(this.index +
                                p)
                        }
                        if (0 < d) switch (this.type) {
                            case 1:
                            case 5:
                            case 9:
                                a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                                break;
                            case 3:
                            case 7:
                            case 11:
                                a.vertexAttrib4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                                break;
                            case 0:
                            case 4:
                            case 8:
                                a.vertexAttrib1f(this.index, b[c]);
                                break;
                            case 2:
                            case 6:
                            case 10:
                                a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                                break;
                            case 12:
                                a.vertexAttrib2f(this.index + 0, b[c], b[c + 1]);
                                a.vertexAttrib2f(this.index + 1, b[c + 2], b[c + 2 + 1]);
                                break;
                            case 16:
                                a.vertexAttrib3f(this.index + 0, b[c], b[c + 1], b[c + 2]);
                                a.vertexAttrib3f(this.index +
                                    1, b[c + 3], b[c + 3 + 1], b[c + 3 + 2]);
                                a.vertexAttrib3f(this.index + 2, b[c + 6], b[c + 6 + 1], b[c + 6 + 2]);
                                break;
                            case 20:
                                a.vertexAttrib4f(this.index + 0, b[c], b[c + 1], b[c + 2], b[c + 3]), a.vertexAttrib4f(this.index + 1, b[c + 4], b[c + 4 + 1], b[c + 4 + 2], b[c + 4 + 3]), a.vertexAttrib4f(this.index + 2, b[c + 8], b[c + 8 + 1], b[c + 8 + 2], b[c + 8 + 3]), a.vertexAttrib4f(this.index + 3, b[c + 12], b[c + 12 + 1], b[c + 12 + 2], b[c + 12 + 3])
                        } else switch (this.type) {
                            case 1:
                            case 5:
                            case 9:
                                a.vertexAttrib2f(this.index, 0, 0);
                                break;
                            case 3:
                            case 7:
                            case 11:
                                a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                                break;
                            case 0:
                            case 4:
                            case 8:
                                a.vertexAttrib1f(this.index, 0);
                                break;
                            case 2:
                            case 6:
                            case 10:
                                a.vertexAttrib3f(this.index, 0, 0, 0);
                                break;
                            case 12:
                                a.vertexAttrib2f(this.index + 0, 0, 0);
                                a.vertexAttrib2f(this.index + 1, 0, 0);
                                break;
                            case 16:
                                a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                                a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                                a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                                break;
                            case 20:
                                a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0)
                        }
                    }
                },
                set_name: function(a) {
                    this.__internal =
                        K.startsWith(a, "openfl_");
                    return this.name = a
                },
                __class__: sg,
                __properties__: {
                    set_name: "set_name"
                }
            };
            var ff = function() {
                za.call(this)
            };
            g["openfl.display.Shape"] = ff;
            ff.__name__ = "openfl.display.Shape";
            ff.__super__ = za;
            ff.prototype = n(za.prototype, {
                get_graphics: function() {
                    null == this.__graphics && (this.__graphics = new ad(this));
                    return this.__graphics
                },
                __class__: ff,
                __properties__: n(za.prototype.__properties__, {
                    get_graphics: "get_graphics"
                })
            });
            var Kg = function(a, b) {
                wa.call(this);
                this.set_name(null);
                this.__color = -1;
                this.__colorSplit = [255, 255, 255];
                this.__colorString = "#FFFFFF";
                this.__contentsScaleFactor = 1;
                this.__deltaTime = this.__currentTabOrderIndex = 0;
                this.__displayState = 2;
                this.__logicalHeight = this.__logicalWidth = this.__lastClickTime = this.__mouseY = this.__mouseX = 0;
                this.__displayMatrix = new xa;
                this.__displayRect = new fa;
                this.__renderDirty = !0;
                this.stage3Ds = ib.toObjectVector(null);
                this.stage3Ds.push(new ag(this));
                this.stage3Ds.push(new ag(this));
                this.stage3Ds.push(new ag(this));
                this.stage3Ds.push(new ag(this));
                this.stage =
                    this;
                this.align = 6;
                this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
                this.__quality = 1;
                this.__scaleMode = 2;
                this.showDefaultContextMenu = !0;
                this.softKeyboardRect = new fa;
                this.stageFocusRect = !0;
                this.__macKeyboard = /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent) || /Mac/.test(navigator.platform);
                this.__clearBeforeRender = !0;
                this.__forceRender = !1;
                this.__stack = [];
                this.__rollOutStack = [];
                this.__mouseOutStack = [];
                this.__touchData = new Tb;
                this.application = a.application;
                this.window =
                    a;
                this.set_color(b);
                this.__contentsScaleFactor = a.__scale;
                this.__wasFullscreen = a.__fullscreen;
                this.__resize();
                null == la.get_current().stage && this.stage.addChild(la.get_current())
            };
            g["openfl.display.Stage"] = Kg;
            Kg.__name__ = "openfl.display.Stage";
            Kg.__interfaces__ = [Ba];
            Kg.__super__ = wa;
            Kg.prototype = n(wa.prototype, {
                __broadcastEvent: function(a) {
                    if (Object.prototype.hasOwnProperty.call(za.__broadcastEvents.h, a.type))
                        for (var b = za.__broadcastEvents.h[a.type], c = 0; c < b.length;) {
                            var d = b[c];
                            ++c;
                            if (d.stage == this ||
                                null == d.stage) try {
                                d.__dispatch(a)
                            } catch (e) {
                                Ca.lastError = e, d = F.caught(e).unwrap(), this.__handleError(d)
                            }
                        }
                },
                __createRenderer: function() {
                    var a = 1;
                    1 < this.window.__scale && (a = this.window.devicePixelRatio || 1);
                    var b = this.window.__width * this.window.__scale | 0,
                        c = this.window.__height * this.window.__scale | 0;
                    switch (this.window.context.type) {
                        case "canvas":
                            this.__renderer = new Le(this.window.context.canvas2D);
                            oa.__cast(this.__renderer, Le).pixelRatio = a;
                            break;
                        case "dom":
                            this.__renderer = new Gg(this.window.context.dom);
                            oa.__cast(this.__renderer, Gg).pixelRatio = a;
                            break;
                        case "opengl":
                        case "opengles":
                        case "webgl":
                            this.context3D = new db(this), this.context3D.configureBackBuffer(b, c, 0, !0, !0, !0), this.context3D.present(), this.__renderer = new Oa(this.context3D)
                    }
                    null != this.__renderer && (a = this.get_quality(), this.__renderer.__allowSmoothing = 2 != a, this.__renderer.__worldTransform = this.__displayMatrix, this.__renderer.__stage = this, this.__renderer.__resize(b, c))
                },
                __dispatchEvent: function(a) {
                    try {
                        return wa.prototype.__dispatchEvent.call(this,
                            a)
                    } catch (b) {
                        return Ca.lastError = b, a = F.caught(b).unwrap(), this.__handleError(a), !1
                    }
                },
                __dispatchPendingMouseEvent: function() {
                    this.__pendingMouseEvent && (this.__onMouse("mouseMove", this.__pendingMouseX, this.__pendingMouseY, 0), this.__pendingMouseEvent = !1)
                },
                __dispatchStack: function(a, b) {
                    try {
                        var c = b.length;
                        if (0 == c) {
                            a.eventPhase = 2;
                            var d = a.target;
                            d.__dispatch(a)
                        } else {
                            a.eventPhase = 1;
                            a.target = b[b.length - 1];
                            for (var e = 0, f = c - 1; e < f;) {
                                var k = e++;
                                b[k].__dispatch(a);
                                if (a.__isCanceled) return
                            }
                            a.eventPhase = 2;
                            d = a.target;
                            d.__dispatch(a);
                            if (!a.__isCanceled && a.bubbles)
                                for (a.eventPhase = 3, k = c - 2; 0 <= k;) {
                                    b[k].__dispatch(a);
                                    if (a.__isCanceled) break;
                                    --k
                                }
                        }
                    } catch (p) {
                        Ca.lastError = p, a = F.caught(p).unwrap(), this.__handleError(a)
                    }
                },
                __dispatchTarget: function(a, b) {
                    try {
                        return a.__dispatchEvent(b)
                    } catch (c) {
                        return Ca.lastError = c, a = F.caught(c).unwrap(), this.__handleError(a), !1
                    }
                },
                __drag: function(a) {
                    var b = this.__dragObject.parent;
                    if (null != b) {
                        b = b.__getWorldTransform();
                        var c = b.a * b.d - b.b * b.c;
                        if (0 == c) a.x = -b.tx, a.y = -b.ty;
                        else {
                            var d = 1 / c * (b.c * (b.ty -
                                a.y) + b.d * (a.x - b.tx));
                            a.y = 1 / c * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
                            a.x = d
                        }
                    }
                    b = a.x + this.__dragOffsetX;
                    a = a.y + this.__dragOffsetY;
                    null != this.__dragBounds && (b < this.__dragBounds.x ? b = this.__dragBounds.x : b > this.__dragBounds.get_right() && (b = this.__dragBounds.get_right()), a < this.__dragBounds.y ? a = this.__dragBounds.y : a > this.__dragBounds.get_bottom() && (a = this.__dragBounds.get_bottom()));
                    this.__dragObject.set_x(b);
                    this.__dragObject.set_y(a)
                },
                __getInteractive: function(a) {
                    null != a && a.push(this);
                    return !0
                },
                __globalToLocal: function(a,
                    b) {
                    a != b && b.copyFrom(a);
                    return b
                },
                __handleError: function(a) {
                    var b = new Qj("uncaughtError", !0, !0, a);
                    try {
                        la.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b)
                    } catch (d) {
                        Ca.lastError = d
                    }
                    if (!b.__preventDefault) {
                        b = Hf.toString(Hf.exceptionStack());
                        console.log(b);
                        b = I.string(a);
                        console.log(b);
                        try {
                            if (null != a && Object.prototype.hasOwnProperty.call(a, "stack") && null != a.stack && "" != a.stack) console.log(a.stack), a.stack = a.stack;
                            else {
                                var c = Hf.toString(Hf.callStack());
                                console.log(c)
                            }
                        } catch (d) {
                            Ca.lastError =
                                d
                        }
                        throw a;
                    }
                },
                __onKey: function(a, b, c) {
                    this.__dispatchPendingMouseEvent();
                    eb.__altKey = Ib.get_altKey(c);
                    eb.__commandKey = Ib.get_metaKey(c);
                    eb.__ctrlKey = Ib.get_ctrlKey(c);
                    eb.__shiftKey = Ib.get_shiftKey(c);
                    var d = [];
                    null == this.__focus ? this.__getInteractive(d) : this.__focus.__getInteractive(d);
                    if (0 < d.length) {
                        switch (b) {
                            case 1073741908:
                            case 1073741909:
                            case 1073741910:
                            case 1073741911:
                            case 1073741912:
                            case 1073741913:
                            case 1073741914:
                            case 1073741915:
                            case 1073741916:
                            case 1073741917:
                            case 1073741918:
                            case 1073741919:
                            case 1073741920:
                            case 1073741921:
                            case 1073741922:
                            case 1073741923:
                            case 1073742044:
                                var e =
                                    3;
                                break;
                            case 1073742048:
                            case 1073742049:
                            case 1073742050:
                            case 1073742051:
                                e = 1;
                                break;
                            case 1073742052:
                            case 1073742053:
                            case 1073742054:
                            case 1073742055:
                                e = 2;
                                break;
                            default:
                                e = 0
                        }
                        switch (b) {
                            case 8:
                                b = 8;
                                break;
                            case 9:
                                b = 9;
                                break;
                            case 13:
                                b = 13;
                                break;
                            case 27:
                                b = 27;
                                break;
                            case 32:
                                b = 32;
                                break;
                            case 33:
                                b = 49;
                                break;
                            case 34:
                                b = 222;
                                break;
                            case 35:
                                b = 51;
                                break;
                            case 36:
                                b = 52;
                                break;
                            case 37:
                                b = 53;
                                break;
                            case 38:
                                b = 55;
                                break;
                            case 39:
                                b = 222;
                                break;
                            case 40:
                                b = 57;
                                break;
                            case 41:
                                b = 48;
                                break;
                            case 42:
                                b = 56;
                                break;
                            case 44:
                                b = 188;
                                break;
                            case 45:
                                b = 189;
                                break;
                            case 46:
                                b = 190;
                                break;
                            case 47:
                                b = 191;
                                break;
                            case 48:
                                b = 48;
                                break;
                            case 49:
                                b = 49;
                                break;
                            case 50:
                                b = 50;
                                break;
                            case 51:
                                b = 51;
                                break;
                            case 52:
                                b = 52;
                                break;
                            case 53:
                                b = 53;
                                break;
                            case 54:
                                b = 54;
                                break;
                            case 55:
                                b = 55;
                                break;
                            case 56:
                                b = 56;
                                break;
                            case 57:
                                b = 57;
                                break;
                            case 58:
                                b = 186;
                                break;
                            case 59:
                                b = 186;
                                break;
                            case 60:
                                b = 60;
                                break;
                            case 61:
                                b = 187;
                                break;
                            case 62:
                                b = 190;
                                break;
                            case 63:
                                b = 191;
                                break;
                            case 64:
                                b = 50;
                                break;
                            case 91:
                                b = 219;
                                break;
                            case 92:
                                b = 220;
                                break;
                            case 93:
                                b = 221;
                                break;
                            case 94:
                                b = 54;
                                break;
                            case 95:
                                b = 189;
                                break;
                            case 96:
                                b = 192;
                                break;
                            case 97:
                                b = 65;
                                break;
                            case 98:
                                b = 66;
                                break;
                            case 99:
                                b = 67;
                                break;
                            case 100:
                                b = 68;
                                break;
                            case 101:
                                b = 69;
                                break;
                            case 102:
                                b = 70;
                                break;
                            case 103:
                                b = 71;
                                break;
                            case 104:
                                b = 72;
                                break;
                            case 105:
                                b = 73;
                                break;
                            case 106:
                                b = 74;
                                break;
                            case 107:
                                b = 75;
                                break;
                            case 108:
                                b = 76;
                                break;
                            case 109:
                                b = 77;
                                break;
                            case 110:
                                b = 78;
                                break;
                            case 111:
                                b = 79;
                                break;
                            case 112:
                                b = 80;
                                break;
                            case 113:
                                b = 81;
                                break;
                            case 114:
                                b = 82;
                                break;
                            case 115:
                                b = 83;
                                break;
                            case 116:
                                b = 84;
                                break;
                            case 117:
                                b = 85;
                                break;
                            case 118:
                                b = 86;
                                break;
                            case 119:
                                b = 87;
                                break;
                            case 120:
                                b = 88;
                                break;
                            case 121:
                                b = 89;
                                break;
                            case 122:
                                b = 90;
                                break;
                            case 127:
                                b =
                                    46;
                                break;
                            case 1073741881:
                                b = 20;
                                break;
                            case 1073741882:
                                b = 112;
                                break;
                            case 1073741883:
                                b = 113;
                                break;
                            case 1073741884:
                                b = 114;
                                break;
                            case 1073741885:
                                b = 115;
                                break;
                            case 1073741886:
                                b = 116;
                                break;
                            case 1073741887:
                                b = 117;
                                break;
                            case 1073741888:
                                b = 118;
                                break;
                            case 1073741889:
                                b = 119;
                                break;
                            case 1073741890:
                                b = 120;
                                break;
                            case 1073741891:
                                b = 121;
                                break;
                            case 1073741892:
                                b = 122;
                                break;
                            case 1073741893:
                                b = 123;
                                break;
                            case 1073741894:
                                b = 301;
                                break;
                            case 1073741895:
                                b = 145;
                                break;
                            case 1073741896:
                                b = 19;
                                break;
                            case 1073741897:
                                b = 45;
                                break;
                            case 1073741898:
                                b = 36;
                                break;
                            case 1073741899:
                                b = 33;
                                break;
                            case 1073741901:
                                b = 35;
                                break;
                            case 1073741902:
                                b = 34;
                                break;
                            case 1073741903:
                                b = 39;
                                break;
                            case 1073741904:
                                b = 37;
                                break;
                            case 1073741905:
                                b = 40;
                                break;
                            case 1073741906:
                                b = 38;
                                break;
                            case 1073741907:
                                b = 144;
                                break;
                            case 1073741908:
                                b = 111;
                                break;
                            case 1073741909:
                                b = 106;
                                break;
                            case 1073741910:
                                b = 109;
                                break;
                            case 1073741911:
                                b = 107;
                                break;
                            case 1073741912:
                                b = 13;
                                break;
                            case 1073741913:
                                b = 97;
                                break;
                            case 1073741914:
                                b = 98;
                                break;
                            case 1073741915:
                                b = 99;
                                break;
                            case 1073741916:
                                b = 100;
                                break;
                            case 1073741917:
                                b = 101;
                                break;
                            case 1073741918:
                                b =
                                    102;
                                break;
                            case 1073741919:
                                b = 103;
                                break;
                            case 1073741920:
                                b = 104;
                                break;
                            case 1073741921:
                                b = 105;
                                break;
                            case 1073741922:
                                b = 96;
                                break;
                            case 1073741923:
                                b = 110;
                                break;
                            case 1073741925:
                                b = 302;
                                break;
                            case 1073741928:
                                b = 124;
                                break;
                            case 1073741929:
                                b = 125;
                                break;
                            case 1073741930:
                                b = 126;
                                break;
                            case 1073741982:
                                b = 13;
                                break;
                            case 1073742044:
                                b = 110;
                                break;
                            case 1073742048:
                                b = 17;
                                break;
                            case 1073742049:
                                b = 16;
                                break;
                            case 1073742050:
                                b = 18;
                                break;
                            case 1073742051:
                                b = 15;
                                break;
                            case 1073742052:
                                b = 17;
                                break;
                            case 1073742053:
                                b = 16;
                                break;
                            case 1073742054:
                                b = 18;
                                break;
                            case 1073742055:
                                b = 15
                        }
                        var f = bm.__getCharCode(b, Ib.get_shiftKey(c));
                        if ("keyUp" == a && (32 == b || 13 == b) && this.__focus instanceof Z) {
                            var k = oa.__cast(this.__focus, Z);
                            if (k.get_buttonMode() && 1 == k.focusRect) {
                                var p = La.__pool.get(),
                                    m = La.__pool.get();
                                m.x = this.__mouseX;
                                m.y = this.__mouseY;
                                k = eb.__create("click", 0, this.__mouseX, this.__mouseY, k.__globalToLocal(m, p), k);
                                this.__dispatchStack(k, d);
                                La.__pool.release(m);
                                La.__pool.release(p)
                            }
                        }
                        e = new Rj(a, !0, !0, f, b, e, this.__macKeyboard ? Ib.get_ctrlKey(c) || Ib.get_metaKey(c) : Ib.get_ctrlKey(c),
                            Ib.get_altKey(c), Ib.get_shiftKey(c), Ib.get_ctrlKey(c), Ib.get_metaKey(c));
                        d.reverse();
                        this.__dispatchStack(e, d);
                        if (e.__preventDefault) "keyDown" == a ? this.window.onKeyDown.cancel() : this.window.onKeyUp.cancel();
                        else if ("keyDown" == a && 9 == b) {
                            d = [];
                            this.__tabTest(d);
                            b = -1;
                            a = null;
                            e = Ib.get_shiftKey(c) ? -1 : 1;
                            if (1 < d.length) {
                                Zb.sort(d, function(a, b) {
                                    return a.get_tabIndex() - b.get_tabIndex()
                                });
                                if (-1 != d[d.length - 1].get_tabIndex())
                                    for (p = 0; p < d.length;) {
                                        if (-1 < d[p].get_tabIndex()) {
                                            0 < p && d.splice(0, p);
                                            break
                                        }++p
                                    }
                                if (null != this.get_focus()) {
                                    p =
                                        this.get_focus();
                                    for (f = d.indexOf(p); - 1 == f && null != p;) {
                                        b = p.parent;
                                        if (null != b && b.get_tabChildren()) {
                                            p = b.getChildIndex(p);
                                            if (-1 == p) {
                                                p = b;
                                                continue
                                            }
                                            for (p += e; Ib.get_shiftKey(c) ? 0 <= p : p < b.get_numChildren();) {
                                                m = b.getChildAt(p);
                                                if (m instanceof pa && (f = oa.__cast(m, pa), f = d.indexOf(f), -1 != f)) {
                                                    e = 0;
                                                    break
                                                }
                                                p += e
                                            }
                                        } else Ib.get_shiftKey(c) && (f = d.indexOf(b), -1 != f && (e = 0));
                                        p = b
                                    }
                                    b = 0 > f ? 0 : f + e
                                } else b = this.__currentTabOrderIndex
                            } else 1 == d.length && (a = d[0], this.get_focus() == a && (a = null));
                            f = 0 <= b && b < d.length;
                            1 == d.length || 0 == d.length &&
                                null != this.get_focus() ? b = 0 : 1 < d.length && (0 > b && (b += d.length), b %= d.length, a = d[b], a == this.get_focus() && (b += e, 0 > b && (b += d.length), b %= d.length, a = d[b]));
                            e = null;
                            null != this.get_focus() && (e = new bg("keyFocusChange", !0, !0, a, Ib.get_shiftKey(c), 0), d = [], this.get_focus().__getInteractive(d), d.reverse(), this.__dispatchStack(e, d), e.isDefaultPrevented() && this.window.onKeyDown.cancel());
                            null != e && e.isDefaultPrevented() || (this.__currentTabOrderIndex = b, null != a && this.set_focus(a), f && this.window.onKeyDown.cancel())
                        }
                    }
                },
                __onLimeCreateWindow: function(a) {
                    if (this.window ==
                        a) {
                        var b = r(this, this.__onLimeWindowActivate);
                        a.onActivate.add(function() {
                            b(a)
                        });
                        var c = r(this, this.__onLimeWindowClose);
                        a.onClose.add(function() {
                            c(a)
                        }, !1, -9E3);
                        var d = r(this, this.__onLimeWindowDeactivate);
                        a.onDeactivate.add(function() {
                            d(a)
                        });
                        var e = r(this, this.__onLimeWindowDropFile);
                        var f = function(b) {
                            e(a, b)
                        };
                        a.onDropFile.add(f);
                        var k = r(this, this.__onLimeWindowEnter);
                        a.onEnter.add(function() {
                            k(a)
                        });
                        var p = r(this, this.__onLimeWindowExpose);
                        a.onExpose.add(function() {
                            p(a)
                        });
                        var m = r(this, this.__onLimeWindowFocusIn);
                        a.onFocusIn.add(function() {
                            m(a)
                        });
                        var h = r(this, this.__onLimeWindowFocusOut);
                        a.onFocusOut.add(function() {
                            h(a)
                        });
                        var g = r(this, this.__onLimeWindowFullscreen);
                        a.onFullscreen.add(function() {
                            g(a)
                        });
                        var l = r(this, this.__onLimeKeyDown);
                        f = function(b, c) {
                            l(a, b, c)
                        };
                        a.onKeyDown.add(f);
                        var q = r(this, this.__onLimeKeyUp);
                        f = function(b, c) {
                            q(a, b, c)
                        };
                        a.onKeyUp.add(f);
                        var n = r(this, this.__onLimeWindowLeave);
                        a.onLeave.add(function() {
                            n(a)
                        });
                        var D = r(this, this.__onLimeWindowMinimize);
                        a.onMinimize.add(function() {
                            D(a)
                        });
                        var w =
                            r(this, this.__onLimeMouseDown);
                        f = function(b, c, d) {
                            w(a, b, c, d)
                        };
                        a.onMouseDown.add(f);
                        var x = r(this, this.__onLimeMouseMove);
                        f = function(b, c) {
                            x(a, b, c)
                        };
                        a.onMouseMove.add(f);
                        var B = r(this, this.__onLimeMouseMoveRelative);
                        f = function(b, c) {
                            B(a, b, c)
                        };
                        a.onMouseMoveRelative.add(f);
                        var u = r(this, this.__onLimeMouseUp);
                        f = function(b, c, d) {
                            u(a, b, c, d)
                        };
                        a.onMouseUp.add(f);
                        var v = r(this, this.__onLimeMouseWheel);
                        f = function(b, c, d) {
                            v(a, b, c, d)
                        };
                        a.onMouseWheel.add(f);
                        var y = r(this, this.__onLimeWindowMove);
                        f = function(b, c) {
                            y(a, b, c)
                        };
                        a.onMove.add(f);
                        a.onRender.add(r(this, this.__onLimeRender));
                        a.onRenderContextLost.add(r(this, this.__onLimeRenderContextLost));
                        a.onRenderContextRestored.add(r(this, this.__onLimeRenderContextRestored));
                        var t = r(this, this.__onLimeWindowResize);
                        f = function(b, c) {
                            t(a, b, c)
                        };
                        a.onResize.add(f);
                        var A = r(this, this.__onLimeWindowRestore);
                        a.onRestore.add(function() {
                            A(a)
                        });
                        var J = r(this, this.__onLimeTextEdit);
                        f = function(b, c, d) {
                            J(a, b, c, d)
                        };
                        a.onTextEdit.add(f);
                        var F = r(this, this.__onLimeTextInput);
                        f = function(b) {
                            F(a, b)
                        };
                        a.onTextInput.add(f);
                        this.__onLimeWindowCreate(a)
                    }
                },
                __onLimeGamepadAxisMove: function(a, b, c) {
                    try {
                        Ta.__onGamepadAxisMove(a, b, c)
                    } catch (d) {
                        Ca.lastError = d, a = F.caught(d).unwrap(), this.__handleError(a)
                    }
                },
                __onLimeGamepadButtonDown: function(a, b) {
                    try {
                        Ta.__onGamepadButtonDown(a, b)
                    } catch (c) {
                        Ca.lastError = c, a = F.caught(c).unwrap(), this.__handleError(a)
                    }
                },
                __onLimeGamepadButtonUp: function(a, b) {
                    try {
                        Ta.__onGamepadButtonUp(a, b)
                    } catch (c) {
                        Ca.lastError = c, a = F.caught(c).unwrap(), this.__handleError(a)
                    }
                },
                __onLimeGamepadConnect: function(a) {
                    try {
                        Ta.__onGamepadConnect(a)
                    } catch (k) {
                        Ca.lastError =
                            k;
                        var b = F.caught(k).unwrap();
                        this.__handleError(b)
                    }
                    var c = r(this, this.__onLimeGamepadAxisMove);
                    b = function(b, d) {
                        c(a, b, d)
                    };
                    a.onAxisMove.add(b);
                    var d = r(this, this.__onLimeGamepadButtonDown);
                    b = function(b) {
                        d(a, b)
                    };
                    a.onButtonDown.add(b);
                    var e = r(this, this.__onLimeGamepadButtonUp);
                    b = function(b) {
                        e(a, b)
                    };
                    a.onButtonUp.add(b);
                    var f = r(this, this.__onLimeGamepadDisconnect);
                    a.onDisconnect.add(function() {
                        f(a)
                    })
                },
                __onLimeGamepadDisconnect: function(a) {
                    try {
                        Ta.__onGamepadDisconnect(a)
                    } catch (b) {
                        Ca.lastError = b, a = F.caught(b).unwrap(),
                            this.__handleError(a)
                    }
                },
                __onLimeKeyDown: function(a, b, c) {
                    null != this.window && this.window == a && this.__onKey("keyDown", b, c)
                },
                __onLimeKeyUp: function(a, b, c) {
                    null != this.window && this.window == a && this.__onKey("keyUp", b, c)
                },
                __onLimeModuleExit: function(a) {
                    null != this.window && (a = new sa("deactivate"), this.__broadcastEvent(a))
                },
                __onLimeMouseDown: function(a, b, c, d) {
                    if (null != this.window && this.window == a) {
                        this.__dispatchPendingMouseEvent();
                        switch (d) {
                            case 1:
                                var e = "middleMouseDown";
                                break;
                            case 2:
                                e = "rightMouseDown";
                                break;
                            default:
                                e = "mouseDown"
                        }
                        this.__onMouse(e, b * a.__scale | 0, c * a.__scale | 0, d);
                        this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel()
                    }
                },
                __onLimeMouseMove: function(a, b, c) {
                    null != this.window && this.window == a && (this.__pendingMouseEvent = !0, this.__pendingMouseX = b * a.__scale | 0, this.__pendingMouseY = c * a.__scale | 0)
                },
                __onLimeMouseMoveRelative: function(a, b, c) {},
                __onLimeMouseUp: function(a, b, c, d) {
                    if (null != this.window && this.window == a) {
                        this.__dispatchPendingMouseEvent();
                        switch (d) {
                            case 1:
                                var e = "middleMouseUp";
                                break;
                            case 2:
                                e =
                                    "rightMouseUp";
                                break;
                            default:
                                e = "mouseUp"
                        }
                        this.__onMouse(e, b * a.__scale | 0, c * a.__scale | 0, d);
                        this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel()
                    }
                },
                __onLimeMouseWheel: function(a, b, c, d) {
                    null != this.window && this.window == a && (this.__dispatchPendingMouseEvent(), d == el.PIXELS ? this.__onMouseWheel(b * a.__scale | 0, c * a.__scale | 0, d) : this.__onMouseWheel(b | 0, c | 0, d))
                },
                __onLimeRender: function(a) {
                    if (!this.__rendering) {
                        this.__rendering = !0;
                        this.__broadcastEvent(new sa("enterFrame"));
                        this.__broadcastEvent(new sa("frameConstructed"));
                        this.__broadcastEvent(new sa("exitFrame"));
                        this.__renderable = !0;
                        this.__enterFrame(this.__deltaTime);
                        this.__deltaTime = 0;
                        a = null != this.__renderer && (this.__renderDirty || this.__forceRender);
                        if (this.__invalidated && a) {
                            this.__invalidated = !1;
                            var b = new sa("render");
                            this.__broadcastEvent(b)
                        }
                        this.__update(!1, !0);
                        if (null != this.__renderer) {
                            if (null != this.context3D) {
                                for (b = this.stage3Ds.iterator(); b.hasNext();) {
                                    var c = b.next();
                                    this.context3D.__renderStage3D(c)
                                }
                                this.context3D.__present && (a = !0)
                            }
                            a ? (null == this.context3D &&
                                this.__renderer.__clear(), this.__renderer.__render(this)) : null == this.context3D && this.window.onRender.cancel();
                            null != this.context3D && (this.context3D.__present ? (this.__renderer.__cleared || this.__renderer.__clear(), this.context3D.__present = !1, this.context3D.__cleared = !1) : this.window.onRender.cancel());
                            this.__renderer.__cleared = !1
                        }
                        this.__rendering = !1
                    }
                },
                __onLimeRenderContextLost: function() {
                    this.context3D = this.__renderer = null;
                    for (var a = this.stage3Ds.iterator(); a.hasNext();) a.next().__lostContext()
                },
                __onLimeRenderContextRestored: function(a) {
                    this.__createRenderer();
                    for (a = this.stage3Ds.iterator(); a.hasNext();) a.next().__restoreContext()
                },
                __onLimeTextEdit: function(a, b, c, d) {},
                __onLimeTextInput: function(a, b) {
                    if (null != this.window && this.window == a) {
                        var c = [];
                        null == this.__focus ? this.__getInteractive(c) : this.__focus.__getInteractive(c);
                        b = new Ye("textInput", !0, !0, b);
                        0 < c.length ? (c.reverse(), this.__dispatchStack(b, c)) : this.__dispatchEvent(b);
                        b.isDefaultPrevented() && a.onTextInput.cancel()
                    }
                },
                __onLimeTouchCancel: function(a) {
                    var b = this.__primaryTouch == a;
                    b && (this.__primaryTouch =
                        null);
                    this.__onTouch("touchEnd", a, b)
                },
                __onLimeTouchMove: function(a) {
                    this.__onTouch("touchMove", a, this.__primaryTouch == a)
                },
                __onLimeTouchEnd: function(a) {
                    var b = this.__primaryTouch == a;
                    b && (this.__primaryTouch = null);
                    this.__onTouch("touchEnd", a, b)
                },
                __onLimeTouchStart: function(a) {
                    null == this.__primaryTouch && (this.__primaryTouch = a);
                    this.__onTouch("touchBegin", a, this.__primaryTouch == a)
                },
                __onLimeUpdate: function(a) {
                    this.__deltaTime = a;
                    this.__dispatchPendingMouseEvent()
                },
                __onLimeWindowActivate: function(a) {},
                __onLimeWindowClose: function(a) {
                    this.window ==
                        a && (this.window = null);
                    this.__primaryTouch = null;
                    a = new sa("deactivate");
                    this.__broadcastEvent(a)
                },
                __onLimeWindowCreate: function(a) {
                    null != this.window && this.window == a && null != a.context && this.__createRenderer()
                },
                __onLimeWindowDeactivate: function(a) {},
                __onLimeWindowDropFile: function(a, b) {},
                __onLimeWindowEnter: function(a) {},
                __onLimeWindowExpose: function(a) {
                    null != this.window && this.window == a && (this.__renderDirty = !0)
                },
                __onLimeWindowFocusIn: function(a) {
                    null != this.window && this.window == a && (this.__renderDirty = !0,
                        a = new sa("activate"), this.__broadcastEvent(a), this.set_focus(this.__cacheFocus))
                },
                __onLimeWindowFocusOut: function(a) {
                    null != this.window && this.window == a && (this.__primaryTouch = null, a = new sa("deactivate"), this.__broadcastEvent(a), a = this.get_focus(), this.set_focus(null), this.__cacheFocus = a, eb.__altKey = !1, eb.__commandKey = !1, eb.__ctrlKey = !1, eb.__shiftKey = !1)
                },
                __onLimeWindowFullscreen: function(a) {
                    null != this.window && this.window == a && (this.__resize(), this.__wasFullscreen || (this.__wasFullscreen = !0, 2 == this.__displayState &&
                        (this.__displayState = 1), this.__dispatchEvent(new Pf("fullScreen", !1, !1, !0, !0))))
                },
                __onLimeWindowLeave: function(a) {
                    null == this.window || this.window != a || eb.__buttonDown || (this.__dispatchPendingMouseEvent(), a = new sa("mouseLeave"), this.__dispatchEvent(a))
                },
                __onLimeWindowMinimize: function(a) {},
                __onLimeWindowMove: function(a, b, c) {},
                __onLimeWindowResize: function(a, b, c) {
                    null != this.window && this.window == a && (this.__resize(), this.__wasFullscreen && !a.__fullscreen && (this.__wasFullscreen = !1, this.__displayState = 2, this.__dispatchEvent(new Pf("fullScreen", !1, !1, !1, !0))))
                },
                __onLimeWindowRestore: function(a) {
                    null != this.window && this.window == a && this.__wasFullscreen && !a.__fullscreen && (this.__wasFullscreen = !1, this.__displayState = 2, this.__dispatchEvent(new Pf("fullScreen", !1, !1, !1, !0)))
                },
                __onMouse: function(a, b, c, d) {
                    if (!(2 < d)) {
                        var e = La.__pool.get();
                        e.setTo(b, c);
                        b = this.__displayMatrix;
                        c = b.a * b.d - b.b * b.c;
                        if (0 == c) e.x = -b.tx, e.y = -b.ty;
                        else {
                            var f = 1 / c * (b.c * (b.ty - e.y) + b.d * (e.x - b.tx));
                            e.y = 1 / c * (b.a * (e.y - b.ty) + b.b * (b.tx - e.x));
                            e.x = f
                        }
                        this.__mouseX = e.x;
                        this.__mouseY = e.y;
                        b = [];
                        this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this) ? f = b[b.length - 1] : (f = this, b = [this]);
                        null == f && (f = this);
                        var k = null;
                        switch (a) {
                            case "middleMouseDown":
                                this.__mouseDownMiddle = f;
                                break;
                            case "middleMouseUp":
                                this.__mouseDownMiddle == f && (k = "middleClick");
                                this.__mouseDownMiddle = null;
                                break;
                            case "mouseDown":
                                f.__allowMouseFocus() ? null != this.get_focus() ? (c = new bg("mouseFocusChange", !0, !0, f, !1, 0), this.__dispatchStack(c, b), c.isDefaultPrevented() || this.set_focus(f)) : this.set_focus(f) : this.set_focus(null);
                                this.__mouseDownLeft = f;
                                eb.__buttonDown = !0;
                                break;
                            case "mouseUp":
                                if (null != this.__mouseDownLeft) {
                                    eb.__buttonDown = !1;
                                    if (this.__mouseDownLeft == f) k = "click";
                                    else {
                                        var p = eb.__create("releaseOutside", 1, this.__mouseX, this.__mouseY, new La(this.__mouseX, this.__mouseY), this);
                                        this.__mouseDownLeft.dispatchEvent(p)
                                    }
                                    this.__mouseDownLeft = null
                                }
                                break;
                            case "rightMouseDown":
                                this.__mouseDownRight = f;
                                break;
                            case "rightMouseUp":
                                this.__mouseDownRight == f && (k = "rightClick"), this.__mouseDownRight = null
                        }
                        c = La.__pool.get();
                        p = eb.__create(a,
                            d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f);
                        this.__dispatchStack(p, b);
                        null != k && (p = eb.__create(k, d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f), this.__dispatchStack(p, b), "mouseUp" == a && oa.__cast(f, pa).doubleClickEnabled && (a = la.getTimer(), 500 > a - this.__lastClickTime ? (p = eb.__create("doubleClick", d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f), this.__dispatchStack(p, b), this.__lastClickTime = 0) : this.__lastClickTime = a));
                        if ("auto" == hc.__cursor && !hc.__hidden) {
                            p = null;
                            if (null != this.__mouseDownLeft) p =
                                this.__mouseDownLeft.__getCursor();
                            else
                                for (a = 0; a < b.length;)
                                    if (p = b[a], ++a, p = p.__getCursor(), null != p) {
                                        this.window.set_cursor(Gm.toLimeCursor(p));
                                        break
                                    }
                            null == p && this.window.set_cursor(Mb.ARROW)
                        }
                        f != this.__mouseOverTarget && null != this.__mouseOverTarget && (p = eb.__create("mouseOut", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, c), this.__mouseOverTarget), this.__dispatchStack(p, this.__mouseOutStack));
                        for (a = 0; a < this.__rollOutStack.length;) k = this.__rollOutStack[a], -1 == b.indexOf(k) ? (Y.remove(this.__rollOutStack,
                            k), p = eb.__create("rollOut", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, c), this.__mouseOverTarget), p.bubbles = !1, this.__dispatchTarget(k, p)) : ++a;
                        for (a = 0; a < b.length;) k = b[a], ++a, -1 == this.__rollOutStack.indexOf(k) && null != this.__mouseOverTarget && (k.hasEventListener("rollOver") && (p = eb.__create("rollOver", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, c), k), p.bubbles = !1, this.__dispatchTarget(k, p)), (k.hasEventListener("rollOut") || k.hasEventListener("rollOver")) &&
                            this.__rollOutStack.push(k));
                        f != this.__mouseOverTarget && (null != f && (p = eb.__create("mouseOver", d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f), this.__dispatchStack(p, b)), this.__mouseOverTarget = f, this.__mouseOutStack = b);
                        null != this.__dragObject && (this.__drag(e), d = null, this.__mouseOverTarget == this.__dragObject ? (f = this.__dragObject.mouseEnabled, a = this.__dragObject.mouseChildren, this.__dragObject.mouseEnabled = !1, this.__dragObject.mouseChildren = !1, b = [], this.__hitTest(this.__mouseX, this.__mouseY, !0,
                            b, !0, this) && (d = b[b.length - 1]), this.__dragObject.mouseEnabled = f, this.__dragObject.mouseChildren = a) : this.__mouseOverTarget != this && (d = this.__mouseOverTarget), this.__dragObject.dropTarget = d);
                        La.__pool.release(e);
                        La.__pool.release(c)
                    }
                },
                __onMouseWheel: function(a, b, c) {
                    var d = this.__mouseX,
                        e = this.__mouseY;
                    a = [];
                    if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this)) var f = a[a.length - 1];
                    else f = this, a = [this];
                    null == f && (f = this);
                    c = La.__pool.get();
                    c.setTo(d, e);
                    d = this.__displayMatrix;
                    e = d.a * d.d - d.b * d.c;
                    if (0 == e) c.x = -d.tx, c.y = -d.ty;
                    else {
                        var k = 1 / e * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
                        c.y = 1 / e * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
                        c.x = k
                    }
                    b |= 0;
                    b = eb.__create("mouseWheel", 0, this.__mouseX, this.__mouseY, f.__globalToLocal(c, c), f, b);
                    b.cancelable = !0;
                    this.__dispatchStack(b, a);
                    b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
                    La.__pool.release(c)
                },
                __onTouch: function(a, b, c) {
                    var d = La.__pool.get();
                    d.setTo(Math.round(b.x * this.window.__width * this.window.__scale), Math.round(b.y * this.window.__height * this.window.__scale));
                    var e = this.__displayMatrix,
                        f = e.a * e.d - e.b * e.c;
                    if (0 == f) d.x = -e.tx, d.y = -e.ty;
                    else {
                        var k = 1 / f * (e.c * (e.ty - d.y) + e.d * (d.x - e.tx));
                        d.y = 1 / f * (e.a * (d.y - e.ty) + e.b * (e.tx - d.x));
                        d.x = k
                    }
                    e = d.x;
                    f = d.y;
                    k = [];
                    if (this.__hitTest(e, f, !1, k, !0, this)) var p = k[k.length - 1];
                    else p = this, k = [this];
                    null == p && (p = this);
                    var m = b.id;
                    if (this.__touchData.h.hasOwnProperty(m)) var h = this.__touchData.h[m];
                    else h = $f.__pool.get(), h.reset(), h.touch = b, this.__touchData.h[m] = h;
                    var g = null,
                        l = !1;
                    switch (a) {
                        case "touchBegin":
                            h.touchDownTarget = p;
                            break;
                        case "touchEnd":
                            h.touchDownTarget ==
                                p && (g = "touchTap"), h.touchDownTarget = null, l = !0
                    }
                    var q = La.__pool.get();
                    a = Id.__create(a, null, e, f, p.__globalToLocal(d, q), p);
                    a.touchPointID = m;
                    a.isPrimaryTouchPoint = c;
                    a.pressure = b.pressure;
                    this.__dispatchStack(a, k);
                    null != g && (a = Id.__create(g, null, e, f, p.__globalToLocal(d, q), p), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.pressure = b.pressure, this.__dispatchStack(a, k));
                    g = h.touchOverTarget;
                    p != g && null != g && (a = Id.__create("touchOut", null, e, f, g.__globalToLocal(d, q), g), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.pressure =
                        b.pressure, this.__dispatchTarget(g, a));
                    for (var n = h.rollOutStack, r, D = 0; D < n.length;) r = n[D], -1 == k.indexOf(r) ? (Y.remove(n, r), a = Id.__create("touchRollOut", null, e, f, g.__globalToLocal(d, q), g), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !1, a.pressure = b.pressure, this.__dispatchTarget(r, a)) : ++D;
                    for (D = 0; D < k.length;) r = k[D], ++D, -1 == n.indexOf(r) && (r.hasEventListener("touchRollOver") && (a = Id.__create("touchRollOver", null, e, f, g.__globalToLocal(d, q), r), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !1, a.pressure =
                        b.pressure, this.__dispatchTarget(r, a)), r.hasEventListener("touchRollOut") && n.push(r));
                    p != g && (null != p && (a = Id.__create("touchOver", null, e, f, p.__globalToLocal(d, q), p), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !0, a.pressure = b.pressure, this.__dispatchTarget(p, a)), h.touchOverTarget = p);
                    La.__pool.release(d);
                    La.__pool.release(q);
                    l && (this.__touchData.remove(m), h.reset(), $f.__pool.release(h))
                },
                __registerLimeModule: function(a) {
                    a.onCreateWindow.add(r(this, this.__onLimeCreateWindow));
                    a.onUpdate.add(r(this,
                        this.__onLimeUpdate));
                    a.onExit.add(r(this, this.__onLimeModuleExit), !1, 0);
                    for (a = ac.devices.iterator(); a.hasNext();) {
                        var b = a.next();
                        this.__onLimeGamepadConnect(b)
                    }
                    ac.onConnect.add(r(this, this.__onLimeGamepadConnect));
                    uc.onStart.add(r(this, this.__onLimeTouchStart));
                    uc.onMove.add(r(this, this.__onLimeTouchMove));
                    uc.onEnd.add(r(this, this.__onLimeTouchEnd));
                    uc.onCancel.add(r(this, this.__onLimeTouchCancel))
                },
                __resize: function() {
                    var a = this.stageWidth,
                        b = this.stageHeight,
                        c = this.window.__width * this.window.__scale |
                        0,
                        d = this.window.__height * this.window.__scale | 0;
                    this.__logicalWidth = c;
                    this.__logicalHeight = d;
                    this.__displayMatrix.identity();
                    if (null != this.get_fullScreenSourceRect() && this.window.__fullscreen) {
                        this.stageWidth = this.get_fullScreenSourceRect().width | 0;
                        this.stageHeight = this.get_fullScreenSourceRect().height | 0;
                        var e = c / this.stageWidth,
                            f = d / this.stageHeight;
                        this.__displayMatrix.translate(-this.get_fullScreenSourceRect().x, -this.get_fullScreenSourceRect().y);
                        this.__displayMatrix.scale(e, f);
                        this.__displayRect.setTo(this.get_fullScreenSourceRect().get_left(),
                            this.get_fullScreenSourceRect().get_right(), this.get_fullScreenSourceRect().get_top(), this.get_fullScreenSourceRect().get_bottom())
                    } else {
                        if (0 == this.__logicalWidth && 0 == this.__logicalHeight) this.stageWidth = c, this.stageHeight = d;
                        else {
                            this.stageWidth = this.__logicalWidth;
                            this.stageHeight = this.__logicalHeight;
                            e = Math.min(c / this.stageWidth, d / this.stageHeight);
                            f = Math.round((c - this.stageWidth * e) / 2);
                            var k = Math.round((d - this.stageHeight * e) / 2);
                            this.__displayMatrix.scale(e, e);
                            this.__displayMatrix.translate(f, k)
                        }
                        this.__displayRect.setTo(0,
                            0, this.stageWidth, this.stageHeight)
                    }
                    null != this.context3D && this.context3D.configureBackBuffer(c, d, 0, !0, !0, !0);
                    for (e = this.stage3Ds.iterator(); e.hasNext();) e.next().__resize(c, d);
                    null != this.__renderer && this.__renderer.__resize(c, d);
                    if (this.stageWidth != a || this.stageHeight != b) this.__renderDirty = !0, this.__setTransformDirty(), a = new sa("resize"), this.__dispatchEvent(a)
                },
                __setLogicalSize: function(a, b) {
                    this.__logicalWidth = a;
                    this.__logicalHeight = b;
                    this.__resize()
                },
                __update: function(a, b) {
                    a ? this.__transformDirty &&
                        (wa.prototype.__update.call(this, !0, b), b && (this.__transformDirty = !1)) : this.__transformDirty || this.__renderDirty ? (wa.prototype.__update.call(this, !1, b), b && za.__supportDOM && (this.__wasDirty = !0)) : !this.__renderDirty && this.__wasDirty && (wa.prototype.__update.call(this, !1, b), b && (this.__wasDirty = !1))
                },
                set_color: function(a) {
                    null == a ? (this.__transparent = !0, a = 0) : this.__transparent = !1;
                    this.__color != a && (this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255, this.__colorSplit[1] = ((a & 65280) >>> 8) / 255, this.__colorSplit[2] =
                        (a & 255) / 255, this.__colorString = "#" + K.hex(a & 16777215, 6), this.__renderDirty = !0, this.__color = -16777216 | a & 16777215);
                    return a
                },
                get_focus: function() {
                    return this.__focus
                },
                set_focus: function(a) {
                    if (a != this.__focus) {
                        var b = this.__focus;
                        this.__cacheFocus = this.__focus = a;
                        if (null != b) {
                            var c = new bg("focusOut", !0, !1, a, !1, 0),
                                d = [];
                            b.__getInteractive(d);
                            d.reverse();
                            this.__dispatchStack(c, d)
                        }
                        null != a && (c = new bg("focusIn", !0, !1, b, !1, 0), d = [], a.__getInteractive(d), d.reverse(), this.__dispatchStack(c, d))
                    }
                    return a
                },
                set_frameRate: function(a) {
                    return null !=
                        this.window ? this.window.__backend.setFrameRate(a) : a
                },
                get_fullScreenSourceRect: function() {
                    return null == this.__fullScreenSourceRect ? null : this.__fullScreenSourceRect.clone()
                },
                set_height: function(a) {
                    return this.get_height()
                },
                get_mouseX: function() {
                    return this.__mouseX
                },
                get_mouseY: function() {
                    return this.__mouseY
                },
                get_quality: function() {
                    return this.__quality
                },
                set_rotation: function(a) {
                    return 0
                },
                set_scaleMode: function(a) {
                    return this.__scaleMode = a
                },
                set_scaleX: function(a) {
                    return 0
                },
                set_scaleY: function(a) {
                    return 0
                },
                get_tabEnabled: function() {
                    return !1
                },
                get_tabIndex: function() {
                    return -1
                },
                set_transform: function(a) {
                    return this.get_transform()
                },
                set_width: function(a) {
                    return this.get_width()
                },
                set_x: function(a) {
                    return 0
                },
                set_y: function(a) {
                    return 0
                },
                __class__: Kg,
                __properties__: n(wa.prototype.__properties__, {
                    set_scaleMode: "set_scaleMode",
                    set_frameRate: "set_frameRate",
                    set_color: "set_color",
                    get_quality: "get_quality",
                    get_fullScreenSourceRect: "get_fullScreenSourceRect",
                    set_focus: "set_focus",
                    get_focus: "get_focus"
                })
            });
            var ag =
                function(a) {
                    ua.call(this);
                    this.__stage = a;
                    this.__height = 0;
                    this.__projectionTransform = new Sj;
                    this.__renderTransform = new Sj;
                    this.__y = this.__x = this.__width = 0;
                    this.visible = !0;
                    0 < a.stageWidth && 0 < a.stageHeight && this.__resize(a.stageWidth, a.stageHeight)
                };
            g["openfl.display.Stage3D"] = ag;
            ag.__name__ = "openfl.display.Stage3D";
            ag.__super__ = ua;
            ag.prototype = n(ua.prototype, {
                __createContext: function() {
                    var a = this.__stage,
                        b = a.__renderer;
                    if ("cairo" == b.__type || "canvas" == b.__type) this.__dispatchError();
                    else if ("opengl" ==
                        b.__type) this.context3D = new db(a, a.context3D.__contextState, this), this.__dispatchCreate();
                    else if ("dom" == b.__type) {
                        this.__canvas = window.document.createElement("canvas");
                        this.__canvas.width = a.stageWidth;
                        this.__canvas.height = a.stageHeight;
                        var c = b.__context.attributes;
                        a = Object.prototype.hasOwnProperty.call(c, "background") && null == c.background;
                        b = Object.prototype.hasOwnProperty.call(c, "colorDepth") ? c.colorDepth : 32;
                        c = Object.prototype.hasOwnProperty.call(c, "antialiasing") && 0 < c.antialiasing;
                        this.__webgl = Tl.getContextWebGL(this.__canvas, {
                            alpha: a || 16 < b,
                            antialias: c,
                            depth: !0,
                            premultipliedAlpha: !0,
                            stencil: !0,
                            preserveDrawingBuffer: !1
                        });
                        this.__dispatchError()
                    }
                },
                __dispatchError: function() {
                    this.__contextRequested = !1;
                    this.dispatchEvent(new Hd("error", !1, !1, "Context3D not available"))
                },
                __dispatchCreate: function() {
                    this.__contextRequested && (this.__contextRequested = !1, this.dispatchEvent(new sa("context3DCreate")))
                },
                __lostContext: function() {
                    this.__contextLost = !0;
                    null != this.context3D && (this.context3D.__dispose(), this.__contextRequested = !0)
                },
                __resize: function(a,
                    b) {
                    if (a != this.__width || b != this.__height) null != this.__canvas && (this.__canvas.width = a, this.__canvas.height = b), this.__projectionTransform.copyRawDataFrom(ib.toFloatVector(null, null, null, [2 / (0 < a ? a : 1), 0, 0, 0, 0, -2 / (0 < b ? b : 1), 0, 0, 0, 0, -.001, 0, -1, 1, 0, 1])), this.__renderTransform.identity(), this.__renderTransform.appendTranslation(this.__x, this.__y, 0), this.__renderTransform.append(this.__projectionTransform), this.__width = a, this.__height = b
                },
                __restoreContext: function() {
                    this.__contextLost = !1;
                    this.__createContext()
                },
                get_x: function() {
                    return this.__x
                },
                get_y: function() {
                    return this.__y
                },
                __class__: ag,
                __properties__: {
                    get_y: "get_y",
                    get_x: "get_x"
                }
            });
            var cm = function() {
                this.__totalFrames = this.__framesLoaded = 1;
                this.__currentLabels = [];
                this.__currentFrame = 1;
                this.__lastFrameUpdate = this.__lastFrameScriptEval = -1
            };
            g["openfl.display.Timeline"] = cm;
            cm.__name__ = "openfl.display.Timeline";
            cm.prototype = {
                enterFrame: function(a) {},
                __enterFrame: function(a) {
                    if (this.__isPlaying) {
                        a = this.__getNextFrame(a);
                        if (this.__lastFrameScriptEval == a) return;
                        if (null != this.__frameScripts) {
                            if (a < this.__currentFrame) {
                                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                                this.__currentFrame = 1
                            }
                            if (!this.__evaluateFrameScripts(a)) return
                        } else this.__currentFrame = a
                    }
                    this.__updateSymbol(this.__currentFrame)
                },
                __evaluateFrameScripts: function(a) {
                    if (null == this.__frameScripts) return !0;
                    var b = this.__currentFrame;
                    for (a += 1; b < a;) {
                        var c = b++;
                        if (c != this.__lastFrameScriptEval && (this.__currentFrame = this.__lastFrameScriptEval = c, this.__frameScripts.h.hasOwnProperty(c) && (this.__updateSymbol(c),
                                (0, this.__frameScripts.h[c])(this.__scope), this.__currentFrame != c) || !this.__isPlaying)) return !1
                    }
                    return !0
                },
                __getNextFrame: function(a) {
                    null != this.frameRate ? (this.__timeElapsed += a, a = this.__currentFrame + Math.floor(this.__timeElapsed / this.__frameTime), 1 > a && (a = 1), a > this.__totalFrames && (a = Math.floor((a - 1) % this.__totalFrames) + 1), this.__timeElapsed %= this.__frameTime) : (a = this.__currentFrame + 1, a > this.__totalFrames && (a = 1));
                    return a
                },
                __updateFrameLabel: function() {
                    this.__currentFrameLabel = this.__currentLabel = null;
                    for (var a = 0, b = this.__currentLabels; a < b.length;) {
                        var c = b[a];
                        ++a;
                        if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
                        else if (c.frame == this.__currentFrame) this.__currentFrameLabel = this.__currentLabel = c.name;
                        else break
                    }
                },
                __updateSymbol: function(a) {
                    this.__currentFrame != this.__lastFrameUpdate && (this.__updateFrameLabel(), this.enterFrame(a), this.__lastFrameUpdate = this.__currentFrame)
                },
                __class__: cm
            };
            var gg = function(a, b) {
                Ih.call(this, a, b);
                this.stage = new Kg(this, Object.prototype.hasOwnProperty.call(b.context,
                    "background") ? b.context.background : 16777215);
                if (Object.prototype.hasOwnProperty.call(b, "parameters")) try {
                    this.stage.get_loaderInfo().parameters = b.parameters
                } catch (c) {
                    Ca.lastError = c
                }
                Object.prototype.hasOwnProperty.call(b, "resizable") && !b.resizable && this.stage.__setLogicalSize(b.width, b.height);
                a.addModule(this.stage)
            };
            g["openfl.display.Window"] = gg;
            gg.__name__ = "openfl.display.Window";
            gg.__super__ = Ih;
            gg.prototype = n(Ih.prototype, {
                __class__: gg
            });
            var $c = function() {
                null == $c.empty ? (this.types = [], this.b = [],
                    this.i = [], this.f = [], this.o = [], this.ff = [], this.ii = [], this.copyOnWrite = !0) : this.clear()
            };
            g["openfl.display._internal.DrawCommandBuffer"] = $c;
            $c.__name__ = "openfl.display._internal.DrawCommandBuffer";
            $c.prototype = {
                beginBitmapFill: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ia.BEGIN_BITMAP_FILL);
                    this.o.push(a);
                    this.o.push(b);
                    this.b.push(c);
                    this.b.push(d)
                },
                beginFill: function(a, b) {
                    this.prepareWrite();
                    this.types.push(ia.BEGIN_FILL);
                    this.i.push(a);
                    this.f.push(b)
                },
                beginGradientFill: function(a, b, c,
                    d, e, f, k, p) {
                    this.prepareWrite();
                    this.types.push(ia.BEGIN_GRADIENT_FILL);
                    this.o.push(a);
                    this.ii.push(b);
                    this.ff.push(c);
                    this.ii.push(d);
                    this.o.push(e);
                    this.o.push(f);
                    this.o.push(k);
                    this.f.push(p)
                },
                beginShaderFill: function(a) {
                    this.prepareWrite();
                    this.types.push(ia.BEGIN_SHADER_FILL);
                    this.o.push(a)
                },
                clear: function() {
                    this.types = $c.empty.types;
                    this.b = $c.empty.b;
                    this.i = $c.empty.i;
                    this.f = $c.empty.f;
                    this.o = $c.empty.o;
                    this.ff = $c.empty.ff;
                    this.ii = $c.empty.ii;
                    this.copyOnWrite = !0
                },
                cubicCurveTo: function(a, b, c,
                    d, e, f) {
                    this.prepareWrite();
                    this.types.push(ia.CUBIC_CURVE_TO);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d);
                    this.f.push(e);
                    this.f.push(f)
                },
                curveTo: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ia.CURVE_TO);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d)
                },
                drawCircle: function(a, b, c) {
                    this.prepareWrite();
                    this.types.push(ia.DRAW_CIRCLE);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c)
                },
                drawEllipse: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ia.DRAW_ELLIPSE);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d)
                },
                drawQuads: function(a, b, c) {
                    this.prepareWrite();
                    this.types.push(ia.DRAW_QUADS);
                    this.o.push(a);
                    this.o.push(b);
                    this.o.push(c)
                },
                drawRect: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ia.DRAW_RECT);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d)
                },
                drawRoundRect: function(a, b, c, d, e, f) {
                    this.prepareWrite();
                    this.types.push(ia.DRAW_ROUND_RECT);
                    this.f.push(a);
                    this.f.push(b);
                    this.f.push(c);
                    this.f.push(d);
                    this.f.push(e);
                    this.o.push(f)
                },
                drawTriangles: function(a,
                    b, c, d) {
                    this.prepareWrite();
                    this.types.push(ia.DRAW_TRIANGLES);
                    this.o.push(a);
                    this.o.push(b);
                    this.o.push(c);
                    this.o.push(d)
                },
                endFill: function() {
                    this.prepareWrite();
                    this.types.push(ia.END_FILL)
                },
                lineBitmapStyle: function(a, b, c, d) {
                    this.prepareWrite();
                    this.types.push(ia.LINE_BITMAP_STYLE);
                    this.o.push(a);
                    this.o.push(b);
                    this.b.push(c);
                    this.b.push(d)
                },
                lineGradientStyle: function(a, b, c, d, e, f, k, p) {
                    this.prepareWrite();
                    this.types.push(ia.LINE_GRADIENT_STYLE);
                    this.o.push(a);
                    this.ii.push(b);
                    this.ff.push(c);
                    this.ii.push(d);
                    this.o.push(e);
                    this.o.push(f);
                    this.o.push(k);
                    this.f.push(p)
                },
                lineStyle: function(a, b, c, d, e, f, k, p) {
                    this.prepareWrite();
                    this.types.push(ia.LINE_STYLE);
                    this.o.push(a);
                    this.i.push(b);
                    this.f.push(c);
                    this.b.push(d);
                    this.o.push(e);
                    this.o.push(f);
                    this.o.push(k);
                    this.f.push(p)
                },
                lineTo: function(a, b) {
                    this.prepareWrite();
                    this.types.push(ia.LINE_TO);
                    this.f.push(a);
                    this.f.push(b)
                },
                moveTo: function(a, b) {
                    this.prepareWrite();
                    this.types.push(ia.MOVE_TO);
                    this.f.push(a);
                    this.f.push(b)
                },
                prepareWrite: function() {
                    this.copyOnWrite &&
                        (this.types = this.types.slice(), this.b = this.b.slice(), this.i = this.i.slice(), this.f = this.f.slice(), this.o = this.o.slice(), this.ff = this.ff.slice(), this.ii = this.ii.slice(), this.copyOnWrite = !1)
                },
                overrideBlendMode: function(a) {
                    this.prepareWrite();
                    this.types.push(ia.OVERRIDE_BLEND_MODE);
                    this.o.push(a)
                },
                windingEvenOdd: function() {
                    this.prepareWrite();
                    this.types.push(ia.WINDING_EVEN_ODD)
                },
                windingNonZero: function() {
                    this.prepareWrite();
                    this.types.push(ia.WINDING_NON_ZERO)
                },
                get_length: function() {
                    return this.types.length
                },
                __class__: $c,
                __properties__: {
                    get_length: "get_length"
                }
            };
            var v = function() {};
            g["openfl.display._internal.CanvasGraphics"] = v;
            v.__name__ = "openfl.display._internal.CanvasGraphics";
            v.closePath = function(a) {
                null == a && (a = !1);
                null != v.context.strokeStyle && (a || v.context.closePath(), v.context.stroke(), a && v.context.closePath(), v.context.beginPath())
            };
            v.createBitmapFill = function(a, b, c) {
                Ma.convertToCanvas(a.image);
                v.setSmoothing(c);
                return v.context.createPattern(a.image.get_src(), b ? "repeat" : "no-repeat")
            };
            v.createGradientPattern =
                function(a, b, c, d, e, f, k, p) {
                    var m = null;
                    k = f = null;
                    p = !1;
                    null == e && (e = xa.__pool.get(), p = !0);
                    switch (a) {
                        case 0:
                            f = La.__pool.get();
                            f.setTo(-819.2, 0);
                            m = f.x;
                            a = f.y;
                            f.x = m * e.a + a * e.c + e.tx;
                            f.y = m * e.b + a * e.d + e.ty;
                            k = La.__pool.get();
                            k.setTo(819.2, 0);
                            m = k.x;
                            a = k.y;
                            k.x = m * e.a + a * e.c + e.tx;
                            k.y = m * e.b + a * e.d + e.ty;
                            m = v.context.createLinearGradient(f.x, f.y, k.x, k.y);
                            break;
                        case 1:
                            f = La.__pool.get(), f.setTo(1638.4, 0), m = f.x, a = f.y, f.x = m * e.a + a * e.c + e.tx, f.y = m * e.b + a * e.d + e.ty, m = v.context.createRadialGradient(e.tx, e.ty, 0, e.tx, e.ty, Math.abs((f.x -
                                e.tx) / 2))
                    }
                    for (var h, g, l, q, n = 0, r = b.length; n < r;) q = n++, h = b[q], a = c[q], g = (h & 16711680) >>> 16, l = (h & 65280) >>> 8, h &= 255, q = d[q] / 255, 0 > q && (q = 0), 1 < q && (q = 1), m.addColorStop(q, "rgba(" + g + ", " + l + ", " + h + ", " + a + ")");
                    null != f && La.__pool.release(f);
                    null != k && La.__pool.release(k);
                    p && xa.__pool.release(e);
                    return m
                };
            v.createTempPatternCanvas = function(a, b, c, d) {
                var e = window.document.createElement("canvas"),
                    f = e.getContext("2d");
                e.width = c;
                e.height = d;
                a = a.image.get_src();
                f.fillStyle = f.createPattern(a, b ? "repeat" : "no-repeat");
                f.beginPath();
                f.moveTo(0, 0);
                f.lineTo(0, d);
                f.lineTo(c, d);
                f.lineTo(c, 0);
                f.lineTo(0, 0);
                f.closePath();
                v.hitTesting || f.fill(v.windingRule);
                return e
            };
            v.drawRoundRect = function(a, b, c, d, e, f) {
                null == f && (f = e);
                e *= .5;
                f *= .5;
                e > c / 2 && (e = c / 2);
                f > d / 2 && (f = d / 2);
                c = a + c;
                d = b + d;
                var k = -e + .7071067811865476 * e,
                    p = -e + .41421356237309503 * e,
                    m = -f + .7071067811865476 * f,
                    h = -f + .41421356237309503 * f;
                v.context.moveTo(c, d - f);
                v.context.quadraticCurveTo(c, d + h, c + k, d + m);
                v.context.quadraticCurveTo(c + p, d, c - e, d);
                v.context.lineTo(a + e, d);
                v.context.quadraticCurveTo(a -
                    p, d, a - k, d + m);
                v.context.quadraticCurveTo(a, d + h, a, d - f);
                v.context.lineTo(a, b + f);
                v.context.quadraticCurveTo(a, b - h, a - k, b - m);
                v.context.quadraticCurveTo(a - p, b, a + e, b);
                v.context.lineTo(c - e, b);
                v.context.quadraticCurveTo(c + p, b, c + k, b - m);
                v.context.quadraticCurveTo(c, b - h, c, b + f);
                v.context.lineTo(c, d - f)
            };
            v.endFill = function() {
                v.context.beginPath();
                v.playCommands(v.fillCommands, !1);
                v.fillCommands.clear()
            };
            v.endStroke = function() {
                v.context.beginPath();
                v.playCommands(v.strokeCommands, !0);
                v.context.closePath();
                v.strokeCommands.clear()
            };
            v.hitTest = function(a, b, c) {
                v.bounds = a.__bounds;
                v.graphics = a;
                if (0 == a.__commands.get_length() || null == v.bounds || 0 >= v.bounds.width || 0 >= v.bounds.height) return !1;
                v.hitTesting = !0;
                var d = a.__renderTransform,
                    e = b * d.b + c * d.d + d.ty;
                b = b * d.a + c * d.c + d.tx - (v.bounds.x * d.a + v.bounds.y * d.c + d.tx);
                c = e - (v.bounds.x * d.b + v.bounds.y * d.d + d.ty);
                e = a.__canvas;
                var f = a.__context;
                a.__canvas = v.hitTestCanvas;
                a.__context = v.hitTestContext;
                v.context = a.__context;
                v.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
                v.fillCommands.clear();
                v.strokeCommands.clear();
                v.hasFill = !1;
                v.hasStroke = !1;
                v.bitmapFill = null;
                v.bitmapRepeat = !1;
                v.windingRule = "evenodd";
                d = new Ze(a.__commands);
                for (var k = 0, p = a.__commands.types; k < p.length;) {
                    var m = p[k];
                    ++k;
                    switch (m._hx_index) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                            v.endFill();
                            if (v.hasFill && v.context.isPointInPath(b, c, v.windingRule)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            v.endStroke();
                            if (v.hasStroke && v.context.isPointInStroke(b, c)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            if (m == ia.BEGIN_BITMAP_FILL) {
                                switch (d.prev._hx_index) {
                                    case 0:
                                        d.oPos +=
                                            2;
                                        d.bPos += 2;
                                        break;
                                    case 1:
                                        d.iPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 2:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 3:
                                        d.oPos += 1;
                                        break;
                                    case 4:
                                        d.fPos += 6;
                                        break;
                                    case 5:
                                        d.fPos += 4;
                                        break;
                                    case 6:
                                        d.fPos += 3;
                                        break;
                                    case 7:
                                        d.fPos += 4;
                                        break;
                                    case 8:
                                        d.oPos += 3;
                                        break;
                                    case 9:
                                        d.fPos += 4;
                                        break;
                                    case 10:
                                        d.fPos += 5;
                                        d.oPos += 1;
                                        break;
                                    case 12:
                                        d.oPos += 4;
                                        break;
                                    case 14:
                                        d.oPos += 2;
                                        d.bPos += 2;
                                        break;
                                    case 15:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 16:
                                        d.oPos += 4;
                                        d.iPos += 1;
                                        d.fPos += 2;
                                        d.bPos += 1;
                                        break;
                                    case 17:
                                        d.fPos += 2;
                                        break;
                                    case 18:
                                        d.fPos +=
                                            2;
                                        break;
                                    case 19:
                                        d.oPos += 1;
                                        break;
                                    case 20:
                                        d.oPos += 1
                                }
                                d.prev = ia.BEGIN_BITMAP_FILL;
                                m = d;
                                v.fillCommands.beginBitmapFill(m.buffer.o[m.oPos], m.buffer.o[m.oPos + 1], m.buffer.b[m.bPos], m.buffer.b[m.bPos + 1]);
                                v.strokeCommands.beginBitmapFill(m.buffer.o[m.oPos], m.buffer.o[m.oPos + 1], m.buffer.b[m.bPos], m.buffer.b[m.bPos + 1])
                            } else if (m == ia.BEGIN_GRADIENT_FILL) {
                                switch (d.prev._hx_index) {
                                    case 0:
                                        d.oPos += 2;
                                        d.bPos += 2;
                                        break;
                                    case 1:
                                        d.iPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 2:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 3:
                                        d.oPos +=
                                            1;
                                        break;
                                    case 4:
                                        d.fPos += 6;
                                        break;
                                    case 5:
                                        d.fPos += 4;
                                        break;
                                    case 6:
                                        d.fPos += 3;
                                        break;
                                    case 7:
                                        d.fPos += 4;
                                        break;
                                    case 8:
                                        d.oPos += 3;
                                        break;
                                    case 9:
                                        d.fPos += 4;
                                        break;
                                    case 10:
                                        d.fPos += 5;
                                        d.oPos += 1;
                                        break;
                                    case 12:
                                        d.oPos += 4;
                                        break;
                                    case 14:
                                        d.oPos += 2;
                                        d.bPos += 2;
                                        break;
                                    case 15:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 16:
                                        d.oPos += 4;
                                        d.iPos += 1;
                                        d.fPos += 2;
                                        d.bPos += 1;
                                        break;
                                    case 17:
                                        d.fPos += 2;
                                        break;
                                    case 18:
                                        d.fPos += 2;
                                        break;
                                    case 19:
                                        d.oPos += 1;
                                        break;
                                    case 20:
                                        d.oPos += 1
                                }
                                d.prev = ia.BEGIN_GRADIENT_FILL;
                                m = d;
                                v.fillCommands.beginGradientFill(m.buffer.o[m.oPos],
                                    m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos]);
                                v.strokeCommands.beginGradientFill(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos])
                            } else if (m == ia.BEGIN_SHADER_FILL) {
                                switch (d.prev._hx_index) {
                                    case 0:
                                        d.oPos += 2;
                                        d.bPos += 2;
                                        break;
                                    case 1:
                                        d.iPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 2:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 3:
                                        d.oPos += 1;
                                        break;
                                    case 4:
                                        d.fPos += 6;
                                        break;
                                    case 5:
                                        d.fPos += 4;
                                        break;
                                    case 6:
                                        d.fPos += 3;
                                        break;
                                    case 7:
                                        d.fPos += 4;
                                        break;
                                    case 8:
                                        d.oPos += 3;
                                        break;
                                    case 9:
                                        d.fPos += 4;
                                        break;
                                    case 10:
                                        d.fPos += 5;
                                        d.oPos += 1;
                                        break;
                                    case 12:
                                        d.oPos += 4;
                                        break;
                                    case 14:
                                        d.oPos += 2;
                                        d.bPos += 2;
                                        break;
                                    case 15:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 16:
                                        d.oPos += 4;
                                        d.iPos += 1;
                                        d.fPos += 2;
                                        d.bPos += 1;
                                        break;
                                    case 17:
                                        d.fPos += 2;
                                        break;
                                    case 18:
                                        d.fPos += 2;
                                        break;
                                    case 19:
                                        d.oPos += 1;
                                        break;
                                    case 20:
                                        d.oPos += 1
                                }
                                d.prev = ia.BEGIN_SHADER_FILL;
                                m = d;
                                v.fillCommands.beginShaderFill(m.buffer.o[m.oPos]);
                                v.strokeCommands.beginShaderFill(m.buffer.o[m.oPos])
                            } else {
                                switch (d.prev._hx_index) {
                                    case 0:
                                        d.oPos += 2;
                                        d.bPos += 2;
                                        break;
                                    case 1:
                                        d.iPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 2:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 3:
                                        d.oPos += 1;
                                        break;
                                    case 4:
                                        d.fPos += 6;
                                        break;
                                    case 5:
                                        d.fPos += 4;
                                        break;
                                    case 6:
                                        d.fPos += 3;
                                        break;
                                    case 7:
                                        d.fPos += 4;
                                        break;
                                    case 8:
                                        d.oPos += 3;
                                        break;
                                    case 9:
                                        d.fPos += 4;
                                        break;
                                    case 10:
                                        d.fPos += 5;
                                        d.oPos += 1;
                                        break;
                                    case 12:
                                        d.oPos += 4;
                                        break;
                                    case 14:
                                        d.oPos += 2;
                                        d.bPos +=
                                            2;
                                        break;
                                    case 15:
                                        d.oPos += 4;
                                        d.iiPos += 2;
                                        d.ffPos += 1;
                                        d.fPos += 1;
                                        break;
                                    case 16:
                                        d.oPos += 4;
                                        d.iPos += 1;
                                        d.fPos += 2;
                                        d.bPos += 1;
                                        break;
                                    case 17:
                                        d.fPos += 2;
                                        break;
                                    case 18:
                                        d.fPos += 2;
                                        break;
                                    case 19:
                                        d.oPos += 1;
                                        break;
                                    case 20:
                                        d.oPos += 1
                                }
                                d.prev = ia.BEGIN_FILL;
                                m = d;
                                v.fillCommands.beginFill(m.buffer.i[m.iPos], 1);
                                v.strokeCommands.beginFill(m.buffer.i[m.iPos], 1)
                            }
                            break;
                        case 4:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos +=
                                        1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.CUBIC_CURVE_TO;
                            m = d;
                            v.fillCommands.cubicCurveTo(m.buffer.f[m.fPos],
                                m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.f[m.fPos + 5]);
                            v.strokeCommands.cubicCurveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.f[m.fPos + 5]);
                            break;
                        case 5:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos +=
                                        3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.CURVE_TO;
                            m = d;
                            v.fillCommands.curveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                            v.strokeCommands.curveTo(m.buffer.f[m.fPos],
                                m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                            break;
                        case 6:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos +=
                                        2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.DRAW_CIRCLE;
                            m = d;
                            v.fillCommands.drawCircle(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2]);
                            v.strokeCommands.drawCircle(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2]);
                            break;
                        case 7:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos +=
                                        2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.DRAW_ELLIPSE;
                            m = d;
                            v.fillCommands.drawEllipse(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                            v.strokeCommands.drawEllipse(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                            break;
                        case 9:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos +=
                                        3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.DRAW_RECT;
                            m = d;
                            v.fillCommands.drawRect(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                            v.strokeCommands.drawRect(m.buffer.f[m.fPos], m.buffer.f[m.fPos +
                                1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                            break;
                        case 10:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos +=
                                        1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.DRAW_ROUND_RECT;
                            m = d;
                            v.fillCommands.drawRoundRect(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.o[m.oPos]);
                            v.strokeCommands.drawRoundRect(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.o[m.oPos]);
                            break;
                        case 13:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos +=
                                        2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos +=
                                        2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.END_FILL;
                            v.endFill();
                            if (v.hasFill && v.context.isPointInPath(b, c, v.windingRule)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            v.endStroke();
                            if (v.hasStroke && v.context.isPointInStroke(b, c)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
                            v.hasFill = !1;
                            v.bitmapFill = null;
                            break;
                        case 14:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos +=
                                        1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.LINE_BITMAP_STYLE;
                            m = d;
                            v.strokeCommands.lineBitmapStyle(m.buffer.o[m.oPos],
                                m.buffer.o[m.oPos + 1], m.buffer.b[m.bPos], m.buffer.b[m.bPos + 1]);
                            break;
                        case 15:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos +=
                                        2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.LINE_GRADIENT_STYLE;
                            m = d;
                            v.strokeCommands.lineGradientStyle(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos]);
                            break;
                        case 16:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos +=
                                        1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos +=
                                        1
                            }
                            d.prev = ia.LINE_STYLE;
                            m = d;
                            v.strokeCommands.lineStyle(m.buffer.o[m.oPos], m.buffer.i[m.iPos], 1, m.buffer.b[m.bPos], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos + 1]);
                            break;
                        case 17:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos +=
                                        4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.LINE_TO;
                            m = d;
                            v.fillCommands.lineTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                            v.strokeCommands.lineTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                            break;
                        case 18:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos +=
                                        2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos +=
                                        2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = ia.MOVE_TO;
                            m = d;
                            v.fillCommands.moveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                            v.strokeCommands.moveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                            break;
                        case 21:
                            v.windingRule = "evenodd";
                            break;
                        case 22:
                            v.windingRule = "nonzero";
                            break;
                        default:
                            switch (d.prev._hx_index) {
                                case 0:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 1:
                                    d.iPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 2:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 3:
                                    d.oPos += 1;
                                    break;
                                case 4:
                                    d.fPos += 6;
                                    break;
                                case 5:
                                    d.fPos += 4;
                                    break;
                                case 6:
                                    d.fPos += 3;
                                    break;
                                case 7:
                                    d.fPos += 4;
                                    break;
                                case 8:
                                    d.oPos += 3;
                                    break;
                                case 9:
                                    d.fPos += 4;
                                    break;
                                case 10:
                                    d.fPos += 5;
                                    d.oPos += 1;
                                    break;
                                case 12:
                                    d.oPos += 4;
                                    break;
                                case 14:
                                    d.oPos += 2;
                                    d.bPos += 2;
                                    break;
                                case 15:
                                    d.oPos += 4;
                                    d.iiPos += 2;
                                    d.ffPos += 1;
                                    d.fPos += 1;
                                    break;
                                case 16:
                                    d.oPos += 4;
                                    d.iPos += 1;
                                    d.fPos += 2;
                                    d.bPos += 1;
                                    break;
                                case 17:
                                    d.fPos += 2;
                                    break;
                                case 18:
                                    d.fPos += 2;
                                    break;
                                case 19:
                                    d.oPos += 1;
                                    break;
                                case 20:
                                    d.oPos += 1
                            }
                            d.prev = m
                    }
                }
                k = !1;
                0 < v.fillCommands.get_length() && v.endFill();
                v.hasFill && v.context.isPointInPath(b, c, v.windingRule) && (k = !0);
                0 < v.strokeCommands.get_length() && v.endStroke();
                v.hasStroke && v.context.isPointInStroke(b, c) && (k = !0);
                d.destroy();
                a.__canvas = e;
                a.__context = f;
                return k
            };
            v.normalizeUVT = function(a, b) {
                null == b && (b = !1);
                for (var c = -Infinity, d, e = a.get_length(), f = 1, k = e + 1; f < k;) d = f++, b && 0 == d % 3 || (d = a.get(d - 1), c < d && (c = d));
                if (!b) return {
                    max: c,
                    uvt: a
                };
                var p = ib.toFloatVector(null);
                f = 1;
                for (k = e + 1; f < k;) d = f++, b && 0 == d % 3 || p.push(a.get(d - 1));
                return {
                    max: c,
                    uvt: p
                }
            };
            v.playCommands = function(a, b) {
                null == b && (b = !1);
                v.bounds = v.graphics.__bounds;
                var c =
                    v.bounds.x,
                    d = v.bounds.y,
                    e = 0,
                    f = 0,
                    k = !1,
                    p = 0,
                    m = 0,
                    h = !1;
                v.windingRule = "evenodd";
                v.setSmoothing(!0);
                var g = !1,
                    l = new Ze(a),
                    q, n, r, D = null,
                    w = null,
                    x = 0,
                    B = a.types;
                a: for (; x < B.length;) {
                    var u = B[x];
                    ++x;
                    switch (u._hx_index) {
                        case 0:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos +=
                                        4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.BEGIN_BITMAP_FILL;
                            var y = l;
                            v.bitmapFill = y.buffer.o[y.oPos];
                            v.context.fillStyle = v.createBitmapFill(y.buffer.o[y.oPos], y.buffer.b[y.bPos], y.buffer.b[y.bPos + 1]);
                            v.hasFill = !0;
                            null != y.buffer.o[y.oPos +
                                1] ? (v.pendingMatrix = y.buffer.o[y.oPos + 1], v.inversePendingMatrix = y.buffer.o[y.oPos + 1].clone(), v.inversePendingMatrix.invert()) : (v.pendingMatrix = null, v.inversePendingMatrix = null);
                            break;
                        case 1:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos +=
                                        5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.BEGIN_FILL;
                            var t = l;
                            if (.005 > t.buffer.f[t.fPos]) v.hasFill = !1;
                            else {
                                if (1 == t.buffer.f[t.fPos]) {
                                    var A = K.hex(t.buffer.i[t.iPos] & 16777215, 6);
                                    v.context.fillStyle = "#" + A
                                } else {
                                    var J = (t.buffer.i[t.iPos] & 16711680) >>> 16;
                                    var F = (t.buffer.i[t.iPos] &
                                        65280) >>> 8;
                                    var L = t.buffer.i[t.iPos] & 255;
                                    v.context.fillStyle = "rgba(" + J + ", " + F + ", " + L + ", " + t.buffer.f[t.fPos] + ")"
                                }
                                v.bitmapFill = null;
                                v.setSmoothing(!0);
                                v.hasFill = !0
                            }
                            break;
                        case 2:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos +=
                                        1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.BEGIN_GRADIENT_FILL;
                            var ma = l;
                            v.context.fillStyle = v.createGradientPattern(ma.buffer.o[ma.oPos], ma.buffer.ii[ma.iiPos], ma.buffer.ff[ma.ffPos], ma.buffer.ii[ma.iiPos + 1], ma.buffer.o[ma.oPos + 1], ma.buffer.o[ma.oPos + 2], ma.buffer.o[ma.oPos +
                                3], ma.buffer.f[ma.fPos]);
                            v.bitmapFill = null;
                            v.setSmoothing(!0);
                            v.hasFill = !0;
                            break;
                        case 3:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos +=
                                        4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.BEGIN_SHADER_FILL;
                            var ya = l,
                                da = ya.buffer.o[ya.oPos];
                            0 < da.inputCount && (v.bitmapFill = da.inputs[0], v.context.fillStyle = v.createBitmapFill(v.bitmapFill, 0 != da.inputWrap[0], 5 != da.inputFilter[0]), v.hasFill = !0, v.pendingMatrix = null, v.inversePendingMatrix = null);
                            break;
                        case 4:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos +=
                                        2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.CUBIC_CURVE_TO;
                            var G = l;
                            g = !0;
                            v.context.bezierCurveTo(G.buffer.f[G.fPos] - c, G.buffer.f[G.fPos + 1] - d, G.buffer.f[G.fPos + 2] - c, G.buffer.f[G.fPos + 3] - d, G.buffer.f[G.fPos + 4] - c, G.buffer.f[G.fPos + 5] - d);
                            break;
                        case 5:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos +=
                                        4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.CURVE_TO;
                            var C = l;
                            g = !0;
                            v.context.quadraticCurveTo(C.buffer.f[C.fPos] - c, C.buffer.f[C.fPos + 1] - d, C.buffer.f[C.fPos + 2] - c, C.buffer.f[C.fPos + 3] - d);
                            break;
                        case 6:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos +=
                                        1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.DRAW_CIRCLE;
                            var z = l;
                            g = !0;
                            v.context.moveTo(z.buffer.f[z.fPos] - c + z.buffer.f[z.fPos + 2], z.buffer.f[z.fPos + 1] - d);
                            v.context.arc(z.buffer.f[z.fPos] - c, z.buffer.f[z.fPos + 1] - d, z.buffer.f[z.fPos + 2], 0, 2 * Math.PI, !0);
                            break;
                        case 7:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos +=
                                        6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.DRAW_ELLIPSE;
                            var H = l;
                            g = !0;
                            var E = H.buffer.f[H.fPos];
                            var I = H.buffer.f[H.fPos + 1];
                            var ob = H.buffer.f[H.fPos + 2];
                            var Ra = H.buffer.f[H.fPos + 3];
                            E -= c;
                            I -= d;
                            var M = ob / 2 * .5522848;
                            var N = Ra / 2 * .5522848;
                            var gb = E + ob;
                            var Q = I + Ra;
                            var R = E + ob / 2;
                            var O = I + Ra / 2;
                            v.context.moveTo(E, O);
                            v.context.bezierCurveTo(E, O - N, R - M, I, R, I);
                            v.context.bezierCurveTo(R + M, I, gb, O - N, gb, O);
                            v.context.bezierCurveTo(gb, O + N, R + M, Q, R, Q);
                            v.context.bezierCurveTo(R - M, Q, E, O + N, E, O);
                            break;
                        case 8:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.DRAW_QUADS;
                            var S = l,
                                ca = S.buffer.o[S.oPos],
                                U = S.buffer.o[S.oPos + 1],
                                qb = S.buffer.o[S.oPos + 2],
                                Y = null != U,
                                T = !1,
                                V = !1,
                                W = Y ? U.get_length() : Math.floor(ca.get_length() / 4);
                            if (0 == W) return;
                            null != qb && (qb.get_length() >= 6 * W ? V = T = !0 : qb.get_length() >= 4 * W ? T = !0 : qb.get_length() >= 2 * W && (V = !0));
                            var nb = fa.__pool.get(),
                                xb = xa.__pool.get(),
                                ha = v.graphics.__renderTransform;
                            v.context.save();
                            for (var Z = 0, hb = W; Z < hb;) {
                                var Ba = Z++;
                                var Ga = Y ? 4 * U.get(Ba) : 4 * Ba;
                                if (!(0 > Ga || (nb.setTo(ca.get(Ga), ca.get(Ga + 1), ca.get(Ga + 2), ca.get(Ga + 3)), 0 >= nb.width || 0 >= nb.height))) {
                                    if (T && V) {
                                        var X = 6 * Ba;
                                        xb.setTo(qb.get(X),
                                            qb.get(X + 1), qb.get(X + 2), qb.get(X + 3), qb.get(X + 4), qb.get(X + 5))
                                    } else T ? (X = 4 * Ba, xb.setTo(qb.get(X), qb.get(X + 1), qb.get(X + 2), qb.get(X + 3), nb.x, nb.y)) : V ? (X = 2 * Ba, xb.tx = qb.get(X), xb.ty = qb.get(X + 1)) : (xb.tx = nb.x, xb.ty = nb.y);
                                    xb.tx += e - c;
                                    xb.ty += f - d;
                                    xb.concat(ha);
                                    v.context.setTransform(xb.a, xb.b, xb.c, xb.d, xb.tx, xb.ty);
                                    null != v.bitmapFill ? v.context.drawImage(v.bitmapFill.image.get_src(), nb.x, nb.y, nb.width, nb.height, 0, 0, nb.width, nb.height) : v.context.fillRect(0, 0, nb.width, nb.height)
                                }
                            }
                            fa.__pool.release(nb);
                            xa.__pool.release(xb);
                            v.context.restore();
                            break;
                        case 9:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos +=
                                        4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.DRAW_RECT;
                            var P = l;
                            var ba = !1;
                            if (null != v.bitmapFill && !v.hitTesting) {
                                var aa = r = n = q = 0;
                                var ea = !0;
                                if (null != v.pendingMatrix)
                                    if (0 != v.pendingMatrix.b || 0 != v.pendingMatrix.c) ea = !1;
                                    else {
                                        null == D && (D = La.__pool.get());
                                        null == w && (w = La.__pool.get());
                                        D.setTo(P.buffer.f[P.fPos], P.buffer.f[P.fPos + 1]);
                                        var va = v.inversePendingMatrix,
                                            ua = D.x,
                                            oa = D.y;
                                        D.x = ua * va.a + oa * va.c + va.tx;
                                        D.y = ua * va.b + oa *
                                            va.d + va.ty;
                                        w.setTo(P.buffer.f[P.fPos] + P.buffer.f[P.fPos + 2], P.buffer.f[P.fPos + 1] + P.buffer.f[P.fPos + 3]);
                                        var la = v.inversePendingMatrix,
                                            pa = w.x,
                                            ka = w.y;
                                        w.x = pa * la.a + ka * la.c + la.tx;
                                        w.y = pa * la.b + ka * la.d + la.ty;
                                        q = D.y;
                                        aa = D.x;
                                        r = w.y;
                                        n = w.x
                                    }
                                else q = P.buffer.f[P.fPos + 1], aa = P.buffer.f[P.fPos], r = P.buffer.f[P.fPos + 1] + P.buffer.f[P.fPos + 3], n = P.buffer.f[P.fPos] + P.buffer.f[P.fPos + 2];
                                ea && 0 <= q && 0 <= aa && n <= v.bitmapFill.width && r <= v.bitmapFill.height && (ba = !0, v.hitTesting || v.context.drawImage(v.bitmapFill.image.get_src(), aa, q, n - aa,
                                    r - q, P.buffer.f[P.fPos] - c, P.buffer.f[P.fPos + 1] - d, P.buffer.f[P.fPos + 2], P.buffer.f[P.fPos + 3]))
                            }
                            ba || (g = !0, v.context.rect(P.buffer.f[P.fPos] - c, P.buffer.f[P.fPos + 1] - d, P.buffer.f[P.fPos + 2], P.buffer.f[P.fPos + 3]));
                            break;
                        case 10:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.DRAW_ROUND_RECT;
                            var na = l;
                            g = !0;
                            v.drawRoundRect(na.buffer.f[na.fPos] - c, na.buffer.f[na.fPos + 1] - d, na.buffer.f[na.fPos + 2], na.buffer.f[na.fPos + 3], na.buffer.f[na.fPos + 4], na.buffer.o[na.oPos]);
                            break;
                        case 12:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos +=
                                        2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.DRAW_TRIANGLES;
                            var qa = l,
                                ra = qa.buffer.o[qa.oPos],
                                ta = qa.buffer.o[qa.oPos + 1],
                                Yb = qa.buffer.o[qa.oPos + 2],
                                sa = null,
                                wa = null == v.bitmapFill;
                            if (wa && null != Yb) break a;
                            if (!wa) {
                                if (null == Yb) {
                                    Yb = ib.toFloatVector(null);
                                    for (var za = 0, Da = ra.get_length() / 2 | 0; za < Da;) {
                                        var Ca = za++;
                                        Yb.push(ra.get(2 * Ca) - c / v.bitmapFill.width);
                                        Yb.push(ra.get(2 * Ca + 1) - d / v.bitmapFill.height)
                                    }
                                }
                                var Ia = Yb.get_length() != ra.get_length(),
                                    Fa = v.normalizeUVT(Yb, Ia),
                                    Ma = Fa.max;
                                Yb = Fa.uvt;
                                sa = 1 < Ma ? v.createTempPatternCanvas(v.bitmapFill, v.bitmapRepeat, v.bounds.width | 0, v.bounds.height | 0) : v.createTempPatternCanvas(v.bitmapFill, v.bitmapRepeat, v.bitmapFill.width, v.bitmapFill.height)
                            }
                            for (var Aa = 0, Na = ta.get_length(), Kc, rb, Ha, Ja, Ka, Qa, Sa, je, Va, vb, Pa, Oa, Ta, Ua, mb, $a, ab, Wa, Xa, Ya, Eb, bb, Kb, pb, db, jb, kb, lb; Aa < Na;) {
                                Kc = Aa;
                                rb = Aa + 1;
                                Ha = Aa + 2;
                                Ja = 2 * ta.get(Kc);
                                Ka = 2 * ta.get(Kc) + 1;
                                Qa = 2 * ta.get(rb);
                                Sa = 2 * ta.get(rb) + 1;
                                je = 2 * ta.get(Ha);
                                Va = 2 * ta.get(Ha) + 1;
                                vb = ra.get(Ja) - c;
                                Pa = ra.get(Ka) - d;
                                Oa = ra.get(Qa) - c;
                                Ta = ra.get(Sa) - d;
                                Ua = ra.get(je) - c;
                                mb = ra.get(Va) - d;
                                switch (qa.buffer.o[qa.oPos + 3]) {
                                    case 0:
                                        if (0 > (Oa - vb) * (mb - Pa) - (Ta - Pa) * (Ua - vb)) {
                                            Aa += 3;
                                            continue
                                        }
                                        break;
                                    case 2:
                                        if (!(0 > (Oa - vb) * (mb - Pa) - (Ta - Pa) * (Ua - vb))) {
                                            Aa += 3;
                                            continue
                                        }
                                }
                                wa ? (v.context.beginPath(), v.context.moveTo(vb, Pa), v.context.lineTo(Oa, Ta), v.context.lineTo(Ua, mb), v.context.closePath(), v.hitTesting || v.context.fill(v.windingRule), Aa += 3) : ($a = Yb.get(Ja) * sa.width, Wa = Yb.get(Qa) * sa.width, Ya = Yb.get(je) * sa.width, ab = Yb.get(Ka) * sa.height,
                                    Xa = Yb.get(Sa) * sa.height, Eb = Yb.get(Va) * sa.height, bb = $a * (Eb - Xa) - Wa * Eb + Ya * Xa + (Wa - Ya) * ab, 0 == bb ? (Aa += 3, v.context.restore()) : (v.context.save(), v.context.beginPath(), v.context.moveTo(vb, Pa), v.context.lineTo(Oa, Ta), v.context.lineTo(Ua, mb), v.context.closePath(), v.context.clip(), Kb = -(ab * (Ua - Oa) - Xa * Ua + Eb * Oa + (Xa - Eb) * vb) / bb, pb = (Xa * mb + ab * (Ta - mb) - Eb * Ta + (Eb - Xa) * Pa) / bb, db = ($a * (Ua - Oa) - Wa * Ua + Ya * Oa + (Wa - Ya) * vb) / bb, jb = -(Wa * mb + $a * (Ta - mb) - Ya * Ta + (Ya - Wa) * Pa) / bb, kb = ($a * (Eb * Oa - Xa * Ua) + ab * (Wa * Ua - Ya * Oa) + (Ya * Xa - Wa * Eb) * vb) / bb, lb =
                                        ($a * (Eb * Ta - Xa * mb) + ab * (Wa * mb - Ya * Ta) + (Ya * Xa - Wa * Eb) * Pa) / bb, v.context.transform(Kb, pb, db, jb, kb, lb), v.context.drawImage(sa, 0, 0, sa.width, sa.height), v.context.restore(), Aa += 3))
                            }
                            break;
                        case 14:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos +=
                                        5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.LINE_BITMAP_STYLE;
                            var eb = l;
                            b && v.hasStroke && v.closePath();
                            v.context.moveTo(e - c, f - d);
                            v.context.strokeStyle = v.createBitmapFill(eb.buffer.o[eb.oPos], eb.buffer.b[eb.bPos], eb.buffer.b[eb.bPos + 1]);
                            v.hasStroke = !0;
                            break;
                        case 15:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos +=
                                        2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos +=
                                        2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.LINE_GRADIENT_STYLE;
                            var Za = l;
                            b && v.hasStroke && v.closePath();
                            v.context.moveTo(e - c, f - d);
                            v.context.strokeStyle = v.createGradientPattern(Za.buffer.o[Za.oPos], Za.buffer.ii[Za.iiPos], Za.buffer.ff[Za.ffPos], Za.buffer.ii[Za.iiPos + 1], Za.buffer.o[Za.oPos + 1], Za.buffer.o[Za.oPos + 2], Za.buffer.o[Za.oPos + 3], Za.buffer.f[Za.fPos]);
                            v.setSmoothing(!0);
                            v.hasStroke = !0;
                            break;
                        case 16:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos +=
                                        1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos +=
                                        1
                            }
                            l.prev = ia.LINE_STYLE;
                            var Ea = l;
                            b && v.hasStroke && v.closePath(!0);
                            v.context.moveTo(e - c, f - d);
                            if (null == Ea.buffer.o[Ea.oPos]) v.hasStroke = !1;
                            else {
                                v.context.lineWidth = 0 < Ea.buffer.o[Ea.oPos] ? Ea.buffer.o[Ea.oPos] : 1;
                                var sb = null == Ea.buffer.o[Ea.oPos + 3] ? "round" : Fm.toString(Ea.buffer.o[Ea.oPos + 3]).toLowerCase();
                                v.context.lineJoin = sb;
                                var tb = null == Ea.buffer.o[Ea.oPos + 2] ? "round" : 0 == Ea.buffer.o[Ea.oPos + 2] ? "butt" : Em.toString(Ea.buffer.o[Ea.oPos + 2]).toLowerCase();
                                v.context.lineCap = tb;
                                v.context.miterLimit = Ea.buffer.f[Ea.fPos +
                                    1];
                                if (1 == Ea.buffer.f[Ea.fPos]) {
                                    var ub = K.hex(Ea.buffer.i[Ea.iPos] & 16777215, 6);
                                    v.context.strokeStyle = "#" + ub
                                } else J = (Ea.buffer.i[Ea.iPos] & 16711680) >>> 16, F = (Ea.buffer.i[Ea.iPos] & 65280) >>> 8, L = Ea.buffer.i[Ea.iPos] & 255, v.context.strokeStyle = "rgba(" + J + ", " + F + ", " + L + ", " + Ea.buffer.f[Ea.fPos] + ")";
                                v.setSmoothing(!0);
                                v.hasStroke = !0
                            }
                            break;
                        case 17:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.LINE_TO;
                            var fb = l;
                            g = !0;
                            v.context.lineTo(fb.buffer.f[fb.fPos] - c,
                                fb.buffer.f[fb.fPos + 1] - d);
                            e = fb.buffer.f[fb.fPos];
                            f = fb.buffer.f[fb.fPos + 1];
                            e == p && f == m && (k = !0);
                            break;
                        case 18:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos += 1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = ia.MOVE_TO;
                            var cb = l;
                            v.context.moveTo(cb.buffer.f[cb.fPos] - c, cb.buffer.f[cb.fPos + 1] - d);
                            e = cb.buffer.f[cb.fPos];
                            f = cb.buffer.f[cb.fPos + 1];
                            h && cb.buffer.f[cb.fPos] != p && cb.buffer.f[cb.fPos + 1] != m && (k = !0);
                            p = cb.buffer.f[cb.fPos];
                            m = cb.buffer.f[cb.fPos + 1];
                            h = !0;
                            break;
                        case 21:
                            v.windingRule = "evenodd";
                            break;
                        case 22:
                            v.windingRule =
                                "nonzero";
                            break;
                        default:
                            switch (l.prev._hx_index) {
                                case 0:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 1:
                                    l.iPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 2:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 3:
                                    l.oPos += 1;
                                    break;
                                case 4:
                                    l.fPos += 6;
                                    break;
                                case 5:
                                    l.fPos += 4;
                                    break;
                                case 6:
                                    l.fPos += 3;
                                    break;
                                case 7:
                                    l.fPos += 4;
                                    break;
                                case 8:
                                    l.oPos += 3;
                                    break;
                                case 9:
                                    l.fPos += 4;
                                    break;
                                case 10:
                                    l.fPos += 5;
                                    l.oPos += 1;
                                    break;
                                case 12:
                                    l.oPos += 4;
                                    break;
                                case 14:
                                    l.oPos += 2;
                                    l.bPos += 2;
                                    break;
                                case 15:
                                    l.oPos += 4;
                                    l.iiPos += 2;
                                    l.ffPos += 1;
                                    l.fPos += 1;
                                    break;
                                case 16:
                                    l.oPos += 4;
                                    l.iPos +=
                                        1;
                                    l.fPos += 2;
                                    l.bPos += 1;
                                    break;
                                case 17:
                                    l.fPos += 2;
                                    break;
                                case 18:
                                    l.fPos += 2;
                                    break;
                                case 19:
                                    l.oPos += 1;
                                    break;
                                case 20:
                                    l.oPos += 1
                            }
                            l.prev = u
                    }
                }
                null != D && La.__pool.release(D);
                null != w && La.__pool.release(w);
                l.destroy();
                g && (b && v.hasStroke && (v.hasFill && k ? (v.context.lineTo(p - c, m - d), v.closePath(!1)) : k && e == p && f == m && v.closePath(!1), v.hitTesting || v.context.stroke()), b || !v.hasFill && null == v.bitmapFill || (v.context.translate(-v.bounds.x, -v.bounds.y), null != v.pendingMatrix ? (v.context.transform(v.pendingMatrix.a, v.pendingMatrix.b,
                    v.pendingMatrix.c, v.pendingMatrix.d, v.pendingMatrix.tx, v.pendingMatrix.ty), v.hitTesting || v.context.fill(v.windingRule), v.context.transform(v.inversePendingMatrix.a, v.inversePendingMatrix.b, v.inversePendingMatrix.c, v.inversePendingMatrix.d, v.inversePendingMatrix.tx, v.inversePendingMatrix.ty)) : v.hitTesting || v.context.fill(v.windingRule), v.context.translate(v.bounds.x, v.bounds.y), v.context.closePath()))
            };
            v.render = function(a, b) {
                a.__update(b.__worldTransform);
                if (a.__softwareDirty) {
                    v.hitTesting = !1;
                    v.graphics =
                        a;
                    v.allowSmoothing = b.__allowSmoothing;
                    v.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
                    v.bounds = a.__bounds;
                    var c = a.__width,
                        d = a.__height;
                    if (!a.__visible || 0 == a.__commands.get_length() || null == v.bounds || 1 > c || 1 > d) a.__canvas = null, a.__context = null, a.__bitmap = null;
                    else {
                        null == a.__canvas && (a.__canvas = window.document.createElement("canvas"), a.__context = a.__canvas.getContext("2d"));
                        v.context = a.__context;
                        var e = a.__renderTransform,
                            f = a.__canvas,
                            k = b.pixelRatio,
                            p = c * k | 0,
                            m = d * k | 0;
                        b.__setBlendModeContext(v.context, 10);
                        b.__isDOM ? (f.width == p && f.height == m ? v.context.clearRect(0, 0, p, m) : (f.width = p, f.height = m, f.style.width = c + "px", f.style.height = d + "px"), c = a.__renderTransform, v.context.setTransform(c.a * k, c.b * k, c.c * k, c.d * k, c.tx * k, c.ty * k)) : (f.width == p && f.height == m ? (v.context.closePath(), v.context.setTransform(1, 0, 0, 1, 0, 0), v.context.clearRect(0, 0, p, m)) : (f.width = c, f.height = d), v.context.setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty));
                        v.fillCommands.clear();
                        v.strokeCommands.clear();
                        v.hasFill = !1;
                        v.hasStroke = !1;
                        v.bitmapFill = null;
                        k = v.bitmapRepeat = !1;
                        d = c = 0;
                        v.windingRule = "evenodd";
                        e = new Ze(a.__commands);
                        f = 0;
                        for (p = a.__commands.types; f < p.length;) switch (m = p[f], ++f, m._hx_index) {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                v.endFill();
                                v.endStroke();
                                if (m == ia.BEGIN_BITMAP_FILL) {
                                    switch (e.prev._hx_index) {
                                        case 0:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 1:
                                            e.iPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 2:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 3:
                                            e.oPos += 1;
                                            break;
                                        case 4:
                                            e.fPos += 6;
                                            break;
                                        case 5:
                                            e.fPos += 4;
                                            break;
                                        case 6:
                                            e.fPos += 3;
                                            break;
                                        case 7:
                                            e.fPos += 4;
                                            break;
                                        case 8:
                                            e.oPos += 3;
                                            break;
                                        case 9:
                                            e.fPos +=
                                                4;
                                            break;
                                        case 10:
                                            e.fPos += 5;
                                            e.oPos += 1;
                                            break;
                                        case 12:
                                            e.oPos += 4;
                                            break;
                                        case 14:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 15:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 16:
                                            e.oPos += 4;
                                            e.iPos += 1;
                                            e.fPos += 2;
                                            e.bPos += 1;
                                            break;
                                        case 17:
                                            e.fPos += 2;
                                            break;
                                        case 18:
                                            e.fPos += 2;
                                            break;
                                        case 19:
                                            e.oPos += 1;
                                            break;
                                        case 20:
                                            e.oPos += 1
                                    }
                                    e.prev = ia.BEGIN_BITMAP_FILL;
                                    m = e;
                                    v.fillCommands.beginBitmapFill(m.buffer.o[m.oPos], m.buffer.o[m.oPos + 1], m.buffer.b[m.bPos], m.buffer.b[m.bPos + 1]);
                                    v.strokeCommands.beginBitmapFill(m.buffer.o[m.oPos], m.buffer.o[m.oPos +
                                        1], m.buffer.b[m.bPos], m.buffer.b[m.bPos + 1])
                                } else if (m == ia.BEGIN_GRADIENT_FILL) {
                                    switch (e.prev._hx_index) {
                                        case 0:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 1:
                                            e.iPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 2:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 3:
                                            e.oPos += 1;
                                            break;
                                        case 4:
                                            e.fPos += 6;
                                            break;
                                        case 5:
                                            e.fPos += 4;
                                            break;
                                        case 6:
                                            e.fPos += 3;
                                            break;
                                        case 7:
                                            e.fPos += 4;
                                            break;
                                        case 8:
                                            e.oPos += 3;
                                            break;
                                        case 9:
                                            e.fPos += 4;
                                            break;
                                        case 10:
                                            e.fPos += 5;
                                            e.oPos += 1;
                                            break;
                                        case 12:
                                            e.oPos += 4;
                                            break;
                                        case 14:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 15:
                                            e.oPos += 4;
                                            e.iiPos +=
                                                2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 16:
                                            e.oPos += 4;
                                            e.iPos += 1;
                                            e.fPos += 2;
                                            e.bPos += 1;
                                            break;
                                        case 17:
                                            e.fPos += 2;
                                            break;
                                        case 18:
                                            e.fPos += 2;
                                            break;
                                        case 19:
                                            e.oPos += 1;
                                            break;
                                        case 20:
                                            e.oPos += 1
                                    }
                                    e.prev = ia.BEGIN_GRADIENT_FILL;
                                    m = e;
                                    v.fillCommands.beginGradientFill(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos]);
                                    v.strokeCommands.beginGradientFill(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos],
                                        m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos])
                                } else if (m == ia.BEGIN_SHADER_FILL) {
                                    switch (e.prev._hx_index) {
                                        case 0:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 1:
                                            e.iPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 2:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 3:
                                            e.oPos += 1;
                                            break;
                                        case 4:
                                            e.fPos += 6;
                                            break;
                                        case 5:
                                            e.fPos += 4;
                                            break;
                                        case 6:
                                            e.fPos += 3;
                                            break;
                                        case 7:
                                            e.fPos += 4;
                                            break;
                                        case 8:
                                            e.oPos += 3;
                                            break;
                                        case 9:
                                            e.fPos += 4;
                                            break;
                                        case 10:
                                            e.fPos += 5;
                                            e.oPos += 1;
                                            break;
                                        case 12:
                                            e.oPos += 4;
                                            break;
                                        case 14:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 15:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 16:
                                            e.oPos += 4;
                                            e.iPos += 1;
                                            e.fPos += 2;
                                            e.bPos += 1;
                                            break;
                                        case 17:
                                            e.fPos += 2;
                                            break;
                                        case 18:
                                            e.fPos += 2;
                                            break;
                                        case 19:
                                            e.oPos += 1;
                                            break;
                                        case 20:
                                            e.oPos += 1
                                    }
                                    e.prev = ia.BEGIN_SHADER_FILL;
                                    m = e;
                                    v.fillCommands.beginShaderFill(m.buffer.o[m.oPos]);
                                    v.strokeCommands.beginShaderFill(m.buffer.o[m.oPos])
                                } else {
                                    switch (e.prev._hx_index) {
                                        case 0:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 1:
                                            e.iPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 2:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos +=
                                                1;
                                            e.fPos += 1;
                                            break;
                                        case 3:
                                            e.oPos += 1;
                                            break;
                                        case 4:
                                            e.fPos += 6;
                                            break;
                                        case 5:
                                            e.fPos += 4;
                                            break;
                                        case 6:
                                            e.fPos += 3;
                                            break;
                                        case 7:
                                            e.fPos += 4;
                                            break;
                                        case 8:
                                            e.oPos += 3;
                                            break;
                                        case 9:
                                            e.fPos += 4;
                                            break;
                                        case 10:
                                            e.fPos += 5;
                                            e.oPos += 1;
                                            break;
                                        case 12:
                                            e.oPos += 4;
                                            break;
                                        case 14:
                                            e.oPos += 2;
                                            e.bPos += 2;
                                            break;
                                        case 15:
                                            e.oPos += 4;
                                            e.iiPos += 2;
                                            e.ffPos += 1;
                                            e.fPos += 1;
                                            break;
                                        case 16:
                                            e.oPos += 4;
                                            e.iPos += 1;
                                            e.fPos += 2;
                                            e.bPos += 1;
                                            break;
                                        case 17:
                                            e.fPos += 2;
                                            break;
                                        case 18:
                                            e.fPos += 2;
                                            break;
                                        case 19:
                                            e.oPos += 1;
                                            break;
                                        case 20:
                                            e.oPos += 1
                                    }
                                    e.prev = ia.BEGIN_FILL;
                                    m = e;
                                    v.fillCommands.beginFill(m.buffer.i[m.iPos],
                                        m.buffer.f[m.fPos]);
                                    v.strokeCommands.beginFill(m.buffer.i[m.iPos], m.buffer.f[m.fPos])
                                }
                                break;
                            case 4:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos +=
                                            4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.CUBIC_CURVE_TO;
                                m = e;
                                v.fillCommands.cubicCurveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.f[m.fPos + 5]);
                                k ? v.strokeCommands.cubicCurveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4],
                                    m.buffer.f[m.fPos + 5]) : (c = m.buffer.f[m.fPos + 4], d = m.buffer.f[m.fPos + 5]);
                                break;
                            case 5:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos +=
                                            2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.CURVE_TO;
                                m = e;
                                v.fillCommands.curveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                                k ? v.strokeCommands.curveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]) : (c = m.buffer.f[m.fPos + 2], d = m.buffer.f[m.fPos + 3]);
                                break;
                            case 6:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos +=
                                            2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos +=
                                            2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.DRAW_CIRCLE;
                                m = e;
                                v.fillCommands.drawCircle(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2]);
                                k && v.strokeCommands.drawCircle(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2]);
                                break;
                            case 7:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.DRAW_ELLIPSE;
                                m = e;
                                v.fillCommands.drawEllipse(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                                k && v.strokeCommands.drawEllipse(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                                break;
                            case 8:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos +=
                                            2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.DRAW_QUADS;
                                m = e;
                                v.fillCommands.drawQuads(m.buffer.o[m.oPos], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2]);
                                break;
                            case 9:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos +=
                                            1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.DRAW_RECT;
                                m = e;
                                v.fillCommands.drawRect(m.buffer.f[m.fPos],
                                    m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                                k && v.strokeCommands.drawRect(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3]);
                                break;
                            case 10:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos +=
                                            5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.DRAW_ROUND_RECT;
                                m = e;
                                v.fillCommands.drawRoundRect(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.o[m.oPos]);
                                k && v.strokeCommands.drawRoundRect(m.buffer.f[m.fPos],
                                    m.buffer.f[m.fPos + 1], m.buffer.f[m.fPos + 2], m.buffer.f[m.fPos + 3], m.buffer.f[m.fPos + 4], m.buffer.o[m.oPos]);
                                break;
                            case 12:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.DRAW_TRIANGLES;
                                m = e;
                                v.fillCommands.drawTriangles(m.buffer.o[m.oPos], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3]);
                                break;
                            case 13:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.END_FILL;
                                v.endFill();
                                v.endStroke();
                                k = v.hasFill = !1;
                                v.bitmapFill = null;
                                d = c = 0;
                                break;
                            case 14:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.LINE_BITMAP_STYLE;
                                m = e;
                                k || 0 == c && 0 == d || (v.strokeCommands.moveTo(c, d), d = c = 0);
                                k = !0;
                                v.strokeCommands.lineBitmapStyle(m.buffer.o[m.oPos], m.buffer.o[m.oPos + 1], m.buffer.b[m.bPos], m.buffer.b[m.bPos + 1]);
                                break;
                            case 15:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos +=
                                            1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.LINE_GRADIENT_STYLE;
                                m = e;
                                k || 0 ==
                                    c && 0 == d || (v.strokeCommands.moveTo(c, d), d = c = 0);
                                k = !0;
                                v.strokeCommands.lineGradientStyle(m.buffer.o[m.oPos], m.buffer.ii[m.iiPos], m.buffer.ff[m.ffPos], m.buffer.ii[m.iiPos + 1], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos]);
                                break;
                            case 16:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.LINE_STYLE;
                                m = e;
                                k || null == m.buffer.o[m.oPos] || 0 == c && 0 == d || (v.strokeCommands.moveTo(c, d), d = c = 0);
                                k = null != m.buffer.o[m.oPos];
                                v.strokeCommands.lineStyle(m.buffer.o[m.oPos],
                                    m.buffer.i[m.iPos], m.buffer.f[m.fPos], m.buffer.b[m.bPos], m.buffer.o[m.oPos + 1], m.buffer.o[m.oPos + 2], m.buffer.o[m.oPos + 3], m.buffer.f[m.fPos + 1]);
                                break;
                            case 17:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos +=
                                            4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.LINE_TO;
                                m = e;
                                v.fillCommands.lineTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                                k ? v.strokeCommands.lineTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]) : (c = m.buffer.f[m.fPos], d = m.buffer.f[m.fPos + 1]);
                                break;
                            case 18:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos +=
                                            2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.MOVE_TO;
                                m = e;
                                v.fillCommands.moveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]);
                                k ? v.strokeCommands.moveTo(m.buffer.f[m.fPos], m.buffer.f[m.fPos + 1]) : (c = m.buffer.f[m.fPos], d = m.buffer.f[m.fPos + 1]);
                                break;
                            case 19:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos +=
                                            4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.OVERRIDE_BLEND_MODE;
                                m = e;
                                b.__setBlendModeContext(v.context, m.buffer.o[m.oPos]);
                                break;
                            case 21:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos +=
                                            1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.WINDING_EVEN_ODD;
                                v.fillCommands.windingEvenOdd();
                                v.windingRule = "evenodd";
                                break;
                            case 22:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos +=
                                            2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = ia.WINDING_NON_ZERO;
                                v.fillCommands.windingNonZero();
                                v.windingRule = "nonzero";
                                break;
                            default:
                                switch (e.prev._hx_index) {
                                    case 0:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 1:
                                        e.iPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 2:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 3:
                                        e.oPos += 1;
                                        break;
                                    case 4:
                                        e.fPos += 6;
                                        break;
                                    case 5:
                                        e.fPos += 4;
                                        break;
                                    case 6:
                                        e.fPos += 3;
                                        break;
                                    case 7:
                                        e.fPos += 4;
                                        break;
                                    case 8:
                                        e.oPos += 3;
                                        break;
                                    case 9:
                                        e.fPos += 4;
                                        break;
                                    case 10:
                                        e.fPos += 5;
                                        e.oPos += 1;
                                        break;
                                    case 12:
                                        e.oPos += 4;
                                        break;
                                    case 14:
                                        e.oPos += 2;
                                        e.bPos += 2;
                                        break;
                                    case 15:
                                        e.oPos += 4;
                                        e.iiPos += 2;
                                        e.ffPos += 1;
                                        e.fPos += 1;
                                        break;
                                    case 16:
                                        e.oPos += 4;
                                        e.iPos += 1;
                                        e.fPos += 2;
                                        e.bPos += 1;
                                        break;
                                    case 17:
                                        e.fPos += 2;
                                        break;
                                    case 18:
                                        e.fPos += 2;
                                        break;
                                    case 19:
                                        e.oPos += 1;
                                        break;
                                    case 20:
                                        e.oPos += 1
                                }
                                e.prev = m
                        }
                        0 < v.fillCommands.get_length() && v.endFill();
                        0 < v.strokeCommands.get_length() && v.endStroke();
                        e.destroy();
                        a.__bitmap = H.fromCanvas(a.__canvas)
                    }
                    a.__softwareDirty = !1;
                    a.set___dirty(!1)
                }
            };
            v.renderMask = function(a, b) {
                if (0 != a.__commands.get_length()) {
                    v.context = b.context;
                    b = new Ze(a.__commands);
                    var c = 0;
                    for (a = a.__commands.types; c < a.length;) {
                        var d = a[c];
                        ++c;
                        switch (d._hx_index) {
                            case 4:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos +=
                                            3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.CUBIC_CURVE_TO;
                                d = b;
                                v.context.bezierCurveTo(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0, d.buffer.f[d.fPos + 2] - 0, d.buffer.f[d.fPos +
                                    3] - 0, d.buffer.f[d.fPos + 4] - 0, d.buffer.f[d.fPos + 5] - 0);
                                break;
                            case 5:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos +=
                                            1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.CURVE_TO;
                                d = b;
                                v.context.quadraticCurveTo(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0, d.buffer.f[d.fPos + 2] - 0, d.buffer.f[d.fPos + 3] - 0);
                                break;
                            case 6:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.DRAW_CIRCLE;
                                d = b;
                                v.context.arc(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0, d.buffer.f[d.fPos +
                                    2], 0, 2 * Math.PI, !0);
                                break;
                            case 7:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos +=
                                            4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.DRAW_ELLIPSE;
                                var e = b;
                                d = e.buffer.f[e.fPos];
                                var f = e.buffer.f[e.fPos + 1];
                                var k = e.buffer.f[e.fPos + 2];
                                var p = e.buffer.f[e.fPos + 3];
                                d -= 0;
                                f -= 0;
                                e = k / 2 * .5522848;
                                var m = p / 2 * .5522848;
                                var h = d + k;
                                var g = f + p;
                                k = d + k / 2;
                                p = f + p / 2;
                                v.context.moveTo(d, p);
                                v.context.bezierCurveTo(d, p - m, k - e, f, k, f);
                                v.context.bezierCurveTo(k + e, f, h, p - m, h, p);
                                v.context.bezierCurveTo(h, p + m, k + e, g, k, g);
                                v.context.bezierCurveTo(k -
                                    e, g, d, p + m, d, p);
                                break;
                            case 9:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.DRAW_RECT;
                                d = b;
                                v.context.beginPath();
                                v.context.rect(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0, d.buffer.f[d.fPos + 2], d.buffer.f[d.fPos + 3]);
                                v.context.closePath();
                                break;
                            case 10:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.DRAW_ROUND_RECT;
                                d = b;
                                v.drawRoundRect(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0, d.buffer.f[d.fPos +
                                    2], d.buffer.f[d.fPos + 3], d.buffer.f[d.fPos + 4], d.buffer.o[d.oPos]);
                                break;
                            case 17:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos +=
                                            2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.LINE_TO;
                                d = b;
                                v.context.lineTo(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0);
                                break;
                            case 18:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos +=
                                            3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = ia.MOVE_TO;
                                d = b;
                                v.context.moveTo(d.buffer.f[d.fPos] - 0, d.buffer.f[d.fPos + 1] - 0);
                                break;
                            default:
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos +=
                                            2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos +=
                                            2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = d
                        }
                    }
                    b.destroy()
                }
            };
            v.setSmoothing = function(a) {
                v.allowSmoothing || (a = !1);
                v.context.imageSmoothingEnabled != a && (v.context.imageSmoothingEnabled = a)
            };
            var N = function() {};
            g["openfl.display._internal.CanvasTextField"] = N;
            N.__name__ = "openfl.display._internal.CanvasTextField";
            var nf = function() {};
            g["openfl.display._internal.Context3DBitmap"] = nf;
            nf.__name__ = "openfl.display._internal.Context3DBitmap";
            nf.render = function(a, b) {
                if (a.__renderable && !(0 >= a.__worldAlpha) &&
                    null != a.__bitmapData && a.__bitmapData.__isValid) {
                    var c = b.__context3D;
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    var d = b.__initDisplayShader(a.__worldShader);
                    b.setShader(d);
                    b.applyBitmapData(a.__bitmapData, b.__allowSmoothing && (a.smoothing || b.__upscaled));
                    b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
                    b.applyAlpha(a.__worldAlpha);
                    b.applyColorTransform(a.__worldColorTransform);
                    b.updateShader();
                    var e = a.__bitmapData.getVertexBuffer(c);
                    null != d.__position && c.setVertexBufferAt(d.__position.index,
                        e, 0, 3);
                    null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
                    d = a.__bitmapData.getIndexBuffer(c);
                    c.drawTriangles(d);
                    b.__clearShader();
                    b.__popMaskObject(a)
                }
            };
            nf.renderMask = function(a, b) {
                if (null != a.__bitmapData && a.__bitmapData.__isValid) {
                    var c = b.__context3D,
                        d = b.__maskShader;
                    b.setShader(d);
                    b.applyBitmapData(Jg.opaqueBitmapData, !0);
                    b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
                    b.updateShader();
                    var e = a.__bitmapData.getVertexBuffer(c);
                    null != d.__position && c.setVertexBufferAt(d.__position.index,
                        e, 0, 3);
                    null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
                    a = a.__bitmapData.getIndexBuffer(c);
                    c.drawTriangles(a);
                    b.__clearShader()
                }
            };
            var Tj = function(a, b, c, d) {
                this.context3D = a;
                this.elementType = b;
                this.dataPerVertex = d;
                this.vertexCount = this.indexCount = 0;
                this.resize(c)
            };
            g["openfl.display._internal.Context3DBuffer"] = Tj;
            Tj.__name__ = "openfl.display._internal.Context3DBuffer";
            Tj.prototype = {
                flushVertexBufferData: function() {
                    this.vertexBufferData.length > this.vertexCount && (this.vertexCount =
                        this.vertexBufferData.length, this.vertexBuffer = this.context3D.createVertexBuffer(this.vertexCount, this.dataPerVertex, 0));
                    this.vertexBuffer.uploadFromTypedArray(si.toArrayBufferView(this.vertexBufferData))
                },
                resize: function(a, b) {
                    null == b && (b = -1);
                    this.elementCount = a; - 1 == b && (b = this.dataPerVertex);
                    b != this.dataPerVertex && (this.vertexBuffer = null, this.vertexCount = 0, this.dataPerVertex = b);
                    var c = 0;
                    switch (this.elementType._hx_index) {
                        case 0:
                            c = 4 * a;
                            break;
                        case 1:
                            c = 3 * a;
                            break;
                        case 2:
                            c = 3 * a
                    }
                    b *= c;
                    if (null == this.vertexBufferData) {
                        var d =
                            c = null,
                            e = null,
                            f = null,
                            k = null;
                        this.vertexBufferData = b = null != b ? new Float32Array(b) : null != c ? new Float32Array(c) : null != d ? new Float32Array(d.__array) : null != e ? new Float32Array(e) : null != f ? null == k ? new Float32Array(f, 0) : new Float32Array(f, 0, k) : null
                    } else b > this.vertexBufferData.length && (a = this.vertexBufferData, k = f = e = d = c = null, this.vertexBufferData = b = null != b ? new Float32Array(b) : null != c ? new Float32Array(c) : null != d ? new Float32Array(d.__array) : null != e ? new Float32Array(e) : null != f ? null == k ? new Float32Array(f, 0) : new Float32Array(f,
                        0, k) : null, this.vertexBufferData.set(a))
                },
                __class__: Tj
            };
            var Hm = w["openfl.display._internal.Context3DElementType"] = {
                    __ename__: "openfl.display._internal.Context3DElementType",
                    __constructs__: ["QUADS", "TRIANGLES", "TRIANGLE_INDICES"],
                    QUADS: {
                        _hx_index: 0,
                        __enum__: "openfl.display._internal.Context3DElementType",
                        toString: h
                    },
                    TRIANGLES: {
                        _hx_index: 1,
                        __enum__: "openfl.display._internal.Context3DElementType",
                        toString: h
                    },
                    TRIANGLE_INDICES: {
                        _hx_index: 2,
                        __enum__: "openfl.display._internal.Context3DElementType",
                        toString: h
                    }
                },
                Ab = function() {};
            g["openfl.display._internal.Context3DGraphics"] = Ab;
            Ab.__name__ = "openfl.display._internal.Context3DGraphics";
            Ab.buildBuffer = function(a, b) {
                var c, d = c = 0,
                    e = 0,
                    f = new Ze(a.__commands);
                b = b.__context3D;
                for (var k = fa.__pool.get(), p = xa.__pool.get(), m = null, h = 0, g = a.__commands.types; h < g.length;) {
                    var l = g[h];
                    ++h;
                    switch (l._hx_index) {
                        case 0:
                            switch (f.prev._hx_index) {
                                case 0:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 1:
                                    f.iPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 2:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 3:
                                    f.oPos += 1;
                                    break;
                                case 4:
                                    f.fPos += 6;
                                    break;
                                case 5:
                                    f.fPos += 4;
                                    break;
                                case 6:
                                    f.fPos += 3;
                                    break;
                                case 7:
                                    f.fPos += 4;
                                    break;
                                case 8:
                                    f.oPos += 3;
                                    break;
                                case 9:
                                    f.fPos += 4;
                                    break;
                                case 10:
                                    f.fPos += 5;
                                    f.oPos += 1;
                                    break;
                                case 12:
                                    f.oPos += 4;
                                    break;
                                case 14:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 15:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 16:
                                    f.oPos += 4;
                                    f.iPos += 1;
                                    f.fPos += 2;
                                    f.bPos += 1;
                                    break;
                                case 17:
                                    f.fPos += 2;
                                    break;
                                case 18:
                                    f.fPos += 2;
                                    break;
                                case 19:
                                    f.oPos += 1;
                                    break;
                                case 20:
                                    f.oPos += 1
                            }
                            f.prev = ia.BEGIN_BITMAP_FILL;
                            m = f;
                            m = m.buffer.o[m.oPos];
                            break;
                        case 1:
                            m =
                                null;
                            switch (f.prev._hx_index) {
                                case 0:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 1:
                                    f.iPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 2:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 3:
                                    f.oPos += 1;
                                    break;
                                case 4:
                                    f.fPos += 6;
                                    break;
                                case 5:
                                    f.fPos += 4;
                                    break;
                                case 6:
                                    f.fPos += 3;
                                    break;
                                case 7:
                                    f.fPos += 4;
                                    break;
                                case 8:
                                    f.oPos += 3;
                                    break;
                                case 9:
                                    f.fPos += 4;
                                    break;
                                case 10:
                                    f.fPos += 5;
                                    f.oPos += 1;
                                    break;
                                case 12:
                                    f.oPos += 4;
                                    break;
                                case 14:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 15:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 16:
                                    f.oPos += 4;
                                    f.iPos += 1;
                                    f.fPos += 2;
                                    f.bPos +=
                                        1;
                                    break;
                                case 17:
                                    f.fPos += 2;
                                    break;
                                case 18:
                                    f.fPos += 2;
                                    break;
                                case 19:
                                    f.oPos += 1;
                                    break;
                                case 20:
                                    f.oPos += 1
                            }
                            f.prev = l;
                            break;
                        case 3:
                            switch (f.prev._hx_index) {
                                case 0:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 1:
                                    f.iPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 2:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 3:
                                    f.oPos += 1;
                                    break;
                                case 4:
                                    f.fPos += 6;
                                    break;
                                case 5:
                                    f.fPos += 4;
                                    break;
                                case 6:
                                    f.fPos += 3;
                                    break;
                                case 7:
                                    f.fPos += 4;
                                    break;
                                case 8:
                                    f.oPos += 3;
                                    break;
                                case 9:
                                    f.fPos += 4;
                                    break;
                                case 10:
                                    f.fPos += 5;
                                    f.oPos += 1;
                                    break;
                                case 12:
                                    f.oPos += 4;
                                    break;
                                case 14:
                                    f.oPos +=
                                        2;
                                    f.bPos += 2;
                                    break;
                                case 15:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 16:
                                    f.oPos += 4;
                                    f.iPos += 1;
                                    f.fPos += 2;
                                    f.bPos += 1;
                                    break;
                                case 17:
                                    f.fPos += 2;
                                    break;
                                case 18:
                                    f.fPos += 2;
                                    break;
                                case 19:
                                    f.oPos += 1;
                                    break;
                                case 20:
                                    f.oPos += 1
                            }
                            f.prev = ia.BEGIN_SHADER_FILL;
                            m = f;
                            l = m.buffer.o[m.oPos];
                            m = null;
                            if (null != l)
                                for (var q = 0, n = l.inputCount; q < n;) {
                                    var r = q++;
                                    if ("bitmap" == l.inputRefs[r].name) {
                                        m = l.inputs[r];
                                        break
                                    }
                                }
                            break;
                        case 8:
                            if (null != m) {
                                switch (f.prev._hx_index) {
                                    case 0:
                                        f.oPos += 2;
                                        f.bPos += 2;
                                        break;
                                    case 1:
                                        f.iPos += 1;
                                        f.fPos += 1;
                                        break;
                                    case 2:
                                        f.oPos += 4;
                                        f.iiPos += 2;
                                        f.ffPos += 1;
                                        f.fPos += 1;
                                        break;
                                    case 3:
                                        f.oPos += 1;
                                        break;
                                    case 4:
                                        f.fPos += 6;
                                        break;
                                    case 5:
                                        f.fPos += 4;
                                        break;
                                    case 6:
                                        f.fPos += 3;
                                        break;
                                    case 7:
                                        f.fPos += 4;
                                        break;
                                    case 8:
                                        f.oPos += 3;
                                        break;
                                    case 9:
                                        f.fPos += 4;
                                        break;
                                    case 10:
                                        f.fPos += 5;
                                        f.oPos += 1;
                                        break;
                                    case 12:
                                        f.oPos += 4;
                                        break;
                                    case 14:
                                        f.oPos += 2;
                                        f.bPos += 2;
                                        break;
                                    case 15:
                                        f.oPos += 4;
                                        f.iiPos += 2;
                                        f.ffPos += 1;
                                        f.fPos += 1;
                                        break;
                                    case 16:
                                        f.oPos += 4;
                                        f.iPos += 1;
                                        f.fPos += 2;
                                        f.bPos += 1;
                                        break;
                                    case 17:
                                        f.fPos += 2;
                                        break;
                                    case 18:
                                        f.fPos += 2;
                                        break;
                                    case 19:
                                        f.oPos += 1;
                                        break;
                                    case 20:
                                        f.oPos +=
                                            1
                                }
                                f.prev = ia.DRAW_QUADS;
                                n = f;
                                l = n.buffer.o[n.oPos];
                                q = n.buffer.o[n.oPos + 1];
                                n = n.buffer.o[n.oPos + 2];
                                r = null != q;
                                var D = !1,
                                    w = !1,
                                    x = r ? q.get_length() : Math.floor(l.get_length() / 4);
                                if (0 == x) return;
                                null != n && (n.get_length() >= 6 * x ? w = D = !0 : n.get_length() >= 4 * x ? D = !0 : n.get_length() >= 2 * x && (w = !0));
                                null == a.__quadBuffer ? a.__quadBuffer = new Tj(b, Hm.QUADS, x, 4) : a.__quadBuffer.resize(c + x, 4);
                                for (var B, u, v, y, t, A, J, F, L, ma, G, ya, da, C, z = a.__quadBuffer.vertexBufferData, H = m.width, E = m.height, I = 0, ob = x; I < ob;) y = I++, B = 16 * (c + y), u = r ? 4 * q.get(y) :
                                    4 * y, 0 > u || (k.setTo(l.get(u), l.get(u + 1), l.get(u + 2), l.get(u + 3)), u = k.width, v = k.height, 0 >= u || 0 >= v || (D && w ? (y *= 6, p.setTo(n.get(y), n.get(y + 1), n.get(y + 2), n.get(y + 3), n.get(y + 4), n.get(y + 5))) : D ? (y *= 4, p.setTo(n.get(y), n.get(y + 1), n.get(y + 2), n.get(y + 3), k.x, k.y)) : w ? (y *= 2, p.tx = n.get(y), p.ty = n.get(y + 1)) : (p.tx = k.x, p.ty = k.y), y = k.x / H, t = k.y / E, A = k.get_right() / H, J = k.get_bottom() / E, F = 0 * p.a + 0 * p.c + p.tx, L = 0 * p.b + 0 * p.d + p.ty, ma = u * p.a + 0 * p.c + p.tx, G = u * p.b + 0 * p.d + p.ty, ya = 0 * p.a + v * p.c + p.tx, da = 0 * p.b + v * p.d + p.ty, C = u * p.a + v * p.c + p.tx, u = u * p.b +
                                        v * p.d + p.ty, z[B] = F, z[B + 1] = L, z[B + 2] = y, z[B + 3] = t, z[B + 4] = ma, z[B + 4 + 1] = G, z[B + 4 + 2] = A, z[B + 4 + 3] = t, z[B + 8] = ya, z[B + 8 + 1] = da, z[B + 8 + 2] = y, z[B + 8 + 3] = J, z[B + 12] = C, z[B + 12 + 1] = u, z[B + 12 + 2] = A, z[B + 12 + 3] = J));
                                c += x
                            }
                            break;
                        case 12:
                            switch (f.prev._hx_index) {
                                case 0:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 1:
                                    f.iPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 2:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 3:
                                    f.oPos += 1;
                                    break;
                                case 4:
                                    f.fPos += 6;
                                    break;
                                case 5:
                                    f.fPos += 4;
                                    break;
                                case 6:
                                    f.fPos += 3;
                                    break;
                                case 7:
                                    f.fPos += 4;
                                    break;
                                case 8:
                                    f.oPos += 3;
                                    break;
                                case 9:
                                    f.fPos += 4;
                                    break;
                                case 10:
                                    f.fPos += 5;
                                    f.oPos += 1;
                                    break;
                                case 12:
                                    f.oPos += 4;
                                    break;
                                case 14:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 15:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 16:
                                    f.oPos += 4;
                                    f.iPos += 1;
                                    f.fPos += 2;
                                    f.bPos += 1;
                                    break;
                                case 17:
                                    f.fPos += 2;
                                    break;
                                case 18:
                                    f.fPos += 2;
                                    break;
                                case 19:
                                    f.oPos += 1;
                                    break;
                                case 20:
                                    f.oPos += 1
                            }
                            f.prev = ia.DRAW_TRIANGLES;
                            n = f;
                            l = n.buffer.o[n.oPos];
                            q = n.buffer.o[n.oPos + 1];
                            n = n.buffer.o[n.oPos + 2];
                            r = null != q;
                            x = Math.floor(l.get_length() / 2);
                            D = r ? q.get_length() : x;
                            B = (x = (w = null != n) && n.get_length() >= 3 * x) ? 4 : 2;
                            z = x ? 3 : 2;
                            H = B + 2;
                            E = x ? e : d;
                            Ab.resizeVertexBuffer(a, x, E + D * H);
                            I = x ? a.__vertexBufferDataUVT : a.__vertexBufferData;
                            v = 0;
                            for (y = D; v < y;) t = v++, ob = E + t * H, u = r ? 2 * q.get(t) : 2 * t, t = r ? q.get(t) * z : t * z, x ? (A = n.get(t + 2), I[ob] = l.get(u) / A, I[ob + 1] = l.get(u + 1) / A, I[ob + 2] = 0, I[ob + 3] = 1 / A) : (I[ob] = l.get(u), I[ob + 1] = l.get(u + 1)), I[ob + B] = w ? n.get(t) : 0, I[ob + B + 1] = w ? n.get(t + 1) : 0;
                            x ? e += D * H : d += D * H;
                            break;
                        case 13:
                            m = null;
                            break;
                        default:
                            switch (f.prev._hx_index) {
                                case 0:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 1:
                                    f.iPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 2:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos +=
                                        1;
                                    f.fPos += 1;
                                    break;
                                case 3:
                                    f.oPos += 1;
                                    break;
                                case 4:
                                    f.fPos += 6;
                                    break;
                                case 5:
                                    f.fPos += 4;
                                    break;
                                case 6:
                                    f.fPos += 3;
                                    break;
                                case 7:
                                    f.fPos += 4;
                                    break;
                                case 8:
                                    f.oPos += 3;
                                    break;
                                case 9:
                                    f.fPos += 4;
                                    break;
                                case 10:
                                    f.fPos += 5;
                                    f.oPos += 1;
                                    break;
                                case 12:
                                    f.oPos += 4;
                                    break;
                                case 14:
                                    f.oPos += 2;
                                    f.bPos += 2;
                                    break;
                                case 15:
                                    f.oPos += 4;
                                    f.iiPos += 2;
                                    f.ffPos += 1;
                                    f.fPos += 1;
                                    break;
                                case 16:
                                    f.oPos += 4;
                                    f.iPos += 1;
                                    f.fPos += 2;
                                    f.bPos += 1;
                                    break;
                                case 17:
                                    f.fPos += 2;
                                    break;
                                case 18:
                                    f.fPos += 2;
                                    break;
                                case 19:
                                    f.oPos += 1;
                                    break;
                                case 20:
                                    f.oPos += 1
                            }
                            f.prev = l
                    }
                }
                0 < c && a.__quadBuffer.flushVertexBufferData();
                if (0 < d) {
                    c = a.__vertexBuffer;
                    if (null == c || d > a.__vertexBufferCount) c = b.createVertexBuffer(d, 4, 0), a.__vertexBuffer = c, a.__vertexBufferCount = d;
                    c.uploadFromTypedArray(si.toArrayBufferView(a.__vertexBufferData))
                }
                if (0 < e) {
                    c = a.__vertexBufferUVT;
                    if (null == c || e > a.__vertexBufferCountUVT) c = b.createVertexBuffer(e, 6, 0), a.__vertexBufferUVT = c, a.__vertexBufferCountUVT = e;
                    c.uploadFromTypedArray(si.toArrayBufferView(a.__vertexBufferDataUVT))
                }
                fa.__pool.release(k);
                xa.__pool.release(p)
            };
            Ab.isCompatible = function(a) {
                if (null !=
                    a.__owner.__worldScale9Grid) return !1;
                var b = new Ze(a.__commands),
                    c = !1,
                    d = !1,
                    e = !1,
                    f = 0;
                for (a = a.__commands.types; f < a.length;) {
                    var k = a[f];
                    ++f;
                    switch (k._hx_index) {
                        case 0:
                            d = !0;
                            e = c = !1;
                            switch (b.prev._hx_index) {
                                case 0:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 1:
                                    b.iPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 2:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 3:
                                    b.oPos += 1;
                                    break;
                                case 4:
                                    b.fPos += 6;
                                    break;
                                case 5:
                                    b.fPos += 4;
                                    break;
                                case 6:
                                    b.fPos += 3;
                                    break;
                                case 7:
                                    b.fPos += 4;
                                    break;
                                case 8:
                                    b.oPos += 3;
                                    break;
                                case 9:
                                    b.fPos += 4;
                                    break;
                                case 10:
                                    b.fPos += 5;
                                    b.oPos +=
                                        1;
                                    break;
                                case 12:
                                    b.oPos += 4;
                                    break;
                                case 14:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 15:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 16:
                                    b.oPos += 4;
                                    b.iPos += 1;
                                    b.fPos += 2;
                                    b.bPos += 1;
                                    break;
                                case 17:
                                    b.fPos += 2;
                                    break;
                                case 18:
                                    b.fPos += 2;
                                    break;
                                case 19:
                                    b.oPos += 1;
                                    break;
                                case 20:
                                    b.oPos += 1
                            }
                            b.prev = k;
                            break;
                        case 1:
                            d = !1;
                            c = !0;
                            e = !1;
                            switch (b.prev._hx_index) {
                                case 0:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 1:
                                    b.iPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 2:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 3:
                                    b.oPos += 1;
                                    break;
                                case 4:
                                    b.fPos += 6;
                                    break;
                                case 5:
                                    b.fPos +=
                                        4;
                                    break;
                                case 6:
                                    b.fPos += 3;
                                    break;
                                case 7:
                                    b.fPos += 4;
                                    break;
                                case 8:
                                    b.oPos += 3;
                                    break;
                                case 9:
                                    b.fPos += 4;
                                    break;
                                case 10:
                                    b.fPos += 5;
                                    b.oPos += 1;
                                    break;
                                case 12:
                                    b.oPos += 4;
                                    break;
                                case 14:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 15:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 16:
                                    b.oPos += 4;
                                    b.iPos += 1;
                                    b.fPos += 2;
                                    b.bPos += 1;
                                    break;
                                case 17:
                                    b.fPos += 2;
                                    break;
                                case 18:
                                    b.fPos += 2;
                                    break;
                                case 19:
                                    b.oPos += 1;
                                    break;
                                case 20:
                                    b.oPos += 1
                            }
                            b.prev = k;
                            break;
                        case 3:
                            c = d = !1;
                            e = !0;
                            switch (b.prev._hx_index) {
                                case 0:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 1:
                                    b.iPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 2:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 3:
                                    b.oPos += 1;
                                    break;
                                case 4:
                                    b.fPos += 6;
                                    break;
                                case 5:
                                    b.fPos += 4;
                                    break;
                                case 6:
                                    b.fPos += 3;
                                    break;
                                case 7:
                                    b.fPos += 4;
                                    break;
                                case 8:
                                    b.oPos += 3;
                                    break;
                                case 9:
                                    b.fPos += 4;
                                    break;
                                case 10:
                                    b.fPos += 5;
                                    b.oPos += 1;
                                    break;
                                case 12:
                                    b.oPos += 4;
                                    break;
                                case 14:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 15:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 16:
                                    b.oPos += 4;
                                    b.iPos += 1;
                                    b.fPos += 2;
                                    b.bPos += 1;
                                    break;
                                case 17:
                                    b.fPos += 2;
                                    break;
                                case 18:
                                    b.fPos += 2;
                                    break;
                                case 19:
                                    b.oPos += 1;
                                    break;
                                case 20:
                                    b.oPos += 1
                            }
                            b.prev = k;
                            break;
                        case 8:
                            if (d || e) {
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = k
                            } else return b.destroy(), !1;
                            break;
                        case 9:
                            if (c) {
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos += 1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = k
                            } else return b.destroy(), !1;
                            break;
                        case 12:
                            if (d || e) {
                                switch (b.prev._hx_index) {
                                    case 0:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 1:
                                        b.iPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 2:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 3:
                                        b.oPos +=
                                            1;
                                        break;
                                    case 4:
                                        b.fPos += 6;
                                        break;
                                    case 5:
                                        b.fPos += 4;
                                        break;
                                    case 6:
                                        b.fPos += 3;
                                        break;
                                    case 7:
                                        b.fPos += 4;
                                        break;
                                    case 8:
                                        b.oPos += 3;
                                        break;
                                    case 9:
                                        b.fPos += 4;
                                        break;
                                    case 10:
                                        b.fPos += 5;
                                        b.oPos += 1;
                                        break;
                                    case 12:
                                        b.oPos += 4;
                                        break;
                                    case 14:
                                        b.oPos += 2;
                                        b.bPos += 2;
                                        break;
                                    case 15:
                                        b.oPos += 4;
                                        b.iiPos += 2;
                                        b.ffPos += 1;
                                        b.fPos += 1;
                                        break;
                                    case 16:
                                        b.oPos += 4;
                                        b.iPos += 1;
                                        b.fPos += 2;
                                        b.bPos += 1;
                                        break;
                                    case 17:
                                        b.fPos += 2;
                                        break;
                                    case 18:
                                        b.fPos += 2;
                                        break;
                                    case 19:
                                        b.oPos += 1;
                                        break;
                                    case 20:
                                        b.oPos += 1
                                }
                                b.prev = k
                            } else return b.destroy(), !1;
                            break;
                        case 13:
                            e = c = d = !1;
                            switch (b.prev._hx_index) {
                                case 0:
                                    b.oPos +=
                                        2;
                                    b.bPos += 2;
                                    break;
                                case 1:
                                    b.iPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 2:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 3:
                                    b.oPos += 1;
                                    break;
                                case 4:
                                    b.fPos += 6;
                                    break;
                                case 5:
                                    b.fPos += 4;
                                    break;
                                case 6:
                                    b.fPos += 3;
                                    break;
                                case 7:
                                    b.fPos += 4;
                                    break;
                                case 8:
                                    b.oPos += 3;
                                    break;
                                case 9:
                                    b.fPos += 4;
                                    break;
                                case 10:
                                    b.fPos += 5;
                                    b.oPos += 1;
                                    break;
                                case 12:
                                    b.oPos += 4;
                                    break;
                                case 14:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 15:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 16:
                                    b.oPos += 4;
                                    b.iPos += 1;
                                    b.fPos += 2;
                                    b.bPos += 1;
                                    break;
                                case 17:
                                    b.fPos += 2;
                                    break;
                                case 18:
                                    b.fPos +=
                                        2;
                                    break;
                                case 19:
                                    b.oPos += 1;
                                    break;
                                case 20:
                                    b.oPos += 1
                            }
                            b.prev = k;
                            break;
                        case 18:
                            switch (b.prev._hx_index) {
                                case 0:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 1:
                                    b.iPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 2:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 3:
                                    b.oPos += 1;
                                    break;
                                case 4:
                                    b.fPos += 6;
                                    break;
                                case 5:
                                    b.fPos += 4;
                                    break;
                                case 6:
                                    b.fPos += 3;
                                    break;
                                case 7:
                                    b.fPos += 4;
                                    break;
                                case 8:
                                    b.oPos += 3;
                                    break;
                                case 9:
                                    b.fPos += 4;
                                    break;
                                case 10:
                                    b.fPos += 5;
                                    b.oPos += 1;
                                    break;
                                case 12:
                                    b.oPos += 4;
                                    break;
                                case 14:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 15:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 16:
                                    b.oPos += 4;
                                    b.iPos += 1;
                                    b.fPos += 2;
                                    b.bPos += 1;
                                    break;
                                case 17:
                                    b.fPos += 2;
                                    break;
                                case 18:
                                    b.fPos += 2;
                                    break;
                                case 19:
                                    b.oPos += 1;
                                    break;
                                case 20:
                                    b.oPos += 1
                            }
                            b.prev = k;
                            break;
                        case 19:
                            switch (b.prev._hx_index) {
                                case 0:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 1:
                                    b.iPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 2:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 3:
                                    b.oPos += 1;
                                    break;
                                case 4:
                                    b.fPos += 6;
                                    break;
                                case 5:
                                    b.fPos += 4;
                                    break;
                                case 6:
                                    b.fPos += 3;
                                    break;
                                case 7:
                                    b.fPos += 4;
                                    break;
                                case 8:
                                    b.oPos += 3;
                                    break;
                                case 9:
                                    b.fPos += 4;
                                    break;
                                case 10:
                                    b.fPos += 5;
                                    b.oPos += 1;
                                    break;
                                case 12:
                                    b.oPos += 4;
                                    break;
                                case 14:
                                    b.oPos += 2;
                                    b.bPos += 2;
                                    break;
                                case 15:
                                    b.oPos += 4;
                                    b.iiPos += 2;
                                    b.ffPos += 1;
                                    b.fPos += 1;
                                    break;
                                case 16:
                                    b.oPos += 4;
                                    b.iPos += 1;
                                    b.fPos += 2;
                                    b.bPos += 1;
                                    break;
                                case 17:
                                    b.fPos += 2;
                                    break;
                                case 18:
                                    b.fPos += 2;
                                    break;
                                case 19:
                                    b.oPos += 1;
                                    break;
                                case 20:
                                    b.oPos += 1
                            }
                            b.prev = k;
                            break;
                        default:
                            return b.destroy(), !1
                    }
                }
                b.destroy();
                return !0
            };
            Ab.render = function(a, b) {
                if (a.__visible && 0 != a.__commands.get_length())
                    if (null != a.__bitmap && !a.__dirty || !Ab.isCompatible(a)) {
                        var c = b.__softwareRenderer.__worldTransform;
                        b.__softwareRenderer.__worldTransform = b.__worldTransform;
                        v.render(a, b.__softwareRenderer);
                        b.__softwareRenderer.__worldTransform = c
                    } else {
                        a.__bitmap = null;
                        a.__update(b.__worldTransform);
                        var d = a.__width,
                            e = a.__height;
                        if (null != a.__bounds && 1 <= d && 1 <= e) {
                            (a.__hardwareDirty || null == a.__quadBuffer && null == a.__vertexBuffer && null == a.__vertexBufferUVT) && Ab.buildBuffer(a, b);
                            c = new Ze(a.__commands);
                            for (var f = b.__context3D, k = xa.__pool.get(), p = null, m = null, h = !1, g = !1, l = null, q = 0, n = 0, r = 0, D = 0, w = 0, x = a.__commands.types; w < x.length;) switch (d =
                                x[w], ++w, d._hx_index) {
                                case 0:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = ia.BEGIN_BITMAP_FILL;
                                    g = c;
                                    m = g.buffer.o[g.oPos];
                                    h = g.buffer.b[g.bPos];
                                    g = g.buffer.b[g.bPos + 1];
                                    l = p = null;
                                    break;
                                case 1:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = ia.BEGIN_FILL;
                                    m = c;
                                    l = (m.buffer.i[m.iPos] | 0) & 16777215 | (255 * m.buffer.f[m.fPos] | 0) << 24;
                                    m = p = null;
                                    break;
                                case 3:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = ia.BEGIN_SHADER_FILL;
                                    n = c;
                                    p = n.buffer.o[n.oPos];
                                    n = 0;
                                    m = null == p || null == p.shader || null == p.shader.__bitmap ? null : p.shader.__bitmap.input;
                                    l = null;
                                    break;
                                case 8:
                                    if (null != m) {
                                        switch (c.prev._hx_index) {
                                            case 0:
                                                c.oPos += 2;
                                                c.bPos += 2;
                                                break;
                                            case 1:
                                                c.iPos += 1;
                                                c.fPos += 1;
                                                break;
                                            case 2:
                                                c.oPos += 4;
                                                c.iiPos += 2;
                                                c.ffPos += 1;
                                                c.fPos += 1;
                                                break;
                                            case 3:
                                                c.oPos += 1;
                                                break;
                                            case 4:
                                                c.fPos += 6;
                                                break;
                                            case 5:
                                                c.fPos += 4;
                                                break;
                                            case 6:
                                                c.fPos += 3;
                                                break;
                                            case 7:
                                                c.fPos += 4;
                                                break;
                                            case 8:
                                                c.oPos += 3;
                                                break;
                                            case 9:
                                                c.fPos +=
                                                    4;
                                                break;
                                            case 10:
                                                c.fPos += 5;
                                                c.oPos += 1;
                                                break;
                                            case 12:
                                                c.oPos += 4;
                                                break;
                                            case 14:
                                                c.oPos += 2;
                                                c.bPos += 2;
                                                break;
                                            case 15:
                                                c.oPos += 4;
                                                c.iiPos += 2;
                                                c.ffPos += 1;
                                                c.fPos += 1;
                                                break;
                                            case 16:
                                                c.oPos += 4;
                                                c.iPos += 1;
                                                c.fPos += 2;
                                                c.bPos += 1;
                                                break;
                                            case 17:
                                                c.fPos += 2;
                                                break;
                                            case 18:
                                                c.fPos += 2;
                                                break;
                                            case 19:
                                                c.oPos += 1;
                                                break;
                                            case 20:
                                                c.oPos += 1
                                        }
                                        c.prev = ia.DRAW_QUADS;
                                        var B = c;
                                        d = B.buffer.o[B.oPos];
                                        B = B.buffer.o[B.oPos + 1];
                                        d = null != B ? B.get_length() : Math.floor(d.get_length() / 4);
                                        var u = b.__getMatrix(a.__owner.__renderTransform, 1);
                                        null == p || Ab.maskRender ?
                                            (B = Ab.maskRender ? b.__maskShader : b.__initGraphicsShader(null), b.setShader(B), b.applyMatrix(u), b.applyBitmapData(m, g, h), b.applyAlpha(a.__owner.__worldAlpha), b.applyColorTransform(a.__owner.__worldColorTransform), b.updateShader()) : (B = b.__initShaderBuffer(p), b.__setShaderBuffer(p), b.applyMatrix(u), b.applyBitmapData(m, !1, h), b.applyAlpha(a.__owner.__worldAlpha), b.applyColorTransform(a.__owner.__worldColorTransform));
                                        for (u = q + d; q < u;) {
                                            d = Math.min(u - q, f.__quadIndexBufferElements) | 0;
                                            if (0 >= d) break;
                                            null == p || Ab.maskRender ||
                                                b.__updateShaderBuffer(n);
                                            null != B.__position && f.setVertexBufferAt(B.__position.index, a.__quadBuffer.vertexBuffer, 16 * q, 2);
                                            null != B.__textureCoord && f.setVertexBufferAt(B.__textureCoord.index, a.__quadBuffer.vertexBuffer, 16 * q + 2, 2);
                                            f.drawTriangles(f.__quadIndexBuffer, 0, 2 * d);
                                            n += 4 * d;
                                            q += d
                                        }
                                        b.__clearShader()
                                    }
                                    break;
                                case 9:
                                    if (null != l) {
                                        switch (c.prev._hx_index) {
                                            case 0:
                                                c.oPos += 2;
                                                c.bPos += 2;
                                                break;
                                            case 1:
                                                c.iPos += 1;
                                                c.fPos += 1;
                                                break;
                                            case 2:
                                                c.oPos += 4;
                                                c.iiPos += 2;
                                                c.ffPos += 1;
                                                c.fPos += 1;
                                                break;
                                            case 3:
                                                c.oPos += 1;
                                                break;
                                            case 4:
                                                c.fPos +=
                                                    6;
                                                break;
                                            case 5:
                                                c.fPos += 4;
                                                break;
                                            case 6:
                                                c.fPos += 3;
                                                break;
                                            case 7:
                                                c.fPos += 4;
                                                break;
                                            case 8:
                                                c.oPos += 3;
                                                break;
                                            case 9:
                                                c.fPos += 4;
                                                break;
                                            case 10:
                                                c.fPos += 5;
                                                c.oPos += 1;
                                                break;
                                            case 12:
                                                c.oPos += 4;
                                                break;
                                            case 14:
                                                c.oPos += 2;
                                                c.bPos += 2;
                                                break;
                                            case 15:
                                                c.oPos += 4;
                                                c.iiPos += 2;
                                                c.ffPos += 1;
                                                c.fPos += 1;
                                                break;
                                            case 16:
                                                c.oPos += 4;
                                                c.iPos += 1;
                                                c.fPos += 2;
                                                c.bPos += 1;
                                                break;
                                            case 17:
                                                c.fPos += 2;
                                                break;
                                            case 18:
                                                c.fPos += 2;
                                                break;
                                            case 19:
                                                c.oPos += 1;
                                                break;
                                            case 20:
                                                c.oPos += 1
                                        }
                                        c.prev = ia.DRAW_RECT;
                                        var y = c;
                                        B = y.buffer.f[y.fPos];
                                        u = y.buffer.f[y.fPos + 1];
                                        d = y.buffer.f[y.fPos +
                                            2];
                                        e = y.buffer.f[y.fPos + 3];
                                        y = l;
                                        Ab.tempColorTransform.redOffset = y >>> 16 & 255;
                                        Ab.tempColorTransform.greenOffset = y >>> 8 & 255;
                                        Ab.tempColorTransform.blueOffset = y & 255;
                                        Ab.tempColorTransform.__combine(a.__owner.__worldColorTransform);
                                        k.identity();
                                        k.scale(d, e);
                                        k.tx = B;
                                        k.ty = u;
                                        k.concat(a.__owner.__renderTransform);
                                        d = Ab.maskRender ? b.__maskShader : b.__initGraphicsShader(null);
                                        b.setShader(d);
                                        b.applyMatrix(b.__getMatrix(k, 1));
                                        b.applyBitmapData(Ab.blankBitmapData, !0, h);
                                        b.applyAlpha((y >>> 24 & 255) / 255 * a.__owner.__worldAlpha);
                                        b.applyColorTransform(Ab.tempColorTransform);
                                        b.updateShader();
                                        B = Ab.blankBitmapData.getVertexBuffer(f);
                                        null != d.__position && f.setVertexBufferAt(d.__position.index, B, 0, 3);
                                        null != d.__textureCoord && f.setVertexBufferAt(d.__textureCoord.index, B, 3, 2);
                                        d = Ab.blankBitmapData.getIndexBuffer(f);
                                        f.drawTriangles(d);
                                        n += 4;
                                        b.__clearShader()
                                    }
                                    break;
                                case 12:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = ia.DRAW_TRIANGLES;
                                    e = c;
                                    B = e.buffer.o[e.oPos + 1];
                                    u = e.buffer.o[e.oPos +
                                        2];
                                    d = e.buffer.o[e.oPos + 3];
                                    y = null != B;
                                    e = Math.floor(e.buffer.o[e.oPos].get_length() / 2);
                                    B = y ? B.get_length() : e;
                                    y = (u = null != u && u.get_length() >= 3 * e) ? 4 : 2;
                                    e = y + 2;
                                    var t = u ? a.__vertexBufferUVT : a.__vertexBuffer,
                                        A = u ? D : r,
                                        J = b.__getMatrix(a.__owner.__renderTransform, 1);
                                    if (null == p || Ab.maskRender) {
                                        var F = Ab.maskRender ? b.__maskShader : b.__initGraphicsShader(null);
                                        b.setShader(F);
                                        b.applyMatrix(J);
                                        b.applyBitmapData(m, g, h);
                                        b.applyAlpha(a.__owner.__worldAlpha);
                                        b.applyColorTransform(a.__owner.__worldColorTransform);
                                        b.updateShader()
                                    } else F =
                                        b.__initShaderBuffer(p), b.__setShaderBuffer(p), b.applyMatrix(J), b.applyBitmapData(m, !1, h), b.applyAlpha(1), b.applyColorTransform(null), b.__updateShaderBuffer(n);
                                    null != F.__position && f.setVertexBufferAt(F.__position.index, t, A, u ? 4 : 2);
                                    null != F.__textureCoord && f.setVertexBufferAt(F.__textureCoord.index, t, A + y, 2);
                                    switch (d) {
                                        case 0:
                                            f.setCulling(0);
                                            break;
                                        case 1:
                                            f.setCulling(3);
                                            break;
                                        case 2:
                                            f.setCulling(1)
                                    }
                                    f.__drawTriangles(0, B);
                                    n += B;
                                    u ? D += e * B : r += e * B;
                                    switch (d) {
                                        case 1:
                                        case 2:
                                            f.setCulling(0)
                                    }
                                    b.__clearShader();
                                    break;
                                case 13:
                                    p = l = m = null;
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = d;
                                    break;
                                case 18:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = ia.MOVE_TO;
                                    break;
                                case 19:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos += 1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = ia.OVERRIDE_BLEND_MODE;
                                    d = c;
                                    b.__setBlendMode(d.buffer.o[d.oPos]);
                                    break;
                                default:
                                    switch (c.prev._hx_index) {
                                        case 0:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 1:
                                            c.iPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 2:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 3:
                                            c.oPos += 1;
                                            break;
                                        case 4:
                                            c.fPos += 6;
                                            break;
                                        case 5:
                                            c.fPos += 4;
                                            break;
                                        case 6:
                                            c.fPos += 3;
                                            break;
                                        case 7:
                                            c.fPos += 4;
                                            break;
                                        case 8:
                                            c.oPos += 3;
                                            break;
                                        case 9:
                                            c.fPos += 4;
                                            break;
                                        case 10:
                                            c.fPos += 5;
                                            c.oPos += 1;
                                            break;
                                        case 12:
                                            c.oPos += 4;
                                            break;
                                        case 14:
                                            c.oPos += 2;
                                            c.bPos += 2;
                                            break;
                                        case 15:
                                            c.oPos += 4;
                                            c.iiPos += 2;
                                            c.ffPos += 1;
                                            c.fPos += 1;
                                            break;
                                        case 16:
                                            c.oPos += 4;
                                            c.iPos += 1;
                                            c.fPos += 2;
                                            c.bPos += 1;
                                            break;
                                        case 17:
                                            c.fPos += 2;
                                            break;
                                        case 18:
                                            c.fPos += 2;
                                            break;
                                        case 19:
                                            c.oPos +=
                                                1;
                                            break;
                                        case 20:
                                            c.oPos += 1
                                    }
                                    c.prev = d
                            }
                            xa.__pool.release(k)
                        }
                        a.__hardwareDirty = !1;
                        a.set___dirty(!1)
                    }
            };
            Ab.renderMask = function(a, b) {
                Ab.maskRender = !0;
                Ab.render(a, b);
                Ab.maskRender = !1
            };
            Ab.resizeVertexBuffer = function(a, b, c) {
                var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
                    e = null;
                if (null == d) {
                    var f = e = null,
                        k = null,
                        p = null,
                        m = null;
                    e = c = null != c ? new Float32Array(c) : null != e ? new Float32Array(e) : null != f ? new Float32Array(f.__array) : null != k ? new Float32Array(k) : null != p ? null == m ? new Float32Array(p, 0) : new Float32Array(p, 0,
                        m) : null
                } else c > d.length && (m = p = k = f = e = null, e = c = null != c ? new Float32Array(c) : null != e ? new Float32Array(e) : null != f ? new Float32Array(f.__array) : null != k ? new Float32Array(k) : null != p ? null == m ? new Float32Array(p, 0) : new Float32Array(p, 0, m) : null, e.set(d));
                null != e && (b ? a.__vertexBufferDataUVT = e : a.__vertexBufferData = e)
            };
            var Jg = function() {
                null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}");
                null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
                Pd.call(this);
                this.__isGenerated = !0;
                this.__initGL()
            };
            g["openfl.display._internal.Context3DMaskShader"] = Jg;
            Jg.__name__ = "openfl.display._internal.Context3DMaskShader";
            Jg.__super__ = Pd;
            Jg.prototype = n(Pd.prototype, {
                __class__: Jg
            });
            var of = function() {};
            g["openfl.display._internal.Context3DShape"] = of ; of .__name__ = "openfl.display._internal.Context3DShape"; of .render = function(a, b) {
                if (a.__renderable && !(0 >= a.__worldAlpha)) {
                    var c = a.__graphics;
                    if (null != c) {
                        b.__setBlendMode(a.__worldBlendMode);
                        b.__pushMaskObject(a);
                        Ab.render(c, b);
                        if (null != c.__bitmap && c.__visible) {
                            var d = b.__context3D,
                                e = b.__initDisplayShader(a.__worldShader);
                            b.setShader(e);
                            b.applyBitmapData(c.__bitmap, !0);
                            b.applyMatrix(b.__getMatrix(c.__worldTransform,
                                1));
                            b.applyAlpha(a.__worldAlpha);
                            b.applyColorTransform(a.__worldColorTransform);
                            b.updateShader();
                            var f = c.__bitmap.getVertexBuffer(d);
                            null != e.__position && d.setVertexBufferAt(e.__position.index, f, 0, 3);
                            null != e.__textureCoord && d.setVertexBufferAt(e.__textureCoord.index, f, 3, 2);
                            c = c.__bitmap.getIndexBuffer(d);
                            d.drawTriangles(c);
                            b.__clearShader()
                        }
                        b.__popMaskObject(a)
                    }
                }
            }; of .renderMask = function(a, b) {
                var c = a.__graphics;
                if (null != c && (Ab.renderMask(c, b), null != c.__bitmap)) {
                    a = b.__context3D;
                    var d = b.__maskShader;
                    b.setShader(d);
                    b.applyBitmapData(c.__bitmap, !0);
                    b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
                    b.updateShader();
                    var e = c.__bitmap.getVertexBuffer(a);
                    null != d.__position && a.setVertexBufferAt(d.__position.index, e, 0, 3);
                    null != d.__textureCoord && a.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
                    c = c.__bitmap.getIndexBuffer(a);
                    a.drawTriangles(c);
                    b.__clearShader()
                }
            };
            var Jh = function() {};
            g["openfl.display._internal.Context3DTextField"] = Jh;
            Jh.__name__ = "openfl.display._internal.Context3DTextField";
            Jh.render = function(a, b) {
                var c =
                    b.__softwareRenderer;
                b = a.__textEngine;
                var d = b.background || b.border ? b.bounds : b.textBounds,
                    e = a.__graphics;
                a.__dirty && (a.__updateLayout(), null == e.__bounds && (e.__bounds = new fa), e.__bounds.copyFrom(d));
                e.__update(c.__worldTransform);
                if (a.__dirty || e.__softwareDirty) {
                    var f = e.__width,
                        k = e.__height;
                    if (!(null != b.text && "" != b.text || b.background || b.border || b.__hasFocus || 1 == b.type && b.selectable) || (0 >= b.width || 0 >= b.height) && 2 != b.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap =
                        null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1), a.__dirty = !1;
                    else {
                        null == a.__graphics.__canvas && (a.__graphics.__canvas = window.document.createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
                        N.context = e.__context;
                        var p = e.__renderTransform;
                        if (c.__isDOM) {
                            var m = c.pixelRatio;
                            e.__canvas.width = f * m | 0;
                            e.__canvas.height = k * m | 0;
                            e.__canvas.style.width = f + "px";
                            e.__canvas.style.height = k + "px";
                            f = xa.__pool.get();
                            f.copyFrom(p);
                            f.scale(m, m);
                            c.setTransform(f, N.context);
                            xa.__pool.release(f)
                        } else e.__canvas.width = f, e.__canvas.height = k, N.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
                        null == N.clearRect && (N.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
                        N.clearRect && N.context.clearRect(0, 0, e.__canvas.width, e.__canvas.height);
                        if (null != b.text && "" != b.text || b.__hasFocus) {
                            p = b.text;
                            e.__context.imageSmoothingEnabled = !c.__allowSmoothing || 0 == b.antiAliasType && 400 == b.sharpness ? !1 : !0;
                            if (b.border || b.background) {
                                N.context.rect(.5, .5, d.width -
                                    1, d.height - 1);
                                if (b.background) {
                                    var h = K.hex(b.backgroundColor & 16777215, 6);
                                    N.context.fillStyle = "#" + h;
                                    N.context.fill()
                                }
                                b.border && (N.context.lineWidth = 1, h = K.hex(b.borderColor & 16777215, 6), N.context.strokeStyle = "#" + h, N.context.stroke())
                            }
                            N.context.textBaseline = "alphabetic";
                            N.context.textAlign = "start";
                            c = -a.get_scrollH();
                            var g = m = 0;
                            for (h = a.get_scrollV() - 1; g < h;) {
                                var l = g++;
                                m -= b.lineHeights.get(l)
                            }
                            var q;
                            for (f = b.layoutGroups.iterator(); f.hasNext();)
                                if (k = f.next(), !(k.lineIndex < a.get_scrollV() - 1)) {
                                    if (k.lineIndex >
                                        b.get_bottomScrollV() - 1) break;
                                    var n = "#" + K.hex(k.format.color & 16777215, 6);
                                    N.context.font = lb.getFont(k.format);
                                    N.context.fillStyle = n;
                                    N.context.fillText(p.substring(k.startIndex, k.endIndex), k.offsetX + c - d.x, k.offsetY + k.ascent + m - d.y);
                                    if (-1 < a.__caretIndex && b.selectable)
                                        if (a.__selectionIndex == a.__caretIndex) {
                                            if (a.__showCursor && k.startIndex <= a.__caretIndex && k.endIndex >= a.__caretIndex) {
                                                g = q = 0;
                                                for (h = a.__caretIndex - k.startIndex; g < h;) {
                                                    l = g++;
                                                    if (k.positions.length <= l) break;
                                                    q += k.positions[l]
                                                }
                                                g = 0;
                                                h = a.get_scrollV();
                                                for (l = k.lineIndex + 1; h < l;) {
                                                    var r = h++;
                                                    g += b.lineHeights.get(r - 1)
                                                }
                                                N.context.beginPath();
                                                h = K.hex(k.format.color & 16777215, 6);
                                                N.context.strokeStyle = "#" + h;
                                                N.context.moveTo(k.offsetX + q - a.get_scrollH() - d.x, g + 2 - d.y);
                                                N.context.lineWidth = 1;
                                                N.context.lineTo(k.offsetX + q - a.get_scrollH() - d.x, g + lb.getFormatHeight(a.get_defaultTextFormat()) - 1 - d.y);
                                                N.context.stroke();
                                                N.context.closePath()
                                            }
                                        } else if (k.startIndex <= a.__caretIndex && k.endIndex >= a.__caretIndex || k.startIndex <= a.__selectionIndex && k.endIndex >= a.__selectionIndex ||
                                        k.startIndex > a.__caretIndex && k.endIndex < a.__selectionIndex || k.startIndex > a.__selectionIndex && k.endIndex < a.__caretIndex) q = Math.min(a.__selectionIndex, a.__caretIndex) | 0, g = Math.max(a.__selectionIndex, a.__caretIndex) | 0, k.startIndex > q && (q = k.startIndex), k.endIndex < g && (g = k.endIndex), l = a.getCharBoundaries(q), g >= k.endIndex ? (h = a.getCharBoundaries(k.endIndex - 1), null != h && (h.x += h.width + 2)) : h = a.getCharBoundaries(g), null != l && null != h && (N.context.fillStyle = "#000000", N.context.fillRect(l.x + c, l.y + m, h.x - l.x, k.height),
                                        N.context.fillStyle = "#FFFFFF", N.context.fillText(p.substring(q, g), c + l.x, k.offsetY + k.ascent + m));
                                    k.format.underline && (N.context.beginPath(), N.context.strokeStyle = n, N.context.lineWidth = 1, n = k.offsetX + c - d.x, q = Math.floor(k.offsetY + m + k.ascent - d.y) + .5, N.context.moveTo(n, q), N.context.lineTo(n + k.width, q), N.context.stroke(), N.context.closePath())
                                }
                        } else {
                            if (b.border || b.background) b.border ? N.context.rect(.5, .5, d.width - 1, d.height - 1) : N.context.rect(0, 0, d.width, d.height), b.background && (h = K.hex(b.backgroundColor & 16777215,
                                6), N.context.fillStyle = "#" + h, N.context.fill()), b.border && (N.context.lineWidth = 1, N.context.lineCap = "square", h = K.hex(b.borderColor & 16777215, 6), N.context.strokeStyle = "#" + h, N.context.stroke());
                            if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                                c = -a.get_scrollH();
                                g = m = 0;
                                for (h = a.get_scrollV() - 1; g < h;) l = g++, m += b.lineHeights.get(l);
                                N.context.beginPath();
                                h = K.hex(a.get_defaultTextFormat().color & 16777215, 6);
                                N.context.strokeStyle = "#" + h;
                                N.context.moveTo(c + 2.5, m + 2.5);
                                N.context.lineWidth = 1;
                                N.context.lineTo(c + 2.5,
                                    m + lb.getFormatHeight(a.get_defaultTextFormat()) - 1);
                                N.context.stroke();
                                N.context.closePath()
                            }
                        }
                        e.__bitmap = H.fromCanvas(a.__graphics.__canvas);
                        e.__visible = !0;
                        a.__dirty = !1;
                        e.__softwareDirty = !1;
                        e.set___dirty(!1)
                    }
                }
                a.__graphics.__hardwareDirty = !1
            };
            Jh.renderMask = function(a, b) {
                var c = b.__softwareRenderer;
                b = a.__textEngine;
                var d = b.background || b.border ? b.bounds : b.textBounds,
                    e = a.__graphics;
                a.__dirty && (a.__updateLayout(), null == e.__bounds && (e.__bounds = new fa), e.__bounds.copyFrom(d));
                e.__update(c.__worldTransform);
                if (a.__dirty || e.__softwareDirty) {
                    var f = e.__width,
                        k = e.__height;
                    if (!(null != b.text && "" != b.text || b.background || b.border || b.__hasFocus || 1 == b.type && b.selectable) || (0 >= b.width || 0 >= b.height) && 2 != b.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap = null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1), a.__dirty = !1;
                    else {
                        null == a.__graphics.__canvas && (a.__graphics.__canvas = window.document.createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
                        N.context = e.__context;
                        var p = e.__renderTransform;
                        if (c.__isDOM) {
                            var m = c.pixelRatio;
                            e.__canvas.width = f * m | 0;
                            e.__canvas.height = k * m | 0;
                            e.__canvas.style.width = f + "px";
                            e.__canvas.style.height = k + "px";
                            f = xa.__pool.get();
                            f.copyFrom(p);
                            f.scale(m, m);
                            c.setTransform(f, N.context);
                            xa.__pool.release(f)
                        } else e.__canvas.width = f, e.__canvas.height = k, N.context.setTransform(p.a, p.b, p.c, p.d, p.tx, p.ty);
                        null == N.clearRect && (N.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
                        N.clearRect && N.context.clearRect(0,
                            0, e.__canvas.width, e.__canvas.height);
                        if (null != b.text && "" != b.text || b.__hasFocus) {
                            p = b.text;
                            e.__context.imageSmoothingEnabled = !c.__allowSmoothing || 0 == b.antiAliasType && 400 == b.sharpness ? !1 : !0;
                            if (b.border || b.background) {
                                N.context.rect(.5, .5, d.width - 1, d.height - 1);
                                if (b.background) {
                                    var h = K.hex(b.backgroundColor & 16777215, 6);
                                    N.context.fillStyle = "#" + h;
                                    N.context.fill()
                                }
                                b.border && (N.context.lineWidth = 1, h = K.hex(b.borderColor & 16777215, 6), N.context.strokeStyle = "#" + h, N.context.stroke())
                            }
                            N.context.textBaseline = "alphabetic";
                            N.context.textAlign = "start";
                            c = -a.get_scrollH();
                            var g = m = 0;
                            for (h = a.get_scrollV() - 1; g < h;) {
                                var l = g++;
                                m -= b.lineHeights.get(l)
                            }
                            var q;
                            for (f = b.layoutGroups.iterator(); f.hasNext();)
                                if (k = f.next(), !(k.lineIndex < a.get_scrollV() - 1)) {
                                    if (k.lineIndex > b.get_bottomScrollV() - 1) break;
                                    var n = "#" + K.hex(k.format.color & 16777215, 6);
                                    N.context.font = lb.getFont(k.format);
                                    N.context.fillStyle = n;
                                    N.context.fillText(p.substring(k.startIndex, k.endIndex), k.offsetX + c - d.x, k.offsetY + k.ascent + m - d.y);
                                    if (-1 < a.__caretIndex && b.selectable)
                                        if (a.__selectionIndex ==
                                            a.__caretIndex) {
                                            if (a.__showCursor && k.startIndex <= a.__caretIndex && k.endIndex >= a.__caretIndex) {
                                                g = q = 0;
                                                for (h = a.__caretIndex - k.startIndex; g < h;) {
                                                    l = g++;
                                                    if (k.positions.length <= l) break;
                                                    q += k.positions[l]
                                                }
                                                g = 0;
                                                h = a.get_scrollV();
                                                for (l = k.lineIndex + 1; h < l;) {
                                                    var r = h++;
                                                    g += b.lineHeights.get(r - 1)
                                                }
                                                N.context.beginPath();
                                                h = K.hex(k.format.color & 16777215, 6);
                                                N.context.strokeStyle = "#" + h;
                                                N.context.moveTo(k.offsetX + q - a.get_scrollH() - d.x, g + 2 - d.y);
                                                N.context.lineWidth = 1;
                                                N.context.lineTo(k.offsetX + q - a.get_scrollH() - d.x, g + lb.getFormatHeight(a.get_defaultTextFormat()) -
                                                    1 - d.y);
                                                N.context.stroke();
                                                N.context.closePath()
                                            }
                                        } else if (k.startIndex <= a.__caretIndex && k.endIndex >= a.__caretIndex || k.startIndex <= a.__selectionIndex && k.endIndex >= a.__selectionIndex || k.startIndex > a.__caretIndex && k.endIndex < a.__selectionIndex || k.startIndex > a.__selectionIndex && k.endIndex < a.__caretIndex) q = Math.min(a.__selectionIndex, a.__caretIndex) | 0, g = Math.max(a.__selectionIndex, a.__caretIndex) | 0, k.startIndex > q && (q = k.startIndex), k.endIndex < g && (g = k.endIndex), l = a.getCharBoundaries(q), g >= k.endIndex ? (h = a.getCharBoundaries(k.endIndex -
                                        1), null != h && (h.x += h.width + 2)) : h = a.getCharBoundaries(g), null != l && null != h && (N.context.fillStyle = "#000000", N.context.fillRect(l.x + c, l.y + m, h.x - l.x, k.height), N.context.fillStyle = "#FFFFFF", N.context.fillText(p.substring(q, g), c + l.x, k.offsetY + k.ascent + m));
                                    k.format.underline && (N.context.beginPath(), N.context.strokeStyle = n, N.context.lineWidth = 1, n = k.offsetX + c - d.x, q = Math.floor(k.offsetY + m + k.ascent - d.y) + .5, N.context.moveTo(n, q), N.context.lineTo(n + k.width, q), N.context.stroke(), N.context.closePath())
                                }
                        } else {
                            if (b.border ||
                                b.background) b.border ? N.context.rect(.5, .5, d.width - 1, d.height - 1) : N.context.rect(0, 0, d.width, d.height), b.background && (h = K.hex(b.backgroundColor & 16777215, 6), N.context.fillStyle = "#" + h, N.context.fill()), b.border && (N.context.lineWidth = 1, N.context.lineCap = "square", h = K.hex(b.borderColor & 16777215, 6), N.context.strokeStyle = "#" + h, N.context.stroke());
                            if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                                c = -a.get_scrollH();
                                g = m = 0;
                                for (h = a.get_scrollV() - 1; g < h;) l = g++, m += b.lineHeights.get(l);
                                N.context.beginPath();
                                h =
                                    K.hex(a.get_defaultTextFormat().color & 16777215, 6);
                                N.context.strokeStyle = "#" + h;
                                N.context.moveTo(c + 2.5, m + 2.5);
                                N.context.lineWidth = 1;
                                N.context.lineTo(c + 2.5, m + lb.getFormatHeight(a.get_defaultTextFormat()) - 1);
                                N.context.stroke();
                                N.context.closePath()
                            }
                        }
                        e.__bitmap = H.fromCanvas(a.__graphics.__canvas);
                        e.__visible = !0;
                        a.__dirty = !1;
                        e.__softwareDirty = !1;
                        e.set___dirty(!1)
                    }
                }
                a.__graphics.__hardwareDirty = !1
            };
            var Bc = function() {};
            g["openfl.display._internal.DOMBitmap"] = Bc;
            Bc.__name__ = "openfl.display._internal.DOMBitmap";
            Bc.clear = function(a, b) {
                null != a.__image && (b.element.removeChild(a.__image), a.__image = null, a.__style = null);
                null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null, a.__style = null)
            };
            Bc.renderCanvas = function(a, b) {
                null != a.__image && (b.element.removeChild(a.__image), a.__image = null);
                null == a.__canvas && (a.__canvas = window.document.createElement("canvas"), a.__context = a.__canvas.getContext("2d"), a.__imageVersion = -1, b.__allowSmoothing && a.smoothing || (a.__context.imageSmoothingEnabled = !1), b.__initializeElement(a,
                    a.__canvas));
                a.__imageVersion != a.__bitmapData.image.version && (Ma.convertToCanvas(a.__bitmapData.image), a.__canvas.width = a.__bitmapData.width + 1, a.__canvas.width = a.__bitmapData.width, a.__canvas.height = a.__bitmapData.height, a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0), a.__imageVersion = a.__bitmapData.image.version);
                b.__updateClip(a);
                b.__applyStyle(a, !0, !0, !0)
            };
            Bc.renderImage = function(a, b) {
                null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null);
                null == a.__image && (a.__image =
                    window.document.createElement("img"), a.__image.crossOrigin = "Anonymous", a.__image.src = a.__bitmapData.image.buffer.__srcImage.src, b.__initializeElement(a, a.__image));
                b.__updateClip(a);
                b.__applyStyle(a, !0, !0, !0)
            };
            var nk = function() {};
            g["openfl.display._internal.DOMDisplayObject"] = nk;
            nk.__name__ = "openfl.display._internal.DOMDisplayObject";
            nk.clear = function(a, b) {
                null != a.__cacheBitmap && Bc.clear(a.__cacheBitmap, b);
                Qf.clear(a, b)
            };
            var Qf = function() {};
            g["openfl.display._internal.DOMShape"] = Qf;
            Qf.__name__ = "openfl.display._internal.DOMShape";
            Qf.clear = function(a, b) {
                null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null, a.__style = null)
            };
            var Wb = function() {};
            g["openfl.display._internal.DOMTextField"] = Wb;
            Wb.__name__ = "openfl.display._internal.DOMTextField";
            Wb.clear = function(a, b) {
                null != a.__div && (b.element.removeChild(a.__div), a.__div = null, a.__style = null)
            };
            Wb.__getAttributeMatch = function(a) {
                return null != a.matched(2) ? a.matched(2) : a.matched(3)
            };
            var Ze = function(a) {
                this.buffer = a;
                this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos =
                    this.tsPos = 0;
                this.prev = ia.UNKNOWN
            };
            g["openfl.display._internal.DrawCommandReader"] = Ze;
            Ze.__name__ = "openfl.display._internal.DrawCommandReader";
            Ze.prototype = {
                destroy: function() {
                    this.buffer = null;
                    this.reset()
                },
                reset: function() {
                    this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0
                },
                __class__: Ze
            };
            var ia = w["openfl.display._internal.DrawCommandType"] = {
                    __ename__: "openfl.display._internal.DrawCommandType",
                    __constructs__: "BEGIN_BITMAP_FILL BEGIN_FILL BEGIN_GRADIENT_FILL BEGIN_SHADER_FILL CUBIC_CURVE_TO CURVE_TO DRAW_CIRCLE DRAW_ELLIPSE DRAW_QUADS DRAW_RECT DRAW_ROUND_RECT DRAW_TILES DRAW_TRIANGLES END_FILL LINE_BITMAP_STYLE LINE_GRADIENT_STYLE LINE_STYLE LINE_TO MOVE_TO OVERRIDE_BLEND_MODE OVERRIDE_MATRIX WINDING_EVEN_ODD WINDING_NON_ZERO UNKNOWN".split(" "),
                    BEGIN_BITMAP_FILL: {
                        _hx_index: 0,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    BEGIN_FILL: {
                        _hx_index: 1,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    BEGIN_GRADIENT_FILL: {
                        _hx_index: 2,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    BEGIN_SHADER_FILL: {
                        _hx_index: 3,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    CUBIC_CURVE_TO: {
                        _hx_index: 4,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    CURVE_TO: {
                        _hx_index: 5,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_CIRCLE: {
                        _hx_index: 6,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_ELLIPSE: {
                        _hx_index: 7,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_QUADS: {
                        _hx_index: 8,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_RECT: {
                        _hx_index: 9,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_ROUND_RECT: {
                        _hx_index: 10,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_TILES: {
                        _hx_index: 11,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    DRAW_TRIANGLES: {
                        _hx_index: 12,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    END_FILL: {
                        _hx_index: 13,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    LINE_BITMAP_STYLE: {
                        _hx_index: 14,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    LINE_GRADIENT_STYLE: {
                        _hx_index: 15,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    LINE_STYLE: {
                        _hx_index: 16,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    LINE_TO: {
                        _hx_index: 17,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    MOVE_TO: {
                        _hx_index: 18,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    OVERRIDE_BLEND_MODE: {
                        _hx_index: 19,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    OVERRIDE_MATRIX: {
                        _hx_index: 20,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    WINDING_EVEN_ODD: {
                        _hx_index: 21,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    WINDING_NON_ZERO: {
                        _hx_index: 22,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    },
                    UNKNOWN: {
                        _hx_index: 23,
                        __enum__: "openfl.display._internal.DrawCommandType",
                        toString: h
                    }
                },
                cg = function(a, b, c, d, e, f, k) {
                    null == k && (k = !1);
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = 2);
                    null == b && (b = 5);
                    null == a && (a = 0);
                    this.wrap = a;
                    this.filter = b;
                    this.mipfilter = c;
                    this.lodBias = d;
                    this.ignoreSampler = e;
                    this.centroid = f;
                    this.textureAlpha = k
                };
            g["openfl.display._internal.SamplerState"] = cg;
            cg.__name__ = "openfl.display._internal.SamplerState";
            cg.prototype = {
                clone: function() {
                    var a = new cg(this.wrap, this.filter, this.mipfilter, this.lodBias,
                        this.ignoreSampler, this.centroid, this.textureAlpha);
                    a.mipmapGenerated = this.mipmapGenerated;
                    return a
                },
                copyFrom: function(a) {
                    null == a || a.ignoreSampler || (this.wrap = a.wrap, this.filter = a.filter, this.mipfilter = a.mipfilter, this.lodBias = a.lodBias, this.centroid = a.centroid, this.textureAlpha = a.textureAlpha)
                },
                equals: function(a) {
                    return null == a ? !1 : this.wrap == a.wrap && this.filter == a.filter && this.mipfilter == a.mipfilter && this.lodBias == a.lodBias ? this.textureAlpha == a.textureAlpha : !1
                },
                __class__: cg
            };
            var Nj = function() {
                this.inputRefs = [];
                this.inputFilter = [];
                this.inputMipFilter = [];
                this.inputs = [];
                this.inputWrap = [];
                this.overrideIntNames = [];
                this.overrideIntValues = [];
                this.overrideFloatNames = [];
                this.overrideFloatValues = [];
                this.overrideBoolNames = [];
                this.overrideBoolValues = [];
                this.paramLengths = [];
                this.paramPositions = [];
                this.paramRefs_Bool = [];
                this.paramRefs_Float = [];
                this.paramRefs_Int = [];
                this.paramTypes = []
            };
            g["openfl.display._internal.ShaderBuffer"] = Nj;
            Nj.__name__ = "openfl.display._internal.ShaderBuffer";
            Nj.prototype = {
                addBoolOverride: function(a,
                    b) {
                    this.overrideBoolNames[this.overrideBoolCount] = a;
                    this.overrideBoolValues[this.overrideBoolCount] = b;
                    this.overrideBoolCount++
                },
                addFloatOverride: function(a, b) {
                    this.overrideFloatNames[this.overrideFloatCount] = a;
                    this.overrideFloatValues[this.overrideFloatCount] = b;
                    this.overrideFloatCount++
                },
                clearOverride: function() {
                    this.overrideBoolCount = this.overrideFloatCount = this.overrideIntCount = 0
                },
                update: function(a) {
                    this.paramIntCount = this.paramFloatCount = this.paramDataLength = this.paramCount = this.paramBoolCount =
                        this.overrideBoolCount = this.overrideFloatCount = this.overrideIntCount = this.inputCount = 0;
                    this.shader = null;
                    if (null != a) {
                        a.__init();
                        this.inputCount = a.__inputBitmapData.length;
                        for (var b, c = 0, d = this.inputCount; c < d;) {
                            var e = c++;
                            b = a.__inputBitmapData[e];
                            this.inputs[e] = b.input;
                            this.inputFilter[e] = b.filter;
                            this.inputMipFilter[e] = b.mipFilter;
                            this.inputRefs[e] = b;
                            this.inputWrap[e] = b.wrap
                        }
                        b = a.__paramBool.length;
                        var f = a.__paramFloat.length,
                            k = a.__paramInt.length;
                        this.paramCount = b + f + k;
                        this.paramBoolCount = b;
                        this.paramFloatCount =
                            f;
                        this.paramIntCount = k;
                        var p = 0;
                        c = 0;
                        for (d = b; c < d;) {
                            e = c++;
                            var m = a.__paramBool[e];
                            this.paramPositions[p] = this.paramDataLength;
                            var h = null != m.value ? m.value.length : 0;
                            this.paramLengths[p] = h;
                            this.paramDataLength += h;
                            this.paramTypes[p] = 0;
                            this.paramRefs_Bool[e] = m;
                            ++p
                        }
                        c = 0;
                        for (d = f; c < d;) e = c++, m = a.__paramFloat[e], this.paramPositions[p] = this.paramDataLength, h = null != m.value ? m.value.length : 0, this.paramLengths[p] = h, this.paramDataLength += h, this.paramTypes[p] = 1, this.paramRefs_Float[e] = m, ++p;
                        c = 0;
                        for (d = k; c < d;) e = c++, m = a.__paramInt[e],
                            this.paramPositions[p] = this.paramDataLength, h = null != m.value ? m.value.length : 0, this.paramLengths[p] = h, this.paramDataLength += h, this.paramTypes[p] = 2, this.paramRefs_Int[e] = m, ++p;
                        if (0 < this.paramDataLength)
                            if (null == this.paramData) {
                                c = this.paramDataLength;
                                var g = m = p = k = d = null;
                                this.paramData = c = null != c ? new Float32Array(c) : null != d ? new Float32Array(d) : null != k ? new Float32Array(k.__array) : null != p ? new Float32Array(p) : null != m ? null == g ? new Float32Array(m, 0) : new Float32Array(m, 0, g) : null
                            } else this.paramDataLength > this.paramData.length &&
                                (c = this.paramDataLength, g = m = p = k = d = null, c = null != c ? new Float32Array(c) : null != d ? new Float32Array(d) : null != k ? new Float32Array(k.__array) : null != p ? new Float32Array(p) : null != m ? null == g ? new Float32Array(m, 0) : new Float32Array(m, 0, g) : null, c.set(this.paramData), this.paramData = c);
                        c = g = m = p = k = 0;
                        for (d = this.paramCount; c < d;)
                            if (e = c++, h = this.paramLengths[e], e < b) {
                                e = this.paramRefs_Bool[k];
                                ++k;
                                for (var l = 0; l < h;) {
                                    var q = l++;
                                    this.paramData[g] = e.value[q] ? 1 : 0;
                                    ++g
                                }
                            } else if (e < b + f)
                            for (e = this.paramRefs_Float[p], ++p, l = 0; l < h;) q = l++,
                                this.paramData[g] = e.value[q], ++g;
                        else
                            for (e = this.paramRefs_Int[m], ++m, l = 0; l < h;) q = l++, this.paramData[g] = e.value[q], ++g;
                        this.shader = a
                    }
                },
                __class__: Nj
            };
            var db = function(a, b, c) {
                this.driverInfo = "OpenGL (Direct blitting)";
                this.backBufferHeight = this.backBufferWidth = 0;
                ua.call(this);
                this.__stage = a;
                this.__contextState = b;
                this.__stage3D = c;
                this.__context = a.window.context;
                this.gl = this.__context.webgl;
                null == this.__contextState && (this.__contextState = new Kh);
                this.__state = new Kh;
                var d;
                this.__vertexConstants = a = new Float32Array(512);
                this.__fragmentConstants = a = new Float32Array(512);
                var e = null;
                a = [1, 1, 1, 1];
                var f = d = c = b = null;
                this.__positionScale = a = null != e ? new Float32Array(e) : null != a ? new Float32Array(a) : null != b ? new Float32Array(b.__array) : null != c ? new Float32Array(c) : null != d ? null == f ? new Float32Array(d, 0) : new Float32Array(d, 0, f) : null;
                this.__programs = new aa; - 1 == db.__glMaxViewportDims && (db.__glMaxViewportDims = this.gl.getParameter(this.gl.MAX_VIEWPORT_DIMS));
                this.maxBackBufferHeight = this.maxBackBufferWidth = db.__glMaxViewportDims; - 1 == db.__glMaxTextureMaxAnisotropy &&
                    (a = this.gl.getExtension("EXT_texture_filter_anisotropic"), null != a && Object.prototype.hasOwnProperty.call(a, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (a = this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic")), null != a && Object.prototype.hasOwnProperty.call(a, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (a = this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")), null != a ? (db.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT, db.__glMaxTextureMaxAnisotropy = this.gl.getParameter(a.MAX_TEXTURE_MAX_ANISOTROPY_EXT)) :
                        (db.__glTextureMaxAnisotropy = 0, db.__glMaxTextureMaxAnisotropy = 0)); - 1 == db.__glDepthStencil && (db.__glDepthStencil = this.gl.DEPTH_STENCIL); - 1 == db.__glMemoryTotalAvailable && (a = this.gl.getExtension("NVX_gpu_memory_info"), null != a && (db.__glMemoryTotalAvailable = a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX, db.__glMemoryCurrentAvailable = a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX));
                null == db.__driverInfo && (a = this.gl.getParameter(this.gl.VENDOR), b = this.gl.getParameter(this.gl.VERSION), c = this.gl.getParameter(this.gl.RENDERER),
                    d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION), db.__driverInfo = "OpenGL Vendor=" + a + " Version=" + b + " Renderer=" + c + " GLSL=" + d);
                this.driverInfo = db.__driverInfo;
                this.__quadIndexBufferElements = 16383;
                e = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
                f = d = c = b = a = null;
                a = null != e ? new Uint16Array(e) : null != a ? new Uint16Array(a) : null != b ? new Uint16Array(b.__array) : null != c ? new Uint16Array(c) : null != d ? null == f ? new Uint16Array(d, 0) : new Uint16Array(d, 0, f) : null;
                d = c = b = 0;
                for (f = this.__quadIndexBufferElements; d <
                    f;) d++, a[b] = c, a[b + 1] = c + 1, a[b + 2] = c + 2, a[b + 3] = c + 2, a[b + 4] = c + 1, a[b + 5] = c + 3, b += 6, c += 4;
                this.__quadIndexBuffer = this.createIndexBuffer(this.__quadIndexBufferCount);
                this.__quadIndexBuffer.uploadFromTypedArray(a)
            };
            g["openfl.display3D.Context3D"] = db;
            db.__name__ = "openfl.display3D.Context3D";
            db.__super__ = ua;
            db.prototype = n(ua.prototype, {
                clear: function(a, b, c, d, e, f, k) {
                    null == k && (k = 7);
                    null == f && (f = 0);
                    null == e && (e = 1);
                    null == d && (d = 1);
                    null == c && (c = 0);
                    null == b && (b = 0);
                    null == a && (a = 0);
                    this.__flushGLFramebuffer();
                    this.__flushGLViewport();
                    var p = 0;
                    if (0 != (k & 1)) {
                        null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared || (this.__stage.__renderer.__cleared = !0), this.__cleared = !0);
                        p |= this.gl.COLOR_BUFFER_BIT;
                        if (1 != this.__contextState.colorMaskRed || 1 != this.__contextState.colorMaskGreen || 1 != this.__contextState.colorMaskBlue || 1 != this.__contextState.colorMaskAlpha) this.gl.colorMask(!0, !0, !0, !0), this.__contextState.colorMaskRed = !0, this.__contextState.colorMaskGreen = !0, this.__contextState.colorMaskBlue = !0, this.__contextState.colorMaskAlpha = !0;
                        this.gl.clearColor(a, b, c, d)
                    }
                    0 != (k & 2) && (p |= this.gl.DEPTH_BUFFER_BIT, 1 != this.__contextState.depthMask && (this.gl.depthMask(!0), this.__contextState.depthMask = !0), this.gl.clearDepth(e));
                    0 != (k & 4) && (p |= this.gl.STENCIL_BUFFER_BIT, 255 != this.__contextState.stencilWriteMask && (this.gl.stencilMask(255), this.__contextState.stencilWriteMask = 255), this.gl.clearStencil(f), this.__contextState.stencilWriteMask = 255);
                    0 != p && (this.__setGLScissorTest(!1), this.gl.clear(p))
                },
                configureBackBuffer: function(a,
                    b, c, d, e, f) {
                    null == f && (f = !1);
                    null == e && (e = !1);
                    null == d && (d = !0);
                    if (null == this.__stage3D) this.backBufferWidth = a, this.backBufferHeight = b, this.__backBufferAntiAlias = c, this.__state.backBufferEnableDepthAndStencil = d, this.__backBufferWantsBestResolution = e, this.__backBufferWantsBestResolutionOnBrowserZoom = f;
                    else {
                        if (null == this.__backBufferTexture || this.backBufferWidth != a || this.backBufferHeight != b) {
                            null != this.__backBufferTexture && this.__backBufferTexture.dispose();
                            null != this.__frontBufferTexture && this.__frontBufferTexture.dispose();
                            this.__backBufferTexture = this.createRectangleTexture(a, b, 1, !0);
                            this.__frontBufferTexture = this.createRectangleTexture(a, b, 1, !0);
                            null == this.__stage3D.__vertexBuffer && (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
                            var k = ib.toFloatVector(null, null, null, [a, b, 0, 1, 1, 0, b, 0, 0, 1, a, 0, 0, 1, 0, 0, 0, 0, 0, 0]);
                            this.__stage3D.__vertexBuffer.uploadFromVector(k, 0, 20);
                            null == this.__stage3D.__indexBuffer && (this.__stage3D.__indexBuffer = this.createIndexBuffer(6), k = ib.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3]), this.__stage3D.__indexBuffer.uploadFromVector(k,
                                0, 6))
                        }
                        this.backBufferWidth = a;
                        this.backBufferHeight = b;
                        this.__backBufferAntiAlias = c;
                        this.__state.backBufferEnableDepthAndStencil = d;
                        this.__backBufferWantsBestResolution = e;
                        this.__backBufferWantsBestResolutionOnBrowserZoom = f;
                        this.__state.__primaryGLFramebuffer = this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
                        this.__frontBufferTexture.__getGLFramebuffer(d, c, 0)
                    }
                },
                createIndexBuffer: function(a, b) {
                    null == b && (b = 1);
                    return new yl(this, a, b)
                },
                createProgram: function(a) {
                    null == a && (a = 0);
                    return new zl(this, a)
                },
                createRectangleTexture: function(a,
                    b, c, d) {
                    return new Lh(this, a, b, Im.toString(c), d)
                },
                createVertexBuffer: function(a, b, c) {
                    null == c && (c = 1);
                    return new Al(this, a, b, qm.toString(c))
                },
                drawTriangles: function(a, b, c) {
                    null == c && (c = -1);
                    null == b && (b = 0);
                    null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1) : this.__stage.__renderer.__clear());
                    this.__flushGL();
                    null != this.__state.program && this.__state.program.__flush();
                    c = -1 == c ? a.__numIndices : 3 * c;
                    this.__bindGLElementArrayBuffer(a.__id);
                    this.gl.drawElements(this.gl.TRIANGLES, c, this.gl.UNSIGNED_SHORT, 2 * b)
                },
                present: function() {
                    this.setRenderToBackBuffer();
                    if (null != this.__stage3D && null != this.__backBufferTexture) {
                        this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
                        var a = this.__backBufferTexture;
                        this.__backBufferTexture = this.__frontBufferTexture;
                        this.__frontBufferTexture = a;
                        this.__state.__primaryGLFramebuffer = this.__backBufferTexture.__getGLFramebuffer(this.__state.backBufferEnableDepthAndStencil, this.__backBufferAntiAlias, 0);
                        this.__cleared = !1
                    }
                    this.__present = !0
                },
                setBlendFactors: function(a, b) {
                    this.setBlendFactorsSeparate(a, b, a, b)
                },
                setBlendFactorsSeparate: function(a, b, c, d) {
                    this.__state.blendSourceRGBFactor = a;
                    this.__state.blendDestinationRGBFactor = b;
                    this.__state.blendSourceAlphaFactor = c;
                    this.__state.blendDestinationAlphaFactor = d;
                    this.__setGLBlendEquation(this.gl.FUNC_ADD)
                },
                setColorMask: function(a, b, c, d) {
                    this.__state.colorMaskRed = a;
                    this.__state.colorMaskGreen = b;
                    this.__state.colorMaskBlue = c;
                    this.__state.colorMaskAlpha = d
                },
                setCulling: function(a) {
                    this.__state.culling =
                        a
                },
                setDepthTest: function(a, b) {
                    this.__state.depthMask = a;
                    this.__state.depthCompareMode = b
                },
                setProgram: function(a) {
                    this.__state.program = a;
                    this.__state.shader = null;
                    if (null != a)
                        for (var b = 0, c = a.__samplerStates.length; b < c;) {
                            var d = b++;
                            null == this.__state.samplerStates[d] ? this.__state.samplerStates[d] = a.__samplerStates[d].clone() : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d])
                        }
                },
                setProgramConstantsFromMatrix: function(a, b, c, d) {
                    null == d && (d = !1);
                    if (null != this.__state.program && 1 == this.__state.program.__format) this.__flushGLProgram(),
                        a = new Float32Array(16), a[0] = c.rawData.get(0), a[1] = c.rawData.get(1), a[2] = c.rawData.get(2), a[3] = c.rawData.get(3), a[4] = c.rawData.get(4), a[5] = c.rawData.get(5), a[6] = c.rawData.get(6), a[7] = c.rawData.get(7), a[8] = c.rawData.get(8), a[9] = c.rawData.get(9), a[10] = c.rawData.get(10), a[11] = c.rawData.get(11), a[12] = c.rawData.get(12), a[13] = c.rawData.get(13), a[14] = c.rawData.get(14), a[15] = c.rawData.get(15), pc.uniformMatrix4fv(this.gl, b, d, a);
                    else {
                        var e = (a = 1 == a) ? this.__vertexConstants : this.__fragmentConstants;
                        c = c.rawData;
                        var f = 4 * b;
                        d ? (e[f++] = c.get(0), e[f++] = c.get(4), e[f++] = c.get(8), e[f++] = c.get(12), e[f++] = c.get(1), e[f++] = c.get(5), e[f++] = c.get(9), e[f++] = c.get(13), e[f++] = c.get(2), e[f++] = c.get(6), e[f++] = c.get(10), e[f++] = c.get(14), e[f++] = c.get(3), e[f++] = c.get(7), e[f++] = c.get(11)) : (e[f++] = c.get(0), e[f++] = c.get(1), e[f++] = c.get(2), e[f++] = c.get(3), e[f++] = c.get(4), e[f++] = c.get(5), e[f++] = c.get(6), e[f++] = c.get(7), e[f++] = c.get(8), e[f++] = c.get(9), e[f++] = c.get(10), e[f++] = c.get(11), e[f++] = c.get(12), e[f++] = c.get(13), e[f++] = c.get(14));
                        e[f++] = c.get(15);
                        null != this.__state.program && this.__state.program.__markDirty(a, b, 4)
                    }
                },
                setRenderToBackBuffer: function() {
                    this.__state.renderToTexture = null
                },
                setRenderToTexture: function(a, b, c, d) {
                    null == d && (d = 0);
                    null == c && (c = 0);
                    null == b && (b = !1);
                    this.__state.renderToTexture = a;
                    this.__state.renderToTextureDepthStencil = b;
                    this.__state.renderToTextureAntiAlias = c;
                    this.__state.renderToTextureSurfaceSelector = d
                },
                setSamplerStateAt: function(a, b, c, d) {
                    null == this.__state.samplerStates[a] && (this.__state.samplerStates[a] =
                        new cg);
                    a = this.__state.samplerStates[a];
                    a.wrap = b;
                    a.filter = c;
                    a.mipfilter = d
                },
                setScissorRectangle: function(a) {
                    null != a ? (this.__state.scissorEnabled = !0, this.__state.scissorRectangle.copyFrom(a)) : this.__state.scissorEnabled = !1
                },
                setStencilActions: function(a, b, c, d, e) {
                    null == e && (e = 5);
                    null == d && (d = 5);
                    null == c && (c = 5);
                    null == b && (b = 0);
                    null == a && (a = 2);
                    this.__state.stencilTriangleFace = a;
                    this.__state.stencilCompareMode = b;
                    this.__state.stencilPass = c;
                    this.__state.stencilDepthFail = d;
                    this.__state.stencilFail = e
                },
                setStencilReferenceValue: function(a,
                    b, c) {
                    null == c && (c = 255);
                    null == b && (b = 255);
                    this.__state.stencilReferenceValue = a;
                    this.__state.stencilReadMask = b;
                    this.__state.stencilWriteMask = c
                },
                setTextureAt: function(a, b) {
                    this.__state.textures[a] = b
                },
                setVertexBufferAt: function(a, b, c, d) {
                    null == d && (d = 4);
                    null == c && (c = 0);
                    if (null == b) this.gl.disableVertexAttribArray(a), this.__bindGLArrayBuffer(null);
                    else switch (this.__bindGLArrayBuffer(b.__id), this.gl.enableVertexAttribArray(a), c *= 4, d) {
                        case 0:
                            this.gl.vertexAttribPointer(a, 4, this.gl.UNSIGNED_BYTE, !0, b.__stride,
                                c);
                            break;
                        case 1:
                            this.gl.vertexAttribPointer(a, 1, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        case 2:
                            this.gl.vertexAttribPointer(a, 2, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        case 3:
                            this.gl.vertexAttribPointer(a, 3, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        case 4:
                            this.gl.vertexAttribPointer(a, 4, this.gl.FLOAT, !1, b.__stride, c);
                            break;
                        default:
                            throw F.thrown(new yc);
                    }
                },
                __bindGLArrayBuffer: function(a) {
                    this.__contextState.__currentGLArrayBuffer != a && (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a), this.__contextState.__currentGLArrayBuffer =
                        a)
                },
                __bindGLElementArrayBuffer: function(a) {
                    this.__contextState.__currentGLElementArrayBuffer != a && (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a), this.__contextState.__currentGLElementArrayBuffer = a)
                },
                __bindGLFramebuffer: function(a) {
                    this.__contextState.__currentGLFramebuffer != a && (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a), this.__contextState.__currentGLFramebuffer = a)
                },
                __bindGLTexture2D: function(a) {
                    this.gl.bindTexture(this.gl.TEXTURE_2D, a);
                    this.__contextState.__currentGLTexture2D = a
                },
                __bindGLTextureCubeMap: function(a) {
                    this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP,
                        a);
                    this.__contextState.__currentGLTextureCubeMap = a
                },
                __dispose: function() {
                    this.driverInfo += " (Disposed)";
                    null != this.__stage3D && (this.__stage3D.__indexBuffer = null, this.__stage3D.__vertexBuffer = null, this.__stage3D = this.__stage3D.context3D = null);
                    this.__positionScale = this.__frontBufferTexture = this.__fragmentConstants = this.__renderStage3DProgram = this.__context = this.__backBufferTexture = null;
                    this.__present = !1;
                    this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null
                },
                __drawTriangles: function(a, b) {
                    null ==
                        a && (a = 0);
                    null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1) : this.__stage.__renderer.__clear());
                    this.__flushGL();
                    null != this.__state.program && this.__state.program.__flush();
                    this.gl.drawArrays(this.gl.TRIANGLES, a, b)
                },
                __flushGL: function() {
                    this.__flushGLProgram();
                    this.__flushGLFramebuffer();
                    this.__flushGLViewport();
                    this.__flushGLBlend();
                    if (this.__contextState.colorMaskRed != this.__state.colorMaskRed || this.__contextState.colorMaskGreen !=
                        this.__state.colorMaskGreen || this.__contextState.colorMaskBlue != this.__state.colorMaskBlue || this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha) this.gl.colorMask(this.__state.colorMaskRed, this.__state.colorMaskGreen, this.__state.colorMaskBlue, this.__state.colorMaskAlpha), this.__contextState.colorMaskRed = this.__state.colorMaskRed, this.__contextState.colorMaskGreen = this.__state.colorMaskGreen, this.__contextState.colorMaskBlue = this.__state.colorMaskBlue, this.__contextState.colorMaskAlpha =
                        this.__state.colorMaskAlpha;
                    this.__flushGLCulling();
                    this.__flushGLDepth();
                    this.__flushGLScissor();
                    this.__flushGLStencil();
                    this.__flushGLTextures()
                },
                __flushGLBlend: function() {
                    if (this.__contextState.blendDestinationRGBFactor != this.__state.blendDestinationRGBFactor || this.__contextState.blendSourceRGBFactor != this.__state.blendSourceRGBFactor || this.__contextState.blendDestinationAlphaFactor != this.__state.blendDestinationAlphaFactor || this.__contextState.blendSourceAlphaFactor != this.__state.blendSourceAlphaFactor) this.__setGLBlend(!0),
                        this.__state.blendDestinationRGBFactor == this.__state.blendDestinationAlphaFactor && this.__state.blendSourceRGBFactor == this.__state.blendSourceAlphaFactor ? this.gl.blendFunc(this.__getGLBlend(this.__state.blendSourceRGBFactor), this.__getGLBlend(this.__state.blendDestinationRGBFactor)) : this.gl.blendFuncSeparate(this.__getGLBlend(this.__state.blendSourceRGBFactor), this.__getGLBlend(this.__state.blendDestinationRGBFactor), this.__getGLBlend(this.__state.blendSourceAlphaFactor), this.__getGLBlend(this.__state.blendDestinationAlphaFactor)),
                        this.__contextState.blendDestinationRGBFactor = this.__state.blendDestinationRGBFactor, this.__contextState.blendSourceRGBFactor = this.__state.blendSourceRGBFactor, this.__contextState.blendDestinationAlphaFactor = this.__state.blendDestinationAlphaFactor, this.__contextState.blendSourceAlphaFactor = this.__state.blendSourceAlphaFactor
                },
                __flushGLCulling: function() {
                    if (this.__contextState.culling != this.__state.culling) {
                        if (3 == this.__state.culling) this.__setGLCullFace(!1);
                        else switch (this.__setGLCullFace(!0), this.__state.culling) {
                            case 0:
                                this.gl.cullFace(this.gl.BACK);
                                break;
                            case 1:
                                this.gl.cullFace(this.gl.FRONT);
                                break;
                            case 2:
                                this.gl.cullFace(this.gl.FRONT_AND_BACK);
                                break;
                            case 3:
                                break;
                            default:
                                throw F.thrown(new yc);
                        }
                        this.__contextState.culling = this.__state.culling
                    }
                },
                __flushGLDepth: function() {
                    var a = this.__state.depthMask && (null != this.__state.renderToTexture ? this.__state.renderToTextureDepthStencil : this.__state.backBufferEnableDepthAndStencil);
                    this.__contextState.depthMask != a && (this.gl.depthMask(a), this.__contextState.depthMask = a);
                    if (this.__contextState.depthCompareMode !=
                        this.__state.depthCompareMode) {
                        switch (this.__state.depthCompareMode) {
                            case 0:
                                this.gl.depthFunc(this.gl.ALWAYS);
                                break;
                            case 1:
                                this.gl.depthFunc(this.gl.EQUAL);
                                break;
                            case 2:
                                this.gl.depthFunc(this.gl.GREATER);
                                break;
                            case 3:
                                this.gl.depthFunc(this.gl.GEQUAL);
                                break;
                            case 4:
                                this.gl.depthFunc(this.gl.LESS);
                                break;
                            case 5:
                                this.gl.depthFunc(this.gl.LEQUAL);
                                break;
                            case 6:
                                this.gl.depthFunc(this.gl.NEVER);
                                break;
                            case 7:
                                this.gl.depthFunc(this.gl.NOTEQUAL);
                                break;
                            default:
                                throw F.thrown(new yc);
                        }
                        this.__contextState.depthCompareMode =
                            this.__state.depthCompareMode
                    }
                },
                __flushGLFramebuffer: function() {
                    if (null != this.__state.renderToTexture) {
                        if (this.__contextState.renderToTexture != this.__state.renderToTexture || this.__contextState.renderToTextureSurfaceSelector != this.__state.renderToTextureSurfaceSelector) {
                            var a = this.__state.renderToTexture.__getGLFramebuffer(this.__state.renderToTextureDepthStencil, this.__state.renderToTextureAntiAlias, this.__state.renderToTextureSurfaceSelector);
                            this.__bindGLFramebuffer(a);
                            this.__contextState.renderToTexture =
                                this.__state.renderToTexture;
                            this.__contextState.renderToTextureAntiAlias = this.__state.renderToTextureAntiAlias;
                            this.__contextState.renderToTextureDepthStencil = this.__state.renderToTextureDepthStencil;
                            this.__contextState.renderToTextureSurfaceSelector = this.__state.renderToTextureSurfaceSelector
                        }
                        this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
                        this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
                        this.__setGLFrontFace(!0)
                    } else {
                        if (null == this.__stage && 0 == this.backBufferWidth &&
                            0 == this.backBufferHeight) throw F.thrown(new cb("Context3D backbuffer has not been configured"));
                        if (null != this.__contextState.renderToTexture || this.__contextState.__currentGLFramebuffer != this.__state.__primaryGLFramebuffer || this.__contextState.backBufferEnableDepthAndStencil != this.__state.backBufferEnableDepthAndStencil) this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer), this.__contextState.renderToTexture = null, this.__contextState.backBufferEnableDepthAndStencil = this.__state.backBufferEnableDepthAndStencil;
                        this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
                        this.__setGLStencilTest(this.__state.backBufferEnableDepthAndStencil);
                        this.__setGLFrontFace(this.__stage.context3D != this)
                    }
                },
                __flushGLProgram: function() {
                    var a = this.__state.shader,
                        b = this.__state.program;
                    this.__contextState.shader != a && (null != this.__contextState.shader && this.__contextState.shader.__disable(), null != a && a.__enable(), this.__contextState.shader = a);
                    this.__contextState.program != b && (null != this.__contextState.program && this.__contextState.program.__disable(),
                        null != b && b.__enable(), this.__contextState.program = b);
                    null != b && 0 == b.__format && (this.__positionScale[1] = this.__stage.context3D == this && null == this.__state.renderToTexture ? 1 : -1, b.__setPositionScale(this.__positionScale))
                },
                __flushGLScissor: function() {
                    if (this.__state.scissorEnabled) {
                        this.__setGLScissorTest(!0);
                        this.__contextState.scissorEnabled = !0;
                        var a = this.__state.scissorRectangle.x | 0,
                            b = this.__state.scissorRectangle.y | 0,
                            c = this.__state.scissorRectangle.width | 0,
                            d = this.__state.scissorRectangle.height | 0;
                        null ==
                            this.__state.renderToTexture && null == this.__stage3D && (b = (this.__stage.window.__height * this.__stage.window.__scale | 0) - (this.__state.scissorRectangle.height | 0) - b);
                        if (this.__contextState.scissorRectangle.x != a || this.__contextState.scissorRectangle.y != b || this.__contextState.scissorRectangle.width != c || this.__contextState.scissorRectangle.height != d) this.gl.scissor(a, b, c, d), this.__contextState.scissorRectangle.setTo(a, b, c, d)
                    } else this.__contextState.scissorEnabled != this.__state.scissorEnabled && (this.__setGLScissorTest(!1),
                        this.__contextState.scissorEnabled = !1)
                },
                __flushGLStencil: function() {
                    if (this.__contextState.stencilTriangleFace != this.__state.stencilTriangleFace || this.__contextState.stencilPass != this.__state.stencilPass || this.__contextState.stencilDepthFail != this.__state.stencilDepthFail || this.__contextState.stencilFail != this.__state.stencilFail) this.gl.stencilOpSeparate(this.__getGLTriangleFace(this.__state.stencilTriangleFace), this.__getGLStencilAction(this.__state.stencilFail), this.__getGLStencilAction(this.__state.stencilDepthFail),
                        this.__getGLStencilAction(this.__state.stencilPass)), this.__contextState.stencilTriangleFace = this.__state.stencilTriangleFace, this.__contextState.stencilPass = this.__state.stencilPass, this.__contextState.stencilDepthFail = this.__state.stencilDepthFail, this.__contextState.stencilFail = this.__state.stencilFail;
                    this.__contextState.stencilWriteMask != this.__state.stencilWriteMask && (this.gl.stencilMask(this.__state.stencilWriteMask), this.__contextState.stencilWriteMask = this.__state.stencilWriteMask);
                    if (this.__contextState.stencilCompareMode !=
                        this.__state.stencilCompareMode || this.__contextState.stencilReferenceValue != this.__state.stencilReferenceValue || this.__contextState.stencilReadMask != this.__state.stencilReadMask) this.gl.stencilFunc(this.__getGLCompareMode(this.__state.stencilCompareMode), this.__state.stencilReferenceValue, this.__state.stencilReadMask), this.__contextState.stencilCompareMode = this.__state.stencilCompareMode, this.__contextState.stencilReferenceValue = this.__state.stencilReferenceValue, this.__contextState.stencilReadMask =
                        this.__state.stencilReadMask
                },
                __flushGLTextures: function() {
                    for (var a = 0, b, c, d = 0, e = this.__state.textures.length; d < e;) {
                        var f = d++;
                        b = this.__state.textures[f];
                        c = this.__state.samplerStates[f];
                        null == c && (this.__state.samplerStates[f] = new cg, c = this.__state.samplerStates[f]);
                        this.gl.activeTexture(this.gl.TEXTURE0 + a);
                        null != b ? (b.__textureTarget == this.gl.TEXTURE_2D ? this.__bindGLTexture2D(b.__getTexture()) : this.__bindGLTextureCubeMap(b.__getTexture()), this.__contextState.textures[f] = b, b.__setSamplerState(c)) : this.__bindGLTexture2D(null);
                        null != this.__state.program && 0 == this.__state.program.__format && c.textureAlpha && (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4), null != b && null != b.__alphaTexture ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture()) : this.__bindGLTextureCubeMap(b.__alphaTexture.__getTexture()), b.__alphaTexture.__setSamplerState(c), this.gl.uniform1i(this.__state.program.__agalAlphaSamplerEnabled[a].location, 1)) : (this.__bindGLTexture2D(null), null != this.__state.program.__agalAlphaSamplerEnabled[a] &&
                            this.gl.uniform1i(this.__state.program.__agalAlphaSamplerEnabled[a].location, 0)));
                        ++a
                    }
                },
                __flushGLViewport: function() {
                    if (null == this.__state.renderToTexture)
                        if (this.__stage.context3D == this) {
                            var a = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                                b = this.__stage.window.__height * this.__stage.window.__scale - this.backBufferHeight - (null == this.__stage3D ? 0 : this.__stage3D.get_y()) | 0;
                            this.gl.viewport(a, b, this.backBufferWidth, this.backBufferHeight)
                        } else this.gl.viewport(0, 0, this.backBufferWidth, this.backBufferHeight);
                    else b = a = 0, this.__state.renderToTexture instanceof Uj ? (b = this.__state.renderToTexture, a = b.__width, b = b.__height) : this.__state.renderToTexture instanceof Lh ? (b = this.__state.renderToTexture, a = b.__width, b = b.__height) : this.__state.renderToTexture instanceof Vj && (b = this.__state.renderToTexture, b = a = b.__size), this.gl.viewport(0, 0, a, b)
                },
                __getGLBlend: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.DST_ALPHA;
                        case 1:
                            return this.gl.DST_COLOR;
                        case 2:
                            return this.gl.ONE;
                        case 3:
                            return this.gl.ONE_MINUS_DST_ALPHA;
                        case 4:
                            return this.gl.ONE_MINUS_DST_COLOR;
                        case 5:
                            return this.gl.ONE_MINUS_SRC_ALPHA;
                        case 6:
                            return this.gl.ONE_MINUS_SRC_COLOR;
                        case 7:
                            return this.gl.SRC_ALPHA;
                        case 8:
                            return this.gl.SRC_COLOR;
                        case 9:
                            return this.gl.ZERO;
                        default:
                            throw F.thrown(new yc);
                    }
                },
                __getGLCompareMode: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.ALWAYS;
                        case 1:
                            return this.gl.EQUAL;
                        case 2:
                            return this.gl.GREATER;
                        case 3:
                            return this.gl.GEQUAL;
                        case 4:
                            return this.gl.LESS;
                        case 5:
                            return this.gl.LEQUAL;
                        case 6:
                            return this.gl.NEVER;
                        case 7:
                            return this.gl.NOTEQUAL;
                        default:
                            return this.gl.EQUAL
                    }
                },
                __getGLStencilAction: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.DECR;
                        case 1:
                            return this.gl.DECR_WRAP;
                        case 2:
                            return this.gl.INCR;
                        case 3:
                            return this.gl.INCR_WRAP;
                        case 4:
                            return this.gl.INVERT;
                        case 5:
                            return this.gl.KEEP;
                        case 6:
                            return this.gl.REPLACE;
                        case 7:
                            return this.gl.ZERO;
                        default:
                            return this.gl.KEEP
                    }
                },
                __getGLTriangleFace: function(a) {
                    switch (a) {
                        case 0:
                            return this.gl.BACK;
                        case 1:
                            return this.gl.FRONT;
                        case 2:
                            return this.gl.FRONT_AND_BACK;
                        case 3:
                            return this.gl.NONE;
                        default:
                            return this.gl.FRONT_AND_BACK
                    }
                },
                __renderStage3D: function(a) {
                    var b = a.context3D;
                    if (null != b && b != this && null != b.__frontBufferTexture && a.visible && 0 < this.backBufferHeight && 0 < this.backBufferWidth) {
                        if (null == this.__renderStage3DProgram) {
                            var c = new ba;
                            c.assemble(rm.toString(1), "m44 op, va0, vc0\nmov v0, va1");
                            var d = new ba;
                            d.assemble(rm.toString(0), "tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1");
                            this.__renderStage3DProgram = this.createProgram();
                            this.__renderStage3DProgram.upload(c.agalcode, d.agalcode)
                        }
                        this.setProgram(this.__renderStage3DProgram);
                        this.setBlendFactors(2, 9);
                        this.setColorMask(!0, !0, !0, !0);
                        this.setCulling(3);
                        this.setDepthTest(!1, 0);
                        this.setStencilActions();
                        this.setStencilReferenceValue(0, 0, 0);
                        this.setScissorRectangle(null);
                        this.setTextureAt(0, b.__frontBufferTexture);
                        this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
                        this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
                        this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
                        this.drawTriangles(a.__indexBuffer);
                        this.__present = !0
                    }
                },
                __setGLBlend: function(a) {
                    this.__contextState.__enableGLBlend !=
                        a && (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND), this.__contextState.__enableGLBlend = a)
                },
                __setGLBlendEquation: function(a) {
                    this.__contextState.__glBlendEquation != a && (this.gl.blendEquation(a), this.__contextState.__glBlendEquation = a)
                },
                __setGLCullFace: function(a) {
                    this.__contextState.__enableGLCullFace != a && (a ? this.gl.enable(this.gl.CULL_FACE) : this.gl.disable(this.gl.CULL_FACE), this.__contextState.__enableGLCullFace = a)
                },
                __setGLDepthTest: function(a) {
                    this.__contextState.__enableGLDepthTest !=
                        a && (a ? this.gl.enable(this.gl.DEPTH_TEST) : this.gl.disable(this.gl.DEPTH_TEST), this.__contextState.__enableGLDepthTest = a)
                },
                __setGLFrontFace: function(a) {
                    this.__contextState.__frontFaceGLCCW != a && (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW), this.__contextState.__frontFaceGLCCW = a)
                },
                __setGLScissorTest: function(a) {
                    this.__contextState.__enableGLScissorTest != a && (a ? this.gl.enable(this.gl.SCISSOR_TEST) : this.gl.disable(this.gl.SCISSOR_TEST), this.__contextState.__enableGLScissorTest = a)
                },
                __setGLStencilTest: function(a) {
                    this.__contextState.__enableGLStencilTest !=
                        a && (a ? this.gl.enable(this.gl.STENCIL_TEST) : this.gl.disable(this.gl.STENCIL_TEST), this.__contextState.__enableGLStencilTest = a)
                },
                __class__: db
            });
            var qm = {
                    fromString: function(a) {
                        switch (a) {
                            case "dynamicDraw":
                                return 0;
                            case "staticDraw":
                                return 1;
                            default:
                                return null
                        }
                    },
                    toString: function(a) {
                        switch (a) {
                            case 0:
                                return "dynamicDraw";
                            case 1:
                                return "staticDraw";
                            default:
                                return null
                        }
                    }
                },
                rm = {
                    toString: function(a) {
                        switch (a) {
                            case 0:
                                return "fragment";
                            case 1:
                                return "vertex";
                            default:
                                return null
                        }
                    }
                },
                Im = {
                    toString: function(a) {
                        switch (a) {
                            case 0:
                                return "bgrPacked565";
                            case 1:
                                return "bgra";
                            case 2:
                                return "bgraPacked4444";
                            case 3:
                                return "compressed";
                            case 4:
                                return "compressedAlpha";
                            case 5:
                                return "rgbaHalfFloat";
                            default:
                                return null
                        }
                    }
                },
                yl = function(a, b, c) {
                    this.__context = a;
                    this.__numIndices = b;
                    a = this.__context.gl;
                    this.__id = a.createBuffer();
                    this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW
                };
            g["openfl.display3D.IndexBuffer3D"] = yl;
            yl.__name__ = "openfl.display3D.IndexBuffer3D";
            yl.prototype = {
                uploadFromTypedArray: function(a, b) {
                    null != a && (b = this.__context.gl, this.__context.__bindGLElementArrayBuffer(this.__id),
                        pc.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage))
                },
                uploadFromVector: function(a, b, c) {
                    if (null != a) {
                        var d = b + c,
                            e = this.__tempUInt16Array;
                        if (null == this.__tempUInt16Array || this.__tempUInt16Array.length < c) this.__tempUInt16Array = null != c ? new Uint16Array(c) : null, null != e && this.__tempUInt16Array.set(e);
                        for (c = b; c < d;) e = c++, this.__tempUInt16Array[e - b] = a.get(e);
                        this.uploadFromTypedArray(this.__tempUInt16Array)
                    }
                },
                __class__: yl
            };
            var zl = function(a, b) {
                this.__context = a;
                this.__format = b;
                0 == this.__format ? (this.__agalSamplerUsageMask =
                    0, this.__agalUniforms = new Wa, this.__agalSamplerUniforms = new Wa, this.__agalAlphaSamplerUniforms = new Wa, this.__agalAlphaSamplerEnabled = []) : (this.__glslAttribNames = [], this.__glslAttribTypes = [], this.__glslSamplerNames = [], this.__glslUniformLocations = [], this.__glslUniformNames = [], this.__glslUniformTypes = []);
                this.__samplerStates = []
            };
            g["openfl.display3D.Program3D"] = zl;
            zl.__name__ = "openfl.display3D.Program3D";
            zl.prototype = {
                upload: function(a, b) {
                    if (0 == this.__format) {
                        var c = [];
                        a = Jc.convertToGLSL(a, null);
                        b = Jc.convertToGLSL(b,
                            c);
                        5 == Aa.level && (Aa.info(a, {
                            fileName: "openfl/display3D/Program3D.hx",
                            lineNumber: 399,
                            className: "openfl.display3D.Program3D",
                            methodName: "upload"
                        }), Aa.info(b, {
                            fileName: "openfl/display3D/Program3D.hx",
                            lineNumber: 400,
                            className: "openfl.display3D.Program3D",
                            methodName: "upload"
                        }));
                        this.__deleteShaders();
                        this.__uploadFromGLSL(a, b);
                        this.__buildAGALUniformList();
                        b = 0;
                        for (a = c.length; b < a;) {
                            var d = b++;
                            this.__samplerStates[d] = c[d]
                        }
                    }
                },
                __buildAGALUniformList: function() {
                    if (1 != this.__format) {
                        var a = this.__context.gl;
                        this.__agalUniforms.clear();
                        this.__agalSamplerUniforms.clear();
                        this.__agalAlphaSamplerUniforms.clear();
                        this.__agalAlphaSamplerEnabled = [];
                        this.__agalSamplerUsageMask = 0;
                        var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
                        for (var c = new Wa, d = new Wa, e = 0; e < b;) {
                            var f = e++,
                                k = a.getActiveUniform(this.__glProgram, f),
                                p = k.name,
                                m = k.size,
                                h = k.type;
                            k = new Wj(this.__context);
                            k.name = p;
                            k.size = m;
                            k.type = h;
                            k.location = a.getUniformLocation(this.__glProgram, k.name);
                            p = k.name.indexOf("[");
                            0 <= p && (k.name = k.name.substring(0, p));
                            switch (k.type) {
                                case 35674:
                                    k.regCount =
                                        2;
                                    break;
                                case 35675:
                                    k.regCount = 3;
                                    break;
                                case 35676:
                                    k.regCount = 4;
                                    break;
                                default:
                                    k.regCount = 1
                            }
                            k.regCount *= k.size;
                            this.__agalUniforms.add(k);
                            if ("vcPositionScale" == k.name) this.__agalPositionScale = k;
                            else if (K.startsWith(k.name, "vc")) k.regIndex = I.parseInt(k.name.substring(2)), k.regData = this.__context.__vertexConstants, c.add(k);
                            else if (K.startsWith(k.name, "fc")) k.regIndex = I.parseInt(k.name.substring(2)), k.regData = this.__context.__fragmentConstants, d.add(k);
                            else if (K.startsWith(k.name, "sampler") && -1 == k.name.indexOf("alpha"))
                                for (k.regIndex =
                                    I.parseInt(k.name.substring(7)), this.__agalSamplerUniforms.add(k), p = 0, m = k.regCount; p < m;) h = p++, this.__agalSamplerUsageMask |= 1 << k.regIndex + h;
                            else K.startsWith(k.name, "sampler") && K.endsWith(k.name, "_alpha") ? (p = k.name.indexOf("_") - 7, k.regIndex = I.parseInt(k.name.substring(7, 7 + p)) + 4, this.__agalAlphaSamplerUniforms.add(k)) : K.startsWith(k.name, "sampler") && K.endsWith(k.name, "_alphaEnabled") && (k.regIndex = I.parseInt(k.name.substring(7)), this.__agalAlphaSamplerEnabled[k.regIndex] = k);
                            5 == Aa.level && Aa.verbose("" +
                                f + " name:" + k.name + " type:" + k.type + " size:" + k.size + " location:" + I.string(k.location), {
                                    fileName: "openfl/display3D/Program3D.hx",
                                    lineNumber: 577,
                                    className: "openfl.display3D.Program3D",
                                    methodName: "__buildAGALUniformList"
                                })
                        }
                        this.__agalVertexUniformMap = new Mh(Zg.array(c));
                        this.__agalFragmentUniformMap = new Mh(Zg.array(d))
                    }
                },
                __deleteShaders: function() {
                    var a = this.__context.gl;
                    null != this.__glProgram && (this.__glProgram = null);
                    null != this.__glVertexShader && (a.deleteShader(this.__glVertexShader), this.__glVertexShader =
                        null);
                    null != this.__glFragmentShader && (a.deleteShader(this.__glFragmentShader), this.__glFragmentShader = null)
                },
                __disable: function() {},
                __enable: function() {
                    var a = this.__context.gl;
                    a.useProgram(this.__glProgram);
                    if (0 == this.__format) {
                        this.__agalVertexUniformMap.markAllDirty();
                        this.__agalFragmentUniformMap.markAllDirty();
                        for (var b = this.__agalSamplerUniforms.h; null != b;) {
                            var c = b.item;
                            b = b.next;
                            if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
                            else throw F.thrown(new yc("!!! TODO: uniform location on webgl"));
                        }
                        for (b = this.__agalAlphaSamplerUniforms.h; null != b;)
                            if (c = b.item, b = b.next, 1 == c.regCount) a.uniform1i(c.location, c.regIndex);
                            else throw F.thrown(new yc("!!! TODO: uniform location on webgl"));
                    }
                },
                __flush: function() {
                    0 == this.__format && (this.__agalVertexUniformMap.flush(), this.__agalFragmentUniformMap.flush())
                },
                __markDirty: function(a, b, c) {
                    1 != this.__format && (a ? this.__agalVertexUniformMap.markDirty(b, c) : this.__agalFragmentUniformMap.markDirty(b, c))
                },
                __setPositionScale: function(a) {
                    1 != this.__format && null != this.__agalPositionScale &&
                        this.__context.gl.uniform4fv(this.__agalPositionScale.location, a)
                },
                __uploadFromGLSL: function(a, b) {
                    var c = this.__context.gl;
                    this.__glVertexSource = a;
                    this.__glFragmentSource = b;
                    this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
                    c.shaderSource(this.__glVertexShader, a);
                    c.compileShader(this.__glVertexShader);
                    if (0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)) {
                        var d = "Error compiling vertex shader\n" + c.getShaderInfoLog(this.__glVertexShader);
                        Aa.error(d + ("\n" + a), {
                            fileName: "openfl/display3D/Program3D.hx",
                            lineNumber: 869,
                            className: "openfl.display3D.Program3D",
                            methodName: "__uploadFromGLSL"
                        })
                    }
                    this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
                    c.shaderSource(this.__glFragmentShader, b);
                    c.compileShader(this.__glFragmentShader);
                    0 == c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) && (d = "Error compiling fragment shader\n" + c.getShaderInfoLog(this.__glFragmentShader), Aa.error(d + ("\n" + b), {
                        fileName: "openfl/display3D/Program3D.hx",
                        lineNumber: 881,
                        className: "openfl.display3D.Program3D",
                        methodName: "__uploadFromGLSL"
                    }));
                    this.__glProgram = c.createProgram();
                    if (0 == this.__format)
                        for (b = 0; 16 > b;) {
                            var e = b++;
                            d = "va" + e; - 1 != a.indexOf(" " + d) && c.bindAttribLocation(this.__glProgram, e, d)
                        } else
                            for (b = 0, a = this.__glslAttribNames; b < a.length;)
                                if (d = a[b], ++b, -1 < d.indexOf("Position") && K.startsWith(d, "openfl_")) {
                                    c.bindAttribLocation(this.__glProgram, 0, d);
                                    break
                                }
                    c.attachShader(this.__glProgram, this.__glVertexShader);
                    c.attachShader(this.__glProgram, this.__glFragmentShader);
                    c.linkProgram(this.__glProgram);
                    0 == c.getProgramParameter(this.__glProgram,
                        c.LINK_STATUS) && (d = "Unable to initialize the shader program\n" + c.getProgramInfoLog(this.__glProgram), Aa.error(d, {
                        fileName: "openfl/display3D/Program3D.hx",
                        lineNumber: 922,
                        className: "openfl.display3D.Program3D",
                        methodName: "__uploadFromGLSL"
                    }))
                },
                __class__: zl
            };
            var Wj = function(a) {
                this.context = a;
                this.isDirty = !0;
                this.regDataPointer = new vl(null, 0)
            };
            g["openfl.display3D.Uniform"] = Wj;
            Wj.__name__ = "openfl.display3D.Uniform";
            Wj.prototype = {
                flush: function() {
                    var a = this.context.gl,
                        b = 4 * this.regIndex;
                    switch (this.type) {
                        case 35664:
                            Bm.uniform2fv(a,
                                this.location, this.regData.subarray(b, b + 2 * this.regCount));
                            break;
                        case 35665:
                            var c = this.location;
                            b = this.regData.subarray(b, b + 3 * this.regCount);
                            var d = null;
                            null != d ? a.uniform3fv(c, b, d, null) : a.uniform3fv(c, b);
                            break;
                        case 35666:
                            c = this.location;
                            b = this.regData.subarray(b, b + 4 * this.regCount);
                            d = null;
                            null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
                            break;
                        case 35674:
                            pc.uniformMatrix2fv(a, this.location, !1, this.regData.subarray(b, b + 4 * this.size));
                            break;
                        case 35675:
                            pc.uniformMatrix3fv(a, this.location, !1, this.regData.subarray(b,
                                b + 9 * this.size));
                            break;
                        case 35676:
                            pc.uniformMatrix4fv(a, this.location, !1, this.regData.subarray(b, b + 16 * this.size));
                            break;
                        default:
                            c = this.location, b = this.regData.subarray(b, b + 4 * this.regCount), d = null, null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b)
                    }
                },
                __class__: Wj
            };
            var Mh = function(a) {
                this.__uniforms = a;
                this.__uniforms.sort(function(a, b) {
                    return ea.compare(a.regIndex, b.regIndex)
                });
                var b = 0;
                a = 0;
                for (var c = this.__uniforms; a < c.length;) {
                    var d = c[a];
                    ++a;
                    d.regIndex + d.regCount > b && (b = d.regIndex + d.regCount)
                }
                this.__registerLookup =
                    ib.toObjectVector(null, b);
                a = 0;
                for (c = this.__uniforms; a < c.length;) {
                    d = c[a];
                    ++a;
                    b = 0;
                    for (var e = d.regCount; b < e;) {
                        var f = b++;
                        this.__registerLookup.set(d.regIndex + f, d)
                    }
                }
                this.__anyDirty = this.__allDirty = !0
            };
            g["openfl.display3D.UniformMap"] = Mh;
            Mh.__name__ = "openfl.display3D.UniformMap";
            Mh.prototype = {
                flush: function() {
                    if (this.__anyDirty) {
                        for (var a = 0, b = this.__uniforms; a < b.length;) {
                            var c = b[a];
                            ++a;
                            if (this.__allDirty || c.isDirty) c.flush(), c.isDirty = !1
                        }
                        this.__anyDirty = this.__allDirty = !1
                    }
                },
                markAllDirty: function() {
                    this.__anyDirty =
                        this.__allDirty = !0
                },
                markDirty: function(a, b) {
                    if (!this.__allDirty)
                        for (b = a + b, b > this.__registerLookup.get_length() && (b = this.__registerLookup.get_length()); a < b;) {
                            var c = this.__registerLookup.get(a);
                            null != c ? (this.__anyDirty = c.isDirty = !0, a = c.regIndex + c.regCount) : ++a
                        }
                },
                __class__: Mh
            };
            var Al = function(a, b, c, d) {
                this.__context = a;
                this.__numVertices = b;
                this.__vertexSize = c;
                a = this.__context.gl;
                this.__id = a.createBuffer();
                this.__stride = 4 * this.__vertexSize;
                this.__usage = 0 == qm.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW
            };
            g["openfl.display3D.VertexBuffer3D"] = Al;
            Al.__name__ = "openfl.display3D.VertexBuffer3D";
            Al.prototype = {
                uploadFromTypedArray: function(a, b) {
                    null != a && (b = this.__context.gl, this.__context.__bindGLArrayBuffer(this.__id), pc.bufferData(b, b.ARRAY_BUFFER, a, this.__usage))
                },
                uploadFromVector: function(a, b, c) {
                    if (null != a) {
                        b *= this.__vertexSize;
                        var d = c * this.__vertexSize;
                        c = b + d;
                        var e = this.__tempFloat32Array;
                        if (null == this.__tempFloat32Array || this.__tempFloat32Array.length < d) this.__tempFloat32Array = null != d ? new Float32Array(d) :
                            null, null != e && this.__tempFloat32Array.set(e);
                        for (d = b; d < c;) e = d++, this.__tempFloat32Array[e - b] = a.get(e);
                        this.uploadFromTypedArray(si.toArrayBufferView(this.__tempFloat32Array))
                    }
                },
                __class__: Al
            };
            var Kh = function() {
                this.backBufferEnableDepthAndStencil = !1;
                this.blendDestinationAlphaFactor = 9;
                this.blendSourceAlphaFactor = 2;
                this.blendDestinationRGBFactor = 9;
                this.blendSourceRGBFactor = 2;
                this.colorMaskAlpha = this.colorMaskBlue = this.colorMaskGreen = this.colorMaskRed = !0;
                this.culling = 3;
                this.depthCompareMode = 4;
                this.depthMask = !0;
                this.samplerStates = [];
                this.scissorRectangle = new fa;
                this.stencilCompareMode = 0;
                this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
                this.stencilReadMask = 255;
                this.stencilReferenceValue = 0;
                this.stencilTriangleFace = 2;
                this.stencilWriteMask = 255;
                this.textures = [];
                this.__frontFaceGLCCW = !0;
                this.__glBlendEquation = 32774
            };
            g["openfl.display3D._internal.Context3DState"] = Kh;
            Kh.__name__ = "openfl.display3D._internal.Context3DState";
            Kh.prototype = {
                __class__: Kh
            };
            var Jc = function() {};
            g["openfl.display3D._internal.agal.AGALConverter"] =
                Jc;
            Jc.__name__ = "openfl.display3D._internal.agal.AGALConverter";
            Jc.prefixFromType = function(a, b) {
                switch (a) {
                    case 0:
                        return "va";
                    case 1:
                        return b == dg.VERTEX ? "vc" : "fc";
                    case 2:
                        return b == dg.VERTEX ? "vt" : "ft";
                    case 3:
                        return "output_";
                    case 4:
                        return "v";
                    case 5:
                        return "sampler";
                    default:
                        throw F.thrown(new yc("Invalid data!"));
                }
            };
            Jc.readUInt64 = function(a) {
                var b = a.readInt();
                a = a.readInt();
                return new $a(a, b)
            };
            Jc.convertToGLSL = function(a, b) {
                a.position = 0;
                a.__endian = 1;
                var c = a.readByte() & 255;
                if (176 == c) return a.readUTF();
                if (160 !=
                    c) throw F.thrown(new yc("Magic value must be 0xA0, may not be AGAL"));
                var d = a.readInt();
                if (1 != d) throw F.thrown(new yc("Version must be 1"));
                if (161 != (a.readByte() & 255)) throw F.thrown(new yc("Shader type ID must be 0xA1"));
                c = 0 == (a.readByte() & 255) ? dg.VERTEX : dg.FRAGMENT;
                for (var e = new Xj, f = "";;) {
                    d = a.position;
                    if (!wc.gt(am.get_length(a), d)) break;
                    var k = a.readInt();
                    d = a.readUnsignedInt();
                    var p = Jc.readUInt64(a),
                        m = Jc.readUInt64(a);
                    d = Lg.parse(d, c);
                    p = eg.parse(p, c, d.mask);
                    var h = eg.parse(m, c, d.mask);
                    f += "\t";
                    switch (k) {
                        case 0:
                            f +=
                                I.string(d.toGLSL() + " = " + p.toGLSL() + "; // mov");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 1:
                            f += I.string(d.toGLSL() + " = " + p.toGLSL() + " + " + h.toGLSL() + "; // add");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 2:
                            f += I.string(d.toGLSL() + " = " + p.toGLSL() + " - " + h.toGLSL() + "; // sub");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 3:
                            f += I.string(d.toGLSL() + " = " + p.toGLSL() + " * " + h.toGLSL() + "; // mul");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p,
                                P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 4:
                            f += I.string(d.toGLSL() + " = " + p.toGLSL() + " / " + h.toGLSL() + "; // div");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 5:
                            f = -1 < p.toGLSL().indexOf(".") ? f + I.string(d.toGLSL() + " = 1.0 / " + p.toGLSL() + "; // rcp") : f + I.string(d.toGLSL() + " = vec4(1) / " + p.toGLSL() + "; // rcp");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 6:
                            f += I.string(d.toGLSL() + " = min(" + p.toGLSL() + ", " + h.toGLSL() + "); // min");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p,
                                P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 7:
                            f += I.string(d.toGLSL() + " = max(" + p.toGLSL() + ", " + h.toGLSL() + "); // max");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 8:
                            f += I.string(d.toGLSL() + " = fract(" + p.toGLSL() + "); // frc");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 9:
                            f += I.string(d.toGLSL() + " = sqrt(" + p.toGLSL() + "); // sqrt");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 10:
                            f += I.string(d.toGLSL() + " = inversesqrt(" + p.toGLSL() + "); // rsq");
                            e.addDR(d,
                                P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 11:
                            f += I.string(d.toGLSL() + " = pow(" + p.toGLSL() + ", " + h.toGLSL() + "); // pow");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 12:
                            f += I.string(d.toGLSL() + " = log2(" + p.toGLSL() + "); // log");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 13:
                            f += I.string(d.toGLSL() + " = exp2(" + p.toGLSL() + "); // exp");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 14:
                            f += I.string(d.toGLSL() + " = normalize(" + p.toGLSL() + "); // normalize");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 15:
                            f += I.string(d.toGLSL() + " = sin(" + p.toGLSL() + "); // sin");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 16:
                            f += I.string(d.toGLSL() + " = cos(" + p.toGLSL() + "); // cos");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 17:
                            p.sourceMask = h.sourceMask = 7;
                            f += I.string(d.toGLSL() + " = cross(vec3(" + p.toGLSL() + "), vec3(" + h.toGLSL() + ")); // crs");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 18:
                            p.sourceMask = h.sourceMask =
                                7;
                            f += I.string(d.toGLSL() + " = vec4(dot(vec3(" + p.toGLSL() + "), vec3(" + h.toGLSL() + ")))" + d.getWriteMask() + "; // dp3");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 19:
                            p.sourceMask = h.sourceMask = 15;
                            f += I.string(d.toGLSL() + " = vec4(dot(vec4(" + p.toGLSL() + "), vec4(" + h.toGLSL() + ")))" + d.getWriteMask() + "; // dp4");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 20:
                            f += I.string(d.toGLSL() + " = abs(" + p.toGLSL() + "); // abs");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p,
                                P.VECTOR_4);
                            break;
                        case 21:
                            f += I.string(d.toGLSL() + " = -" + p.toGLSL() + "; // neg");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 22:
                            f += I.string(d.toGLSL() + " = clamp(" + p.toGLSL() + ", 0.0, 1.0); // saturate");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            break;
                        case 23:
                            k = e.getRegisterUsage(h);
                            k != P.VECTOR_4 && k != P.VECTOR_4_ARRAY ? (f += I.string(d.toGLSL() + " = " + p.toGLSL() + " * mat3(" + h.toGLSL(!1) + "); // m33"), e.addDR(d, P.VECTOR_4), e.addSR(p, P.VECTOR_4), e.addSR(h, P.MATRIX_4_4)) : (p.sourceMask = h.sourceMask =
                                7, f += I.string(d.toGLSL() + " = vec3(dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 0) + "), dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 1) + "),dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 2) + ")); // m33"), e.addDR(d, P.VECTOR_4), e.addSR(p, P.VECTOR_4), e.addSR(h, P.VECTOR_4, 0), e.addSR(h, P.VECTOR_4, 1), e.addSR(h, P.VECTOR_4, 2));
                            break;
                        case 24:
                            k = e.getRegisterUsage(h);
                            k != P.VECTOR_4 && k != P.VECTOR_4_ARRAY ? (f += I.string(d.toGLSL() + " = " + p.toGLSL() + " * " + h.toGLSL(!1) + "; // m44"), e.addDR(d, P.VECTOR_4), e.addSR(p, P.VECTOR_4), e.addSR(h, P.MATRIX_4_4)) : (p.sourceMask =
                                h.sourceMask = 15, f += I.string(d.toGLSL() + " = vec4(dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 0) + "), dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 1) + "), dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 2) + "), dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 3) + ")); // m44"), e.addDR(d, P.VECTOR_4), e.addSR(p, P.VECTOR_4), e.addSR(h, P.VECTOR_4, 0), e.addSR(h, P.VECTOR_4, 1), e.addSR(h, P.VECTOR_4, 2), e.addSR(h, P.VECTOR_4, 3));
                            break;
                        case 25:
                            d.mask &= 7;
                            k = e.getRegisterUsage(h);
                            k != P.VECTOR_4 && k != P.VECTOR_4_ARRAY ? (f += I.string(d.toGLSL() + " = " + p.toGLSL() + " * " + h.toGLSL(!1) +
                                "; // m34"), e.addDR(d, P.VECTOR_4), e.addSR(p, P.VECTOR_4), e.addSR(h, P.MATRIX_4_4)) : (p.sourceMask = h.sourceMask = 15, f += I.string(d.toGLSL() + " = vec3(dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 0) + "), dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 1) + "),dot(" + p.toGLSL(!0) + "," + h.toGLSL(!0, 2) + ")); // m34"), e.addDR(d, P.VECTOR_4), e.addSR(p, P.VECTOR_4), e.addSR(h, P.VECTOR_4, 0), e.addSR(h, P.VECTOR_4, 1), e.addSR(h, P.VECTOR_4, 2));
                            break;
                        case 39:
                            p.sourceMask = 15;
                            f += I.string("if (any(lessThan(" + p.toGLSL() + ", vec4(0)))) discard;");
                            e.addSR(p,
                                P.VECTOR_4);
                            break;
                        case 40:
                            h = Mg.parse(m, c);
                            switch (h.d) {
                                case 0:
                                    2 == h.t ? (p.sourceMask = 3, e.addSaR(h, P.SAMPLER_2D_ALPHA), f += I.string("if (" + h.toGLSL() + "_alphaEnabled) {\n"), f += I.string("\t\t" + d.toGLSL() + " = vec4(texture2D(" + h.toGLSL() + ", " + p.toGLSL() + ").xyz, texture2D(" + h.toGLSL() + "_alpha, " + p.toGLSL() + ").x); // tex + alpha\n"), f += "\t} else {\n", f += I.string("\t\t" + d.toGLSL() + " = texture2D(" + h.toGLSL() + ", " + p.toGLSL() + "); // tex\n"), f += "\t}") : (p.sourceMask = 3, e.addSaR(h, P.SAMPLER_2D), f += I.string(d.toGLSL() +
                                        " = texture2D(" + h.toGLSL() + ", " + p.toGLSL() + "); // tex"));
                                    break;
                                case 1:
                                    2 == h.t ? (p.sourceMask = 7, e.addSaR(h, P.SAMPLER_CUBE_ALPHA), f += I.string("if (" + h.toGLSL() + "_alphaEnabled) {\n"), f += I.string("\t\t" + d.toGLSL() + " = vec4(textureCube(" + h.toGLSL() + ", " + p.toGLSL() + ").xyz, textureCube(" + h.toGLSL() + "_alpha, " + p.toGLSL() + ").x); // tex + alpha\n"), f += "\t} else {\n", f += I.string("\t\t" + d.toGLSL() + " = textureCube(" + h.toGLSL() + ", " + p.toGLSL() + "); // tex"), f += "\t}") : (p.sourceMask = 7, f += I.string(d.toGLSL() + " = textureCube(" +
                                        h.toGLSL() + ", " + p.toGLSL() + "); // tex"), e.addSaR(h, P.SAMPLER_CUBE))
                            }
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            null != b && (b[h.n] = h.toSamplerState());
                            break;
                        case 41:
                            p.sourceMask = h.sourceMask = 15;
                            f += I.string(d.toGLSL() + " = vec4(greaterThanEqual(" + p.toGLSL() + ", " + h.toGLSL() + "))" + d.getWriteMask() + "; // ste");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 42:
                            p.sourceMask = h.sourceMask = 15;
                            f += I.string(d.toGLSL() + " = vec4(lessThan(" + p.toGLSL() + ", " + h.toGLSL() + "))" + d.getWriteMask() +
                                "; // slt");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 44:
                            p.sourceMask = h.sourceMask = 15;
                            f += I.string(d.toGLSL() + " = vec4(equal(" + p.toGLSL() + ", " + h.toGLSL() + "))" + d.getWriteMask() + "; // seq");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        case 45:
                            p.sourceMask = h.sourceMask = 15;
                            f += I.string(d.toGLSL() + " = vec4(notEqual(" + p.toGLSL() + ", " + h.toGLSL() + "))" + d.getWriteMask() + "; // sne");
                            e.addDR(d, P.VECTOR_4);
                            e.addSR(p, P.VECTOR_4);
                            e.addSR(h, P.VECTOR_4);
                            break;
                        default:
                            throw F.thrown(new yc("Opcode " + k));
                    }
                    f += "\n"
                }
                null == Jc.limitedProfile && (d = Fh.context.getParameter(7938), Jc.limitedProfile = -1 < d.indexOf("OpenGL ES") || -1 < d.indexOf("WebGL"));
                a = "" + I.string("// AGAL " + (c == dg.VERTEX ? "vertex" : "fragment") + " shader\n");
                a = Jc.limitedProfile ? a + "#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n" : a + "#version 120\n";
                a += I.string(e.toGLSL(!1));
                c == dg.VERTEX && (a += "uniform vec4 vcPositionScale;\n");
                a = a + "void main() {\n" +
                    I.string(e.toGLSL(!0));
                a += I.string(f);
                c == dg.VERTEX && (a += "\tgl_Position *= vcPositionScale;\n");
                return a + "}\n"
            };
            var Lg = function() {};
            g["openfl.display3D._internal.agal._AGALConverter.DestRegister"] = Lg;
            Lg.__name__ = "openfl.display3D._internal.agal._AGALConverter.DestRegister";
            Lg.parse = function(a, b) {
                var c = new Lg;
                c.programType = b;
                c.type = a >>> 24 & 15;
                c.mask = a >>> 16 & 15;
                c.n = a & 65535;
                return c
            };
            Lg.prototype = {
                getWriteMask: function() {
                    var a = ".";
                    0 != (this.mask & 1) && (a += "x");
                    0 != (this.mask & 2) && (a += "y");
                    0 != (this.mask & 4) &&
                        (a += "z");
                    0 != (this.mask & 8) && (a += "w");
                    return a
                },
                toGLSL: function(a) {
                    null == a && (a = !0);
                    var b = 3 == this.type ? this.programType == dg.VERTEX ? "gl_Position" : "gl_FragColor" : Jc.prefixFromType(this.type, this.programType) + this.n;
                    a && 15 != this.mask && (b += this.getWriteMask());
                    return b
                },
                __class__: Lg
            };
            var dg = w["openfl.display3D._internal.agal._AGALConverter.ProgramType"] = {
                    __ename__: "openfl.display3D._internal.agal._AGALConverter.ProgramType",
                    __constructs__: ["VERTEX", "FRAGMENT"],
                    VERTEX: {
                        _hx_index: 0,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.ProgramType",
                        toString: h
                    },
                    FRAGMENT: {
                        _hx_index: 1,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.ProgramType",
                        toString: h
                    }
                },
                Xj = function() {
                    this.mEntries = []
                };
            g["openfl.display3D._internal.agal.RegisterMap"] = Xj;
            Xj.__name__ = "openfl.display3D._internal.agal.RegisterMap";
            Xj.prototype = {
                add: function(a, b, c, d) {
                    for (var e = 0, f = this.mEntries; e < f.length;) {
                        var k = f[e];
                        ++e;
                        if (k.type == a && k.name == b && k.number == c) {
                            if (k.usage != d) throw F.thrown(new yc("Cannot use register in multiple ways yet (mat4/vec4)"));
                            return
                        }
                    }
                    k = new Bl;
                    k.type =
                        a;
                    k.name = b;
                    k.number = c;
                    k.usage = d;
                    this.mEntries.push(k)
                },
                addDR: function(a, b) {
                    this.add(a.type, a.toGLSL(!1), a.n, b)
                },
                addSaR: function(a, b) {
                    this.add(a.type, a.toGLSL(), a.n, b)
                },
                addSR: function(a, b, c) {
                    null == c && (c = 0);
                    0 != a.d ? (this.add(a.itype, Jc.prefixFromType(a.itype, a.programType) + a.n, a.n, P.VECTOR_4), this.add(a.type, Jc.prefixFromType(a.type, a.programType) + a.o, a.o, P.VECTOR_4_ARRAY)) : this.add(a.type, a.toGLSL(!1, c), a.n + c, b)
                },
                getRegisterUsage: function(a) {
                    return 0 != a.d ? P.VECTOR_4_ARRAY : this.getUsage(a.type, a.toGLSL(!1),
                        a.n)
                },
                getUsage: function(a, b, c) {
                    for (var d = 0, e = this.mEntries; d < e.length;) {
                        var f = e[d];
                        ++d;
                        if (f.type == a && f.name == b && f.number == c) return f.usage
                    }
                    return P.UNUSED
                },
                toGLSL: function(a) {
                    this.mEntries.sort(function(a, b) {
                        return a.number - b.number
                    });
                    this.mEntries.sort(function(a, b) {
                        return oa.__cast(a.type, gm) - oa.__cast(b.type, gm)
                    });
                    for (var b = "", c = 0, d = this.mEntries.length; c < d;) {
                        var e = c++;
                        e = this.mEntries[e];
                        if (!(a && 2 != e.type || !a && 2 == e.type) && 3 != e.type) {
                            switch (e.type) {
                                case 0:
                                    b += "attribute ";
                                    break;
                                case 1:
                                    b += "uniform ";
                                    break;
                                case 2:
                                    b += "\t";
                                    break;
                                case 3:
                                    break;
                                case 4:
                                    b += "varying ";
                                    break;
                                case 5:
                                    b += "uniform ";
                                    break;
                                default:
                                    throw F.thrown(new yc);
                            }
                            switch (e.usage._hx_index) {
                                case 0:
                                    Aa.info("Missing switch patten: RegisterUsage.UNUSED", {
                                        fileName: "openfl/display3D/_internal/agal/AGALConverter.hx",
                                        lineNumber: 750,
                                        className: "openfl.display3D._internal.agal.RegisterMap",
                                        methodName: "toGLSL"
                                    });
                                    break;
                                case 1:
                                    b += "vec4 ";
                                    break;
                                case 2:
                                    b += "mat4 ";
                                    break;
                                case 3:
                                    b += "sampler2D ";
                                    break;
                                case 5:
                                    b += "samplerCube ";
                                    break;
                                case 7:
                                    b += "vec4 "
                            }
                            e.usage ==
                                P.SAMPLER_2D_ALPHA ? (b += "sampler2D ", b += I.string(e.name), b += ";\n", b += "uniform ", b += "sampler2D ", b += I.string(e.name + "_alpha"), b += ";\n", b += "uniform ", b += "bool ", b += I.string(e.name + "_alphaEnabled")) : e.usage == P.SAMPLER_CUBE_ALPHA ? (b += "samplerCube ", b += I.string(e.name), b += ";\n", b += "uniform ", b += "samplerCube ", b += I.string(e.name + "_alpha"), b += ";\n", b += "uniform ", b += "bool ", b += I.string(e.name + "_alphaEnabled")) : b = e.usage == P.VECTOR_4_ARRAY ? b + I.string(e.name + "[128]") : b + I.string(e.name);
                            b += ";\n"
                        }
                    }
                    return b
                },
                __class__: Xj
            };
            var Bl = function() {};
            g["openfl.display3D._internal.agal._AGALConverter.RegisterMapEntry"] = Bl;
            Bl.__name__ = "openfl.display3D._internal.agal._AGALConverter.RegisterMapEntry";
            Bl.prototype = {
                __class__: Bl
            };
            var P = w["openfl.display3D._internal.agal._AGALConverter.RegisterUsage"] = {
                    __ename__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                    __constructs__: "UNUSED VECTOR_4 MATRIX_4_4 SAMPLER_2D SAMPLER_2D_ALPHA SAMPLER_CUBE SAMPLER_CUBE_ALPHA VECTOR_4_ARRAY".split(" "),
                    UNUSED: {
                        _hx_index: 0,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    VECTOR_4: {
                        _hx_index: 1,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    MATRIX_4_4: {
                        _hx_index: 2,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    SAMPLER_2D: {
                        _hx_index: 3,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    SAMPLER_2D_ALPHA: {
                        _hx_index: 4,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    SAMPLER_CUBE: {
                        _hx_index: 5,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    SAMPLER_CUBE_ALPHA: {
                        _hx_index: 6,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    },
                    VECTOR_4_ARRAY: {
                        _hx_index: 7,
                        __enum__: "openfl.display3D._internal.agal._AGALConverter.RegisterUsage",
                        toString: h
                    }
                },
                Mg = function() {};
            g["openfl.display3D._internal.agal._AGALConverter.SamplerRegister"] = Mg;
            Mg.__name__ = "openfl.display3D._internal.agal._AGALConverter.SamplerRegister";
            Mg.parse = function(a, b) {
                var c = new Mg;
                c.programType = b;
                b = 60;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >>
                    b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.f = b;
                b = 56;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.m = b;
                b = 52;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.w = b;
                b = 48;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.s = b;
                b = 44;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >>
                    b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.d = b;
                b = 40;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.t = b;
                b = 32;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                c.type = b;
                b = 16;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 255;
                c.b = b;
                b = a.low & 65535;
                c.n = b;
                return c
            };
            Mg.prototype = {
                toGLSL: function() {
                    return Jc.prefixFromType(this.type, this.programType) + this.n
                },
                toSamplerState: function() {
                    switch (this.f) {
                        case 0:
                            var a = 5;
                            break;
                        case 1:
                            a = 4;
                            break;
                        default:
                            throw F.thrown(new yc);
                    }
                    switch (this.m) {
                        case 0:
                            var b = 2;
                            break;
                        case 1:
                            b = 1;
                            break;
                        case 2:
                            b = 0;
                            break;
                        default:
                            throw F.thrown(new yc);
                    }
                    switch (this.w) {
                        case 0:
                            var c = 0;
                            break;
                        case 1:
                            c = 2;
                            break;
                        default:
                            throw F.thrown(new yc);
                    }
                    return new cg(c, a, b, (this.b << 24 >> 24) / 8, 4 == (this.s & 4), 1 == (this.s & 1), 2 == this.t)
                },
                __class__: Mg
            };
            var eg = function() {};
            g["openfl.display3D._internal.agal._AGALConverter.SourceRegister"] =
                eg;
            eg.__name__ = "openfl.display3D._internal.agal._AGALConverter.SourceRegister";
            eg.parse = function(a, b, c) {
                var d = new eg;
                d.programType = b;
                b = 63;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 1;
                d.d = b;
                b = 48;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 3;
                d.q = b;
                b = 40;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low &
                    15;
                d.itype = b;
                b = 32;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 15;
                d.type = b;
                b = 24;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 255;
                d.s = b;
                b = 16;
                b = 0 == b ? new $a(a.high, a.low) : 32 > b ? new $a(a.high >> b, a.high << 32 - b | a.low >>> b) : new $a(a.high >> 31, a.high >> b - 32);
                b = b.low & 255;
                d.o = b;
                b = a.low & 65535;
                d.n = b;
                d.sourceMask = c;
                return d
            };
            eg.prototype = {
                toGLSL: function(a, b) {
                    null == b && (b = 0);
                    null ==
                        a && (a = !0);
                    if (3 == this.type) return this.programType == dg.VERTEX ? "gl_Position" : "gl_FragColor";
                    var c = 228 == this.s && 15 == this.sourceMask,
                        d = "";
                    if (5 != this.type && !c) {
                        if (0 != (this.sourceMask & 1)) switch (this.s & 3) {
                            case 0:
                                d += "x";
                                break;
                            case 1:
                                d += "y";
                                break;
                            case 2:
                                d += "z";
                                break;
                            case 3:
                                d += "w"
                        }
                        if (0 != (this.sourceMask & 2)) switch (this.s >> 2 & 3) {
                            case 0:
                                d += "x";
                                break;
                            case 1:
                                d += "y";
                                break;
                            case 2:
                                d += "z";
                                break;
                            case 3:
                                d += "w"
                        }
                        if (0 != (this.sourceMask & 4)) switch (this.s >> 4 & 3) {
                            case 0:
                                d += "x";
                                break;
                            case 1:
                                d += "y";
                                break;
                            case 2:
                                d += "z";
                                break;
                            case 3:
                                d +=
                                    "w"
                        }
                        if (0 != (this.sourceMask & 8)) switch (this.s >> 6 & 3) {
                            case 0:
                                d += "x";
                                break;
                            case 1:
                                d += "y";
                                break;
                            case 2:
                                d += "z";
                                break;
                            case 3:
                                d += "w"
                        }
                    }
                    c = Jc.prefixFromType(this.type, this.programType);
                    if (0 == this.d) c += this.n + b;
                    else {
                        c += this.o;
                        var e = "";
                        switch (this.q) {
                            case 0:
                                e = "x";
                                break;
                            case 1:
                                e = "y";
                                break;
                            case 2:
                                e = "z";
                                break;
                            case 3:
                                e = "w"
                        }
                        e = Jc.prefixFromType(this.itype, this.programType) + this.n + "." + e;
                        c += "[ int(" + e + ") +" + b + "]"
                    }
                    a && "" != d && (c += "." + d);
                    return c
                },
                __class__: eg
            };
            var jb = function(a) {
                ua.call(this);
                this.__context = a;
                var b = this.__context.gl;
                this.__textureID = b.createTexture();
                this.__textureContext = this.__context.__context;
                if (null == jb.__supportsBGRA) {
                    jb.__textureInternalFormat = b.RGBA;
                    jb.__supportsBGRA = !1;
                    jb.__textureFormat = b.RGBA;
                    jb.__compressedFormats = new Tb;
                    jb.__compressedFormatsAlpha = new Tb;
                    a = b.getExtension("WEBGL_compressed_texture_s3tc");
                    var c = b.getExtension("WEBGL_compressed_texture_etc1");
                    b = b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    if (null != a) {
                        var d = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                        jb.__compressedFormats.h[0] = d;
                        d = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
                        jb.__compressedFormatsAlpha.h[0] = d
                    }
                    null != c && (d = c.COMPRESSED_RGB_ETC1_WEBGL, jb.__compressedFormats.h[2] = d, d = c.COMPRESSED_RGB_ETC1_WEBGL, jb.__compressedFormatsAlpha.h[2] = d);
                    null != b && (d = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG, jb.__compressedFormats.h[1] = d, d = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, jb.__compressedFormatsAlpha.h[1] = d)
                }
                this.__internalFormat = jb.__textureInternalFormat;
                this.__format = jb.__textureFormat
            };
            g["openfl.display3D.textures.TextureBase"] = jb;
            jb.__name__ = "openfl.display3D.textures.TextureBase";
            jb.__super__ = ua;
            jb.prototype = n(ua.prototype, {
                dispose: function() {
                    var a = this.__context.gl;
                    null != this.__alphaTexture && (this.__alphaTexture.dispose(), this.__alphaTexture = null);
                    null != this.__textureID && (a.deleteTexture(this.__textureID), this.__textureID = null);
                    null != this.__glFramebuffer && (a.deleteFramebuffer(this.__glFramebuffer), this.__glFramebuffer = null);
                    null != this.__glDepthRenderbuffer && (a.deleteRenderbuffer(this.__glDepthRenderbuffer), this.__glDepthRenderbuffer = null);
                    null != this.__glStencilRenderbuffer &&
                        (a.deleteRenderbuffer(this.__glStencilRenderbuffer), this.__glStencilRenderbuffer = null)
                },
                __getGLFramebuffer: function(a, b, c) {
                    b = this.__context.gl;
                    null == this.__glFramebuffer && (this.__glFramebuffer = b.createFramebuffer(), this.__context.__bindGLFramebuffer(this.__glFramebuffer), b.framebufferTexture2D(b.FRAMEBUFFER, b.COLOR_ATTACHMENT0, b.TEXTURE_2D, this.__textureID, 0), this.__context.__enableErrorChecking && (c = b.checkFramebufferStatus(b.FRAMEBUFFER), c != b.FRAMEBUFFER_COMPLETE && Aa.warn("Error: Context3D.setRenderToTexture status:" +
                        c + " width:" + this.__width + " height:" + this.__height, {
                            fileName: "openfl/display3D/textures/TextureBase.hx",
                            lineNumber: 201,
                            className: "openfl.display3D.textures.TextureBase",
                            methodName: "__getGLFramebuffer"
                        })));
                    a && null == this.__glDepthRenderbuffer && (this.__context.__bindGLFramebuffer(this.__glFramebuffer), 0 != db.__glDepthStencil ? (this.__glStencilRenderbuffer = this.__glDepthRenderbuffer = b.createRenderbuffer(), b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER,
                        db.__glDepthStencil, this.__width, this.__height), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.DEPTH_STENCIL_ATTACHMENT, b.RENDERBUFFER, this.__glDepthRenderbuffer)) : (this.__glDepthRenderbuffer = b.createRenderbuffer(), this.__glStencilRenderbuffer = b.createRenderbuffer(), b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER, b.DEPTH_COMPONENT16, this.__width, this.__height), b.bindRenderbuffer(b.RENDERBUFFER, this.__glStencilRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER,
                        b.STENCIL_INDEX8, this.__width, this.__height), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.DEPTH_ATTACHMENT, b.RENDERBUFFER, this.__glDepthRenderbuffer), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.STENCIL_ATTACHMENT, b.RENDERBUFFER, this.__glStencilRenderbuffer)), this.__context.__enableErrorChecking && (c = b.checkFramebufferStatus(b.FRAMEBUFFER), c != b.FRAMEBUFFER_COMPLETE && Aa.warn("Error: Context3D.setRenderToTexture status:" + c + " width:" + this.__width + " height:" + this.__height, {
                        fileName: "openfl/display3D/textures/TextureBase.hx",
                        lineNumber: 239,
                        className: "openfl.display3D.textures.TextureBase",
                        methodName: "__getGLFramebuffer"
                    })), b.bindRenderbuffer(b.RENDERBUFFER, null));
                    return this.__glFramebuffer
                },
                __getTexture: function() {
                    return this.__textureID
                },
                __setSamplerState: function(a) {
                    if (!a.equals(this.__samplerState)) {
                        var b = this.__context.gl;
                        this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP ? this.__context.__bindGLTextureCubeMap(this.__textureID) : this.__context.__bindGLTexture2D(this.__textureID);
                        var c;
                        switch (a.wrap) {
                            case 0:
                                var d =
                                    c = b.CLAMP_TO_EDGE;
                                break;
                            case 1:
                                c = b.CLAMP_TO_EDGE;
                                d = b.REPEAT;
                                break;
                            case 2:
                                d = c = b.REPEAT;
                                break;
                            case 3:
                                c = b.REPEAT;
                                d = b.CLAMP_TO_EDGE;
                                break;
                            default:
                                throw F.thrown(new cb("wrap bad enum"));
                        }
                        var e = 5 == a.filter ? b.NEAREST : b.LINEAR;
                        switch (a.mipfilter) {
                            case 0:
                                var f = 5 == a.filter ? b.NEAREST_MIPMAP_LINEAR : b.LINEAR_MIPMAP_LINEAR;
                                break;
                            case 1:
                                f = 5 == a.filter ? b.NEAREST_MIPMAP_NEAREST : b.LINEAR_MIPMAP_NEAREST;
                                break;
                            case 2:
                                f = 5 == a.filter ? b.NEAREST : b.LINEAR;
                                break;
                            default:
                                throw F.thrown(new cb("mipfiter bad enum"));
                        }
                        b.texParameteri(this.__textureTarget,
                            b.TEXTURE_MIN_FILTER, f);
                        b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, e);
                        b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
                        b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
                        null == this.__samplerState && (this.__samplerState = a.clone());
                        this.__samplerState.copyFrom(a);
                        return !0
                    }
                    return !1
                },
                __uploadFromImage: function(a) {
                    var b = this.__context.gl,
                        c;
                    if (this.__textureTarget == b.TEXTURE_2D) {
                        if (1 == a.buffer.bitsPerPixel) var d = c = b.ALPHA;
                        else c = jb.__textureInternalFormat, d = jb.__textureFormat;
                        this.__context.__bindGLTexture2D(this.__textureID);
                        a.type == Kd.DATA || a.get_premultiplied() ? !a.get_premultiplied() && a.get_transparent() && b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1) : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
                        a.type == Kd.DATA ? pc.texImage2D(b, b.TEXTURE_2D, 0, c, a.buffer.width, a.buffer.height, 0, d, b.UNSIGNED_BYTE, a.get_data()) : pc.texImage2D(b, b.TEXTURE_2D, 0, c, d, b.UNSIGNED_BYTE, a.get_src());
                        this.__context.__bindGLTexture2D(null)
                    }
                },
                __class__: jb
            });
            var Vj = function(a, b, c, d, e) {
                jb.call(this,
                    a);
                this.__width = this.__height = this.__size = b;
                this.__optimizeForRenderToTexture = d;
                this.__streamingLevels = e;
                this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
                this.__uploadedSides = 0
            };
            g["openfl.display3D.textures.CubeTexture"] = Vj;
            Vj.__name__ = "openfl.display3D.textures.CubeTexture";
            Vj.__super__ = jb;
            Vj.prototype = n(jb.prototype, {
                __getGLFramebuffer: function(a, b, c) {
                    var d = this.__context.gl;
                    null == this.__glFramebuffer && (this.__glFramebuffer = d.createFramebuffer(), this.__framebufferSurface = -1);
                    if (this.__framebufferSurface !=
                        c && (this.__framebufferSurface = c, this.__context.__bindGLFramebuffer(this.__glFramebuffer), d.framebufferTexture2D(d.FRAMEBUFFER, d.COLOR_ATTACHMENT0, d.TEXTURE_CUBE_MAP_POSITIVE_X + c, this.__textureID, 0), this.__context.__enableErrorChecking)) {
                        var e = d.checkFramebufferStatus(d.FRAMEBUFFER);
                        e != d.FRAMEBUFFER_COMPLETE && Aa.error("Error: Context3D.setRenderToTexture status:" + e + " width:" + this.__width + " height:" + this.__height, {
                            fileName: "openfl/display3D/textures/CubeTexture.hx",
                            lineNumber: 278,
                            className: "openfl.display3D.textures.CubeTexture",
                            methodName: "__getGLFramebuffer"
                        })
                    }
                    return jb.prototype.__getGLFramebuffer.call(this, a, b, c)
                },
                __setSamplerState: function(a) {
                    if (jb.prototype.__setSamplerState.call(this, a)) {
                        var b = this.__context.gl;
                        2 == a.mipfilter || this.__samplerState.mipmapGenerated || (b.generateMipmap(b.TEXTURE_CUBE_MAP), this.__samplerState.mipmapGenerated = !0);
                        if (0 != db.__glMaxTextureMaxAnisotropy) {
                            switch (a.filter) {
                                case 0:
                                    a = 16;
                                    break;
                                case 1:
                                    a = 2;
                                    break;
                                case 2:
                                    a = 4;
                                    break;
                                case 3:
                                    a = 8;
                                    break;
                                default:
                                    a = 1
                            }
                            a > db.__glMaxTextureMaxAnisotropy && (a = db.__glMaxTextureMaxAnisotropy);
                            b.texParameterf(b.TEXTURE_CUBE_MAP, db.__glTextureMaxAnisotropy, a)
                        }
                        return !0
                    }
                    return !1
                },
                __class__: Vj
            });
            var Lh = function(a, b, c, d, e) {
                jb.call(this, a);
                this.__width = b;
                this.__height = c;
                this.__optimizeForRenderToTexture = e;
                this.__textureTarget = this.__context.gl.TEXTURE_2D;
                this.uploadFromTypedArray(null);
                e && this.__getGLFramebuffer(!0, 0, 0)
            };
            g["openfl.display3D.textures.RectangleTexture"] = Lh;
            Lh.__name__ = "openfl.display3D.textures.RectangleTexture";
            Lh.__super__ = jb;
            Lh.prototype = n(jb.prototype, {
                uploadFromTypedArray: function(a) {
                    var b =
                        this.__context.gl;
                    this.__context.__bindGLTexture2D(this.__textureID);
                    pc.texImage2D(b, this.__textureTarget, 0, this.__internalFormat, this.__width, this.__height, 0, this.__format, b.UNSIGNED_BYTE, a);
                    this.__context.__bindGLTexture2D(null)
                },
                __setSamplerState: function(a) {
                    if (jb.prototype.__setSamplerState.call(this, a)) {
                        var b = this.__context.gl;
                        if (0 != db.__glMaxTextureMaxAnisotropy) {
                            switch (a.filter) {
                                case 0:
                                    a = 16;
                                    break;
                                case 1:
                                    a = 2;
                                    break;
                                case 2:
                                    a = 4;
                                    break;
                                case 3:
                                    a = 8;
                                    break;
                                default:
                                    a = 1
                            }
                            a > db.__glMaxTextureMaxAnisotropy &&
                                (a = db.__glMaxTextureMaxAnisotropy);
                            b.texParameterf(b.TEXTURE_2D, db.__glTextureMaxAnisotropy, a)
                        }
                        return !0
                    }
                    return !1
                },
                __class__: Lh
            });
            var Uj = function(a, b, c, d, e, f) {
                jb.call(this, a);
                this.__width = b;
                this.__height = c;
                this.__optimizeForRenderToTexture = e;
                this.__streamingLevels = f;
                a = this.__context.gl;
                this.__textureTarget = a.TEXTURE_2D;
                this.__context.__bindGLTexture2D(this.__textureID);
                pc.texImage2D(a, this.__textureTarget, 0, this.__internalFormat, this.__width, this.__height, 0, this.__format, a.UNSIGNED_BYTE, null);
                this.__context.__bindGLTexture2D(null);
                e && this.__getGLFramebuffer(!0, 0, 0)
            };
            g["openfl.display3D.textures.Texture"] = Uj;
            Uj.__name__ = "openfl.display3D.textures.Texture";
            Uj.__super__ = jb;
            Uj.prototype = n(jb.prototype, {
                __setSamplerState: function(a) {
                    if (jb.prototype.__setSamplerState.call(this, a)) {
                        var b = this.__context.gl;
                        2 == a.mipfilter || this.__samplerState.mipmapGenerated || (b.generateMipmap(b.TEXTURE_2D), this.__samplerState.mipmapGenerated = !0);
                        if (0 != db.__glMaxTextureMaxAnisotropy) {
                            switch (a.filter) {
                                case 0:
                                    a = 16;
                                    break;
                                case 1:
                                    a = 2;
                                    break;
                                case 2:
                                    a = 4;
                                    break;
                                case 3:
                                    a = 8;
                                    break;
                                default:
                                    a = 1
                            }
                            a > db.__glMaxTextureMaxAnisotropy && (a = db.__glMaxTextureMaxAnisotropy);
                            b.texParameterf(b.TEXTURE_2D, db.__glTextureMaxAnisotropy, a)
                        }
                        return !0
                    }
                    return !1
                },
                __class__: Uj
            });
            var Cl = function(a) {
                jb.call(this, a);
                this.__textureTarget = this.__context.gl.TEXTURE_2D
            };
            g["openfl.display3D.textures.VideoTexture"] = Cl;
            Cl.__name__ = "openfl.display3D.textures.VideoTexture";
            Cl.__super__ = jb;
            Cl.prototype = n(jb.prototype, {
                dispose: function() {
                    null != this.__netStream && null != this.__netStream.__video && this.__netStream.__video.removeEventListener("timeupdate",
                        r(this, this.__onTimeUpdate));
                    jb.prototype.dispose.call(this)
                },
                __onTimeUpdate: function(a) {
                    null != this.__netStream && this.__netStream.__video.currentTime != this.__cacheTime && 2 <= this.__netStream.__video.readyState && this.__textureReady()
                },
                __getTexture: function() {
                    if (this.__netStream.__video.currentTime != this.__cacheTime && 2 <= this.__netStream.__video.readyState) {
                        var a = this.__context.gl;
                        this.__context.__bindGLTexture2D(this.__textureID);
                        pc.texImage2D(a, a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, this.__netStream.__video);
                        this.__cacheTime = this.__netStream.__video.currentTime
                    }
                    return this.__textureID
                },
                __textureReady: function() {
                    this.videoWidth = this.__netStream.__video.videoWidth;
                    this.videoHeight = this.__netStream.__video.videoHeight;
                    var a = new sa("textureReady");
                    this.dispatchEvent(a)
                },
                __class__: Cl
            });
            var cb = function(a, b) {
                null == b && (b = 0);
                null == a && (a = "");
                this.message = a;
                this.errorID = b;
                this.name = "Error"
            };
            g["openfl.errors.Error"] = cb;
            cb.__name__ = "openfl.errors.Error";
            cb.prototype = {
                toString: function() {
                    return null != this.message ?
                        this.message : "Error"
                },
                __class__: cb
            };
            var jg = function(a) {
                null == a && (a = "");
                cb.call(this, a);
                this.name = "ArgumentError"
            };
            g["openfl.errors.ArgumentError"] = jg;
            jg.__name__ = "openfl.errors.ArgumentError";
            jg.__super__ = cb;
            jg.prototype = n(cb.prototype, {
                __class__: jg
            });
            var Ng = function(a) {
                null == a && (a = "");
                cb.call(this, a);
                this.name = "IOError"
            };
            g["openfl.errors.IOError"] = Ng;
            Ng.__name__ = "openfl.errors.IOError";
            Ng.__super__ = cb;
            Ng.prototype = n(cb.prototype, {
                __class__: Ng
            });
            var wh = function(a, b) {
                Ng.call(this, "End of file was encountered");
                this.name = "EOFError";
                this.errorID = 2030
            };
            g["openfl.errors.EOFError"] = wh;
            wh.__name__ = "openfl.errors.EOFError";
            wh.__super__ = Ng;
            wh.prototype = n(Ng.prototype, {
                __class__: wh
            });
            var yc = function(a) {
                null == a && (a = "");
                cb.call(this, a, 0);
                this.name = "IllegalOperationError"
            };
            g["openfl.errors.IllegalOperationError"] = yc;
            yc.__name__ = "openfl.errors.IllegalOperationError";
            yc.__super__ = cb;
            yc.prototype = n(cb.prototype, {
                __class__: yc
            });
            var Wh = function(a) {
                null == a && (a = "");
                cb.call(this, a, 0);
                this.name = "RangeError"
            };
            g["openfl.errors.RangeError"] =
                Wh;
            Wh.__name__ = "openfl.errors.RangeError";
            Wh.__super__ = cb;
            Wh.prototype = n(cb.prototype, {
                __class__: Wh
            });
            var Ug = function(a) {
                null == a && (a = "");
                cb.call(this, a, 0);
                this.name = "TypeError"
            };
            g["openfl.errors.TypeError"] = Ug;
            Ug.__name__ = "openfl.errors.TypeError";
            Ug.__super__ = cb;
            Ug.prototype = n(cb.prototype, {
                __class__: Ug
            });
            var sa = function(a, b, c) {
                null == c && (c = !1);
                null == b && (b = !1);
                this.type = a;
                this.bubbles = b;
                this.cancelable = c;
                this.eventPhase = 2
            };
            g["openfl.events.Event"] = sa;
            sa.__name__ = "openfl.events.Event";
            sa.prototype = {
                isDefaultPrevented: function() {
                    return this.__preventDefault
                },
                preventDefault: function() {
                    this.cancelable && (this.__preventDefault = !0)
                },
                stopImmediatePropagation: function() {
                    this.__isCanceledNow = this.__isCanceled = !0
                },
                stopPropagation: function() {
                    this.__isCanceled = !0
                },
                __class__: sa
            };
            var Yj = function(a, b, c, d, e, f, k) {
                null == k && (k = 0);
                null == f && (f = 0);
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.timestamp = d;
                this.accelerationX = e;
                this.accelerationY = f;
                this.accelerationZ = k
            };
            g["openfl.events.AccelerometerEvent"] =
                Yj;
            Yj.__name__ = "openfl.events.AccelerometerEvent";
            Yj.__super__ = sa;
            Yj.prototype = n(sa.prototype, {
                __class__: Yj
            });
            var Og = function(a, b, c, d) {
                null == d && (d = !1);
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.activating = d
            };
            g["openfl.events.ActivityEvent"] = Og;
            Og.__name__ = "openfl.events.ActivityEvent";
            Og.__super__ = sa;
            Og.prototype = n(sa.prototype, {
                __class__: Og
            });
            var Ye = function(a, b, c, d) {
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.text = d
            };
            g["openfl.events.TextEvent"] = Ye;
            Ye.__name__ =
                "openfl.events.TextEvent";
            Ye.__super__ = sa;
            Ye.prototype = n(sa.prototype, {
                __class__: Ye
            });
            var Hd = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !1);
                Ye.call(this, a, b, c, d);
                this.errorID = e
            };
            g["openfl.events.ErrorEvent"] = Hd;
            Hd.__name__ = "openfl.events.ErrorEvent";
            Hd.__super__ = Ye;
            Hd.prototype = n(Ye.prototype, {
                __class__: Hd
            });
            var Tg = function(a) {
                this.active = !1;
                this.reset(a)
            };
            g["openfl.events._EventDispatcher.DispatchIterator"] = Tg;
            Tg.__name__ = "openfl.events._EventDispatcher.DispatchIterator";
            Tg.prototype = {
                copy: function() {
                    this.isCopy || (this.list = this.list.slice(), this.isCopy = !0)
                },
                hasNext: function() {
                    return this.index < this.list.length
                },
                next: function() {
                    return this.list[this.index++]
                },
                remove: function(a, b) {
                    if (this.active)
                        if (this.isCopy) {
                            b = this.index;
                            for (var c = this.list.length; b < c;) {
                                var d = b++;
                                if (this.list[d] == a) {
                                    this.list.splice(d, 1);
                                    break
                                }
                            }
                        } else b < this.index && this.index--
                },
                reset: function(a) {
                    this.list = a;
                    this.isCopy = !1;
                    this.index = 0
                },
                start: function() {
                    this.active = !0
                },
                stop: function() {
                    this.active = !1
                },
                __class__: Tg
            };
            var Sg = function(a, b, c) {
                this.callback = a;
                this.useCapture = b;
                this.priority = c
            };
            g["openfl.events._EventDispatcher.Listener"] = Sg;
            Sg.__name__ = "openfl.events._EventDispatcher.Listener";
            Sg.prototype = {
                match: function(a, b) {
                    return ea.compareMethods(this.callback, a) ? this.useCapture == b : !1
                },
                __class__: Sg
            };
            var bg = function(a, b, c, d, e, f) {
                null == f && (f = 0);
                null == e && (e = !1);
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.keyCode = f;
                this.shiftKey = e;
                this.relatedObject = d
            };
            g["openfl.events.FocusEvent"] =
                bg;
            bg.__name__ = "openfl.events.FocusEvent";
            bg.__super__ = sa;
            bg.prototype = n(sa.prototype, {
                __class__: bg
            });
            var Pf = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = !1);
                null == c && (c = !1);
                null == b && (b = !1);
                Og.call(this, a, b, c);
                this.fullScreen = d;
                this.interactive = e
            };
            g["openfl.events.FullScreenEvent"] = Pf;
            Pf.__name__ = "openfl.events.FullScreenEvent";
            Pf.__super__ = Og;
            Pf.prototype = n(Og.prototype, {
                __class__: Pf
            });
            var ug = function(a, b, c, d) {
                null == c && (c = !1);
                null == b && (b = !0);
                sa.call(this, a, b, c);
                this.device = d
            };
            g["openfl.events.GameInputEvent"] =
                ug;
            ug.__name__ = "openfl.events.GameInputEvent";
            ug.__super__ = sa;
            ug.prototype = n(sa.prototype, {
                __class__: ug
            });
            var Zj = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                this.status = d;
                this.redirected = e;
                sa.call(this, a, b, c)
            };
            g["openfl.events.HTTPStatusEvent"] = Zj;
            Zj.__name__ = "openfl.events.HTTPStatusEvent";
            Zj.__super__ = sa;
            Zj.prototype = n(sa.prototype, {
                __class__: Zj
            });
            var Nh = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !0);
                Hd.call(this, a, b, c, d,
                    e)
            };
            g["openfl.events.IOErrorEvent"] = Nh;
            Nh.__name__ = "openfl.events.IOErrorEvent";
            Nh.__super__ = Hd;
            Nh.prototype = n(Hd.prototype, {
                __class__: Nh
            });
            var Rj = function(a, b, c, d, e, f, k, h, m, g, q) {
                null == q && (q = !1);
                null == g && (g = !1);
                null == m && (m = !1);
                null == h && (h = !1);
                null == k && (k = !1);
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.charCode = d;
                this.keyCode = e;
                this.keyLocation = null != f ? f : 0;
                this.ctrlKey = k;
                this.altKey = h;
                this.shiftKey = m;
                this.controlKey = g;
                this.commandKey = q
            };
            g["openfl.events.KeyboardEvent"] =
                Rj;
            Rj.__name__ = "openfl.events.KeyboardEvent";
            Rj.__super__ = sa;
            Rj.prototype = n(sa.prototype, {
                __class__: Rj
            });
            var eb = function(a, b, c, d, e, f, k, h, m, g, q, l, n) {
                null == n && (n = 0);
                null == l && (l = !1);
                null == q && (q = 0);
                null == g && (g = !1);
                null == m && (m = !1);
                null == h && (h = !1);
                null == k && (k = !1);
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !0);
                sa.call(this, a, b, c);
                this.shiftKey = m;
                this.altKey = h;
                this.ctrlKey = k;
                this.bubbles = b;
                this.relatedObject = f;
                this.delta = q;
                this.localX = d;
                this.localY = e;
                this.buttonDown = g;
                this.commandKey = l;
                this.clickCount =
                    n;
                this.isRelatedObjectInaccessible = !1;
                this.stageY = this.stageX = NaN
            };
            g["openfl.events.MouseEvent"] = eb;
            eb.__name__ = "openfl.events.MouseEvent";
            eb.__create = function(a, b, c, d, e, f, k) {
                null == k && (k = 0);
                a = new eb(a, !0, !1, e.x, e.y, null, eb.__ctrlKey, eb.__altKey, eb.__shiftKey, eb.__buttonDown, k, eb.__commandKey);
                a.stageX = c;
                a.stageY = d;
                a.target = f;
                return a
            };
            eb.__super__ = sa;
            eb.prototype = n(sa.prototype, {
                __class__: eb
            });
            var ak = function(a, b, c, d) {
                null == c && (c = !1);
                null == b && (b = !1);
                this.info = d;
                sa.call(this, a, b, c)
            };
            g["openfl.events.NetStatusEvent"] =
                ak;
            ak.__name__ = "openfl.events.NetStatusEvent";
            ak.__super__ = sa;
            ak.prototype = n(sa.prototype, {
                __class__: ak
            });
            var Ig = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.bytesLoaded = d;
                this.bytesTotal = e
            };
            g["openfl.events.ProgressEvent"] = Ig;
            Ig.__name__ = "openfl.events.ProgressEvent";
            Ig.__super__ = sa;
            Ig.prototype = n(sa.prototype, {
                __class__: Ig
            });
            var Uh = function(a, b, c, d, e, f) {
                null == f && (f = !0);
                null == c && (c = !1);
                null == b && (b = !1);
                sa.call(this, a, b, c);
                this.objectMatrix =
                    d;
                this.objectColorTransform = e;
                this.allowSmoothing = f
            };
            g["openfl.events.RenderEvent"] = Uh;
            Uh.__name__ = "openfl.events.RenderEvent";
            Uh.__super__ = sa;
            Uh.prototype = n(sa.prototype, {
                __class__: Uh
            });
            var bk = function(a, b, c, d, e) {
                null == e && (e = 0);
                null == d && (d = "");
                null == c && (c = !1);
                null == b && (b = !1);
                Hd.call(this, a, b, c, d, e)
            };
            g["openfl.events.SecurityErrorEvent"] = bk;
            bk.__name__ = "openfl.events.SecurityErrorEvent";
            bk.__super__ = Hd;
            bk.prototype = n(Hd.prototype, {
                __class__: bk
            });
            var Id = function(a, b, c, d, e, f, k, h, m, g, q, l, n, r, D, w, x, B,
                u, v) {
                null == w && (w = !1);
                null == D && (D = !1);
                null == r && (r = !1);
                null == n && (n = !1);
                null == l && (l = !1);
                null == g && (g = 0);
                null == m && (m = 0);
                null == h && (h = 0);
                null == k && (k = 0);
                null == f && (f = 0);
                null == e && (e = !1);
                null == d && (d = 0);
                null == c && (c = !1);
                null == b && (b = !0);
                sa.call(this, a, b, c);
                this.touchPointID = d;
                this.isPrimaryTouchPoint = e;
                this.localX = f;
                this.localY = k;
                this.sizeX = h;
                this.sizeY = m;
                this.pressure = g;
                this.relatedObject = q;
                this.ctrlKey = l;
                this.altKey = n;
                this.shiftKey = r;
                this.commandKey = D;
                this.controlKey = w;
                this.stageY = this.stageX = NaN
            };
            g["openfl.events.TouchEvent"] =
                Id;
            Id.__name__ = "openfl.events.TouchEvent";
            Id.__create = function(a, b, c, d, e, f) {
                a = new Id(a, !0, !1, 0, !0, e.x, e.y, 1, 1, 1);
                a.stageX = c;
                a.stageY = d;
                a.target = f;
                return a
            };
            Id.__super__ = sa;
            Id.prototype = n(sa.prototype, {
                __class__: Id
            });
            var Qj = function(a, b, c, d) {
                null == c && (c = !0);
                null == b && (b = !0);
                Hd.call(this, a, b, c);
                this.error = d
            };
            g["openfl.events.UncaughtErrorEvent"] = Qj;
            Qj.__name__ = "openfl.events.UncaughtErrorEvent";
            Qj.__super__ = Hd;
            Qj.prototype = n(Hd.prototype, {
                __class__: Qj
            });
            var Oj = function() {
                ua.call(this)
            };
            g["openfl.events.UncaughtErrorEvents"] =
                Oj;
            Oj.__name__ = "openfl.events.UncaughtErrorEvents";
            Oj.__super__ = ua;
            Oj.prototype = n(ua.prototype, {
                __class__: Oj
            });
            var dm = function() {
                this.__leftExtension = this.__bottomExtension = 0;
                this.__needSecondBitmapData = !0;
                this.__numShaderPasses = 0;
                this.__preserveObject = !1;
                this.__rightExtension = 0;
                this.__shaderBlendMode = 10;
                this.__topExtension = 0;
                this.__smooth = !0
            };
            g["openfl.filters.BitmapFilter"] = dm;
            dm.__name__ = "openfl.filters.BitmapFilter";
            dm.prototype = {
                __applyFilter: function(a, b, c, d) {
                    return b
                },
                __initShader: function(a,
                    b, c) {
                    return null
                },
                __class__: dm
            };
            var Sj = function(a) {
                null != a && 16 == a.get_length() ? this.rawData = a.concat(null) : this.rawData = ib.toFloatVector(null, null, null, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])
            };
            g["openfl.geom.Matrix3D"] = Sj;
            Sj.__name__ = "openfl.geom.Matrix3D";
            Sj.prototype = {
                append: function(a) {
                    var b = this.rawData.get(0),
                        c = this.rawData.get(4),
                        d = this.rawData.get(8),
                        e = this.rawData.get(12),
                        f = this.rawData.get(1),
                        k = this.rawData.get(5),
                        h = this.rawData.get(9),
                        m = this.rawData.get(13),
                        g = this.rawData.get(2),
                        q = this.rawData.get(6),
                        l = this.rawData.get(10),
                        n = this.rawData.get(14),
                        r = this.rawData.get(3),
                        D = this.rawData.get(7),
                        w = this.rawData.get(11),
                        x = this.rawData.get(15),
                        B = a.rawData.get(0),
                        u = a.rawData.get(4),
                        v = a.rawData.get(8),
                        y = a.rawData.get(12),
                        t = a.rawData.get(1),
                        A = a.rawData.get(5),
                        J = a.rawData.get(9),
                        F = a.rawData.get(13),
                        L = a.rawData.get(2),
                        ma = a.rawData.get(6),
                        G = a.rawData.get(10),
                        ya = a.rawData.get(14),
                        z = a.rawData.get(3),
                        da = a.rawData.get(7),
                        C = a.rawData.get(11);
                    a = a.rawData.get(15);
                    this.rawData.set(0, b * B + f * u + g * v + r * y);
                    this.rawData.set(1,
                        b * t + f * A + g * J + r * F);
                    this.rawData.set(2, b * L + f * ma + g * G + r * ya);
                    this.rawData.set(3, b * z + f * da + g * C + r * a);
                    this.rawData.set(4, c * B + k * u + q * v + D * y);
                    this.rawData.set(5, c * t + k * A + q * J + D * F);
                    this.rawData.set(6, c * L + k * ma + q * G + D * ya);
                    this.rawData.set(7, c * z + k * da + q * C + D * a);
                    this.rawData.set(8, d * B + h * u + l * v + w * y);
                    this.rawData.set(9, d * t + h * A + l * J + w * F);
                    this.rawData.set(10, d * L + h * ma + l * G + w * ya);
                    this.rawData.set(11, d * z + h * da + l * C + w * a);
                    this.rawData.set(12, e * B + m * u + n * v + x * y);
                    this.rawData.set(13, e * t + m * A + n * J + x * F);
                    this.rawData.set(14, e * L + m * ma + n * G + x * ya);
                    this.rawData.set(15, e * z + m * da + n * C + x * a)
                },
                appendTranslation: function(a, b, c) {
                    var d = this.rawData;
                    d.set(12, d.get(12) + a);
                    d = this.rawData;
                    d.set(13, d.get(13) + b);
                    d = this.rawData;
                    d.set(14, d.get(14) + c)
                },
                copyRawDataFrom: function(a, b, c) {
                    null == c && (c = !1);
                    null == b && (b = 0);
                    c && this.transpose();
                    for (var d = 0, e = a.get_length() - b; d < e;) {
                        var f = d++;
                        this.rawData.set(f, a.get(f + b))
                    }
                    c && this.transpose()
                },
                identity: function() {
                    this.rawData = ib.toFloatVector(null, null, null, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])
                },
                transpose: function() {
                    var a = this.rawData.copy();
                    this.rawData.set(1, a.get(4));
                    this.rawData.set(2, a.get(8));
                    this.rawData.set(3, a.get(12));
                    this.rawData.set(4, a.get(1));
                    this.rawData.set(6, a.get(9));
                    this.rawData.set(7, a.get(13));
                    this.rawData.set(8, a.get(2));
                    this.rawData.set(9, a.get(6));
                    this.rawData.set(11, a.get(14));
                    this.rawData.set(12, a.get(3));
                    this.rawData.set(13, a.get(7));
                    this.rawData.set(14, a.get(11))
                },
                __class__: Sj
            };
            var Vh = function(a) {
                this.__colorTransform = new wb;
                this.concatenatedColorTransform = new wb;
                this.pixelBounds = new fa;
                this.__displayObject =
                    a;
                this.__hasMatrix = !0
            };
            g["openfl.geom.Transform"] = Vh;
            Vh.__name__ = "openfl.geom.Transform";
            Vh.prototype = {
                get_colorTransform: function() {
                    return this.__colorTransform
                },
                set_colorTransform: function(a) {
                    this.__colorTransform.__equals(a, !1) || (this.__colorTransform.__copyFrom(a), null != a && this.__displayObject.set_alpha(a.alphaMultiplier), a = this.__displayObject, a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty()));
                    return this.__colorTransform
                },
                get_matrix: function() {
                    return this.__hasMatrix ? this.__displayObject.__transform.clone() :
                        null
                },
                set_matrix: function(a) {
                    if (null == a) return this.__hasMatrix = !1, null;
                    this.__hasMatrix = !0;
                    this.__hasMatrix3D = !1;
                    null != this.__displayObject && this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
                    return a
                },
                __setTransform: function(a, b, c, d, e, f) {
                    if (null != this.__displayObject) {
                        var k = this.__displayObject.__transform;
                        if (k.a != a || k.b != b || k.c != c || k.d != d || k.tx != e || k.ty != f) {
                            var h = 0 == b ? a : Math.sqrt(a * a + b * b);
                            var m = 0 == c ? d : Math.sqrt(c * c + d * d);
                            this.__displayObject.__scaleX = h;
                            this.__displayObject.__scaleY = m;
                            h = 180 / Math.PI *
                                Math.atan2(d, c) - 90;
                            h != this.__displayObject.__rotation && (this.__displayObject.__rotation = h, h *= Math.PI / 180, this.__displayObject.__rotationSine = Math.sin(h), this.__displayObject.__rotationCosine = Math.cos(h));
                            k.a = a;
                            k.b = b;
                            k.c = c;
                            k.d = d;
                            k.tx = e;
                            k.ty = f;
                            this.__displayObject.__setTransformDirty()
                        }
                    }
                },
                __class__: Vh,
                __properties__: {
                    set_matrix: "set_matrix",
                    get_matrix: "get_matrix",
                    set_colorTransform: "set_colorTransform",
                    get_colorTransform: "get_colorTransform"
                }
            };
            var Dl = function() {};
            g["openfl.media.ID3Info"] = Dl;
            Dl.__name__ =
                "openfl.media.ID3Info";
            Dl.prototype = {
                __class__: Dl
            };
            var Ef = function(a, b) {
                ua.call(this, this);
                this.bytesTotal = this.bytesLoaded = 0;
                this.isBuffering = !1;
                this.url = null;
                null != a && this.load(a, b)
            };
            g["openfl.media.Sound"] = Ef;
            Ef.__name__ = "openfl.media.Sound";
            Ef.fromAudioBuffer = function(a) {
                var b = new Ef;
                b.__buffer = a;
                return b
            };
            Ef.__super__ = ua;
            Ef.prototype = n(ua.prototype, {
                load: function(a, b) {
                    var c = this;
                    this.url = a.url;
                    a = qa.getLibrary("default");
                    if (null != a && Object.prototype.hasOwnProperty.call(a.cachedAudioBuffers.h,
                            this.url)) this.AudioBuffer_onURLLoad(a.cachedAudioBuffers.h[this.url]);
                    else jc.loadFromFile(this.url).onComplete(r(this, this.AudioBuffer_onURLLoad)).onError(function(a) {
                        c.AudioBuffer_onURLLoad(null)
                    })
                },
                play: function(a, b, c) {
                    null == b && (b = 0);
                    null == a && (a = 0);
                    if (null == this.__buffer || 32 <= td.__soundChannels.length) return null;
                    c = null == c ? new gf : c.clone();
                    var d = td.__soundTransform.pan + c.pan;
                    1 < d && (d = 1); - 1 > d && (d = -1);
                    var e = td.__soundTransform.volume * c.volume,
                        f = new tl(this.__buffer);
                    f.offset = a | 0;
                    1 < b && f.set_loops(b -
                        1);
                    f.set_gain(e);
                    a = f.get_position();
                    a.x = d;
                    a.z = -1 * Math.sqrt(1 - Math.pow(d, 2));
                    f.set_position(a);
                    return new ck(f, c)
                },
                get_id3: function() {
                    return new Dl
                },
                get_length: function() {
                    return null != this.__buffer ? 1E3 * this.__buffer.get_src().duration() | 0 : 0
                },
                AudioBuffer_onURLLoad: function(a) {
                    null == a ? this.dispatchEvent(new Nh("ioError")) : (this.__buffer = a, this.dispatchEvent(new sa("complete")))
                },
                __class__: Ef,
                __properties__: {
                    get_length: "get_length",
                    get_id3: "get_id3"
                }
            });
            var ck = function(a, b) {
                ua.call(this, this);
                this.rightPeak =
                    this.leftPeak = 1;
                this.__soundTransform = null != b ? b : new gf;
                null != a && (this.__source = a, this.__source.onComplete.add(r(this, this.source_onComplete)), this.__isValid = !0, this.__source.play());
                td.__registerSoundChannel(this)
            };
            g["openfl.media.SoundChannel"] = ck;
            ck.__name__ = "openfl.media.SoundChannel";
            ck.__super__ = ua;
            ck.prototype = n(ua.prototype, {
                stop: function() {
                    td.__unregisterSoundChannel(this);
                    this.__isValid && (this.__source.stop(), this.__dispose())
                },
                __dispose: function() {
                    this.__isValid && (this.__source.onComplete.remove(r(this,
                        this.source_onComplete)), this.__source.dispose(), this.__source = null, this.__isValid = !1)
                },
                __updateTransform: function() {
                    this.set_soundTransform(this.get_soundTransform())
                },
                get_position: function() {
                    return this.__isValid ? this.__source.get_currentTime() + this.__source.offset : 0
                },
                set_position: function(a) {
                    if (!this.__isValid) return 0;
                    this.__source.set_currentTime((a | 0) - this.__source.offset);
                    return a
                },
                get_soundTransform: function() {
                    return this.__soundTransform.clone()
                },
                set_soundTransform: function(a) {
                    if (null != a) {
                        this.__soundTransform.pan =
                            a.pan;
                        this.__soundTransform.volume = a.volume;
                        var b = td.__soundTransform.pan + this.__soundTransform.pan; - 1 > b && (b = -1);
                        1 < b && (b = 1);
                        var c = td.__soundTransform.volume * this.__soundTransform.volume;
                        this.__isValid && (this.__source.set_gain(c), c = this.__source.get_position(), c.x = b, c.z = -1 * Math.sqrt(1 - Math.pow(b, 2)), this.__source.set_position(c))
                    }
                    return a
                },
                source_onComplete: function() {
                    td.__unregisterSoundChannel(this);
                    this.__dispose();
                    this.dispatchEvent(new sa("soundComplete"))
                },
                __class__: ck,
                __properties__: {
                    set_soundTransform: "set_soundTransform",
                    get_soundTransform: "get_soundTransform",
                    set_position: "set_position",
                    get_position: "get_position"
                }
            });
            var sm = function() {};
            g["openfl.media.SoundLoaderContext"] = sm;
            sm.__name__ = "openfl.media.SoundLoaderContext";
            var gf = function(a, b) {
                null == b && (b = 0);
                null == a && (a = 1);
                this.volume = a;
                this.pan = b;
                this.rightToRight = this.rightToLeft = this.leftToRight = this.leftToLeft = 0
            };
            g["openfl.media.SoundTransform"] = gf;
            gf.__name__ = "openfl.media.SoundTransform";
            gf.prototype = {
                clone: function() {
                    return new gf(this.volume, this.pan)
                },
                __class__: gf
            };
            var td = function() {};
            g["openfl.media.SoundMixer"] = td;
            td.__name__ = "openfl.media.SoundMixer";
            td.__registerSoundChannel = function(a) {
                td.__soundChannels.push(a)
            };
            td.__unregisterSoundChannel = function(a) {
                Y.remove(td.__soundChannels, a)
            };
            var El = function() {
                ua.call(this)
            };
            g["openfl.net.NetConnection"] = El;
            El.__name__ = "openfl.net.NetConnection";
            El.__super__ = ua;
            El.prototype = n(ua.prototype, {
                __class__: El
            });
            var Fl = function(a, b) {
                ua.call(this);
                this.__connection = a;
                this.__soundTransform = new gf;
                this.__video = window.document.createElement("video");
                this.__video.setAttribute("playsinline", "");
                this.__video.setAttribute("webkit-playsinline", "");
                this.__video.setAttribute("crossorigin", "anonymous");
                this.__video.addEventListener("error", r(this, this.video_onError), !1);
                this.__video.addEventListener("waiting", r(this, this.video_onWaiting), !1);
                this.__video.addEventListener("ended", r(this, this.video_onEnd), !1);
                this.__video.addEventListener("pause", r(this, this.video_onPause), !1);
                this.__video.addEventListener("seeking", r(this, this.video_onSeeking), !1);
                this.__video.addEventListener("playing",
                    r(this, this.video_onPlaying), !1);
                this.__video.addEventListener("timeupdate", r(this, this.video_onTimeUpdate), !1);
                this.__video.addEventListener("loadstart", r(this, this.video_onLoadStart), !1);
                this.__video.addEventListener("stalled", r(this, this.video_onStalled), !1);
                this.__video.addEventListener("durationchanged", r(this, this.video_onDurationChanged), !1);
                this.__video.addEventListener("canplay", r(this, this.video_onCanPlay), !1);
                this.__video.addEventListener("canplaythrough", r(this, this.video_onCanPlayThrough), !1);
                this.__video.addEventListener("loadedmetadata", r(this, this.video_onLoadMetaData), !1)
            };
            g["openfl.net.NetStream"] = Fl;
            Fl.__name__ = "openfl.net.NetStream";
            Fl.__super__ = ua;
            Fl.prototype = n(ua.prototype, {
                __dispatchStatus: function(a) {
                    a = new ak("netStatus", !1, !1, {
                        code: a
                    });
                    this.__connection.dispatchEvent(a);
                    this.dispatchEvent(a)
                },
                __playStatus: function(a) {
                    if (null != this.__video && null != this.client) try {
                        var b = this.client.onPlayStatus;
                        b({
                            code: a,
                            duration: this.__video.duration,
                            position: this.__video.currentTime,
                            speed: this.__video.playbackRate,
                            start: this.__video.startTime
                        })
                    } catch (c) {
                        Ca.lastError = c
                    }
                },
                video_onCanPlay: function(a) {
                    this.__playStatus("NetStream.Play.canplay")
                },
                video_onCanPlayThrough: function(a) {
                    this.__playStatus("NetStream.Play.canplaythrough")
                },
                video_onDurationChanged: function(a) {
                    this.__playStatus("NetStream.Play.durationchanged")
                },
                video_onEnd: function(a) {
                    this.__dispatchStatus("NetStream.Play.Stop");
                    this.__dispatchStatus("NetStream.Play.Complete");
                    this.__playStatus("NetStream.Play.Complete")
                },
                video_onError: function(a) {
                    this.__dispatchStatus("NetStream.Play.Stop");
                    this.__playStatus("NetStream.Play.error")
                },
                video_onLoadMetaData: function(a) {
                    if (null != this.__video && null != this.client) try {
                        var b = this.client.onMetaData;
                        b({
                            width: this.__video.videoWidth,
                            height: this.__video.videoHeight,
                            duration: this.__video.duration
                        })
                    } catch (c) {
                        Ca.lastError = c
                    }
                },
                video_onLoadStart: function(a) {
                    this.__playStatus("NetStream.Play.loadstart")
                },
                video_onPause: function(a) {
                    this.__playStatus("NetStream.Play.pause")
                },
                video_onPlaying: function(a) {
                    this.__dispatchStatus("NetStream.Play.Start");
                    this.__playStatus("NetStream.Play.playing")
                },
                video_onSeeking: function(a) {
                    this.__playStatus("NetStream.Play.seeking");
                    this.__dispatchStatus("NetStream.Seek.Complete")
                },
                video_onStalled: function(a) {
                    this.__playStatus("NetStream.Play.stalled")
                },
                video_onTimeUpdate: function(a) {
                    null != this.__video && (this.time = this.__video.currentTime, this.__playStatus("NetStream.Play.timeupdate"))
                },
                video_onWaiting: function(a) {
                    this.__playStatus("NetStream.Play.waiting")
                },
                __class__: Fl
            });
            var Cc = function() {
                ua.call(this);
                this.client = this;
                this.objectEncoding = Cc.defaultObjectEncoding
            };
            g["openfl.net.SharedObject"] = Cc;
            Cc.__name__ = "openfl.net.SharedObject";
            Cc.getLocal = function(a, b, c) {
                c = " ~%&\\;:\"',<>?#".split("");
                var d = !0;
                if (null == a || "" == a) d = !1;
                else
                    for (var e = 0; e < c.length;) {
                        var f = c[e];
                        ++e;
                        if (-1 < a.indexOf(f)) {
                            d = !1;
                            break
                        }
                    }
                if (!d) throw F.thrown(new cb("Error #2134: Cannot create SharedObject."));
                null == Cc.__sharedObjects && (Cc.__sharedObjects = new aa, null != Ga.current && Ga.current.onExit.add(Cc.application_onExit));
                c = b + "/" + a;
                if (!Object.prototype.hasOwnProperty.call(Cc.__sharedObjects.h, c)) {
                    d =
                        null;
                    try {
                        var k = Ch.getLocalStorage();
                        null == b && (null != k && (d = k.getItem(window.location.href + ":" + a), k.removeItem(window.location.href + ":" + a)), b = window.location.pathname);
                        null != k && null == d && (d = k.getItem(b + ":" + a))
                    } catch (m) {
                        Ca.lastError = m
                    }
                    k = new Cc;
                    k.data = {};
                    k.__localPath = b;
                    k.__name = a;
                    if (null != d && "" != d) try {
                        var h = new Xc(d);
                        h.setResolver({
                            resolveEnum: Ua.resolveEnum,
                            resolveClass: Cc.__resolveClass
                        });
                        k.data = h.unserialize()
                    } catch (m) {
                        Ca.lastError = m
                    }
                    Cc.__sharedObjects.h[c] = k
                }
                return Cc.__sharedObjects.h[c]
            };
            Cc.__resolveClass =
                function(a) {
                    return null != a ? (K.startsWith(a, "neash.") && (a = K.replace(a, "neash.", "openfl.")), K.startsWith(a, "native.") && (a = K.replace(a, "native.", "openfl.")), K.startsWith(a, "flash.") && (a = K.replace(a, "flash.", "openfl.")), K.startsWith(a, "openfl._v2.") && (a = K.replace(a, "openfl._v2.", "openfl.")), K.startsWith(a, "openfl._legacy.") && (a = K.replace(a, "openfl._legacy.", "openfl.")), g[a]) : null
                };
            Cc.application_onExit = function(a) {
                for (a = aa.valueIterator(Cc.__sharedObjects.h); a.hasNext();) a.next().flush()
            };
            Cc.__super__ =
                ua;
            Cc.prototype = n(ua.prototype, {
                flush: function(a) {
                    if (0 == ea.fields(this.data).length) return 0;
                    a = hd.run(this.data);
                    try {
                        var b = Ch.getLocalStorage();
                        null != b && (b.removeItem(this.__localPath + ":" + this.__name), b.setItem(this.__localPath + ":" + this.__name, a))
                    } catch (c) {
                        return Ca.lastError = c, 1
                    }
                    return 0
                },
                __class__: Cc
            });
            var Gl = function(a) {
                ua.call(this);
                this.bytesTotal = this.bytesLoaded = 0;
                this.dataFormat = 1;
                null != a && this.load(a)
            };
            g["openfl.net.URLLoader"] = Gl;
            Gl.__name__ = "openfl.net.URLLoader";
            Gl.__super__ = ua;
            Gl.prototype =
                n(ua.prototype, {
                    load: function(a) {
                        var b = this;
                        if (0 == this.dataFormat) {
                            var c = new Ij;
                            this.__prepareRequest(c, a);
                            c.load().onProgress(r(this, this.httpRequest_onProgress)).onError(r(this, this.httpRequest_onError)).onComplete(function(a) {
                                b.__dispatchStatus();
                                b.data = a;
                                a = new sa("complete");
                                b.dispatchEvent(a)
                            })
                        } else c = new Hh, this.__prepareRequest(c, a), c.load().onProgress(r(this, this.httpRequest_onProgress)).onError(r(this, this.httpRequest_onError)).onComplete(function(a) {
                            b.__dispatchStatus();
                            b.data = a;
                            a = new sa("complete");
                            b.dispatchEvent(a)
                        })
                    },
                    __dispatchStatus: function() {
                        var a = new Zj("httpStatus", !1, !1, this.__httpRequest.responseStatus);
                        a.responseURL = this.__httpRequest.uri;
                        var b = [];
                        if (this.__httpRequest.enableResponseHeaders && null != this.__httpRequest.responseHeaders)
                            for (var c = 0, d = this.__httpRequest.responseHeaders; c < d.length;) {
                                var e = d[c];
                                ++c;
                                b.push(new Hl(e.name, e.value))
                            }
                        a.responseHeaders = b;
                        this.dispatchEvent(a)
                    },
                    __prepareRequest: function(a, b) {
                        this.__httpRequest = a;
                        this.__httpRequest.uri = b.url;
                        this.__httpRequest.method =
                            b.method;
                        if (null != b.data)
                            if (Ua.typeof(b.data) == Jd.TObject) {
                                var c = ea.fields(b.data);
                                for (a = 0; a < c.length;) {
                                    var d = c[a];
                                    ++a;
                                    this.__httpRequest.formData.h[d] = ea.field(b.data, d)
                                }
                            } else this.__httpRequest.data = b.data instanceof bb ? b.data : bb.ofString(I.string(b.data));
                        this.__httpRequest.contentType = b.contentType;
                        if (null != b.requestHeaders)
                            for (a = 0, c = b.requestHeaders; a < c.length;) d = c[a], ++a, this.__httpRequest.headers.push(new Aj(d.name, d.value));
                        this.__httpRequest.followRedirects = b.followRedirects;
                        this.__httpRequest.timeout =
                            b.idleTimeout | 0;
                        this.__httpRequest.withCredentials = b.manageCookies;
                        this.__httpRequest.userAgent = b.userAgent;
                        this.__httpRequest.enableResponseHeaders = !0
                    },
                    httpRequest_onError: function(a) {
                        this.__dispatchStatus();
                        var b = 403 == a ? new bk("securityError") : new Nh("ioError");
                        b.text = I.string(a);
                        this.dispatchEvent(b)
                    },
                    httpRequest_onProgress: function(a, b) {
                        var c = new Ig("progress");
                        c.bytesLoaded = a;
                        c.bytesTotal = b;
                        this.dispatchEvent(c)
                    },
                    __class__: Gl
                });
            var $g = function(a) {
                null != a && (this.url = a);
                this.contentType = null;
                this.followRedirects =
                    Lf.followRedirects;
                this.idleTimeout = 0 < Lf.idleTimeout ? Lf.idleTimeout : 3E4;
                this.manageCookies = Lf.manageCookies;
                this.method = "GET";
                this.requestHeaders = [];
                this.userAgent = Lf.userAgent
            };
            g["openfl.net.URLRequest"] = $g;
            $g.__name__ = "openfl.net.URLRequest";
            $g.prototype = {
                __class__: $g
            };
            var Lf = function() {};
            g["openfl.net.URLRequestDefaults"] = Lf;
            Lf.__name__ = "openfl.net.URLRequestDefaults";
            var Hl = function(a, b) {
                null == b && (b = "");
                null == a && (a = "");
                this.name = a;
                this.value = b
            };
            g["openfl.net.URLRequestHeader"] = Hl;
            Hl.__name__ =
                "openfl.net.URLRequestHeader";
            Hl.prototype = {
                __class__: Hl
            };
            var Bb = function() {
                ua.call(this);
                Bb.initialize();
                this.__interval = 0;
                this.__muted = !1;
                this.setRequestedUpdateInterval(Bb.defaultInterval)
            };
            g["openfl.sensors.Accelerometer"] = Bb;
            Bb.__name__ = "openfl.sensors.Accelerometer";
            Bb.__properties__ = {
                get_isSupported: "get_isSupported"
            };
            Bb.initialize = function() {
                if (!Bb.initialized) {
                    var a = wd.getSensors(lm.ACCELEROMETER);
                    0 < a.length && (a[0].onUpdate.add(Bb.accelerometer_onUpdate), Bb.supported = !0);
                    Bb.initialized = !0
                }
            };
            Bb.accelerometer_onUpdate = function(a, b, c) {
                Bb.currentX = a;
                Bb.currentY = b;
                Bb.currentZ = c
            };
            Bb.get_isSupported = function() {
                Bb.initialize();
                return Bb.supported
            };
            Bb.__super__ = ua;
            Bb.prototype = n(ua.prototype, {
                addEventListener: function(a, b, c, d, e) {
                    null == e && (e = !1);
                    null == d && (d = 0);
                    null == c && (c = !1);
                    ua.prototype.addEventListener.call(this, a, b, c, d, e);
                    this.update()
                },
                setRequestedUpdateInterval: function(a) {
                    this.__interval = a;
                    if (0 > this.__interval) throw F.thrown(new jg);
                    0 == this.__interval && (this.__interval = Bb.defaultInterval);
                    null != this.__timer && (this.__timer.stop(), this.__timer = null);
                    Bb.supported && !this.get_muted() && (this.__timer = new If(this.__interval), this.__timer.run = r(this, this.update))
                },
                update: function() {
                    var a = new Yj("update");
                    a.timestamp = (new Date).getTime() / 1E3;
                    a.accelerationX = Bb.currentX;
                    a.accelerationY = Bb.currentY;
                    a.accelerationZ = Bb.currentZ;
                    this.dispatchEvent(a)
                },
                get_muted: function() {
                    return this.__muted
                },
                __class__: Bb,
                __properties__: {
                    get_muted: "get_muted"
                }
            });
            var Hg = function(a) {
                this.parentDomain = null != a ? a : Hg.currentDomain
            };
            g["openfl.system.ApplicationDomain"] = Hg;
            Hg.__name__ = "openfl.system.ApplicationDomain";
            Hg.prototype = {
                __class__: Hg
            };
            var nc = function(a, b, c, d, e, f, k, h, m, g, q, l, n) {
                this.font = a;
                this.size = b;
                this.color = c;
                this.bold = d;
                this.italic = e;
                this.underline = f;
                this.url = k;
                this.target = h;
                this.align = m;
                this.leftMargin = g;
                this.rightMargin = q;
                this.indent = l;
                this.leading = n
            };
            g["openfl.text.TextFormat"] = nc;
            nc.__name__ = "openfl.text.TextFormat";
            nc.prototype = {
                clone: function() {
                    var a = new nc(this.font, this.size, this.color, this.bold, this.italic,
                        this.underline, this.url, this.target);
                    a.align = this.align;
                    a.leftMargin = this.leftMargin;
                    a.rightMargin = this.rightMargin;
                    a.indent = this.indent;
                    a.leading = this.leading;
                    a.blockIndent = this.blockIndent;
                    a.bullet = this.bullet;
                    a.kerning = this.kerning;
                    a.letterSpacing = this.letterSpacing;
                    a.tabStops = this.tabStops;
                    a.__ascent = this.__ascent;
                    a.__descent = this.__descent;
                    return a
                },
                __merge: function(a) {
                    null != a.font && (this.font = a.font);
                    null != a.size && (this.size = a.size);
                    null != a.color && (this.color = a.color);
                    null != a.bold && (this.bold =
                        a.bold);
                    null != a.italic && (this.italic = a.italic);
                    null != a.underline && (this.underline = a.underline);
                    null != a.url && (this.url = a.url);
                    null != a.target && (this.target = a.target);
                    null != a.align && (this.align = a.align);
                    null != a.leftMargin && (this.leftMargin = a.leftMargin);
                    null != a.rightMargin && (this.rightMargin = a.rightMargin);
                    null != a.indent && (this.indent = a.indent);
                    null != a.leading && (this.leading = a.leading);
                    null != a.blockIndent && (this.blockIndent = a.blockIndent);
                    null != a.bullet && (this.bullet = a.bullet);
                    null != a.kerning && (this.kerning =
                        a.kerning);
                    null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
                    null != a.tabStops && (this.tabStops = a.tabStops);
                    null != a.__ascent && (this.__ascent = a.__ascent);
                    null != a.__descent && (this.__descent = a.__descent)
                },
                __class__: nc
            };
            var Dm = {
                    fromString: function(a) {
                        switch (a) {
                            case "center":
                                return 0;
                            case "end":
                                return 1;
                            case "justify":
                                return 2;
                            case "left":
                                return 3;
                            case "right":
                                return 4;
                            case "start":
                                return 5;
                            default:
                                return null
                        }
                    }
                },
                lb = function(a) {
                    this.textField = a;
                    this.height = this.width = 100;
                    this.set_text("");
                    this.bounds =
                        new fa(0, 0, 0, 0);
                    this.textBounds = new fa(0, 0, 0, 0);
                    this.type = 0;
                    this.autoSize = 2;
                    this.embedFonts = !1;
                    this.selectable = !0;
                    this.borderColor = 0;
                    this.border = !1;
                    this.backgroundColor = 16777215;
                    this.background = !1;
                    this.gridFitType = 1;
                    this.maxChars = 0;
                    this.multiline = !1;
                    this.numLines = 1;
                    this.scrollH = this.sharpness = 0;
                    this.set_scrollV(1);
                    this.wordWrap = !1;
                    this.lineAscents = ib.toFloatVector(null);
                    this.lineBreaks = ib.toIntVector(null);
                    this.lineDescents = ib.toFloatVector(null);
                    this.lineLeadings = ib.toFloatVector(null);
                    this.lineHeights =
                        ib.toFloatVector(null);
                    this.lineWidths = ib.toFloatVector(null);
                    this.layoutGroups = ib.toObjectVector(null);
                    this.textFormatRanges = ib.toObjectVector(null);
                    null == lb.__context && (lb.__context = window.document.createElement("canvas").getContext("2d"))
                };
            g["openfl.text._internal.TextEngine"] = lb;
            lb.__name__ = "openfl.text._internal.TextEngine";
            lb.findFont = function(a) {
                return yb.__fontByName.h[a]
            };
            lb.findFontVariant = function(a) {
                var b = a.font,
                    c = a.bold;
                a = a.italic;
                null == b && (b = "_serif");
                var d = K.replace(K.replace(b, " Normal",
                    ""), " Regular", "");
                return c && a && Object.prototype.hasOwnProperty.call(yb.__fontByName.h, d + " Bold Italic") ? lb.findFont(d + " Bold Italic") : c && Object.prototype.hasOwnProperty.call(yb.__fontByName.h, d + " Bold") ? lb.findFont(d + " Bold") : a && Object.prototype.hasOwnProperty.call(yb.__fontByName.h, d + " Italic") ? lb.findFont(d + " Italic") : lb.findFont(b)
            };
            lb.getFormatHeight = function(a) {
                lb.__context.font = lb.getFont(a);
                var b = lb.getFontInstance(a);
                if (null != a.__ascent) {
                    var c = a.size * a.__ascent;
                    b = a.size * a.__descent
                } else null !=
                    b && 0 != b.unitsPerEM ? (c = b.ascender / b.unitsPerEM * a.size, b = Math.abs(b.descender / b.unitsPerEM * a.size)) : (c = a.size, b = .185 * a.size);
                return c + b + a.leading
            };
            lb.getFont = function(a) {
                var b = a.font,
                    c = a.bold,
                    d = a.italic;
                null == b && (b = "_serif");
                var e = K.replace(K.replace(b, " Normal", ""), " Regular", "");
                c && d && Object.prototype.hasOwnProperty.call(yb.__fontByName.h, e + " Bold Italic") ? (b = e + " Bold Italic", d = c = !1) : c && Object.prototype.hasOwnProperty.call(yb.__fontByName.h, e + " Bold") ? (b = e + " Bold", c = !1) : d && Object.prototype.hasOwnProperty.call(yb.__fontByName.h,
                    e + " Italic") ? (b = e + " Italic", d = !1) : (c && (-1 < b.indexOf(" Bold ") || K.endsWith(b, " Bold")) && (c = !1), d && (-1 < b.indexOf(" Italic ") || K.endsWith(b, " Italic")) && (d = !1));
                c = (d ? "italic " : "normal ") + "normal " + (c ? "bold " : "normal ");
                c += a.size + "px";
                c += "/" + (a.leading + a.size + 3) + "px ";
                switch (b) {
                    case "_sans":
                        a = "sans-serif";
                        break;
                    case "_serif":
                        a = "serif";
                        break;
                    case "_typewriter":
                        a = "monospace";
                        break;
                    default:
                        a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, "$1") + "'"
                }
                return c += "" + a
            };
            lb.getFontInstance = function(a) {
                return lb.findFontVariant(a)
            };
            lb.prototype = {
                getBounds: function() {
                    var a = this.border ? 1 : 0;
                    this.bounds.width = this.width + a;
                    this.bounds.height = this.height + a;
                    for (var b = a = this.width, c = this.layoutGroups.iterator(); c.hasNext();) {
                        var d = c.next();
                        d.offsetX < a && (a = d.offsetX);
                        d.offsetY < b && (b = d.offsetY)
                    }
                    a >= this.width && (a = 2);
                    b >= this.height && (b = 2);
                    this.textBounds.setTo(Math.max(a - 2, 0), Math.max(b - 2, 0), Math.min(this.textWidth + 4, this.bounds.width + 4), Math.min(1.185 * this.textHeight + 4, this.bounds.height + 4))
                },
                getLineBreakIndex: function(a) {
                    null == a && (a =
                        0);
                    var b = this.text.indexOf("\n", a);
                    a = this.text.indexOf("\r", a);
                    return -1 == b ? a : -1 == a ? b : b < a ? b : a
                },
                getLineMeasurements: function() {
                    this.lineAscents.set_length(0);
                    this.lineDescents.set_length(0);
                    this.lineLeadings.set_length(0);
                    this.lineHeights.set_length(0);
                    this.lineWidths.set_length(0);
                    var a = 0,
                        b = 0,
                        c = null,
                        d = 0,
                        e = 0,
                        f;
                    this.textHeight = this.textWidth = 0;
                    this.numLines = 1;
                    this.maxScrollH = 0;
                    for (var k = this.layoutGroups.iterator(); k.hasNext();) {
                        for (f = k.next(); f.lineIndex > this.numLines - 1;) this.lineAscents.push(a), this.lineDescents.push(b),
                            this.lineLeadings.push(null != c ? c : 0), this.lineHeights.push(d), this.lineWidths.push(e), b = a = 0, c = null, e = d = 0, this.numLines++;
                        a = Math.max(a, f.ascent);
                        b = Math.max(b, f.descent);
                        c = null == c ? f.leading : Math.max(c, f.leading) | 0;
                        d = Math.max(d, f.height);
                        e = f.offsetX - 2 + f.width;
                        e > this.textWidth && (this.textWidth = e);
                        f = f.offsetY - 2 + f.ascent + f.descent;
                        f > this.textHeight && (this.textHeight = f)
                    }
                    0 == this.textHeight && null != this.textField && 1 == this.textField.get_type() && (a = this.textField.__textFormat, b = lb.getFontInstance(a), null != a.__ascent ?
                        (k = a.size * a.__ascent, f = a.size * a.__descent) : null != b && 0 != b.unitsPerEM ? (k = b.ascender / b.unitsPerEM * a.size, f = Math.abs(b.descender / b.unitsPerEM * a.size)) : (k = a.size, f = .185 * a.size), c = a.leading, a = k, b = f, this.textHeight = k + f);
                    this.lineAscents.push(a);
                    this.lineDescents.push(b);
                    this.lineLeadings.push(null != c ? c : 0);
                    this.lineHeights.push(d);
                    this.lineWidths.push(e);
                    1 == this.numLines && 0 < c && (this.textHeight += c);
                    0 < this.layoutGroups.get_length() && (k = this.layoutGroups.get(this.layoutGroups.get_length() - 1), null != k && k.startIndex ==
                        k.endIndex && (this.textHeight -= d));
                    if (2 != this.autoSize) switch (this.autoSize) {
                        case 0:
                        case 1:
                        case 3:
                            this.wordWrap || (this.width = this.textWidth + 4), this.height = this.textHeight + 4, this.bottomScrollV = this.numLines
                    }
                    this.maxScrollH = this.textWidth > this.width - 4 ? this.textWidth - this.width + 4 | 0 : 0;
                    this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH)
                },
                getLayoutGroups: function() {
                    var a = this;
                    this.layoutGroups.set_length(0);
                    if (null != this.text && "" != this.text) {
                        var b = -1,
                            c = null,
                            d = null,
                            e = Vb.__defaultTextFormat.clone(),
                            f = 0,
                            k = 0,
                            h = 0,
                            m = 0,
                            g = 3,
                            q = null,
                            l = null,
                            n = 0,
                            r = 0,
                            D = 0,
                            w = -2,
                            x = -1,
                            B = this.text.indexOf(" "),
                            u = this.getLineBreakIndex(),
                            v = 2,
                            y = 2,
                            t = 0,
                            A = 0,
                            J = function(b, c, d) {
                                var e = [];
                                if (null == a.__useIntAdvances) {
                                    var f = new ya("Trident/7.0", "");
                                    a.__useIntAdvances = f.match(C.navigator.userAgent)
                                }
                                if (a.__useIntAdvances) {
                                    var k = 0;
                                    for (f = c; f < d;) {
                                        var l = f++;
                                        l = lb.__context.measureText(b.substring(c, l + 1)).width;
                                        e.push(l - k);
                                        k = l
                                    }
                                } else
                                    for (f = c; f < d;) l = f++, l < b.length - 1 ? (c = lb.__context.measureText(b.charAt(l + 1)).width, c = lb.__context.measureText(Y.substr(b,
                                        l, 2)).width - c) : c = lb.__context.measureText(b.charAt(l)).width, e.push(c);
                                return e
                            },
                            F = function(a) {
                                for (var b = 0, c = 0; c < a.length;) {
                                    var d = a[c];
                                    ++c;
                                    b += d
                                }
                                return b
                            },
                            L = function(b, d) {
                                null == q || q.startIndex != q.endIndex ? (q = new dk(c.format, b, d), a.layoutGroups.push(q)) : (q.format = c.format, q.startIndex = b, q.endIndex = d)
                            },
                            ma = function() {
                                null != e.__ascent ? (k = e.size * e.__ascent, m = e.size * e.__descent) : null != d && 0 != d.unitsPerEM ? (k = d.ascender / d.unitsPerEM * e.size, m = Math.abs(d.descender / d.unitsPerEM * e.size)) : (k = e.size, m = .185 * e.size);
                                f = e.leading;
                                r = Math.ceil(k + m + f);
                                r > D && (D = r);
                                k > h && (h = k)
                            },
                            G = function() {
                                return b < a.textFormatRanges.get_length() - 1 ? (b += 1, c = a.textFormatRanges.get(b), e.__merge(c.format), lb.__context.font = lb.getFont(e), d = lb.getFontInstance(e), !0) : !1
                            },
                            z = function(d, e) {
                                if (e <= c.end) l = J(a.text, d, e), n = F(l);
                                else {
                                    var f = d;
                                    d = c.end;
                                    var k = 0;
                                    l = [];
                                    for (n = 0;;)
                                        if (f != d && (f = J(a.text, f, d), l = l.concat(f)), d != e) {
                                            if (!G()) {
                                                Aa.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                                                    fileName: "openfl/text/_internal/TextEngine.hx",
                                                    lineNumber: 1061,
                                                    className: "openfl.text._internal.TextEngine",
                                                    methodName: "getLayoutGroups"
                                                });
                                                break
                                            }
                                            f = d;
                                            d = e < c.end ? e : c.end;
                                            ++k
                                        } else {
                                            n = F(l);
                                            break
                                        }
                                    b -= k + 1;
                                    G()
                                }
                            },
                            da = function(b) {
                                if (b <= c.end) l = J(a.text, t, b), n = F(l), L(t, b), q.positions = l, q.offsetX = v, q.ascent = k, q.descent = m, q.leading = f, q.lineIndex = A, q.offsetY = y, q.width = n, q.height = r, v += n, b == c.end && (q = null, G(), ma());
                                else
                                    for (;;) {
                                        var d = b < c.end ? b : c.end;
                                        t != d && (l = J(a.text, t, d), n = F(l), L(t, d), q.positions = l, q.offsetX = v, q.ascent =
                                            k, q.descent = m, q.leading = f, q.lineIndex = A, q.offsetY = y, q.width = n, q.height = r, v += n, t = d);
                                        d == c.end && (q = null);
                                        if (d == b) break;
                                        if (!G()) {
                                            Aa.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                                                fileName: "openfl/text/_internal/TextEngine.hx",
                                                lineNumber: 1149,
                                                className: "openfl.text._internal.TextEngine",
                                                methodName: "getLayoutGroups"
                                            });
                                            break
                                        }
                                        ma()
                                    }
                                t = b
                            },
                            H = function() {
                                ma();
                                for (var b = a.layoutGroups.get_length(); - 1 < --b;) {
                                    var c = a.layoutGroups.get(b);
                                    if (c.lineIndex < A) break;
                                    c.lineIndex > A || (c.ascent = h, c.height = D)
                                }
                                y += D;
                                D = h = 0;
                                A += 1;
                                v = 2
                            },
                            E = function(b) {
                                if (4 <= a.width && a.wordWrap) {
                                    var c = l,
                                        d, e, f;
                                    for (d = F(c); v + d > a.width - 2;) {
                                        for (f = d = e = 0; v + f < a.width - 2;) {
                                            var k = c[d];
                                            0 == k ? (++d, ++e) : (f += k, ++d)
                                        }
                                        if (0 == f) break;
                                        else if (2 > d && f + v > a.width - 2) {
                                            if (t + d - e == b) break
                                        } else
                                            for (; v + f > a.width - 2;) --d, 0 < d - e ? (z(t, t + d - e), f = n) : (d = 1, e = 0, z(t, t + 1), f = 0);
                                        c = t + d - e;
                                        da(c);
                                        H();
                                        z(c, b);
                                        c = l;
                                        d = n
                                    }
                                }
                                da(b)
                            };
                        G();
                        null != e.align && (g = e.align);
                        ma();
                        for (var I, ob = this.text.length + 1; t < ob;)
                            if (-1 < u && (-1 == B || u < B)) t <=
                                u ? (z(t, u), E(u), q = null) : null != q && q.startIndex != q.endIndex && (q.endIndex == B && (q.width -= q.positions[q.positions.length - 1]), q = null), c.end == u && (G(), ma()), H(), t = u + 1, x = u, u = this.getLineBreakIndex(t), null != e.align && (g = e.align);
                            else if (-1 < B)
                            for (null != q && q.startIndex != q.endIndex && (q = null), I = !1; t < this.text.length;) {
                                var K = -1; - 1 == B ? K = u : (K = B + 1, -1 < u && u < K && (K = u)); - 1 == K && (K = this.text.length);
                                z(t, K);
                                if (2 == g) {
                                    if (0 < l.length && t == w) {
                                        t += 1;
                                        var Ra = l.shift();
                                        n -= Ra;
                                        v += Ra
                                    }
                                    0 < l.length && K == B + 1 && (--K, Ra = l.pop(), n -= Ra)
                                }
                                this.wordWrap &&
                                    v + n > this.width - 2 && (I = !0, 0 < l.length && K == B + 1 && v + n - l[l.length - 1] <= this.width - 2 && (I = !1));
                                if (I) {
                                    2 != g && (null != q || 0 < this.layoutGroups.get_length()) && (I = q, null == I && (I = this.layoutGroups.get(this.layoutGroups.get_length() - 1)), I.width -= I.positions[I.positions.length - 1], I.endIndex--);
                                    I = this.layoutGroups.get_length() - 1;
                                    for (Ra = 0;;) {
                                        q = this.layoutGroups.get(I);
                                        if (0 < I && q.startIndex > w) ++Ra;
                                        else break;
                                        --I
                                    }
                                    t == w + 1 && H();
                                    v = 2;
                                    if (0 < Ra) {
                                        I = this.layoutGroups.get(this.layoutGroups.get_length() - Ra).offsetX;
                                        Ra = this.layoutGroups.get_length() -
                                            Ra;
                                        for (var M = this.layoutGroups.get_length(); Ra < M;) {
                                            var N = Ra++;
                                            q = this.layoutGroups.get(N);
                                            q.offsetX -= I;
                                            q.offsetY = y;
                                            q.lineIndex = A;
                                            v += q.width
                                        }
                                    }
                                    E(K);
                                    I = !1
                                } else null != q && t == B ? (2 != g && (q.endIndex = B, q.positions = q.positions.concat(l), q.width += n), v += n, t = K) : null == q || 2 == g ? E(K) : (Ra = K < c.end ? K : c.end, Ra < K && (l = J(this.text, t, Ra), n = F(l)), q.endIndex = Ra, q.positions = q.positions.concat(l), q.width += n, v += n, Ra == c.end && (q = null, G(), ma(), t = Ra, Ra != K && da(K)), u == K && ++K, t = K);
                                K = this.text.indexOf(" ", t);
                                u == w && (q.endIndex = u, 0 > u - q.startIndex -
                                    q.positions.length && q.positions.push(0), t = u + 1);
                                w = B;
                                B = K;
                                if (-1 < u && u <= t && (B > u || -1 == B) || t > this.text.length) break
                            } else t < this.text.length && (z(t, this.text.length), E(this.text.length), H()), t += 1;
                        x == t - 2 && -1 < x && (L(t, t), q.positions = [], q.ascent = k, q.descent = m, q.leading = f, q.lineIndex = A, q.offsetX = 2, q.offsetY = y, q.width = 0, q.height = r)
                    }
                },
                restrictText: function(a) {
                    if (null == a) return a;
                    null != this.__restrictRegexp && (a = this.__restrictRegexp.split(a).join(""));
                    return a
                },
                setTextAlignment: function() {
                    for (var a = -1, b = 0, c, d, e = !1,
                            f = 0, k = this.layoutGroups.get_length(); f < k;) {
                        var h = f++;
                        c = this.layoutGroups.get(h);
                        if (c.lineIndex != a) switch (a = c.lineIndex, b = this.width - 4 - c.format.rightMargin, c.format.align) {
                            case 0:
                                b = this.lineWidths.get(a) < b ? Math.round((b - this.lineWidths.get(a)) / 2) : 0;
                                break;
                            case 2:
                                if (this.lineWidths.get(a) < b) {
                                    d = 1;
                                    for (var m = h + 1, g = this.layoutGroups.get_length(); m < g;) {
                                        var q = m++;
                                        if (this.layoutGroups.get(q).lineIndex == a) 0 != q && 32 != Y.cca(this.text, this.layoutGroups.get(q).startIndex - 1) || ++d;
                                        else break
                                    }
                                    if (1 < d && (c = this.layoutGroups.get(h +
                                            d - 1), m = Y.cca(this.text, c.endIndex), c.endIndex < this.text.length && 10 != m && 13 != m))
                                        for (b = (b - this.lineWidths.get(a)) / (d - 1), e = !0, m = 1; this.layoutGroups.get(h + m).offsetX += b * m, ++m < d;);
                                }
                                b = 0;
                                break;
                            case 4:
                                b = this.lineWidths.get(a) < b ? Math.round(b - this.lineWidths.get(a)) : 0;
                                break;
                            default:
                                b = 0
                        }
                        0 < b && (c.offsetX += b)
                    }
                    e && this.getLineMeasurements()
                },
                update: function() {
                    null == this.text || 0 == this.textFormatRanges.get_length() ? (this.lineAscents.set_length(0), this.lineBreaks.set_length(0), this.lineDescents.set_length(0), this.lineLeadings.set_length(0),
                        this.lineHeights.set_length(0), this.lineWidths.set_length(0), this.layoutGroups.set_length(0), this.textHeight = this.textWidth = 0, this.numLines = 1, this.maxScrollH = 0, this.bottomScrollV = this.maxScrollV = 1) : (this.getLayoutGroups(), this.getLineMeasurements(), this.setTextAlignment());
                    this.getBounds()
                },
                get_bottomScrollV: function() {
                    if (1 == this.numLines || null == this.lineHeights) return 1;
                    for (var a = 0, b = this.lineHeights.get_length(), c = b - 1, d = this.lineHeights.get_length(); c < d;) {
                        var e = c++;
                        if (a + this.lineHeights.get(e) <=
                            this.height - 4) a += this.lineHeights.get(e);
                        else {
                            b = e;
                            break
                        }
                    }
                    return 1 > b ? 1 : b
                },
                get_maxScrollV: function() {
                    if (1 == this.numLines || null == this.lineHeights) return 1;
                    var a = this.numLines - 1,
                        b = 0;
                    10 == Y.cca(this.text, this.text.length - 1) && --a;
                    for (var c = a; 0 <= a;)
                        if (b + this.lineHeights.get(a) <= this.height - 4) b += this.lineHeights.get(a), --a;
                        else break;
                    a = a == c ? this.numLines : a + 2;
                    return 1 > a ? 1 : a
                },
                get_scrollV: function() {
                    if (1 == this.numLines || null == this.lineHeights) return 1;
                    var a = this.get_maxScrollV();
                    return this.scrollV > a ? a : this.scrollV
                },
                set_scrollV: function(a) {
                    1 > a && (a = 1);
                    return this.scrollV = a
                },
                set_text: function(a) {
                    return this.text = a
                },
                __class__: lb,
                __properties__: {
                    set_text: "set_text",
                    set_scrollV: "set_scrollV",
                    get_scrollV: "get_scrollV",
                    get_maxScrollV: "get_maxScrollV",
                    get_bottomScrollV: "get_bottomScrollV"
                }
            };
            var lf = function(a, b, c) {
                this.format = a;
                this.start = b;
                this.end = c
            };
            g["openfl.text._internal.TextFormatRange"] = lf;
            lf.__name__ = "openfl.text._internal.TextFormatRange";
            lf.prototype = {
                __class__: lf
            };
            var dk = function(a, b, c) {
                this.format = a;
                this.startIndex =
                    b;
                this.endIndex = c
            };
            g["openfl.text._internal.TextLayoutGroup"] = dk;
            dk.__name__ = "openfl.text._internal.TextLayoutGroup";
            dk.prototype = {
                __class__: dk
            };
            var Dd = function(a, b, c, d, e) {
                null == e && (e = 0);
                ua.call(this);
                this.device = a;
                this.id = b;
                this.minValue = c;
                this.maxValue = d;
                this.value = e
            };
            g["openfl.ui.GameInputControl"] = Dd;
            Dd.__name__ = "openfl.ui.GameInputControl";
            Dd.__super__ = ua;
            Dd.prototype = n(ua.prototype, {
                __class__: Dd
            });
            var Mk = function(a, b) {
                this.__controls = [];
                this.__button = new Tb;
                this.__axis = new Tb;
                this.id = a;
                this.name =
                    b;
                a = new Dd(this, "AXIS_0", -1, 1);
                this.__axis.h[0] = a;
                this.__controls.push(a);
                a = new Dd(this, "AXIS_1", -1, 1);
                this.__axis.h[1] = a;
                this.__controls.push(a);
                a = new Dd(this, "AXIS_2", -1, 1);
                this.__axis.h[2] = a;
                this.__controls.push(a);
                a = new Dd(this, "AXIS_3", -1, 1);
                this.__axis.h[3] = a;
                this.__controls.push(a);
                a = new Dd(this, "AXIS_4", -1, 1);
                this.__axis.h[4] = a;
                this.__controls.push(a);
                a = new Dd(this, "AXIS_5", -1, 1);
                this.__axis.h[5] = a;
                this.__controls.push(a);
                for (b = 0; 15 > b;) {
                    var c = b++;
                    a = new Dd(this, "BUTTON_" + c, 0, 1);
                    this.__button.h[c] =
                        a;
                    this.__controls.push(a)
                }
            };
            g["openfl.ui.GameInputDevice"] = Mk;
            Mk.__name__ = "openfl.ui.GameInputDevice";
            Mk.prototype = {
                getControlAt: function(a) {
                    return 0 <= a && a < this.__controls.length ? this.__controls[a] : null
                },
                get_numControls: function() {
                    return this.__controls.length
                },
                __class__: Mk,
                __properties__: {
                    get_numControls: "get_numControls"
                }
            };
            var bm = function() {};
            g["openfl.ui.Keyboard"] = bm;
            bm.__name__ = "openfl.ui.Keyboard";
            bm.__getCharCode = function(a, b) {
                null == b && (b = !1);
                if (b) {
                    switch (a) {
                        case 48:
                            return 41;
                        case 49:
                            return 33;
                        case 50:
                            return 64;
                        case 51:
                            return 35;
                        case 52:
                            return 36;
                        case 53:
                            return 37;
                        case 54:
                            return 94;
                        case 55:
                            return 38;
                        case 56:
                            return 42;
                        case 57:
                            return 40;
                        case 186:
                            return 58;
                        case 187:
                            return 43;
                        case 188:
                            return 60;
                        case 189:
                            return 95;
                        case 190:
                            return 62;
                        case 191:
                            return 63;
                        case 192:
                            return 126;
                        case 219:
                            return 123;
                        case 220:
                            return 124;
                        case 221:
                            return 125;
                        case 222:
                            return 34
                    }
                    if (65 <= a && 90 >= a) return a - 65 + 65
                } else {
                    switch (a) {
                        case 8:
                            return 8;
                        case 9:
                            return 9;
                        case 13:
                            return 13;
                        case 27:
                            return 27;
                        case 32:
                            return 32;
                        case 186:
                            return 59;
                        case 187:
                            return 61;
                        case 188:
                            return 44;
                        case 189:
                            return 45;
                        case 190:
                            return 46;
                        case 191:
                            return 47;
                        case 192:
                            return 96;
                        case 219:
                            return 91;
                        case 220:
                            return 92;
                        case 221:
                            return 93;
                        case 222:
                            return 39
                    }
                    if (48 <= a && 57 >= a) return a - 48 + 48;
                    if (65 <= a && 90 >= a) return a - 65 + 97
                }
                if (96 <= a && 105 >= a) return a - 96 + 48;
                switch (a) {
                    case 8:
                        return 8;
                    case 13:
                        return 13;
                    case 46:
                        return 127;
                    case 106:
                        return 42;
                    case 107:
                        return 43;
                    case 108:
                        return 44;
                    case 110:
                        return 45;
                    case 111:
                        return 46
                }
                return 0
            };
            var hc = function() {};
            g["openfl.ui.Mouse"] = hc;
            hc.__name__ =
                "openfl.ui.Mouse";
            hc.__properties__ = {
                set_cursor: "set_cursor"
            };
            hc.hide = function() {
                hc.__hidden = !0;
                for (var a = 0, b = Ga.current.__windows; a < b.length;) {
                    var c = b[a];
                    ++a;
                    c.set_cursor(null)
                }
            };
            hc.show = function() {
                hc.__hidden = !1;
                var a = hc.__cursor;
                hc.__cursor = null;
                hc.set_cursor(a)
            };
            hc.set_cursor = function(a) {
                null == a && (a = "auto");
                var b = null;
                switch (a) {
                    case "arrow":
                        b = Mb.ARROW;
                        break;
                    case "button":
                        b = Mb.POINTER;
                        break;
                    case "crosshair":
                        b = Mb.CROSSHAIR;
                        break;
                    case "custom":
                        b = Mb.CUSTOM;
                        break;
                    case "hand":
                        b = Mb.MOVE;
                        break;
                    case "ibeam":
                        b =
                            Mb.TEXT;
                        break;
                    case "resize_nesw":
                        b = Mb.RESIZE_NESW;
                        break;
                    case "resize_ns":
                        b = Mb.RESIZE_NS;
                        break;
                    case "resize_nwse":
                        b = Mb.RESIZE_NWSE;
                        break;
                    case "resize_we":
                        b = Mb.RESIZE_WE;
                        break;
                    case "wait":
                        b = Mb.WAIT;
                        break;
                    case "waitarrow":
                        b = Mb.WAIT_ARROW
                }
                if (null != b && !hc.__hidden)
                    for (var c = 0, d = Ga.current.__windows; c < d.length;) {
                        var e = d[c];
                        ++c;
                        e.set_cursor(b)
                    }
                return hc.__cursor = a
            };
            var Gm = {
                    toLimeCursor: function(a) {
                        switch (a) {
                            case "arrow":
                                return Mb.ARROW;
                            case "auto":
                                return Mb.DEFAULT;
                            case "button":
                                return Mb.POINTER;
                            case "crosshair":
                                return Mb.CROSSHAIR;
                            case "custom":
                                return Mb.CUSTOM;
                            case "hand":
                                return Mb.MOVE;
                            case "ibeam":
                                return Mb.TEXT;
                            case "resize_nesw":
                                return Mb.RESIZE_NESW;
                            case "resize_ns":
                                return Mb.RESIZE_NS;
                            case "resize_nwse":
                                return Mb.RESIZE_NWSE;
                            case "resize_we":
                                return Mb.RESIZE_WE;
                            case "wait":
                                return Mb.WAIT;
                            case "waitarrow":
                                return Mb.WAIT_ARROW;
                            default:
                                return Mb.DEFAULT
                        }
                    }
                },
                xg = function() {};
            g["openfl.ui.Multitouch"] = xg;
            xg.__name__ = "openfl.ui.Multitouch";
            var ba = function(a) {
                null == a && (a = !1);
                this.debugEnabled = a;
                ba.initialized || ba.init()
            };
            g["openfl.utils.AGALMiniAssembler"] =
                ba;
            ba.__name__ = "openfl.utils.AGALMiniAssembler";
            ba.init = function() {
                ba.initialized = !0;
                var a = ba.OPMAP,
                    b = new Ya("mov", 2, 0, 0);
                a.h.mov = b;
                a = ba.OPMAP;
                b = new Ya("add", 3, 1, 0);
                a.h.add = b;
                a = ba.OPMAP;
                b = new Ya("sub", 3, 2, 0);
                a.h.sub = b;
                a = ba.OPMAP;
                b = new Ya("mul", 3, 3, 0);
                a.h.mul = b;
                a = ba.OPMAP;
                b = new Ya("div", 3, 4, 0);
                a.h.div = b;
                a = ba.OPMAP;
                b = new Ya("rcp", 2, 5, 0);
                a.h.rcp = b;
                a = ba.OPMAP;
                b = new Ya("min", 3, 6, 0);
                a.h.min = b;
                a = ba.OPMAP;
                b = new Ya("max", 3, 7, 0);
                a.h.max = b;
                a = ba.OPMAP;
                b = new Ya("frc", 2, 8, 0);
                a.h.frc = b;
                a = ba.OPMAP;
                b = new Ya("sqt",
                    2, 9, 0);
                a.h.sqt = b;
                a = ba.OPMAP;
                b = new Ya("rsq", 2, 10, 0);
                a.h.rsq = b;
                a = ba.OPMAP;
                b = new Ya("pow", 3, 11, 0);
                a.h.pow = b;
                a = ba.OPMAP;
                b = new Ya("log", 2, 12, 0);
                a.h.log = b;
                a = ba.OPMAP;
                b = new Ya("exp", 2, 13, 0);
                a.h.exp = b;
                a = ba.OPMAP;
                b = new Ya("nrm", 2, 14, 0);
                a.h.nrm = b;
                a = ba.OPMAP;
                b = new Ya("sin", 2, 15, 0);
                a.h.sin = b;
                a = ba.OPMAP;
                b = new Ya("cos", 2, 16, 0);
                a.h.cos = b;
                a = ba.OPMAP;
                b = new Ya("crs", 3, 17, 0);
                a.h.crs = b;
                a = ba.OPMAP;
                b = new Ya("dp3", 3, 18, 0);
                a.h.dp3 = b;
                a = ba.OPMAP;
                b = new Ya("dp4", 3, 19, 0);
                a.h.dp4 = b;
                a = ba.OPMAP;
                b = new Ya("abs", 2, 20, 0);
                a.h.abs = b;
                a = ba.OPMAP;
                b = new Ya("neg", 2, 21, 0);
                a.h.neg = b;
                a = ba.OPMAP;
                b = new Ya("sat", 2, 22, 0);
                a.h.sat = b;
                a = ba.OPMAP;
                b = new Ya("m33", 3, 23, 16);
                a.h.m33 = b;
                a = ba.OPMAP;
                b = new Ya("m44", 3, 24, 16);
                a.h.m44 = b;
                a = ba.OPMAP;
                b = new Ya("m34", 3, 25, 16);
                a.h.m34 = b;
                a = ba.OPMAP;
                b = new Ya("ddx", 2, 26, 288);
                a.h.ddx = b;
                a = ba.OPMAP;
                b = new Ya("ddy", 2, 27, 288);
                a.h.ddy = b;
                a = ba.OPMAP;
                b = new Ya("ife", 2, 28, 897);
                a.h.ife = b;
                a = ba.OPMAP;
                b = new Ya("ine", 2, 29, 897);
                a.h.ine = b;
                a = ba.OPMAP;
                b = new Ya("ifg", 2, 30, 897);
                a.h.ifg = b;
                a = ba.OPMAP;
                b = new Ya("ifl", 2, 31, 897);
                a.h.ifl = b;
                a =
                    ba.OPMAP;
                b = new Ya("els", 0, 32, 1921);
                a.h.els = b;
                a = ba.OPMAP;
                b = new Ya("eif", 0, 33, 1409);
                a.h.eif = b;
                a = ba.OPMAP;
                b = new Ya("kil", 1, 39, 160);
                a.h.kil = b;
                a = ba.OPMAP;
                b = new Ya("tex", 3, 40, 40);
                a.h.tex = b;
                a = ba.OPMAP;
                b = new Ya("sge", 3, 41, 0);
                a.h.sge = b;
                a = ba.OPMAP;
                b = new Ya("slt", 3, 42, 0);
                a.h.slt = b;
                a = ba.OPMAP;
                b = new Ya("sgn", 2, 43, 0);
                a.h.sgn = b;
                a = ba.OPMAP;
                b = new Ya("seq", 3, 44, 0);
                a.h.seq = b;
                a = ba.OPMAP;
                b = new Ya("sne", 3, 45, 0);
                a.h.sne = b;
                a = ba.SAMPLEMAP;
                b = new Cb("rgba", 8, 0);
                a.h.rgba = b;
                a = ba.SAMPLEMAP;
                b = new Cb("compressed", 8, 1);
                a.h.compressed =
                    b;
                a = ba.SAMPLEMAP;
                b = new Cb("compressedalpha", 8, 2);
                a.h.compressedalpha = b;
                a = ba.SAMPLEMAP;
                b = new Cb("dxt1", 8, 1);
                a.h.dxt1 = b;
                a = ba.SAMPLEMAP;
                b = new Cb("dxt5", 8, 2);
                a.h.dxt5 = b;
                a = ba.SAMPLEMAP;
                b = new Cb("video", 8, 3);
                a.h.video = b;
                a = ba.SAMPLEMAP;
                b = new Cb("2d", 12, 0);
                a.h["2d"] = b;
                a = ba.SAMPLEMAP;
                b = new Cb("3d", 12, 2);
                a.h["3d"] = b;
                a = ba.SAMPLEMAP;
                b = new Cb("cube", 12, 1);
                a.h.cube = b;
                a = ba.SAMPLEMAP;
                b = new Cb("mipnearest", 24, 1);
                a.h.mipnearest = b;
                a = ba.SAMPLEMAP;
                b = new Cb("miplinear", 24, 2);
                a.h.miplinear = b;
                a = ba.SAMPLEMAP;
                b = new Cb("mipnone",
                    24, 0);
                a.h.mipnone = b;
                a = ba.SAMPLEMAP;
                b = new Cb("nomip", 24, 0);
                a.h.nomip = b;
                a = ba.SAMPLEMAP;
                b = new Cb("nearest", 28, 0);
                a.h.nearest = b;
                a = ba.SAMPLEMAP;
                b = new Cb("linear", 28, 1);
                a.h.linear = b;
                a = ba.SAMPLEMAP;
                b = new Cb("anisotropic2x", 28, 2);
                a.h.anisotropic2x = b;
                a = ba.SAMPLEMAP;
                b = new Cb("anisotropic4x", 28, 3);
                a.h.anisotropic4x = b;
                a = ba.SAMPLEMAP;
                b = new Cb("anisotropic8x", 28, 4);
                a.h.anisotropic8x = b;
                a = ba.SAMPLEMAP;
                b = new Cb("anisotropic16x", 28, 5);
                a.h.anisotropic16x = b;
                a = ba.SAMPLEMAP;
                b = new Cb("centroid", 16, 1);
                a.h.centroid = b;
                a = ba.SAMPLEMAP;
                b = new Cb("single", 16, 2);
                a.h.single = b;
                a = ba.SAMPLEMAP;
                b = new Cb("ignoresampler", 16, 4);
                a.h.ignoresampler = b;
                a = ba.SAMPLEMAP;
                b = new Cb("repeat", 20, 1);
                a.h.repeat = b;
                a = ba.SAMPLEMAP;
                b = new Cb("wrap", 20, 1);
                a.h.wrap = b;
                a = ba.SAMPLEMAP;
                b = new Cb("clamp", 20, 0);
                a.h.clamp = b;
                a = ba.SAMPLEMAP;
                b = new Cb("clamp_u_repeat_v", 20, 2);
                a.h.clamp_u_repeat_v = b;
                a = ba.SAMPLEMAP;
                b = new Cb("repeat_u_clamp_v", 20, 3);
                a.h.repeat_u_clamp_v = b
            };
            ba.prototype = {
                assemble: function(a, b, c, d) {
                    null == d && (d = !1);
                    null == c && (c = 1);
                    var e = la.getTimer();
                    this.agalcode =
                        new Wc(0);
                    this.error = "";
                    var f = !1;
                    "fragment" == a ? f = !0 : "vertex" != a && (this.error = 'ERROR: mode needs to be "fragment" or "vertex" but is "' + a + '".');
                    this.agalcode.__endian = 1;
                    this.agalcode.writeByte(160);
                    this.agalcode.writeUnsignedInt(c);
                    this.agalcode.writeByte(161);
                    this.agalcode.writeByte(f ? 1 : 0);
                    this.initregmap(c, d);
                    a = K.replace(b, "\r", "\n").split("\n");
                    b = 0;
                    d = a.length;
                    for (var k = new ya("<.*>", "g"), h = new ya("([\\w\\.\\-\\+]+)", "gi"), m = new ya("^\\w{3}", "ig"), g = new ya("vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?",
                            "gi"), q = new ya("\\[.*\\]", "ig"), l = new ya("^\\b[A-Za-z]{1,3}", "ig"), n = new ya("\\d+", ""), r = new ya("(\\.[xyzw]{1,4})", ""), D = new ya("[A-Za-z]{1,3}", "ig"), w = new ya("(\\.[xyzw]{1,1})", ""), x = new ya("\\+\\d{1,3}", "ig"), B = 0; B < d && "" == this.error;) {
                        var u = K.trim(a[B]),
                            v = u.indexOf("//"); - 1 != v && (u = Y.substr(u, 0, v));
                        var y = k.match(u) ? k.matchedPos().pos : -1;
                        v = null; - 1 != y && (v = this.match(Y.substr(u, y, null), h), u = Y.substr(u, 0, y));
                        var t = null;
                        m.match(u) && (y = m.matched(0), t = ba.OPMAP.h[y]);
                        if (null == t) 3 <= u.length && Aa.warn("warning: bad line " +
                            B + ": " + a[B], {
                                fileName: "openfl/utils/AGALMiniAssembler.hx",
                                lineNumber: 262,
                                className: "openfl.utils.AGALMiniAssembler",
                                methodName: "assemble"
                            });
                        else if (this.debugEnabled && Aa.info(t, {
                                fileName: "openfl/utils/AGALMiniAssembler.hx",
                                lineNumber: 272,
                                className: "openfl.utils.AGALMiniAssembler",
                                methodName: "assemble"
                            }), null == t) 3 <= u.length && Aa.warn("warning: bad line " + B + ": " + a[B], {
                            fileName: "openfl/utils/AGALMiniAssembler.hx",
                            lineNumber: 279,
                            className: "openfl.utils.AGALMiniAssembler",
                            methodName: "assemble"
                        });
                        else {
                            u =
                                Y.substr(u, u.indexOf(t.name) + t.name.length, null);
                            if (0 != (t.flags & 256) && 2 > c) {
                                this.error = "error: opcode requires version 2.";
                                break
                            }
                            if (0 != (t.flags & 64) && f) {
                                this.error = "error: opcode is only allowed in vertex programs.";
                                break
                            }
                            if (0 != (t.flags & 32) && !f) {
                                this.error = "error: opcode is only allowed in fragment programs.";
                                break
                            }
                            this.verbose && Aa.info("emit opcode=" + I.string(t), {
                                fileName: "openfl/utils/AGALMiniAssembler.hx",
                                lineNumber: 308,
                                className: "openfl.utils.AGALMiniAssembler",
                                methodName: "assemble"
                            });
                            this.agalcode.writeUnsignedInt(t.emitCode);
                            ++b;
                            if (4096 < b) {
                                this.error = "error: too many opcodes. maximum is 4096.";
                                break
                            }
                            var A = this.match(u, g);
                            if (A.length != t.numRegister) {
                                this.error = "error: wrong number of operands. found " + A.length + " but expected " + t.numRegister + ".";
                                break
                            }
                            var J = !1,
                                F = 160;
                            u = 0;
                            for (y = A.length; u < y;) {
                                var L = u++,
                                    ma = !1,
                                    G = this.match(A[L], q);
                                0 < G.length && (A[L] = K.replace(A[L], G[0], "0"), this.verbose && Aa.info("IS REL", {
                                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                                        lineNumber: 344,
                                        className: "openfl.utils.AGALMiniAssembler",
                                        methodName: "assemble"
                                    }),
                                    ma = !0);
                                var z = this.match(A[L], l);
                                if (0 == z.length) {
                                    this.error = "error: could not parse operand " + L + " (" + A[L] + ").";
                                    J = !0;
                                    break
                                }
                                var da = ba.REGMAP.h[z[0]];
                                this.debugEnabled && Aa.info(da, {
                                    fileName: "openfl/utils/AGALMiniAssembler.hx",
                                    lineNumber: 363,
                                    className: "openfl.utils.AGALMiniAssembler",
                                    methodName: "assemble"
                                });
                                if (null == da) {
                                    this.error = "error: could not find register name for operand " + L + " (" + A[L] + ").";
                                    J = !0;
                                    break
                                }
                                if (f) {
                                    if (0 == (da.flags & 32)) {
                                        this.error = "error: register operand " + L + " (" + A[L] + ") only allowed in vertex programs.";
                                        J = !0;
                                        break
                                    }
                                    if (ma) {
                                        this.error = "error: register operand " + L + " (" + A[L] + ") relative adressing not allowed in fragment programs.";
                                        J = !0;
                                        break
                                    }
                                } else if (0 == (da.flags & 64)) {
                                    this.error = "error: register operand " + L + " (" + A[L] + ") only allowed in fragment programs.";
                                    J = !0;
                                    break
                                }
                                A[L] = Y.substr(A[L], A[L].indexOf(da.name) + da.name.length, null);
                                var C = ma ? this.match(G[0], n) : this.match(A[L], n);
                                z = 0;
                                0 < C.length && (z = I.parseInt(C[0]));
                                if (wc.gt(z, da.range)) {
                                    u = da.range + 1;
                                    this.error = "error: register operand " + L + " (" + A[L] + ") index exceeds limit of " +
                                        (null == u ? "null" : I.string(wc.toFloat(u))) + ".";
                                    J = !0;
                                    break
                                }
                                var H = this.match(A[L], r),
                                    E = 0 == L && 0 == (t.flags & 128),
                                    ob = 2 == L && 0 != (t.flags & 8),
                                    Ra = 0,
                                    M = 0,
                                    N = 0;
                                if (E && ma) {
                                    this.error = "error: relative can not be destination";
                                    J = !0;
                                    break
                                }
                                if (0 < H.length) {
                                    for (var gb = C = 0, R = H[0].length, P = 1; P < R;) gb = Y.cca(H[0], P) - 120, wc.gt(gb, 2) && (gb = 3), C = E ? C | 1 << gb : C | gb << (P - 1 << 1), ++P;
                                    if (!E)
                                        for (; 4 >= P;) C |= gb << (P - 1 << 1), ++P
                                } else C = E ? 15 : 228;
                                if (ma) {
                                    H = this.match(G[0], D);
                                    Ra = ba.REGMAP.h[H[0]];
                                    if (null == Ra) {
                                        this.error = "error: bad index register";
                                        J = !0;
                                        break
                                    }
                                    Ra =
                                        Ra.emitCode;
                                    gb = this.match(G[0], w);
                                    if (0 == gb.length) {
                                        this.error = "error: bad index register select";
                                        J = !0;
                                        break
                                    }
                                    M = Y.cca(gb[0], 1) - 120;
                                    wc.gt(M, 2) && (M = 3);
                                    G = this.match(G[0], x);
                                    0 < G.length && (N = I.parseInt(G[0]));
                                    if (0 > N || 255 < N) {
                                        this.error = "error: index offset " + N + " out of bounds. [0..255]";
                                        J = !0;
                                        break
                                    }
                                    this.verbose && Aa.info("RELATIVE: type=" + Ra + "==" + H[0] + " sel=" + (null == M ? "null" : I.string(wc.toFloat(M))) + "==" + gb[0] + " idx=" + (null == z ? "null" : I.string(wc.toFloat(z))) + " offset=" + N, {
                                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                                        lineNumber: 518,
                                        className: "openfl.utils.AGALMiniAssembler",
                                        methodName: "assemble"
                                    })
                                }
                                this.verbose && Aa.info("  emit argcode=" + I.string(da) + "[" + (null == z ? "null" : I.string(wc.toFloat(z))) + "][" + C + "]", {
                                    fileName: "openfl/utils/AGALMiniAssembler.hx",
                                    lineNumber: 525,
                                    className: "openfl.utils.AGALMiniAssembler",
                                    methodName: "assemble"
                                });
                                if (E) this.agalcode.writeShort(z), this.agalcode.writeByte(C), this.agalcode.writeByte(da.emitCode), F -= 32;
                                else {
                                    if (ob) {
                                        this.verbose && Aa.info("  emit sampler", {
                                            fileName: "openfl/utils/AGALMiniAssembler.hx",
                                            lineNumber: 541,
                                            className: "openfl.utils.AGALMiniAssembler",
                                            methodName: "assemble"
                                        });
                                        L = 5;
                                        G = ma = 0;
                                        for (da = null == v ? 0 : v.length; G < da;) C = G++, this.verbose && Aa.info("    opt: " + v[C], {
                                                fileName: "openfl/utils/AGALMiniAssembler.hx",
                                                lineNumber: 552,
                                                className: "openfl.utils.AGALMiniAssembler",
                                                methodName: "assemble"
                                            }), E = ba.SAMPLEMAP.h[v[C]], null == E ? (ma = parseFloat(v[C]), this.verbose && Aa.info("    bias: " + ma, {
                                                fileName: "openfl/utils/AGALMiniAssembler.hx",
                                                lineNumber: 565,
                                                className: "openfl.utils.AGALMiniAssembler",
                                                methodName: "assemble"
                                            })) :
                                            (16 != E.flag && (L &= ~(15 << E.flag)), L |= E.mask << E.flag);
                                        this.agalcode.writeShort(z);
                                        this.agalcode.writeByte(8 * ma | 0);
                                        this.agalcode.writeByte(0);
                                        this.agalcode.writeUnsignedInt(L);
                                        this.verbose && Aa.info("    bits: " + (L - 5), {
                                            fileName: "openfl/utils/AGALMiniAssembler.hx",
                                            lineNumber: 586,
                                            className: "openfl.utils.AGALMiniAssembler",
                                            methodName: "assemble"
                                        })
                                    } else 0 == L && (this.agalcode.writeUnsignedInt(0), F -= 32), this.agalcode.writeShort(z), this.agalcode.writeByte(N), this.agalcode.writeByte(C), this.agalcode.writeByte(da.emitCode),
                                        this.agalcode.writeByte(Ra), this.agalcode.writeShort(ma ? M | 32768 : 0);
                                    F -= 64
                                }
                            }
                            for (u = 0; u < F;) this.agalcode.writeByte(0), u += 8;
                            if (J) break
                        }++B
                    }
                    "" != this.error && (this.error += "\n  at line " + B + " " + a[B], am.set_length(this.agalcode, 0), Aa.info(this.error, {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 631,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble"
                    }));
                    if (this.debugEnabled) {
                        c = "generated bytecode:";
                        f = am.get_length(this.agalcode);
                        u = 0;
                        for (y = f; u < y;) f = u++, 0 == f % 16 && (c += "\n"), 0 == f % 4 && (c += " "),
                            f = K.hex(this.agalcode.b[f], 2), 2 > f.length && (f = "0" + f), c += f;
                        Aa.info(c, {
                            fileName: "openfl/utils/AGALMiniAssembler.hx",
                            lineNumber: 662,
                            className: "openfl.utils.AGALMiniAssembler",
                            methodName: "assemble"
                        })
                    }
                    this.verbose && Aa.info("AGALMiniAssembler.assemble time: " + (la.getTimer() - e) / 1E3 + "s", {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 667,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble"
                    });
                    return this.agalcode
                },
                initregmap: function(a, b) {
                    var c = ba.REGMAP,
                        d = new ud("va", "vertex attribute",
                            0, b ? 1024 : 1 == a || 2 == a ? 7 : 15, 66);
                    c.h.va = d;
                    c = ba.REGMAP;
                    d = new ud("vc", "vertex constant", 1, b ? 1024 : 1 == a ? 127 : 249, 66);
                    c.h.vc = d;
                    c = ba.REGMAP;
                    d = new ud("vt", "vertex temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 67);
                    c.h.vt = d;
                    c = ba.REGMAP;
                    d = new ud("vo", "vertex output", 3, b ? 1024 : 0, 65);
                    c.h.vo = d;
                    c = ba.REGMAP;
                    d = new ud("vi", "varying", 4, b ? 1024 : 1 == a ? 7 : 9, 99);
                    c.h.vi = d;
                    c = ba.REGMAP;
                    d = new ud("fc", "fragment constant", 1, b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199, 34);
                    c.h.fc = d;
                    c = ba.REGMAP;
                    d = new ud("ft", "fragment temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 35);
                    c.h.ft = d;
                    c = ba.REGMAP;
                    d = new ud("fs", "texture sampler", 5, b ? 1024 : 7, 34);
                    c.h.fs = d;
                    c = ba.REGMAP;
                    d = new ud("fo", "fragment output", 3, b ? 1024 : 1 == a ? 0 : 3, 33);
                    c.h.fo = d;
                    c = ba.REGMAP;
                    d = new ud("fd", "fragment depth output", 6, b ? 1024 : 1 == a ? -1 : 0, 33);
                    c.h.fd = d;
                    c = ba.REGMAP;
                    d = new ud("iid", "instance id", 7, b ? 1024 : 0, 66);
                    c.h.iid = d;
                    d = ba.REGMAP.h.vo;
                    ba.REGMAP.h.op = d;
                    d = ba.REGMAP.h.vi;
                    ba.REGMAP.h.i = d;
                    d = ba.REGMAP.h.vi;
                    ba.REGMAP.h.v = d;
                    d = ba.REGMAP.h.fo;
                    ba.REGMAP.h.oc = d;
                    d = ba.REGMAP.h.fd;
                    ba.REGMAP.h.od = d;
                    d = ba.REGMAP.h.vi;
                    ba.REGMAP.h.fi = d
                },
                match: function(a, b) {
                    for (var c = [], d = 0; b.matchSub(a, d);) d = b.matched(0), c.push(d), d = b.matchedPos().pos + d.length;
                    return c
                },
                __class__: ba
            };
            var Ya = function(a, b, c, d) {
                this.name = a;
                this.numRegister = b;
                this.emitCode = c;
                this.flags = d
            };
            g["openfl.utils._AGALMiniAssembler.OpCode"] = Ya;
            Ya.__name__ = "openfl.utils._AGALMiniAssembler.OpCode";
            Ya.prototype = {
                __class__: Ya
            };
            var ud = function(a, b, c, d, e) {
                this.name = a;
                this.longName = b;
                this.emitCode = c;
                this.range = d;
                this.flags = e
            };
            g["openfl.utils._AGALMiniAssembler.Register"] = ud;
            ud.__name__ = "openfl.utils._AGALMiniAssembler.Register";
            ud.prototype = {
                toString: function() {
                    return '[Register name="' + this.name + '", longName="' + this.longName + '", emitCode=' + (null == this.emitCode ? "null" : I.string(wc.toFloat(this.emitCode))) + ", range=" + (null == this.range ? "null" : I.string(wc.toFloat(this.range))) + ", flags=" + (null == this.flags ? "null" : I.string(wc.toFloat(this.flags))) + "]"
                },
                __class__: ud
            };
            var Cb = function(a, b, c) {
                this.name = a;
                this.flag = b;
                this.mask = c
            };
            g["openfl.utils._AGALMiniAssembler.Sampler"] = Cb;
            Cb.__name__ = "openfl.utils._AGALMiniAssembler.Sampler";
            Cb.prototype = {
                __class__: Cb
            };
            var ek = function() {};
            g["openfl.utils.IAssetCache"] = ek;
            ek.__name__ = "openfl.utils.IAssetCache";
            ek.__isInterface__ = !0;
            ek.prototype = {
                __class__: ek,
                __properties__: {
                    get_enabled: "get_enabled"
                }
            };
            var fk = function() {
                this.__enabled = !0;
                this.bitmapData = new aa;
                this.font = new aa;
                this.sound = new aa
            };
            g["openfl.utils.AssetCache"] = fk;
            fk.__name__ = "openfl.utils.AssetCache";
            fk.__interfaces__ = [ek];
            fk.prototype = {
                getBitmapData: function(a) {
                    return this.bitmapData.h[a]
                },
                getFont: function(a) {
                    return this.font.h[a]
                },
                getSound: function(a) {
                    return this.sound.h[a]
                },
                hasBitmapData: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.bitmapData.h, a)
                },
                hasFont: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.font.h, a)
                },
                hasSound: function(a) {
                    return Object.prototype.hasOwnProperty.call(this.sound.h, a)
                },
                removeBitmapData: function(a) {
                    var b = qa.cache.image;
                    Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
                    b = this.bitmapData;
                    return Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], !0) : !1
                },
                setBitmapData: function(a, b) {
                    this.bitmapData.h[a] =
                        b
                },
                setFont: function(a, b) {
                    this.font.h[a] = b
                },
                setSound: function(a, b) {
                    this.sound.h[a] = b
                },
                get_enabled: function() {
                    return this.__enabled
                },
                __class__: fk,
                __properties__: {
                    get_enabled: "get_enabled"
                }
            };
            var ta = function() {};
            g["openfl.utils.Assets"] = ta;
            ta.__name__ = "openfl.utils.Assets";
            ta.addEventListener = function(a, b, c, d, e) {
                null == e && (e = !1);
                null == d && (d = 0);
                null == c && (c = !1);
                qa.onChange.has(ta.LimeAssets_onChange) || qa.onChange.add(ta.LimeAssets_onChange);
                ta.dispatcher.addEventListener(a, b, c, d, e)
            };
            ta.dispatchEvent = function(a) {
                return ta.dispatcher.dispatchEvent(a)
            };
            ta.exists = function(a, b) {
                return qa.exists(a, b)
            };
            ta.getBitmapData = function(a, b) {
                null == b && (b = !0);
                if (b && ta.cache.get_enabled() && ta.cache.hasBitmapData(a)) {
                    var c = ta.cache.getBitmapData(a);
                    if (ta.isValidBitmapData(c)) return c
                }
                c = qa.getImage(a, !1);
                return null != c ? (c = H.fromImage(c), b && ta.cache.get_enabled() && ta.cache.setBitmapData(a, c), c) : null
            };
            ta.getFont = function(a, b) {
                null == b && (b = !0);
                if (b && ta.cache.get_enabled() && ta.cache.hasFont(a)) return ta.cache.getFont(a);
                var c = qa.getFont(a, !1);
                if (null != c) {
                    var d = new yb;
                    d.__fromLimeFont(c);
                    b && ta.cache.get_enabled() && ta.cache.setFont(a, d);
                    return d
                }
                return new yb
            };
            ta.getSound = function(a, b) {
                null == b && (b = !0);
                if (b && ta.cache.get_enabled() && ta.cache.hasSound(a)) {
                    var c = ta.cache.getSound(a);
                    if (ta.isValidSound(c)) return c
                }
                c = qa.getAudioBuffer(a, !1);
                return null != c ? (c = Ef.fromAudioBuffer(c), b && ta.cache.get_enabled() && ta.cache.setSound(a, c), c) : null
            };
            ta.getText = function(a) {
                return qa.getText(a)
            };
            ta.isValidBitmapData = function(a) {
                return null != a && null != a.image
            };
            ta.isValidSound = function(a) {
                return !0
            };
            ta.LimeAssets_onChange = function() {
                ta.dispatchEvent(new sa("change"))
            };
            var am = {
                    __properties__: {
                        set_length: "set_length",
                        get_length: "get_length"
                    },
                    fromBytes: function(a) {
                        return null == a ? null : a instanceof Wc ? a : Wc.fromBytes(a)
                    },
                    get_length: function(a) {
                        return null == a ? 0 : a.length
                    },
                    set_length: function(a, b) {
                        0 < b && (a.__resize(b), b < a.position && (a.position = b));
                        return a.length = b
                    }
                },
                gk = function() {};
            g["haxe.lang.Iterator"] = gk;
            gk.__name__ = "haxe.lang.Iterator";
            gk.__isInterface__ = !0;
            gk.prototype = {
                __class__: gk
            };
            var hk = function() {};
            g["haxe.lang.Iterable"] = hk;
            hk.__name__ = "haxe.lang.Iterable";
            hk.__isInterface__ = !0;
            hk.prototype = {
                __class__: hk
            };
            C.$haxeUID |= 0;
            A.count = 0;
            "undefined" != typeof performance && "function" == typeof performance.now && (Y.now = performance.now.bind(performance));
            g.Math = Math;
            null == String.fromCodePoint && (String.fromCodePoint = function(a) {
                return 65536 > a ? String.fromCharCode(a) : String.fromCharCode((a >> 10) + 55232) + String.fromCharCode((a & 1023) + 56320)
            });
            String.prototype.__class__ = g.String = String;
            String.__name__ = "String";
            g.Array =
                Array;
            Array.__name__ = "Array";
            Date.prototype.__class__ = g.Date = Date;
            Date.__name__ = "Date";
            var gm = {},
                um = {},
                fm = Number,
                tm = Boolean,
                vk = {},
                nm = {};
            oa.__toStr = {}.toString;
            sb.content = [{
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleX",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQlBTVVJCVkJpVmpWQkJEc0F3Q0FLMy8vKzRZNWV5R05hREpoNVVCSlNTTUlrYW9RSW9BSXk1aktrOXRENWJHcmdBRkRVMGVZZGtMbjFXdUFsWHM5SGpzUlVmY3lWRHE4dlNQNWxUYi96SEY2VW9FeGRNWXJPSEFBQUFBRWxGVGtTdVFtQ0M"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMaximizeButton",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQUIyQUFBQWRnRk9leVlJQUFBQUIzUkpUVVVIM2dNSkNSOFVCaGtEeVFBQUFFOUpSRUZVR05PdGtFRVN3REFJQW92Ly8vUDJvb2FhOUJaUFpvQXdxd0NlTlpMVUQ5ZkNIVzc2VFkyZmR3MklVOVVwZUhlVU5kMVlBRm5kTUFGUW1ndTV0eGFWM202VDV5bW9EL0gwT3ZrTFNBOUI4bis0Y2pvQUFBQUFTVVZPUks1Q1lJST0"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_GraphicLogo",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUdRQUFBQmtDQVlBQUFCdzRwVlVBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBS1QybERRMUJRYUc5MGIzTm9iM0FnU1VORElIQnliMlpwYkdVQUFIamFuVk5uVkZQcEZqMzMzdlJDUzRpQWxFdHZVaFVJSUZKQ2k0QVVrU1lxSVFrUVNvZ2hvZGtWVWNFUlJVVUVHOGlnaUFPT2pvQ01GVkVzRElvSzJBZmtJYUtPZzZPSWlzcjc0WHVqYTlhODkrYk4vclhYUHVlczg1Mnp6d2ZBQ0F5V1NETlJOWUFNcVVJZUVlQ0R4OFRHNGVRdVFJRUtKSEFBRUFpelpDRnovU01CQVBoK1BEd3JJc0FIdmdBQmVOTUxDQURBVFp2QU1CeUgvdy9xUXBsY0FZQ0VBY0Iwa1RoTENJQVVBRUI2amtLbUFFQkdBWUNkbUNaVEFLQUVBR0RMWTJMakFGQXRBR0FuZitiVEFJQ2QrSmw3QVFCYmxDRVZBYUNSQUNBVFpZaEVBR2c3QUt6UFZvcEZBRmd3QUJSbVM4UTVBTmd0QURCSlYyWklBTEMzQU1ET0VBdXlBQWdNQURCUmlJVXBBQVI3QUdESUl5TjRBSVNaQUJSRzhsYzg4U3V1RU9jcUFBQjRtYkk4dVNRNVJZRmJDQzF4QjFkWExoNG96a2tYS3hRMllRSmhta0F1d25tWkdUS0JOQS9nODh3QUFLQ1JGUkhnZy9QOWVNNE9yczdPTm82MkRsOHQ2cjhHL3lKaVl1UCs1YytyY0VBQUFPRjBmdEgrTEMrekdvQTdCb0J0L3FJbDdnUm9YZ3VnZGZlTFpySVBRTFVBb09uYVYvTncrSDQ4UEVXaGtMbloyZVhrNU5oS3hFSmJZY3BYZmY1bndsL0FWLzFzK1g0OC9QZjE0TDdpSklFeVhZRkhCUGpnd3N6MFRLVWN6NUlKaEdMYzVvOUgvTGNMLy93ZDB5TEVTV0s1V0NvVTQxRVNjWTVFbW96ek1xVWlpVUtTS2NVbDB2OWs0dDhzK3dNKzN6VUFzR28rQVh1UkxhaGRZd1AyU3ljUVdIVEE0dmNBQVBLN2I4SFVLQWdEZ0dpRDRjOTMvKzgvL1VlZ0pRQ0Faa21TY1FBQVhrUWtMbFRLc3ovSENBQUFSS0NCS3JCQkcvVEJHQ3pBQmh6QkJkekJDL3hnTm9SQ0pNVENRaEJDQ21TQUhISmdLYXlDUWlpR3piQWRLbUF2MUVBZE5NQlJhSWFUY0E0dXdsVzREajF3RC9waENKN0JLTHlCQ1FSQnlBZ1RZU0hhaUFGaWlsZ2pqZ2dYbVlYNEljRklCQktMSkNESmlCUlJJa3VSTlVneFVvcFVJRlZJSGZJOWNnSTVoMXhHdXBFN3lBQXlndnlHdkVjeGxJR3lVVDNVRExWRHVhZzNHb1JHb2d2UVpIUXhtbzhXb0p2UWNyUWFQWXcyb2VmUXEyZ1AybzgrUThjd3dPZ1lCelBFYkRBdXhzTkNzVGdzQ1pOank3RWlyQXlyeGhxd1Zxd0R1NG4xWTgreGR3UVNnVVhBQ1RZRWQwSWdZUjVCU0ZoTVdFN1lTS2dnSENRMEVkb0pOd2tEaEZIQ0p5S1RxRXUwSnJvUitjUVlZakl4aDFoSUxDUFdFbzhUTHhCN2lFUEVOeVFTaVVNeUo3bVFBa214cEZUU0V0SkcwbTVTSStrc3FaczBTQm9qazhuYVpHdXlCem1VTENBcnlJWGtuZVRENURQa0crUWg4bHNLbldKQWNhVDRVK0lvVXNwcVNobmxFT1UwNVFabG1ESkJWYU9hVXQyb29WUVJOWTlhUXEyaHRsS3ZVWWVvRXpSMW1qbk5neFpKUzZXdG9wWFRHbWdYYVBkcHIraDB1aEhkbFI1T2w5Qlgwc3ZwUitpWDZBUDBkd3dOaGhXRHg0aG5LQm1iR0FjWVp4bDNHSytZVEtZWjA0c1p4MVF3TnpIcm1PZVpENWx2VlZncXRpcDhGWkhLQ3BWS2xTYVZHeW92VkttcXBxcmVxZ3RWODFYTFZJK3BYbE45cmtaVk0xUGpxUW5VbHF0VnFwMVE2MU1iVTJlcE82aUhxbWVvYjFRL3BINVovWWtHV2NOTXcwOURwRkdnc1YvanZNWWdDMk1aczNnc0lXc05xNFoxZ1RYRUpySE4yWHgyS3J1WS9SMjdpejJxcWFFNVF6TktNMWV6VXZPVVpqOEg0NWh4K0p4MFRnbm5LS2VYODM2SzNoVHZLZUlwRzZZMFRMa3haVnhycXBhWGxsaXJTS3RScTBmcnZUYXU3YWVkcHIxRnUxbjdnUTVCeDBvblhDZEhaNC9PQlozblU5bFQzYWNLcHhaTlBUcjFyaTZxYTZVYm9idEVkNzl1cCs2WW5yNWVnSjVNYjZmZWViM24raHg5TC8xVS9XMzZwL1ZIREZnR3N3d2tCdHNNemhnOHhUVnhiendkTDhmYjhWRkRYY05BUTZWaGxXR1g0WVNSdWRFOG85VkdqVVlQakduR1hPTWs0MjNHYmNhakpnWW1JU1pMVGVwTjdwcFNUYm1tS2FZN1REdE14ODNNemFMTjFwazFtejB4MXpMbm0rZWIxNXZmdDJCYWVGb3N0cWkydUdWSnN1UmFwbG51dHJ4dWhWbzVXYVZZVlZwZHMwYXRuYTBsMXJ1dHU2Y1JwN2xPazA2cm50Wm53N0R4dHNtMnFiY1pzT1hZQnR1dXRtMjJmV0ZuWWhkbnQ4V3V3KzZUdlpOOXVuMk4vVDBIRFlmWkRxc2RXaDErYzdSeUZEcFdPdDZhenB6dVAzM0Y5SmJwTDJkWXp4RFAyRFBqdGhQTEtjUnBuVk9iMDBkbkYyZTVjNFB6aUl1SlM0TExMcGMrTHBzYnh0M0l2ZVJLZFBWeFhlRjYwdldkbTdPYnd1Mm8yNi91TnU1cDdvZmNuOHcwbnltZVdUTnowTVBJUStCUjVkRS9DNStWTUd2ZnJINVBRMCtCWjdYbkl5OWpMNUZYcmRld3Q2VjNxdmRoN3hjKzlqNXluK00rNHp3MzNqTGVXVi9NTjhDM3lMZkxUOE52bmwrRjMwTi9JLzlrLzNyLzBRQ25nQ1VCWndPSmdVR0JXd0w3K0hwOEliK09QenJiWmZheTJlMUJqS0M1UVJWQmo0S3RndVhCclNGb3lPeVFyU0gzNTVqT2tjNXBEb1ZRZnVqVzBBZGg1bUdMdzM0TUo0V0hoVmVHUDQ1d2lGZ2EwVEdYTlhmUjNFTnozMFQ2UkpaRTNwdG5NVTg1cnkxS05TbytxaTVxUE5vM3VqUzZQOFl1WmxuTTFWaWRXRWxzU3h3NUxpcXVObTVzdnQvODdmT0g0cDNpQytON0Y1Z3Z5RjF3ZWFIT3d2U0ZweGFwTGhJc09wWkFUSWhPT0pUd1FSQXFxQmFNSmZJVGR5V09Dbm5DSGNKbklpL1JOdEdJMkVOY0toNU84a2dxVFhxUzdKRzhOWGtreFRPbExPVzVoQ2Vwa0x4TURVemRtenFlRnBwMklHMHlQVHE5TVlPU2taQnhRcW9oVFpPMlorcG41bVoyeTZ4bGhiTCt4VzZMdHk4ZWxRZkphN09RckFWWkxRcTJRcWJvVkZvbzF5b0hzbWRsVjJhL3pZbktPWmFybml2TjdjeXp5dHVRTjV6dm4vL3RFc0lTNFpLMnBZWkxWeTBkV09hOXJHbzVzanh4ZWRzSzR4VUZLNFpXQnF3OHVJcTJLbTNWVDZ2dFY1ZXVmcjBtZWsxcmdWN0J5b0xCdFFGcjZ3dFZDdVdGZmV2YzErMWRUMWd2V2QrMVlmcUduUnMrRlltS3JoVGJGNWNWZjlnbzNIamxHNGR2eXIrWjNKUzBxYXZFdVdUUFp0Sm02ZWJlTFo1YkRwYXFsK2FYRG00TjJkcTBEZDlXdE8zMTlrWGJMNWZOS051N2c3WkR1YU8vUExpOFphZkp6czA3UDFTa1ZQUlUrbFEyN3RMZHRXSFgrRzdSN2h0N3ZQWTA3TlhiVzd6My9UN0p2dHRWQVZWTjFXYlZaZnRKKzdQM1A2NkpxdW40bHZ0dFhhMU9iWEh0eHdQU0EvMEhJdzYyMTduVTFSM1NQVlJTajlZcjYwY094eCsrL3AzdmR5ME5OZzFWalp6RzRpTndSSG5rNmZjSjMvY2VEVHJhZG94N3JPRUgweDkySFdjZEwycENtdkthUnB0VG12dGJZbHU2VDh3KzBkYnEzbnI4UjlzZkQ1dzBQRmw1U3ZOVXlXbmE2WUxUazJmeXo0eWRsWjE5Zmk3NTNHRGJvclo3NTJQTzMyb1BiKys2RUhUaDBrWC9pK2M3dkR2T1hQSzRkUEt5MitVVFY3aFhtcTg2WDIzcWRPbzgvcFBUVDhlN25MdWFycmxjYTdudWVyMjFlMmIzNlJ1ZU44N2Q5TDE1OFJiLzF0V2VPVDNkdmZONmIvZkY5L1hmRnQxK2NpZjl6c3U3MlhjbjdxMjhUN3hmOUVEdFFkbEQzWWZWUDF2KzNOanYzSDlxd0hlZzg5SGNSL2NHaFlQUC9wSDFqdzlEQlkrWmo4dUdEWWJybmpnK09UbmlQM0w5NmZ5blE4OWt6eWFlRi82aS9zdXVGeFl2ZnZqVjY5Zk8wWmpSb1pmeWw1Ty9iWHlsL2VyQTZ4bXYyOGJDeGg2K3lYZ3pNVjcwVnZ2dHdYZmNkeDN2bzk4UFQrUjhJSDhvLzJqNXNmVlQwS2Y3a3htVGsvOEVBNWp6L0dNekxkc0FBQUFnWTBoU1RRQUFlaVVBQUlDREFBRDUvd0FBZ09rQUFIVXdBQURxWUFBQU9wZ0FBQmR2a2wvRlJnQUFCTTFKUkVGVWVOcnMyOCtMRzJVWXdQSFhabTZDdVhrMGRFMFRzVCtTbVQxb2Q1Rmsrd3ZwbXRHYmlFaE9YbFZRTDE0Q25rdjNYRVFESG9SQ1llbXBiS21kcE10U3dVejIxUE1jUlBCU2dwQmxZVWQ0UEd5em1VMDJ1L01tNzQvbm1mZDk0ZmtIOHVHYk4rL2tIUVpkRDVSTXgydkRqbHRnUkJjczNjanZsUnJ0dmJJUE1vY3BBK2w2QUIxM0FGMnZCYjNsUEMwSXZ6VXMrUVBaR09wQkNNR29odEFMY2d5bTJzU0dNU3o1emIyeUg2bUV3QUV5aG9rd3dPaUV3QVdTaEhubTFsUkQ3QmNidGIyU3Y2c1RBaWZJR0NaUUFiTmZiTlNHNVVhQUFRSTNTQkptMjYySS8ycjZxSUlOZ2dhSTREUE0vdm5iQlJWbmlleURMQWhEQVlJbUNPY1pSdGRad2l5UUZEQVVJZWlEekRoY0RrdCtreUpFZGtCZXpSL0JsYWh6NjJaRUZTSlRJTHRCQmZKYmIwTitzd2pQcjkyMElCZ3cyTllTc0swbDhpZ3NTeGhaUUdGWnc2Q093cktJa1p4N1gzeGdRV1RPNXRQTHFURW9vcEFDYVQrOXhBVkJFWVdaZ0VFSmhabUNRUVdGbVlSQkFZV1pob0VkaFptSWdSbUZtWXFCRllWQnh3MU14UmpORDkrOGp3amttVnN6R1dNMG4vL280UUJoakRIb2VHMlRNVENoSElMMGx2T3YvaEkxRmdNSlNqVCtIN3BiL1ZvSHhzYnZGOUZnNkVZWmx2emoxMmtQNzlpcXcyZytlUWNkaGthVWFQcmFqTUlOSGpPR0RwU3BPc2FWZUpzV1F6bEtOUHR5Mlk1YmtMbkJVOEpRaFRLemp2RUc3N1VzeGpUSzM5VjF0WFVjZ1J6K0RJNHN4dkc1L1BPN3dsSE9yR084d1ZjL3RoaVNVVXIrTHQrTGp3S2VjMlVKUXpUS2ZySEI5MUlTYkxzVml5RUhaVmh1QlBPOUh0ejFOaXlHZUJUdU9pWTIrSUhGRUljeWR4Mko1MXhOaXlFT1plNDZKamI0M2RNZ0JoMFhLbzh2R0lmQmk3SndIV21lYzVtT3dZTWlwSTdFYzY2MnhUaDkzdnF0UFBPU3Q3QTZabTN3Rm9QdjVyM1FPaWFmYzFrTVBoVGhkU1RYeTA0MXNoaDhLRkxxR0sxTHplZEI3bUhGZnVncFVSNnRYNWRYeDlVMXFLMnVBVlErZlFFV0pjVTh1UTI1UC8rUkI3SmFoMkIxRGNDaXBNVjRDVTRZZzlPUGE5THFTSTVGU1lFUnh1RDA0a0JxSGNrcGZ2WEFBcHlHTVJxUmxaeFVoMFhod0JCZHlhdzZMRXBLREpHVm5GV0hSVW1KSWFxU05IVVlqWklXUTBRbFBIVVlpY0tMc1dnbHZIV1loUEphOENVL3hpS1Z6RnRIY3M1Ly8wczJNVHJmemdleFNDV0wxSkdjTis5OFp6RVdyVVJFSFZsRUVZWVJ4cERyeFp2SzY4Z1Npa2lNMGJBK0ZKVFhrUVVVR1JoT0dFTXVQR2hycVlNeWlpeU1WSlhJcklNaWlteU1NeXVSWFFjbEZCVVlwMWFpcW83a3ZQSFRaOFpqekt4RVpSMmplZS9EZitIMVg5ZU54aml4RWgxMVlFVFJoVEZWaVk0NnNLSG94RGlxUkhjZFdGQXdZQnlCNks1RE53b1dEQ2VNQVUwZHVsQXdZVGhoREtqcVVJMkNEZU1RQkNIR2FKWS8rVXZhblMrTUdPaEJaRjNFdzRwQkFrUTB5cm50dTJneHlJQ0lRam0zY3g4MUJpbVFSVkVvWUpBRG1SZUZDZ1pKRUY0VVNoaGtRZEtpVU1NZ0RYTFdSVHlLR09SQlpxRlF4Y2dFeUNRS1pZek1nSXhRcUdOa0JtU2xEdTJWYTFCZ2ZTamt3b08yQmRFMWRRaXVyc0gwL2RnK1ZKeGVIRmdRM1JBVHkrbkhOV293ak5oWFU3UmFoeWJ2TFg1S01DekxFSk1yMS91dm1Rc1BJZ3N5LzFmVFlLVU9MZEh2MjJPR1laZ2hsbTlBbmtsY0dHRVlRb3dOMlJESFZnL3lUaGkzY21FOHNDQW5uU1YwTFNRd0RNTlBXSzBReUdBWTlyT0V0cVhwMVAvL0FOd29yczhWOE1oV0FBQUFBRWxGVGtTdVFtQ0M"
                },
                {
                    name: "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileDiamond",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQWlBQUFBQWdDQVlBQUFBckZzTTFBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXlKcFZGaDBXRTFNT21OdmJTNWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBpVnpWTk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrSUR4NE9uaHRjRzFsZEdFZ2VHMXNibk02ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIzSmxJRFV1TXkxak1ERXhJRFkyTGpFME5UWTJNU3dnTWpBeE1pOHdNaTh3TmkweE5EbzFOam95TnlBZ0lDQWdJQ0FnSWo0Z1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNGdQSEprWmpwRVpYTmpjbWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlnZUcxc2JuTTZlRzF3UFNKb2RIUndPaTh2Ym5NdVlXUnZZbVV1WTI5dEwzaGhjQzh4TGpBdklpQjRiV3h1Y3pwNGJYQk5UVDBpYUhSMGNEb3ZMMjV6TG1Ga2IySmxMbU52YlM5NFlYQXZNUzR3TDIxdEx5SWdlRzFzYm5NNmMzUlNaV1k5SW1oMGRIQTZMeTl1Y3k1aFpHOWlaUzVqYjIwdmVHRndMekV1TUM5elZIbHdaUzlTWlhOdmRYSmpaVkpsWmlNaUlIaHRjRHBEY21WaGRHOXlWRzl2YkQwaVFXUnZZbVVnVUdodmRHOXphRzl3SUVOVE5pQW9WMmx1Wkc5M2N5a2lJSGh0Y0UxTk9rbHVjM1JoYm1ObFNVUTlJbmh0Y0M1cGFXUTZNek5HUmtFd05FSXhPRVV3TVRGRk5EazVRVGRDUlVVME56Z3lPVFkyT0RjaUlIaHRjRTFOT2tSdlkzVnRaVzUwU1VROUluaHRjQzVrYVdRNk16TkdSa0V3TkVNeE9FVXdNVEZGTkRrNVFUZENSVVUwTnpneU9UWTJPRGNpUGlBOGVHMXdUVTA2UkdWeWFYWmxaRVp5YjIwZ2MzUlNaV1k2YVc1emRHRnVZMlZKUkQwaWVHMXdMbWxwWkRvek0wWkdRVEEwT1RFNFJUQXhNVVUwT1RsQk4wSkZSVFEzT0RJNU5qWTROeUlnYzNSU1pXWTZaRzlqZFcxbGJuUkpSRDBpZUcxd0xtUnBaRG96TTBaR1FUQTBRVEU0UlRBeE1VVTBPVGxCTjBKRlJUUTNPREk1TmpZNE55SXZQaUE4TDNKa1pqcEVaWE5qY21sd2RHbHZiajRnUEM5eVpHWTZVa1JHUGlBOEwzZzZlRzF3YldWMFlUNGdQRDk0Y0dGamEyVjBJR1Z1WkQwaWNpSS9QckhzdVhJQUFBTHRTVVJCVkhqYTdOakJidVVnRUVUUk1QLy96NDRpelNhenlpakdYTGZPbGJLSnpLTUZEVlRWdXE3ckF3QmV4cjhYMXpvMDc4ZERkZnp2UmIwT3pYdFhIWGMvVE92UXZEK3Q0K21IZUIyYTl4dC8zR01BZnZGSVhJZm1QWEdCWHpkOTg4UmpmQjJhdDFKN1plOHF2VnVZa3dBQmNQc0ZkaDJhOThsTDlkcjA3YzdmT2pXMnNuYVYzcW1jblp3SUlVQ0FkNHNBQ1VURFBWZlNnMHJ0bGIycjlHN3U4UzlBZ0FEdkZSK24zVnZGdlZiY2UyVnNaZTBxdlZNNU8wUUlBUUxjZW9GSUlCcnV1WkllVkdxdjdGMmxkejMrQkFnd1NueWNkbThWOTFweDc1V3hsYldyOUU3bDdCQWhCQWh3NndVaWdXaTQ1MHA2VUttOXNuZVYzdlg0Z3dEQktQRngycjFWM0d2RnZWZkdWdGF1MGp1VnMwT0VnQURCclJlSUJLTGhuaXZwUWFYMnl0NVZldGZqRHdJRW84VEhhZmRXY2E4VjkxNFpXMW03U3U5VXpnNFJBZ0lFdDE0Z0VvaUdlNjZrQjVYYUszdFg2VjJQUDBDQWpCSWZwOTFieGIxVzNIdGxiR1h0S3IxVE9UdEVDRUNBM0hxQlNDQWE3cm1TSGxScXIreGRwWGM5L2dBQk1rcDhuSFp2RmZkYWNlK1ZzWlcxcS9STzVld1FJUUFCY3VzRklvRm91T2RLZWxDcHZiSjNsZDcxK0FNWUpVQUFBQUFCOGpqcjc5K0plWC95dnlmbWZhS085ZENZeW0rc1FYdFg2ZDNDbkFBSWtCR3NRNWZwT25TcHIwM2Y3dnl0VTJNcmExZnBuY3JaSVlJQUFtU1VDSkhBTk5LREhYVklZT2IwTHZFQkVDQjR1WXVVd1BUSFZ0YXUwanVWczBNRUFRVElLQkVpZ1dta0J6dnFrTURNNlYzaUF5QkE4SElYS1lIcGo2MnNYYVYzS21lSENBSUJnbEVpUkFMVFNBOTIxQ0dCbWRPN3hBY0lFT0RsTGxJQzB4OWJXYnRLNzFUT0RoRUVBZ1NqUklnRXBwRWU3S2hEQWpPbmQ0a1BFQ0RBeTEya0JLWS90ckoybGQ2cG5CMGlpQUFCUm9rUUNVd2pQZGhSaHdSbVR1OFNId1FJZ0plN1NBbE1mMnhsN1NxOVV6azdSQkFCQW93U0lSS1lSbnF3b3c0SnpKemVKVDRJRUFBdmQ1RVNtUDdZeXRwVmVxZHlkbklpaUFBQjhKc0xUQUxUU0E5MjFDR0JtZE83T2ZIeHhhY0FBd0RrMWZzODNpRUEyd0FBQUFCSlJVNUVya0pnZ2c9PQ"
                },
                {
                    name: "__ASSET__:file_flixel_system_VirtualInputData",
                    data: "YmFzZSA9IDI2NiA0NiA4NCA4NAp0aHVtYiA9IDI2NiAxMzEgNTIgNTIKYSA9IDAgMCAxMzIgNDUKYiA9IDAgNDYgMTMyIDQ1CmMgPSAwIDkyIDEzMiA0NQpkb3duID0gMCAxMzggMTMyIDQ1CmxlZnQgPSAxMzMgMCAxMzIgNDUKcmlnaHQgPSAxMzMgNDYgMTMyIDQ1CnVwID0gMTMzIDkyIDEzMiA0NQp4ID0gMjY2IDAgMTMyIDQ1CnkgPSAxMzMgMTM4IDEzMiA0NQo"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicCloseButton",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFnQUFBQUlDQVlBQUFERUQ3NkxBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFkZ0FBQUhZQlRuc21DQUFBQUJsMFJWaDBVMjltZEhkaGNtVUFkM2QzTG1sdWEzTmpZWEJsTG05eVo1dnVQQm9BQUFCL1NVUkJWQmlWVFkweENzSlFFQVhIYnlTZXdNdWxUV2R2YTZPbGxXSnBDQ0syaWsxT1krY3RRc1lpcS9rREM4dnM3bHZVU3UzVXBVcFdPN1ZDM1RqU3FXVU1EK0dldisxdGlKZDZ5dm95ajl3NzhWQVhLb21SR2JCaW9nY0dBTlNrTm5GNVY0L1IzOVNFMm9hNHF2TjRkdzUzS1lBMzBBRDFQeGJXUUFGOHZwYVlyTldBYU5WMEFBQUFBRWxGVGtTdVFtQ0M"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicBitmapLog",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQm1KTFIwUUFBQUFBQUFENVE3dC9BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUIzUkpUVVVIM2dRWkV4c2Fka1ZHNHdBQUFFRkpSRUZVR05PVnpjc0pBREFJQk5FdDFUSnl0UFBKS2VSbnhBd3NlSGlnOUJOUW1mRURBU3REUUdXWTRRdStjQWhQN013cytqaU94cDR5dk9ZWkxrRkFIVzZYWUMwODhkcWRBQUFBQUVsRlRrU3VRbUND"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicStats",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFBeFNVUkJWSGphWXZ6Ly96OERzWUNKZ1FSQWpPTC9VRXdkaytHbTBkVE5XQlZqdFpvK3ptQWtKUVlCQUFBQS8vOERBTDhIREFscWRHWVJBQUFBQUVsRlRrU3VRbUND"
                },
                {
                    name: "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileSquare",
                    data: ""
                },
                {
                    name: "__ASSET__:bitmap_flixel_input_mouse__FlxMouse_GraphicCursor",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJnQUFBQWdDQVlBQUFBSVhyZzRBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQW1SSlJFRlVlTnEwbHM5ckUwRVV4Nzg3MllTZ0psVFNTaVdwVnZyRElxaEZVSUtnK0NlSUlncWVGRS9pVFJDOHBMUVhqeUwwNGc5Q29tWFRKSVcwT1ZVRU1UZEJSSWs1VzZXdGtLSlNiR25EcHNuNlprMlczVFFicytua3dkdVpuVm0rbjMwenczc2pCVUxCQ0lBcGRNbGMrL3orZDlScTVMbHVBT1JhTzhrZkR5ZW5XMGJ5YU9LZVl3RGpEMDNUZEFnSlJFUkhJTkVlYUpWS0ZZeEprQ1NKajAzWVJYTC85bVZib2Q2QmtIMEV1bWxTdlNjMEVnTnc1ZXAxakE2UENJY1lnQU0rUDU0OG5zYXh3VUdoRUdaKzJTaFZNSjlLNCtqQUVXRVFDMkM3cEVKakhpeWswd2dGZzBJZ3JIRmdhYm1vaTJkbWt6amMzNzlueUM3QW44MHQvRjdmMFBlQ1F3NzE5UmtRT29xUlBRTzRmVjBwNnUzdzBCQXl5U1FDZ1VESGtLYUE0czkxYkc2VjlQN3hrVkU5a29NOVBSMUJtTjNFVWkwS2JpZkd4akNuS1BEN2ZJNGh0b0RWNGkrbzVSM2ovZlRKVXdSSk9JYllBbmgrK3I2NlpoazdNejRPSlI2SDErdHRHOEphVFg3N3NZWkt0V29aQzU4OWg5U3JtYlloTFFHcXVxTXZWYU9kRDRjeEU0M0M0M2JEVkU4aWpnR05tMjIyU3hjdUl2Nzh4WDhoY2l2eFdTV0dmUDRUYmV4K0VtcitLVjhxdFZ3MlEyQ3U4YmFBVk9JbEZ1YlQvejZTWFdBdTF1N1J0MENhQXJJa25Na2t3UXVjTE11UW1PUTBReGlRWFlEWGkxa2thR2tZWTVEZExqNzBsdnhCaDhuVVl3SGtjbThRaXo0MUw4a2lMM1pVbzdjN3Jja0c0T09IOXlnVThuQVRzMWI4cytUWFNGd1ZVbkMrRkQ3VFh4czNpemtSNGtZRUx1c0o0ZUkzbTRuYkxZT1RWS0dRM3hEeDU1YUxWNjBmSTcvRDg1ekltMTA5Z21ma3QwU0wxMi9YdmRUZTdkYjEvYThBQXdDWlVNUU16UW9keXdBQUFBQkpSVTVFcmtKZ2dnPT0"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorRotate",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQkVTVVJCVkJpVmRjNUpEZ0F3Q0FMQVl2ei9sK25KQkJjOFZaMFNRZkpKYVFOZDVFQndmUmhVaVZSNG9WVnA1cHp2TUhDZDRhQmlWR0k3MmlXSERCeHVVUEg1NFFNNWNROFhwbTRKVmdBQUFBQkpSVTVFcmtKZ2dnPT0"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMinimizeButton",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQUIyQUFBQWRnRk9leVlJQUFBQUIzUkpUVVVIM2dNSkNSMDFlRVp4RlFBQUFEOUpSRUZVR05OaitQLy8vMzhHQWdDdUJzWkExb1JOREM2QnJoQ1p6L1QvLzM4bWZOWVQ0elR5QUNPNjhZeU1qRmpGbUpBbHNacUVMRWRVOEJBYjRBQzRjRkxGc3d1SW53QUFBQUJKUlU1RXJrSmdnZz09"
                }, {
                    name: "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoLight",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUVBQUFBQkFDQVlBQUFDcWFYSGVBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQnE1SlJFRlVlTnJVVzR0dTR6WVE1TktVYzNmcHQvYWYrcE01MjVLNFJRQ3gySnZiRi8xSTJ3Q0VaRWQyTk1QWnQwTGx6Ny9LQzMvb1NkL0RyN3JCOXNXZzZVN0E5Q295MmhjQXB3ZStpNFB2NC84Q0FSUzhSM2VBbE5ld3VBNC9RNCtTMEw0SU9EMWdDcFM0RC81cUFpeEFsSHd2SW9PVHBQQ0VtcDVHQUUwQ0orTzZqQk5rQjlSVFRLSTlDTndDR0wwWDdUd0xnS3lBWlllSUtUVTg2Z1ExSXNaN1ZRRS9TNEE4NzQ0S1h1b0RNdktPVm5XVWdJQ3NSUWNKRkpBeFJVeDdFSHlGY3dSY0EySTg4QU5rRjY5SlVRWTdEalEwaDVZQWI1RkFEdUFxRnNGNWhvQU93UHZ4K1E0cTZBYjR0Qis0eHdscTREWGdKK1cxWmc3c0VERFdMc0NpQ1hqK0ljd1ZXbkwzU1pFK0FwWkFjVlZGRmFSNGRqN0FzZ0MrSDUvWndROGcwRzRvd1EyUjdRNnZYNVhkSHlBYkFHOEtHZmdkMnU0UDRKczR4OWZqZm5ieG5YMDJTclNKM2RkMi9pU09UUnkxZFlMcjBRZDBBRDhBeTRYa2FVUjRvZkkzTWxvaXhkWGlPMG9ld1M2d21xSUdWSUFrUUlKZWp6WCszbVlrUldnS2x2Ui9lZDBtS2poTi9pY0Q5RmtjeitMMzQ5b0t6cENGbzBQZ0RmeUk1ZUZaMmUzeWlBL3draHEwOHdVQXY4SDVJb2lRU2tCUExuZitKcFpHZ0JWQ2krSVV6YWpRa3BWZURhUXZ3WDg3UUkvMVRmeE9tb1NtQUFSL0ZZUlI0RGhMMER0SU9VRnliSitVVUllN1AwQi9QNERMOVNaSWtHYkFRSUFFdjRqZEw0cGlNR21xQWp3Wi9RVFZDVklpSDdETW9BRUJBL0FuQ1QrTzQzZEJ6aG5zZWhBZzdmNFQvRThnQ3NIdlNzSlVJVzBtbzcvSVVSZ2tKd3lpL1dzRWZBSitQd2dZUzVyRzRoRHdDZjRDU2lsR2xyZ2JaS0FTckVZclo0b2hMZDNGMEhkV0NQaHhrUEN1S0dFUkpFb0h1QjdnaDBwSUFhOGxSaWVSTVZZbFd6VHJnMHd4cEJFaGZjRWlTSkFFSUFudmdvQXpSQUpwLzJkbDUyVitzRUtJYk1mN0o1RU00YkljSWJWRTFXZWx2bG9PZ0k0UUNaQ21nQXBZaGRldjRzWXQ4R05wOVlaSHdpOUtpRExCNGhSQUo4TVJuc0VSRG4vd0J4Q3dnTk5hUWZvTXdHVmtXSlQwR2plcVo3ckhUUWtSTldoalJabmdHWlNBSmpITW9JRUNic0lrQnZnQi9BMXlDU3Uxcm80RDU0d1BvQ0FaaWtwZ0xTcThLZUZ4Z0tuQ0I4aW9JTUZmSUwxdWlWTGJhNzJGWVRBVEZTaHdqTTFSeGpDUlJlejRKbXI5TTZUTkMrUU5sdXk5QnF4cEJqTzFnQlVleVZBRGtxRVJVK0hHUmlSb3prNlRrNm5TN0N5eUpZWVRzeDNpQW0xeEN0cG94ZWtZUlUzVnUwQVh1TW1aMlI4N0ZSZzcvVDJyMVYyVWZvRDNXYTk5bmhtcjNhMEE3WTk3N1d4TVQzZFk2MEV3SmtJYnRMMnNuUDllOEdZWUpLZU5aTzF3VDdTeE1HbTVpci9KSWd6dVVQL2Z4R2MyY2R3VVFsQTkzc3pBRElQUkdKcVYzbDBQMmxpeXJKV2xMWW5QVk1nRHJzcTZBUUdhU3Rnd3lSSjFoVnBDTWw3ZkhuY2VnVjlFL0Vid0MrUUJzZ3orT0k2WFl3MHlWa1VORmhIZUlOWE5BNnkrR2twdGQzYitDbVZ0aGZSMmhZS25ReW44QVNSY3dUUlFBWmFQaUtLYW1ncVQ0Z09zY1pVbCtjWG81bGdWWDRmTTd3T1dSOFNtQUk4YzVUOEthY2FPRjRNRWRxUXZuVnd6cXJvVkNDQWdZQld5bCtDUmdCV1VnSW9vR1FjWW1ZQVg0anFFdEhiY21CeVdrTkx4dllGUGtBckFqdEJGVVlFa3dsSUFubk1tQ2hSbnlvbzl0azNKNkc3S0VGVHVyblJ5NkJUeEd1bEFmOExTRklBT2taMlErRnRWT0JNR05UVnNrUGRYQXp6dVBqWkZPNWpCVGV5MGpBWVhKVS9ZamR6QWNvUnVGR0NuZHU0d2t4dm5ZMngxVlZTek83dGZ3UVIyVUFIbUJSZHh0SnhnRDU0eWNVM0E2NkdqS2V4S3I2REF6ck1DQ25jZkJ5TmFQbkZUdlArcWhNTTlDSU4zT1VFckJTYVIxR3lKTWZkTk5FS3QyV0EzU0pESHEyUDdtZDNIOUQ1VkRHbFBjZlNnNVl4Z21taDV6VXlIVjZXbXNNQjNweVpJSzhDZHBSdkFOeU5ibEFTY2xLNU9FVTdRZXo1Z0Qyb0JiL2VuTTBFdkg3Q2V5Y0dFYVFCcHg4MWxtcGRlaldFOUtUSlRLdk1qaVZCSlBKT3p3WmdMbldBTituajRqSkJHUkUvbS96elRGR21KM2ZjYURkM0lGYW80N2tyTHF6Z0U0UENUamVaSWxQV0Z1NS90Q211NUFRNGdHRVpaVlF3cHZhZkROQ2ZibmVKTEE1d3BnKzl1aVZId1hsZUlRSDlnTlRpTEUyVllxZTZpZmlGUE5IZW5HaUxraEVRQ1U4RHFyMExPRUQwMm55R2lPS0dPWnh1aldSTW9Tbmkwd2lRcFQyaVEwNGttQnp3N3RRZ0hOcDhpWW1ZeTVEMTBxRDJwVGNiTWdCTmtsNENFakpON3lmOExjS0tEck8yOE5ZTG53QXk4bHJ5MzAwODFnZG5Ka1VXSU5YVGxoQkl5NzAwUFJlNGx3RXFPTEFkcDNTQWxBSEJ5V0hNWCtHY29nQnhpSWpJeWl1STdydmt5QWlJMXpONGtUeWpqS2VDZlFVQlcyc1dwS1NJbitCTGd6eVlnVXNXak4vNi8rdS94NkticDN3QnEvZnd0d0FDRGVkRE1KazlyRWdBQUFBQkpSVTVFcmtKZ2dnPT0"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicConsole",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFCVVNVUkJWSGphdEpIUkNVQWhEQVBqRzhVVjNNbmhuTVZaWE9IOFVTaFBoSW9ZeUUrNXRJRUdRRjU5T3BDRm82UXFLVzFwd0RvRERTaS91WUFGbmk0amxEM3d2SUlOWEcxMmQ0NUFCZEt1V25qMmxENEFLVWJYUXNkOGx3a0FBQUFBU1VWT1JLNUNZSUk9"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Eraser_GraphicEraserTool",
                    data: ""
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleXY",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQlBTVVJCVkJpVmxZOUJFb0F3Q0FNM0hmLy81WGdRMndyMFlJNndKRUcyelNaSkFraGpSZ2QxR3FkRkN5cjAxc2l4QUNVcVlJWEJBcnRyd0xudlZTS2V2WFpud0FWTXRXYmN2NjhQK3BTL0FmNTJIUmZ1cmtCMkFBQUFBRWxGVGtTdVFtQ0M"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicDrawDebug",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQUU5SlJFRlVlTnEwa01zTkFDQUlRNnRic3FCcjF2Z25haFFQTnVrRlhna3BTS0phZUZhWVFWSGg1WWdWbEFiZjFJN1E1UVRnc0pmZTBlTkJYMkFwajR4V2RxWnV4QUwzUnRJZ0dLdERGR0FBNGg0Vk01NWl5QnNBQUFBQVNVVk9SSzVDWUlJPQ"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicArrowRight",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQUQ1SlJFRlVlTnBpK1AvLy96SWdqZ1JpQmtJWVJNQUFRVTNJaWdscXdxWVlweVo4aWpFME1mNEhheUVLTENmSlpJcmRURlJvRUJYT1JNY2dRSUFCQU1xdGZ6aUhGZ2JoQUFBQUFFbEZUa1N1UW1DQw"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicWatch",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFEY1NVUkJWSGphakpBaFM4TmhHTVIvZTFGWkdNSmd3U2FyVnNPS1dSSGJtcGo4Qkg0Q205L0JabDJ3R3NSZ0U5Um1GbHcwQ0NKWUxIZG44UDF2KzZ1SUIwOTU3cmk3NStrazRiOG9BTmdGZXhmN0d2c0ZlNHA5Z2oxb3FaTVFhVDlTSXQxSE9vNTBGdWs5MG1Xa2ZoS1N6TVRUU0xlUnVnMFI2VENTSXgwMHUxSUQxb0VIU3ZsWUNMMEJYb0ZodS9NWHNZYzlxamVzQWtkQXQzS3R6cHVSSGlPOVJicUtkRmR2T0krMDFOVG96RjVuYndEakd0c0hkb0JuWUp0U251Yk9peU90Uk9wRk9xM3VGeitkdjhOZUF5YkFNcVZzQVgrSWY4SG5BTlI0d3BRazlwRnhBQUFBQUVsRlRrU3VRbUND"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicInteractive",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQndTVVJCVkJpVmpaR3hEWUF3REFSZnpNSTYyU0JTT3RaZ0tBWmdBYW9NUVU5SmRSUUprUXVjOE5MTHNuVitGeGFnanFQdEovbUtrdVphaXpxSkFiaXJvNWNjSlYyU1ZqTXJGNXpFQXpockRXL3liOURDeXdpMDhFNlJDelk0NTR4WitBUWJuRkxDTEN6ZWt3UnNneTgyUDZENlFrZUFUREtHQUFBQUFFbEZUa1N1UW1DQw"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools_GraphicCursorCross",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJaMFJWaDBRM0psWVhScGIyNGdWR2x0WlFBd05TOHlPUzh4TnJ0VlFGa0FBQUFjZEVWWWRGTnZablIzWVhKbEFFRmtiMkpsSUVacGNtVjNiM0pyY3lCRFV6Ym92TEtNQUFBQUxrbEVRVlFZbFdQOC8vOC9BeGJ3bjRHQmdSRmRrQW1iU2x4Z2tDaG1ZWUI0Qmh2QUVHZGh3T0pyaG1FVUdnQjN1Z2NXZXB2bWtRQUFBQUJKUlU1RXJrSmdnZz09"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleY",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUFUZ0FBQUU0QnNjMGZNd0FBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQkdTVVJCVkJpVmZaQkpEZ0F3Q0FLbDZmKy9iRTl0RVlPY3pFaHdRV2FHNkFJd1hNYWtkVEcyYUdhYklLUTVqcllhamNBUEhZMzhFZDVSanltN2NpS2k2ekVkRFZQSEFlQm5EaFZYand5eEFBQUFBRWxGVGtTdVFtQ0M"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_GraphicVirtualInput",
                    data: ""
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicArrowLeft",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQm1KTFIwUUFBQUFBQUFENVE3dC9BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUIzUkpUVVVIM2dRWkVqQTAzU0hjY2dBQUFFQkpSRUZVR05Oai9QLy9Qd01SSUpLQmdjR1g0Zi8vLy9odzVQLy8vNWY5aHdLaUZPRlNqRlVSdW1LOGlwQVZFMVJFdHNra3U1bXMwTUNyaVpHVUdBUUFzOU5wbXo4SWloRUFBQUFBU1VWT1JLNUNZSUk9"
                }, {
                    name: "__ASSET__:bitmap_flixel_system_debug_GraphicLog",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUlHTklVazBBQUhvbEFBQ0Fnd0FBK2Y4QUFJRHBBQUIxTUFBQTZtQUFBRHFZQUFBWGI1SmZ4VVlBQUFBa1NVUkJWSGphWXZ6Ly96OERzWUFGaVkxUEZ5TzZZc1pSa3dlSHlRQUFBQUQvL3dNQStmWUlMQWhqbnhZQUFBQUFTVVZPUks1Q1lJST0"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug__Window_GraphicWindowHandle",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFvQUFBQUtDQVlBQUFDTk1zKzlBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQUZCSlJFRlVlTnFNandFS0FDQUlBeFgyeWg3b055MmpRa3lwUWJUMGRFU3FTblllRXZoWE5zRE1ZblhlelZHNHdBME5OVlJaSGpLUEgyaDYvNWwxVzBPaXgzTlRFbDFDSjdxS0MvNExraTdBQUQ1WWZydllMZlJQQUFBQUFFbEZUa1N1UW1DQw"
                }, {
                    name: "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoCorners",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUVBQUFBQkFDQVlBQUFDcWFYSGVBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQlkxSlJFRlVlTnJrV3d1eW16Z1FsR1Q4d1g1Sk52ZS9UUTYwdFhrdi9tRkFDNjRaMG01TEFwejFPaENxcHJEQnh1NmVuaGtKUnRZWTg2MnhkV1A3eG40MDloM3NIem4yMGRpeHNaTlkwZGlsc2JLeENxd0c4MkQ4M3NDZVg3ZWJoWDFyRHZacVdXTUwyUzhiV3dtT1RXTnZZbDhhKzlyWVg3TC9MTWZiejJ3Yk8yZHljQ2tBQ3JtZ0FTQkZ3QzZ5Ui9BZVNJZ0Jad0lZT0pPQVJDandSZUQ2K1BrTS9sc054OVlDZWlmN055VmdMeGQ5QjYrMzlyZnN2NHNLV2dXY3lmczFlVDRGT3VUOVBnSVFXRWdKQzFCQklZNjhpT20xVVNVWlhIZWhCSnprd0VHQUtoSHZRc0M3a0hRU0FpNEF1b29BcjhuTEtlQkRWR0FEUkRnaTRnSktacy9uNHZWYzNxL1VrVXFBRjVBZllrakNoNUNqM2k4SFNOMzBBQjlDZ0Uwb0FVbXdRa0JKdVVpUHJ5RG1jM205RkNJNkFpcngvZzhnUU1Hci9BdncvcEQ0N2dPYzh2eFFFcFNJQ3ZhbFhKc1Y4Q2J4bndNcFZTYmVMWUVBQkw2WDh5ZUsrMGRCRHdYK0tCRTFPQWdKVUd4YklzQm5VTmEwREI3azlSRkszeGtraGpFK3hMc2h3SDRrZUQrQUNFM0VXc1cwVkI0QW0xWUFMWmMyZzlwK0lQQUhxdmxWSk5iTlNFOC9vZ0QrYm93SXZMWVR4eDBCMTE0STJJZ3RNZ0NxSHp4Q3lWUFpsMVRxbmdteTcxcVdsR1poYjZqOEZZUnRUOGt3eXdUb2lZQVhFZkQxTDRKOGxCZzdrSFF2d0d2NDc1Y0F4b09RMEJHQTRNODB6T1doN2JNOVBsUUZzWE0xNUlRU0JrWWhFbFlaZ01haGJxeld2d0o4MzIvYWdBbzhPSzZDb1R1VFVDTUJPTkJoNzc4YThKakU2R2wwV29FS0NzQjYwaktJRTV3TGxic3hZL2ZmZ1FoV0ErYXVNa0NDeVFMU0x3Zkd2Zm5OeVdBVmxLU0VRc2NCUlVUNmZpS2VUeW1ocGx6QUpGd0pLQlAxZnFvSzRMQ3RZYUtFSkRoSDRLc1pTRDgwTnFnREpGd3R3emNrbWFtSGdROGt3NHBJV0RqeS90UVZFQ01pUmtMbElqYzFwK2oxUGdKOElDRldMbkZuMTgvTSsxWGdIdWFOQXVvQk56dW1Gdis5WWVBQ1NXL29sSGVxT2VER2hpcGc2dU9BS0JFdVVmYm1zREVKRlpQZ1RQcWh4bHhJQ0QybTZ3Z1krOGhxVHZuQXU1bDZQVFl6dkZPRCt3T2tINW9YZE9kY1l2dzg1ZEdnSHhvT3pveDdiaitYSE5BZGMyYittMDlNazQyYmFlSWJzbGtsd1A0cFlFUHZYZVFEcVMvUGFsTUZoR3lPS3Jqck8zSXpCODBLdm51czdoTGVueklwc2NmbmQ2cDNpVENZaStkakpEZ2t3TTI4SW9SYTdib2NNR2NWaE1CamE1M3JYZ1NJbUVNSkRMWGNJdVlGZGxzdUlpVE1EZnhObDZrTGdIZG1Yb21RUTBCYlp6c0N0SWRXRDA1OVlHUURCSEJ2c2JiUVpZN0FZM3hNT1JuYW52aS9VVUJHS3BoVFNXVHBZM2Q1aTNuWm5sanBtNTU4WUNlWStFS0xMQlRyQ2dsWXc0bU13c0JNWkdnY0d2bTVsUGVOdE1sZDI4YUZpQlVSNEdES1hKdGhEWXV2bnV2SEZJREFPd1VnQVdzS0IrNFB0aWJjbWhxN0RXVk11TkY1N08yc01mY2wrbGFWNE5xaXE3VUhOd0owQXlmTzhnVnNqMC9kWDdPSlAydi9ZKzhPbWVveStDVTRkdzFxdjRaQUxuOCtGK05HNlJBQi9oYzkrOHg1UG51ZFBhOXJCWElOQVNWZ0srQnpjN3MyQ0lIR1dtZTVXenNXTGo0U0Zxd2VQd0kwMzlwRHI3UGtOMkJyVkVDN3RZc0plRjBncnI3Z0xqSm53azlmWGxYdWVLaTdCTkNxN3EzNTJTNi9WUVZzNVlzS0h0dmxhMkFZMXduZVBXSXkvOCtUSkp1WTZOaEF0a2ZRT3lLZ2E1ZlBoVFgwUGk0OHhEc29xV2JLWnl1aER6eU84VlgyQ253WEljRXBBVXZ5UEpaQWpDdGRXZnFLbmlMYjQza3VkUnNCck10b1B4RUpMVzZMWlhCbjd0Y0xlQ0lnSXhYRXdpRkZRbXdNMFZmelkwdHBPZXVyOTNQQjlFbE1sYUR5YnovVExTc3pKdDR5YitCSGxrUlFUQWtwRXZ6STBoa2I0ckxzMmZ0YklPQU5iQXRWNExwZVlHZCtManIwZ2RLSGlhVnZQZEV6OGtIb2xyYUwxSHYydmtxL1hVWGVyaUQvVEdxb2NQSDB5ZHl2dXViWXFzejlpbTFWZ251Z01neXArVFl5ekkxTmNIQm1pM01aWFIxL3hLVCtyd0FEQUFKQmFpQW1tNXh3QUFBQUFFbEZUa1N1UW1DQw"
                },
                {
                    name: "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileCircle",
                    data: ""
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Mover_GraphicMoverTool",
                    data: ""
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformTool",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJ4MFJWaDBVMjltZEhkaGNtVUFRV1J2WW1VZ1JtbHlaWGR2Y210eklFTlROdWk4c293QUFBQThTVVJCVkJpVlkvei8vejhEQVFCWHdJSXVnQSt3SUxFWkNabk1SSVNCTUVNWWlWRU1CNE5JTWN5M3VJSVBMcytDUXdJclFGZU1MYXpoQmdBQTR2NE1GcEVTdzlBQUFBQUFTVVZPUks1Q1lJST0"
                }, {
                    name: "__ASSET__:bitmap_flixel_addons_transition__TransitionFade_GraphicDiagonalGradient",
                    data: ""
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicFlixel",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUF3QUFBQU1DQVlBQUFCV2RWem5BQUFBQkdkQlRVRUFBTEdPZlB0Umt3QUFBQ0JqU0ZKTkFBQ0hEd0FBakE4QUFQMVNBQUNCUUFBQWZYa0FBT21MQUFBODVRQUFHY3h6UElWM0FBQUtPV2xEUTFCUWFHOTBiM05vYjNBZ1NVTkRJSEJ5YjJacGJHVUFBRWpIblpaM1ZGVFhGb2ZQdlhkNm9jMHdBbEtHM3J2QUFOSjdrMTVGWVpnWllDZ0REak0wc1NHaUFoRkZSSm9pU0ZERWdORlFKRlpFc1JBVVZMQUhKQWdvTVJoRlZDeHZSdGFMcnF5ODkvTHkrK09zYisyejk3bjc3TDNQV2hjQWtxY3ZsNWNHU3dHUXloUHdnenljNlJHUlVYVHNBSUFCSG1DQUtRQk1Wa2E2WDdCN0NCREp5ODJGbmlGeUFsOEVBZkI2V0x3Q2NOUFFNNEJPQi8rZnBGbnBmSUhvbUFBUm03TTVHU3dSRjRnNEpVdVFMcmJQaXBnYWx5eG1HQ1ZtdmloQkVjdUpPV0dSRFQ3N0xMS2ptTm1wUExhSXhUbW5zMVBaWXU0VjhiWk1JVWZFaUsrSUN6TzVuQ3dSM3hLeFJvb3dsU3ZpTitMWVZBNHpBd0FVU1d3WGNGaUpJallSTVlrZkV1UWk0dVVBNEVnSlgzSGNWeXpnWkF2RWwzSkpTOC9oY3hNU0JYUWRsaTdkMU5xYVFmZmtaS1Z3QkFMREFDWXJtY2xuMDEzU1V0T1p2QndBRnUvOFdUTGkydEpGUmJZMHRiYTBORFF6TXYycVVQOTE4MjlLM050RmVobjR1V2NRcmYrTDdhLzgwaG9BWU15SmFyUHppeTJ1Q29ET0xRREkzZnRpMHpnQWdLU29ieDNYdjdvUFRUd3ZpUUpCdW8yeGNWWldsaEdYd3pJU0YvUVAvVStIdjZHdnZtY2tQdTZQOHRCZE9mRk1ZWXFBTHE0Ykt5MGxUY2luWjZReldSeTY0WitIK0I4SC9uVWVCa0djZUE2Znd4TkZoSW1tak10TEVMV2J4K1lLdUdrOE9wZjNuNXI0RDhQK3BNVzVGb25TK0JGUVk0eUExSFVxUUg3dEJ5Z0tFU0RSKzhWZC82TnZ2dmd3SUg1NTRTcVRpM1AvN3pmOVo4R2w0aVdEbS9BNXppVW9oTTRTOGpNWDk4VFBFcUFCQVVnQ0twQUh5a0FkNkFCRFlBYXNnQzF3Qkc3QUcvaURFQkFKVmdNV1NBU3BnQSt5UUI3WUJBcEJNZGdKOW9CcVVBY2FRVE5vQmNkQkp6Z0Z6b05MNEJxNEFXNkQrMkFVVElCbllCYThCZ3NRQkdFaE1rU0I1Q0VWU0JQU2g4d2dCbVFQdVVHK1VCQVVDY1ZDQ1JBUEVrSjUwR2FvR0NxRHFxRjZxQm42SGpvSm5ZZXVRSVBRWFdnTW1vWitoOTdCQ0V5Q3FiQVNyQVVid3d6WUNmYUJRK0JWY0FLOEJzNkZDK0FkY0NYY0FCK0ZPK0R6OERYNE5qd0tQNFBuRUlBUUVScWlpaGdpRE1RRjhVZWlrSGlFajZ4SGlwQUtwQUZwUmJxUlB1UW1Nb3JNSUc5UkdCUUZSVWNab214Um5xaFFGQXUxQnJVZVZZS3FSaDFHZGFCNlVUZFJZNmhaMUVjMEdhMkkxa2Zib0wzUUVlZ0VkQmE2RUYyQmJrSzNveStpYjZNbjBLOHhHQXdObzQyeHduaGlJakZKbUxXWUVzdytUQnZtSEdZUU00Nlp3Mkt4OGxoOXJCM1dIOHZFQ3JDRjJDcnNVZXhaN0JCMkF2c0dSOFNwNE14dzdyZ29IQStYajZ2QUhjR2R3UTNoSm5FTGVDbThKdDRHNzQ5bjQzUHdwZmhHZkRmK09uNEN2MENRSm1nVDdBZ2hoQ1RDSmtJbG9aVndrZkNBOEpKSUpLb1JyWW1CUkM1eEk3R1NlSXg0bVRoR2ZFdVNJZW1SWEVqUkpDRnBCK2tRNlJ6cEx1a2xtVXpXSWp1U284Z0M4ZzV5TS9rQytSSDVqUVJGd2tqQ1M0SXRzVUdpUnFKRFlraml1U1JlVWxQU1NYSzFaSzVraGVRSnlldVNNMUo0S1MwcEZ5bW0xSHFwR3FtVFVpTlNjOUlVYVZOcGYrbFU2UkxwSTlKWHBLZGtzREphTW00eWJKa0NtWU15RjJUR0tRaEZuZUpDWVZFMlV4b3BGeWtUVkF4Vm0rcEZUYUlXVTcrakRsQm5aV1ZrbDhtR3lXYkwxc2llbGgybElUUXRtaGN0aFZaS08wNGJwcjFib3JURWFRbG55ZllsclV1R2xzekxMWlZ6bE9QSUZjbTF5ZDJXZXlkUGwzZVRUNWJmSmQ4cC8xQUJwYUNuRUtpUXBiQmY0YUxDekZMcVV0dWxyS1ZGUzQ4dnZhY0lLK29wQmltdVZUeW8ySzg0cDZTczVLR1VybFNsZEVGcFJwbW03S2ljcEZ5dWZFWjVXb1dpWXEvQ1ZTbFhPYXZ5bEM1TGQ2S24wQ3ZwdmZSWlZVVlZUMVdoYXIzcWdPcUNtclphcUZxK1dwdmFRM1dDT2tNOVhyMWN2VWQ5VmtORncwOGpUNk5GNDU0bVhwT2htYWk1VjdOUGMxNUxXeXRjYTZ0V3A5YVV0cHkybDNhdWRvdjJBeDJ5am9QT0dwMEduVnU2R0YyR2JyTHVQdDBiZXJDZWhWNmlYbzNlZFgxWTMxS2ZxNzlQZjlBQWJXQnR3RE5vTUJneEpCazZHV1lhdGhpT0dkR01mSTN5alRxTm5odHJHRWNaN3pMdU0vNW9ZbUdTWXRKb2N0OVV4dFRiTk4rMDIvUjNNejB6bGxtTjJTMXpzcm03K1Fiekx2TVh5L1NYY1pidFgzYkhnbUxoWjdIVm9zZmlnNldWSmQreTFYTGFTc01xMXFyV2FvUkJaUVF3U2hpWHJkSFd6dFlickU5WnY3V3h0QkhZSExmNXpkYlFOdG4yaU8zVWN1M2xuT1dOeThmdDFPeVlkdlYyby9aMCsxajdBL2FqRHFvT1RJY0doOGVPNm81c3h5YkhTU2RkcHlTbm8wN1BuVTJjK2M3dHp2TXVOaTdyWE02NUlxNGVya1d1QTI0eWJxRnUxVzZQM05YY0U5eGIzR2M5TER6V2VwenpSSHY2ZU83eUhQRlM4bUo1Tlh2TmVsdDVyL1B1OVNINUJQdFUrenoyMWZQbCszYjd3WDdlZnJ2OUhxelFYTUZiMGVrUC9MMzhkL3MvRE5BT1dCUHdZeUFtTUNDd0p2QkprR2xRWGxCZk1DVTRKdmhJOE9zUTU1RFNrUHVoT3FIQzBKNHd5YkRvc09hdytYRFg4TEx3MFFqamlIVVIxeUlWSXJtUlhWSFlxTENvcHFpNWxXNHI5NnljaUxhSUxvd2VYcVc5S252VmxkVUtxMU5XbjQ2UmpHSEduSWhGeDRiSEhvbDl6L1JuTmpEbjRyemlhdU5tV1M2c3ZheG5iRWQyT1h1YVk4Y3A0MHpHMjhXWHhVOGwyQ1hzVHBoT2RFaXNTSnpodW5DcnVTK1NQSlBxa3VhVC9aTVBKWDlLQ1U5cFM4V2x4cWFlNU1ud2tubTlhY3BwMldtRDZmcnBoZW1qYTJ6VzdGa3p5L2ZoTjJWQUdhc3l1Z1JVMGM5VXYxQkh1RVU0bG1tZldaUDVKaXNzNjBTMmREWXZ1ejlITDJkN3ptU3VlKzYzYTFGcldXdDc4bFR6TnVXTnJYTmFWNzhlV2grM3ZtZUQrb2FDRFJNYlBUWWUza1RZbEx6cHAzeVQvTEw4VjV2RE4zY1hLQlZzTEJqZjRyR2xwVkNpa0Y4NHN0VjJhOTAyMURidXRvSHQ1dHVydG44c1loZGRMVFlwcmloK1g4SXF1ZnFONlRlVjMzemFFYjlqb05TeWRQOU96RTdlenVGZERyc09sMG1YNVphTjcvYmIzVkZPTHk4cWY3VW5acytWaW1VVmRYc0plNFY3Unl0OUs3dXFOS3AyVnIydlRxeStYZU5jMDFhcldMdTlkbjRmZTkvUWZzZjlyWFZLZGNWMTd3NXdEOXlwOTZqdmFOQnFxRGlJT1poNThFbGpXR1BmdDR4dm01c1Vtb3FiUGh6aUhSbzlISFM0dDltcXVmbUk0cEhTRnJoRjJESjlOUHJvamU5Y3YrdHFOV3l0YjZPMUZSOER4NFRIbm40ZisvM3djWi9qUFNjWUoxcC8wUHlodHAzU1h0UUJkZVIwekhZbWRvNTJSWFlObnZRKzJkTnQyOTMrbzlHUGgwNnBucW81TFh1NjlBemhUTUdaVDJkeno4NmRTejgzY3o3aC9IaFBUTS85Q3hFWGJ2VUc5ZzVjOUxsNCtaTDdwUXQ5VG4xbkw5dGRQblhGNXNySnE0eXJuZGNzcjNYMFcvUzMvMlR4VS91QTVVREhkYXZyWFRlc2IzUVBMaDg4TStRd2RQNm02ODFMdDd4dVhidTk0dmJnY09qd25aSG9rZEU3N0R0VGQxUHV2cmlYZVcvaC9zWUg2QWRGRDZVZVZqeFNmTlR3cys3UGJhT1dvNmZIWE1mNkh3Yy92ai9PR24vMlM4WXY3eWNLbnBDZlZFeXFURFpQbVUyZG1uYWZ2dkYwNWRPSlorblBGbVlLZjVYK3RmYTV6dk1mZm5QOHJYODJZbmJpQmYvRnA5OUxYc3EvUFBScTJhdWV1WUM1UjY5VFh5L01GNzJSZjNQNExlTnQzN3Z3ZDVNTFdlK3g3eXMvNkg3by91ano4Y0duMUUrZi9nVURtUFA4dXNUbzB3QUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJwMFJWaDBVMjltZEhkaGNtVUFVR0ZwYm5RdVRrVlVJSFl6TGpVdU1UQXc5SEtoQUFBQkxFbEVRVlFvVTJQNGY5RG9QeEkrRG1RNy9qOWt4QUFDWDlYOVZJRjRHUkQvQStML0lNeUFwZ0drK2QvSEE0WTdqcnE1emdJcStBbFRpRlBENTRPRy94MTNxLzJYWHFuKy80S3RPOWhVWkF5eTRTck1sbzlBeFhaQXhRdzdsY0JZY3BYYS96TU9LSnErZ1RTNGdaenhBYWpZRWtreFRKUFlHclgvSjV6Y1lMYjBNL3cvWXNUdzdJREJPclBkcW5DVFlZcGh0TWhhdGYrSFhGMi9BSjBtQVE0TjQ0REhDN21XZXVEVXdMQlQ5VC9yNGFYUFdNNys1bVN3ZHZ5dkJzUy9USDFlLytkYzdveEZrOXAvNW1NYi93TVZnM0FPU01NQ0lQNFB3aVorei85enJIUkEwZ1JTdkFtbUdFUS9BbW40RGRNQTFoVHcrRC83S3R2L0RMczBnSXEzSUNzR3MwRWF3S1lqWTZPUXUyK1lqMnk0QlhVR2lpWjBEVitBR3R1QVdCQ29tQldJazRINEFiSkdBSlFUU2ZzMmF1VnlBQUFBQUVsRlRrU3VRbUND"
                },
                {
                    name: "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorDefault",
                    data: "aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFzQUFBQUxDQVlBQUFDcHJIY21BQUFBQkhOQ1NWUUlDQWdJZkFoa2lBQUFBQWx3U0ZsekFBQUxFZ0FBQ3hJQjB0MSsvQUFBQUJaMFJWaDBRM0psWVhScGIyNGdWR2x0WlFBd05TOHlPUzh4TnJ0VlFGa0FBQUFjZEVWWWRGTnZablIzWVhKbEFFRmtiMkpsSUVacGNtVjNiM0pyY3lCRFV6Ym92TEtNQUFBQUxrbEVRVlFZbFdQOC8vOC9BeGJ3bjRHQmdSRmRrQW1iU2x4Z2tDaG1ZWUI0Qmh2QUVHZGh3T0pyaG1FVUdnQjN1Z2NXZXB2bWtRQUFBQUJKUlU1RXJrSmdnZz09"
                }
            ];
            var km =
                new Uint32Array(256);
            R.__alpha16 = km;
            for (var Pg = 0; 256 > Pg;) {
                var Oh = Pg++;
                R.__alpha16[Oh] = Math.ceil(257.00392156862745 * Oh)
            }
            km = new Uint8Array(511);
            R.__clamp = km;
            for (Pg = 0; 255 > Pg;) Oh = Pg++, R.__clamp[Oh] = Oh;
            for (Pg = 255; 511 > Pg;) Oh = Pg++, R.__clamp[Oh] = 255;
            Aa.level = 3;
            "undefined" == typeof console && (console = {});
            null == console.log && (console.log = function() {});
            v.hitTestCanvas = "undefined" != typeof window ? window.document.createElement("canvas") : null;
            v.hitTestContext = "undefined" != typeof window ? v.hitTestCanvas.getContext("2d") :
                null;
            xg.maxTouchPoints = 2;
            xg.supportedGestures = null;
            xg.supportsGestureEvents = !1;
            xg.inputMode = 2;
            ma.API = "51023:BZcehASd";
            ma.EncKey = "I1DUQeXMp+/2czsCMjigUQ==";
            ca._pool = new T(ca);
            O.defaultPixelPerfectPosition = !1;
            da.alphabet = "abcdefghijklmnopqrstuvwxyz";
            da.numbers = "1234567890";
            da.symbols = "|~#$%()*+-:;<=>@[]^_.,'!?";
            za.__meta__ = {
                fields: {
                    __cairo: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    addEventListener: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    removeEventListener: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            za.__broadcastEvents = new aa;
            za.__instanceCount = 0;
            za.__tempStack = new mb(function() {
                return ib.toObjectVector(null)
            }, function(a) {
                a.set_length(0)
            });
            W.bpm = 100;
            W.crochet = 60 / W.bpm * 1E3;
            W.stepCrochet = W.crochet / 4;
            W.safeFrames = 10;
            W.safeZoneOffset = W.safeFrames / 60 * 1E3;
            gb.skipNextTransIn = !1;
            gb.skipNextTransOut = !1;
            yb.__fontByName = new aa;
            yb.__registeredFonts = [];
            Ne.isLoggedIn = !1;
            Ne.ngDataLoaded = new Nc;
            ld.swagWidth = 112;
            Ha.curLevel = "Tutorial";
            Ha.isStoryMode = !1;
            Ha.storyPlaylist = [];
            Ha.storyDifficulty = 1;
            Pa.numPlayers =
                0;
            jd.weekUnlocked = [!0, !1];
            fb.initialized = !1;
            fb.soundExt = ".mp3";
            S.Element = 0;
            S.PCData = 1;
            S.CData = 2;
            S.Comment = 3;
            S.DocType = 4;
            S.ProcessingInstruction = 5;
            S.Document = 6;
            X._pool = new ki(X);
            xa.__meta__ = {
                fields: {
                    equals: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            xa.__pool = new mb(function() {
                return new xa
            }, function(a) {
                a.identity()
            });
            wb.__pool = new mb(function() {
                return new wb
            }, function(a) {
                a.__identity()
            });
            bh.sha = "";
            q.autoPause = !0;
            q.fixedTimestep = !0;
            q.timeScale = 1;
            q.worldDivisions = 6;
            q.VERSION = new bh(4, 8, 1);
            q.elapsed =
                0;
            q.maxElapsed = .1;
            q.scaleMode = new ni;
            q.worldBounds = function(a) {
                a = ca._pool.get();
                var b = 0,
                    c = 0,
                    d = 0,
                    e = 0;
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                a.x = b;
                a.y = c;
                a.width = d;
                a.height = e;
                a._inPool = !1;
                return a
            }(this);
            q.save = new mi;
            q.random = new ch;
            q.swipes = [];
            q.inputs = new uk;
            q.debugger = new tk;
            q.bitmap = new rk;
            q.cameras = new sk;
            q.initialWidth = 0;
            q.initialHeight = 0;
            q.initialZoom = 0;
            q.signals = new xk;
            H.__meta__ = {
                fields: {
                    image: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __framebufferContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __indexBufferContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __surface: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __textureContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __vertexBufferContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __fromImage: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            H.__tempVector = new og;
            ke.resourceType = "image/png";
            ke.resourceName = "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileCircle";
            yd.resourceType = "image/png";
            yd.resourceName = "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileDiamond";
            le.resourceType = "image/png";
            le.resourceName = "__ASSET__:bitmap_flixel_addons_transition_GraphicTransTileSquare";
            Ld.resourceType = "image/png";
            Ld.resourceName = "__ASSET__:bitmap_flixel_addons_transition__TransitionFade_GraphicDiagonalGradient";
            La.__pool = new mb(function() {
                return new La
            }, function(a) {
                a.setTo(0, 0)
            });
            fa.__pool = new mb(function() {
                return new fa
            }, function(a) {
                a.setTo(0, 0, 0, 0)
            });
            M.bitmapsCreated = 0;
            M.useSectionCache = !0;
            M._staticPoint = new La;
            M._staticRect = new fa;
            M._staticRect2 = new fa;
            M._staticPointZero =
                new La(0, 0);
            M._staticMatrix = new xa;
            M._staticFlxRect = function(a) {
                a = ca._pool.get();
                var b = 0,
                    c = 0,
                    d = 0,
                    e = 0;
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                a.x = b;
                a.y = c;
                a.width = d;
                a.height = e;
                a._inPool = !1;
                return a
            }(this);
            M._staticFlxRect2 = function(a) {
                a = ca._pool.get();
                var b = 0,
                    c = 0,
                    d = 0,
                    e = 0;
                null == e && (e = 0);
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                a.x = b;
                a.y = c;
                a.width = d;
                a.height = e;
                a._inPool = !1;
                return a
            }(this);
            gc._cachedPoint = new X;
            oc.EXTENSIONS = [".ttf", ".otf"];
            lc._pool = new zi(lc);
            lc._boundObjects =
                new A;
            zb.defaultPersist = !1;
            Mc.drawCalls = 0;
            Pd.__meta__ = {
                fields: {
                    glProgram: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            dd.fromStringMap = function(a) {
                a = new aa;
                a.h.ANY = -2;
                a.h.A = 0;
                a.h.B = 1;
                a.h.X = 2;
                a.h.Y = 3;
                a.h.LEFT_SHOULDER = 4;
                a.h.RIGHT_SHOULDER = 5;
                a.h.BACK = 6;
                a.h.START = 7;
                a.h.LEFT_STICK_CLICK = 8;
                a.h.RIGHT_STICK_CLICK = 9;
                a.h.GUIDE = 10;
                a.h.DPAD_UP = 11;
                a.h.DPAD_DOWN = 12;
                a.h.DPAD_LEFT = 13;
                a.h.DPAD_RIGHT = 14;
                a.h.LEFT_TRIGGER_BUTTON = 15;
                a.h.RIGHT_TRIGGER_BUTTON = 16;
                a.h.LEFT_TRIGGER = 17;
                a.h.RIGHT_TRIGGER = 18;
                a.h.LEFT_ANALOG_STICK =
                    19;
                a.h.RIGHT_ANALOG_STICK = 20;
                a.h.DPAD = 21;
                a.h.TILT_PITCH = 26;
                a.h.TILT_ROLL = 27;
                a.h.POINTER_X = 28;
                a.h.POINTER_Y = 29;
                a.h.EXTRA_0 = 30;
                a.h.EXTRA_1 = 31;
                a.h.EXTRA_2 = 32;
                a.h.EXTRA_3 = 33;
                a.h.LEFT_STICK_DIGITAL_UP = 34;
                a.h.LEFT_STICK_DIGITAL_RIGHT = 35;
                a.h.LEFT_STICK_DIGITAL_DOWN = 36;
                a.h.LEFT_STICK_DIGITAL_LEFT = 37;
                a.h.RIGHT_STICK_DIGITAL_UP = 38;
                a.h.RIGHT_STICK_DIGITAL_RIGHT = 39;
                a.h.RIGHT_STICK_DIGITAL_DOWN = 40;
                a.h.RIGHT_STICK_DIGITAL_LEFT = 41;
                return a
            }(this);
            Ta.__meta__ = {
                fields: {
                    addEventListener: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Ta.numDevices = 0;
            Ta.__deviceList = [];
            Ta.__instances = [];
            Ta.__devices = new A;
            df._gameInput = new Ta;
            Rd.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 24,
                down: 25,
                left: 26,
                right: 27
            });
            Rd.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 28,
                down: 29,
                left: 30,
                right: 31
            });
            Sd.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 21,
                down: 22,
                left: 23,
                right: 24
            });
            Sd.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 25,
                down: 26,
                left: 27,
                right: 28
            });
            Fc.REMOTE_DPAD = new Sb(0, 1, {
                up: 22,
                down: 23,
                left: 24,
                right: 25,
                threshold: .5,
                mode: Ii.ONLY_DIGITAL
            });
            Fc.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 26,
                down: 27,
                left: 28,
                right: 29
            });
            Fc.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 26,
                down: 27,
                left: 28,
                right: 29
            });
            Td.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 23,
                down: 24,
                left: 25,
                right: 26
            });
            Td.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 27,
                down: 28,
                left: 29,
                right: 30
            });
            Ud.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 22,
                down: 23,
                left: 24,
                right: 25
            });
            Ud.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 26,
                down: 27,
                left: 28,
                right: 29
            });
            od.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 21,
                down: 22,
                left: 23,
                right: 24
            });
            od.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 25,
                down: 26,
                left: 27,
                right: 28
            });
            vg.LEFT_ANALOG_STICK = new Sb(0,
                1, {
                    up: 22,
                    down: 23,
                    left: 24,
                    right: 25
                });
            wg.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 22,
                down: 23,
                left: 24,
                right: 25
            });
            Vd.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 22,
                down: 23,
                left: 24,
                right: 25
            });
            Vd.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 26,
                down: 27,
                left: 28,
                right: 29
            });
            Gc.REMOTE_DPAD = new Sb(0, 1, {
                up: 22,
                down: 23,
                left: 24,
                right: 25,
                threshold: .5,
                mode: Ii.ONLY_DIGITAL
            });
            Gc.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 28,
                down: 29,
                left: 30,
                right: 31
            });
            Gc.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 32,
                down: 33,
                left: 34,
                right: 35
            });
            Wd.LEFT_ANALOG_STICK = new Sb(0, 1, {
                up: 21,
                down: 22,
                left: 23,
                right: 24
            });
            Wd.RIGHT_ANALOG_STICK = new Sb(2, 3, {
                up: 25,
                down: 26,
                left: 27,
                right: 28
            });
            pm.fromStringMap = function(a) {
                a = new aa;
                a.h.ANY = -2;
                a.h.A = 65;
                a.h.B = 66;
                a.h.C = 67;
                a.h.D = 68;
                a.h.E = 69;
                a.h.F = 70;
                a.h.G = 71;
                a.h.H = 72;
                a.h.I = 73;
                a.h.J = 74;
                a.h.K = 75;
                a.h.L = 76;
                a.h.M = 77;
                a.h.N = 78;
                a.h.O = 79;
                a.h.P = 80;
                a.h.Q = 81;
                a.h.R = 82;
                a.h.S = 83;
                a.h.T = 84;
                a.h.U = 85;
                a.h.V = 86;
                a.h.W = 87;
                a.h.X = 88;
                a.h.Y = 89;
                a.h.Z = 90;
                a.h.ZERO = 48;
                a.h.ONE = 49;
                a.h.TWO = 50;
                a.h.THREE = 51;
                a.h.FOUR = 52;
                a.h.FIVE = 53;
                a.h.SIX = 54;
                a.h.SEVEN = 55;
                a.h.EIGHT = 56;
                a.h.NINE = 57;
                a.h.PAGEUP =
                    33;
                a.h.PAGEDOWN = 34;
                a.h.HOME = 36;
                a.h.END = 35;
                a.h.INSERT = 45;
                a.h.ESCAPE = 27;
                a.h.MINUS = 189;
                a.h.PLUS = 187;
                a.h.DELETE = 46;
                a.h.BACKSPACE = 8;
                a.h.LBRACKET = 219;
                a.h.RBRACKET = 221;
                a.h.BACKSLASH = 220;
                a.h.CAPSLOCK = 20;
                a.h.SEMICOLON = 186;
                a.h.QUOTE = 222;
                a.h.ENTER = 13;
                a.h.SHIFT = 16;
                a.h.COMMA = 188;
                a.h.PERIOD = 190;
                a.h.SLASH = 191;
                a.h.GRAVEACCENT = 192;
                a.h.CONTROL = 17;
                a.h.ALT = 18;
                a.h.SPACE = 32;
                a.h.UP = 38;
                a.h.DOWN = 40;
                a.h.LEFT = 37;
                a.h.RIGHT = 39;
                a.h.TAB = 9;
                a.h.PRINTSCREEN = 301;
                a.h.F1 = 112;
                a.h.F2 = 113;
                a.h.F3 = 114;
                a.h.F4 = 115;
                a.h.F5 = 116;
                a.h.F6 = 117;
                a.h.F7 =
                    118;
                a.h.F8 = 119;
                a.h.F9 = 120;
                a.h.F10 = 121;
                a.h.F11 = 122;
                a.h.F12 = 123;
                a.h.NUMPADZERO = 96;
                a.h.NUMPADONE = 97;
                a.h.NUMPADTWO = 98;
                a.h.NUMPADTHREE = 99;
                a.h.NUMPADFOUR = 100;
                a.h.NUMPADFIVE = 101;
                a.h.NUMPADSIX = 102;
                a.h.NUMPADSEVEN = 103;
                a.h.NUMPADEIGHT = 104;
                a.h.NUMPADNINE = 105;
                a.h.NUMPADMINUS = 109;
                a.h.NUMPADPLUS = 107;
                a.h.NUMPADPERIOD = 110;
                a.h.NUMPADMULTIPLY = 106;
                return a
            }(this);
            Bd.resourceType = "image/png";
            Bd.resourceName = "__ASSET__:bitmap_flixel_input_mouse__FlxMouse_GraphicCursor";
            ng.maxTouchPoints = 0;
            se.resourceType = "image/png";
            se.resourceName = "__ASSET__:bitmap_flixel_system_GraphicLogo";
            te.resourceType = "image/png";
            te.resourceName = "__ASSET__:bitmap_flixel_system_GraphicVirtualInput";
            Wc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Wc.defaultObjectEncoding = 10;
            zd.FONT_DEFAULT = "Nokia Cellphone FC Small";
            zd.FONT_DEBUGGER = "Monsterrat";
            Hc._NUM_CACHED_FLX_LIST = 0;
            Xd.resourceType = "image/png";
            Xd.resourceName = "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoLight";
            Yd.resourceType = "image/png";
            Yd.resourceName =
                "__ASSET__:bitmap_flixel_system__FlxPreloader_GraphicLogoCorners";
            pd._NUM_CACHED_QUAD_TREES = 0;
            md.muted = !0;
            ue.resourceType = "image/png";
            ue.resourceName = "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicFlixel";
            ve.resourceType = "image/png";
            ve.resourceName = "__ASSET__:bitmap_flixel_system_debug__FlxDebugger_GraphicDrawDebug";
            we.resourceType = "image/png";
            we.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicLog";
            xe.resourceType = "image/png";
            xe.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicStats";
            ye.resourceType = "image/png";
            ye.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicWatch";
            ze.resourceType = "image/png";
            ze.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicBitmapLog";
            Ae.resourceType = "image/png";
            Ae.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicConsole";
            Be.resourceType = "image/png";
            Be.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicArrowLeft";
            Ce.resourceType = "image/png";
            Ce.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicArrowRight";
            Zd.resourceType =
                "image/png";
            Zd.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicCloseButton";
            $d.resourceType = "image/png";
            $d.resourceName = "__ASSET__:bitmap_flixel_system_debug_GraphicInteractive";
            zg._tooltips = [];
            ae.resourceType = "image/png";
            ae.resourceName = "__ASSET__:bitmap_flixel_system_debug__Window_GraphicWindowHandle";
            Ed.WINDOW_AMOUNT = 0;
            Ee.resourceType = "image/png";
            Ee.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Eraser_GraphicEraserTool";
            Fd.resourceType = "image/png";
            Fd.resourceName =
                "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Mover_GraphicMoverTool";
            Gd.resourceType = "image/png";
            Gd.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools_GraphicCursorCross";
            be.resourceType = "image/png";
            be.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformTool";
            ce.resourceType = "image/png";
            ce.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorDefault";
            de.resourceType = "image/png";
            de.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleY";
            ee.resourceType = "image/png";
            ee.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleX";
            fe.resourceType = "image/png";
            fe.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleXY";
            ge.resourceType = "image/png";
            ge.resourceName = "__ASSET__:bitmap_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorRotate";
            Fe.resourceType = "image/png";
            Fe.resourceName = "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMinimizeButton";
            Ge.resourceType = "image/png";
            Ge.resourceName = "__ASSET__:bitmap_flixel_system_debug_stats__Stats_GraphicMaximizeButton";
            mc.ELASTIC_PERIOD = .4;
            Pb.colorLookup = function(a) {
                a = new aa;
                a.h.TRANSPARENT = 0;
                a.h.WHITE = -1;
                a.h.GRAY = -8355712;
                a.h.BLACK = -16777216;
                a.h.GREEN = -16744448;
                a.h.LIME = -16711936;
                a.h.YELLOW = -256;
                a.h.ORANGE = -23296;
                a.h.RED = -65536;
                a.h.PURPLE = -8388480;
                a.h.BLUE = -16776961;
                a.h.BROWN = -7650029;
                a.h.PINK = -16181;
                a.h.MAGENTA = -65281;
                a.h.CYAN = -16711681;
                return a
            }(this);
            Pb.COLOR_REGEX = new ya("^(0x|#)(([A-F0-9]{2}){3,4})$", "i");
            rc._point = function(a) {
                a = X._pool.get().set(0, 0);
                a._inPool = !1;
                return a
            }(this);
            Ff.flashGfxSprite = new Z;
            Ff.flashGfx = Ff.flashGfxSprite.get_graphics();
            Xb._pool = new gj(Xb);
            hd.USE_CACHE = !1;
            hd.USE_ENUM_INDEX = !1;
            hd.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
            Xc.DEFAULT_RESOLVER = new ij;
            Xc.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
            Ue.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            Ue.BYTES = bb.ofString(Ue.CHARS);
            sf.escapes = function(a) {
                a = new aa;
                a.h.lt = "<";
                a.h.gt = ">";
                a.h.amp = "&";
                a.h.quot = '"';
                a.h.apos = "'";
                return a
            }(this);
            Ic.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1];
            Ic.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];
            Ic.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1];
            Ic.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];
            Ic.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
            Ea.onCoreReady = new Ve;
            Ea.urlParser = new ya("^(?:http[s]?://)?([^:/\\s]+)(:[0-9]+)?((?:/\\w+)*/)([\\w\\-\\.]+[^#?\\s]+)([^#\\s]*)?(#[\\w\\-]+)?$", "i");
            ra.activeRequests = 0;
            ra.requestLimit = 17;
            ra.requestQueue = new Wa;
            Ka.dummyCharacter = "\u007f";
            Ka.windowID = 0;
            We.DICTIONARY = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
            We.EXTENDED_DICTIONARY = function(a) {
                a = [];
                for (var b = 0, c = We.DICTIONARY; b < c.length;) {
                    var d = c[b];
                    ++b;
                    for (var e = 0, f = We.DICTIONARY; e < f.length;) {
                        var k = f[e];
                        ++e;
                        a.push(d + k)
                    }
                }
                return a
            }(this);
            ab.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
            sc.onUpdate = new $b;
            wd.sensorByID = new Tb;
            wd.sensors = [];
            ac.devices = new Tb;
            ac.onConnect = new pl;
            Ub.devices = new Tb;
            Ub.onConnect = new ql;
            uc.onCancel = new Fg;
            uc.onEnd = new Fg;
            uc.onMove = new Fg;
            uc.onStart = new Fg;
            qa.cache = new ul;
            qa.onChange = new $b;
            qa.bundlePaths = new aa;
            qa.libraries = new aa;
            qa.libraryPaths = new aa;
            Aa.throwErrors = !0;
            Zf.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Jj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Ke.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Kj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            hg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            ig.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    toJSON: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Sc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Na.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Na.__regexAlign = new ya("align\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexBreakTag = new ya("<br\\s*/?>", "gi");
            Na.__regexBlockIndent = new ya("blockindent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexColor = new ya("color\\s?=\\s?(\"#([^\"]+)\"|'#([^']+)')", "i");
            Na.__regexEntities = [new ya("&quot;", "g"), new ya("&apos;", "g"), new ya("&amp;", "g"), new ya("&lt;", "g"), new ya("&gt;", "g"), new ya("&nbsp;", "g")];
            Na.__regexFace = new ya("face\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexHTMLTag = new ya("<.*?>", "g");
            Na.__regexHref = new ya("href\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
                "i");
            Na.__regexIndent = new ya(" indent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexLeading = new ya("leading\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexLeftMargin = new ya("leftmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexRightMargin = new ya("rightmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexSize = new ya("size\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            Na.__regexTabStops = new ya("tabstops\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
            $f.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    touch: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            $f.__pool = new mb(function() {
                return new $f
            }, function(a) {
                a.reset()
            });
            Rg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Zc.__meta__ = {
                fields: {
                    __context: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __type: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Lj.__meta__ = {
                fields: {
                    cairo: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __matrix3: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    applyMatrix: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __setBlendModeCairo: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Le.__meta__ = {
                fields: {
                    context: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    applySmoothing: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    setTransform: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __setBlendModeContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Gg.__meta__ = {
                fields: {
                    element: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            ad.__meta__ = {
                fields: {
                    overrideBlendMode: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            Xe.__meta__ = {
                statics: {
                    create: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                },
                fields: {
                    parameters: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Xe.__rootURL = "undefined" != typeof window ? window.document.URL : "";
            Oa.__meta__ = {
                fields: {
                    gl: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __gl: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __matrix: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __projection: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __projectionFlipped: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Oa.__alphaValue = [1];
            Oa.__colorMultipliersValue = [0, 0, 0, 0];
            Oa.__colorOffsetsValue = [0, 0, 0, 0];
            Oa.__emptyColorValue = [0, 0, 0, 0];
            Oa.__hasColorTransformValue = [!1];
            Oa.__scissorRectangle = new fa;
            Oa.__textureSizeValue = [0, 0];
            Rh.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    onComplete: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Pj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ci.__meta__ = {
                fields: {
                    index: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    name: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            sg.__meta__ = {
                fields: {
                    index: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    name: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            Kg.__meta__ = {
                fields: {
                    __broadcastEvent: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __dispatchEvent: {
                        SuppressWarnings: [
                            ["checkstyle:Dynamic", "checkstyle:LeftCurly"]
                        ]
                    },
                    __dispatchStack: {
                        SuppressWarnings: [
                            ["checkstyle:Dynamic", "checkstyle:LeftCurly"]
                        ]
                    },
                    __dispatchTarget: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __handleError: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            gg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    _: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            $c.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    o: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            $c.empty = new $c;
            v.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                statics: {
                    windingRule: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    createBitmapFill: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    createGradientPattern: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            v.fillCommands =
                new $c;
            v.strokeCommands = new $c;
            N.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            nf.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Tj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ab.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Ab.blankBitmapData = new H(1, 1, !1, 0);
            Ab.tempColorTransform = new wb(1, 1, 1, 1, 0, 0, 0, 0);
            Jg.opaqueBitmapData = new H(1, 1, !1, 0); of .__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Jh.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Bc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            nk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Qf.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Wb.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Wb.__regexColor = new ya("color=(\"#([^\"]+)\"|'#([^']+)')", "i");
            Wb.__regexFace = new ya("face=(\"([^\"]+)\"|'([^']+)')", "i");
            Wb.__regexFont = new ya("<font ([^>]+)>", "gi");
            Wb.__regexCloseFont = new ya("</font>", "gi");
            Wb.__regexSize = new ya("size=(\"([^\"]+)\"|'([^']+)')",
                "i");
            Ze.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            cg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Nj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                },
                fields: {
                    overrideIntValues: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            db.__glDepthStencil = -1;
            db.__glMaxTextureMaxAnisotropy = -1;
            db.__glMaxViewportDims = -1;
            db.__glMemoryCurrentAvailable = -1;
            db.__glMemoryTotalAvailable = -1;
            db.__glTextureMaxAnisotropy = -1;
            Wj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Mh.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Kh.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Jc.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Jc.limitedProfile = !0;
            Lg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Xj.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Mg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            eg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            jb.__meta__ = {
                fields: {
                    __textureContext: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    },
                    __getGLFramebuffer: {
                        SuppressWarnings: ["checkstyle:Dynamic"]
                    }
                }
            };
            Tg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Sg.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            gf.__meta__ = {
                fields: {
                    clone: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            td.__soundChannels = [];
            td.__soundTransform = new gf;
            Cc.defaultObjectEncoding = 10;
            Lf.followRedirects = !0;
            Lf.idleTimeout = 0;
            Lf.manageCookies = !1;
            Bb.currentX = 0;
            Bb.currentY =
                1;
            Bb.currentZ = 0;
            Bb.defaultInterval = 34;
            Bb.initialized = !1;
            Bb.supported = !1;
            Hg.currentDomain = new Hg(null);
            nc.__meta__ = {
                fields: {
                    clone: {
                        SuppressWarnings: ["checkstyle:FieldDocComment"]
                    }
                }
            };
            lb.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            dk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            hc.__cursor = "auto";
            ba.__meta__ = {
                obj: {
                    SuppressWarnings: [
                        ["checkstyle:ConstantName", "checkstyle:FieldDocComment"]
                    ]
                }
            };
            ba.OPMAP = new aa;
            ba.REGMAP = new aa;
            ba.SAMPLEMAP = new aa;
            ba.initialized = !1;
            Ya.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            ud.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            Cb.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            ta.cache = new fk;
            ta.dispatcher = new ua;
            gk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            hk.__meta__ = {
                obj: {
                    SuppressWarnings: ["checkstyle:FieldDocComment"]
                }
            };
            vb.main()
        })("undefined" != typeof t ? t : "undefined" != typeof window ? window : "undefined" != typeof self ? self : this, "undefined" != typeof window ?
            window : "undefined" != typeof E ? E : "undefined" != typeof self ? self : this)
    };
    O.lime.embed = function(C) {
        var E = {},
            z = O.lime.$scripts[C];
        if (!z) throw Error('Cannot find project name "' + C + '"');
        z(E, t);
        for (var T in E) O[T] = O[T] || E[T];
        (z = E.lime || window.lime) && z.embed && this != z.embed && z.embed.apply(z, arguments);
        return E
    };
    "function" == typeof define && define.amd && (define([], function() {
        return O.lime
    }), define.__amd = define.amd, define.amd = null)
})("undefined" != typeof exports ? exports : "function" == typeof define && define.amd ? {} : "undefined" !=
    typeof window ? window : "undefined" != typeof self ? self : this, "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this);
! function() {
    var O = function() {
        this.init()
    };
    O.prototype = {
        init: function() {
            var h = this || t;
            return h._counter = 1E3, h._html5AudioPool = [], h.html5PoolSize = 10, h._codecs = {}, h._howls = [], h._muted = !1, h._volume = 1, h._canPlayEvent = "canplaythrough", h._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, h.masterGain = null, h.noAudio = !1, h.usingWebAudio = !0, h.autoSuspend = !0, h.ctx = null, h.autoUnlock = !0, h._setup(), h
        },
        volume: function(h) {
            var n = this || t;
            if (h = parseFloat(h), n.ctx || g(), void 0 !== h && 0 <= h && 1 >=
                h) {
                if (n._volume = h, n._muted) return n;
                n.usingWebAudio && n.masterGain.gain.setValueAtTime(h, t.ctx.currentTime);
                for (var r = 0; r < n._howls.length; r++)
                    if (!n._howls[r]._webAudio)
                        for (var ma = n._howls[r]._getSoundIds(), L = 0; L < ma.length; L++) {
                            var J = n._howls[r]._soundById(ma[L]);
                            J && J._node && (J._node.volume = J._volume * h)
                        }
                return n
            }
            return n._volume
        },
        mute: function(h) {
            var n = this || t;
            n.ctx || g();
            n._muted = h;
            n.usingWebAudio && n.masterGain.gain.setValueAtTime(h ? 0 : n._volume, t.ctx.currentTime);
            for (var r = 0; r < n._howls.length; r++)
                if (!n._howls[r]._webAudio)
                    for (var ma =
                            n._howls[r]._getSoundIds(), L = 0; L < ma.length; L++) {
                        var J = n._howls[r]._soundById(ma[L]);
                        J && J._node && (J._node.muted = !!h || J._muted)
                    }
            return n
        },
        unload: function() {
            for (var h = this || t, n = h._howls.length - 1; 0 <= n; n--) h._howls[n].unload();
            return h.usingWebAudio && h.ctx && void 0 !== h.ctx.close && (h.ctx.close(), h.ctx = null, g()), h
        },
        codecs: function(h) {
            return (this || t)._codecs[h.replace(/^x-/, "")]
        },
        _setup: function() {
            var h = this || t;
            if (h.state = h.ctx ? h.ctx.state || "suspended" : "suspended", h._autoSuspend(), !h.usingWebAudio)
                if ("undefined" !=
                    typeof Audio) try {
                    var g = new Audio;
                    void 0 === g.oncanplaythrough && (h._canPlayEvent = "canplay")
                } catch (x) {
                    h.noAudio = !0
                } else h.noAudio = !0;
            try {
                g = new Audio, g.muted && (h.noAudio = !0)
            } catch (x) {}
            return h.noAudio || h._setupCodecs(), h
        },
        _setupCodecs: function() {
            var h = this || t,
                g = null;
            try {
                g = "undefined" != typeof Audio ? new Audio : null
            } catch (L) {
                return h
            }
            if (!g || "function" != typeof g.canPlayType) return h;
            var n = g.canPlayType("audio/mpeg;").replace(/^no$/, ""),
                r = h._navigator && h._navigator.userAgent.match(/OPR\/([0-6].)/g);
            r = r && 33 >
                parseInt(r[0].split("/")[1], 10);
            return h._codecs = {
                mp3: !(r || !n && !g.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!n,
                opus: !!g.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!g.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                oga: !!g.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!g.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!g.canPlayType("audio/aac;").replace(/^no$/, ""),
                caf: !!g.canPlayType("audio/x-caf;").replace(/^no$/, ""),
                m4a: !!(g.canPlayType("audio/x-m4a;") ||
                    g.canPlayType("audio/m4a;") || g.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(g.canPlayType("audio/x-mp4;") || g.canPlayType("audio/mp4;") || g.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!g.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!g.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                dolby: !!g.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
                flac: !!(g.canPlayType("audio/x-flac;") || g.canPlayType("audio/flac;")).replace(/^no$/, "")
            }, h
        },
        _unlockAudio: function() {
            var h =
                this || t,
                g = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome|Safari/i.test(h._navigator && h._navigator.userAgent);
            if (!h._audioUnlocked && h.ctx && g) {
                h._audioUnlocked = !1;
                h.autoUnlock = !1;
                h._mobileUnloaded || 44100 === h.ctx.sampleRate || (h._mobileUnloaded = !0, h.unload());
                h._scratchBuffer = h.ctx.createBuffer(1, 1, 22050);
                var n = function(g) {
                    for (g = 0; g < h.html5PoolSize; g++) {
                        var r = new Audio;
                        r._unlocked = !0;
                        h._releaseHtml5Audio(r)
                    }
                    for (g = 0; g < h._howls.length; g++)
                        if (!h._howls[g]._webAudio) {
                            r = h._howls[g]._getSoundIds();
                            for (var x = 0; x < r.length; x++) {
                                var w = h._howls[g]._soundById(r[x]);
                                w && w._node && !w._node._unlocked && (w._node._unlocked = !0, w._node.load())
                            }
                        }
                    h._autoResume();
                    var t = h.ctx.createBufferSource();
                    t.buffer = h._scratchBuffer;
                    t.connect(h.ctx.destination);
                    void 0 === t.start ? t.noteOn(0) : t.start(0);
                    "function" == typeof h.ctx.resume && h.ctx.resume();
                    t.onended = function() {
                        t.disconnect(0);
                        h._audioUnlocked = !0;
                        document.removeEventListener("touchstart", n, !0);
                        document.removeEventListener("touchend", n, !0);
                        document.removeEventListener("click",
                            n, !0);
                        for (var g = 0; g < h._howls.length; g++) h._howls[g]._emit("unlock")
                    }
                };
                return document.addEventListener("touchstart", n, !0), document.addEventListener("touchend", n, !0), document.addEventListener("click", n, !0), h
            }
        },
        _obtainHtml5Audio: function() {
            var h = this || t;
            if (h._html5AudioPool.length) return h._html5AudioPool.pop();
            h = (new Audio).play();
            return h && "undefined" != typeof Promise && (h instanceof Promise || "function" == typeof h.then) && h.catch(function() {
                    console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")
                }),
                new Audio
        },
        _releaseHtml5Audio: function(h) {
            var g = this || t;
            return h._unlocked && g._html5AudioPool.push(h), g
        },
        _autoSuspend: function() {
            var h = this;
            if (h.autoSuspend && h.ctx && void 0 !== h.ctx.suspend && t.usingWebAudio) {
                for (var g = 0; g < h._howls.length; g++)
                    if (h._howls[g]._webAudio)
                        for (var n = 0; n < h._howls[g]._sounds.length; n++)
                            if (!h._howls[g]._sounds[n]._paused) return h;
                return h._suspendTimer && clearTimeout(h._suspendTimer), h._suspendTimer = setTimeout(function() {
                    h.autoSuspend && (h._suspendTimer = null, h.state = "suspending",
                        h.ctx.suspend().then(function() {
                            h.state = "suspended";
                            h._resumeAfterSuspend && (delete h._resumeAfterSuspend, h._autoResume())
                        }))
                }, 3E4), h
            }
        },
        _autoResume: function() {
            var h = this;
            if (h.ctx && void 0 !== h.ctx.resume && t.usingWebAudio) return "running" === h.state && h._suspendTimer ? (clearTimeout(h._suspendTimer), h._suspendTimer = null) : "suspended" === h.state ? (h.ctx.resume().then(function() {
                h.state = "running";
                for (var g = 0; g < h._howls.length; g++) h._howls[g]._emit("resume")
            }), h._suspendTimer && (clearTimeout(h._suspendTimer), h._suspendTimer =
                null)) : "suspending" === h.state && (h._resumeAfterSuspend = !0), h
        }
    };
    var t = new O,
        C = function(h) {
            if (!h.src || 0 === h.src.length) return void console.error("An array of source files must be passed with any new Howl.");
            this.init(h)
        };
    C.prototype = {
        init: function(h) {
            var n = this;
            return t.ctx || g(), n._autoplay = h.autoplay || !1, n._format = "string" != typeof h.format ? h.format : [h.format], n._html5 = h.html5 || !1, n._muted = h.mute || !1, n._loop = h.loop || !1, n._pool = h.pool || 5, n._preload = "boolean" != typeof h.preload || h.preload, n._rate = h.rate ||
                1, n._sprite = h.sprite || {}, n._src = "string" != typeof h.src ? h.src : [h.src], n._volume = void 0 !== h.volume ? h.volume : 1, n._xhrWithCredentials = h.xhrWithCredentials || !1, n._duration = 0, n._state = "unloaded", n._sounds = [], n._endTimers = {}, n._queue = [], n._playLock = !1, n._onend = h.onend ? [{
                    fn: h.onend
                }] : [], n._onfade = h.onfade ? [{
                    fn: h.onfade
                }] : [], n._onload = h.onload ? [{
                    fn: h.onload
                }] : [], n._onloaderror = h.onloaderror ? [{
                    fn: h.onloaderror
                }] : [], n._onplayerror = h.onplayerror ? [{
                    fn: h.onplayerror
                }] : [], n._onpause = h.onpause ? [{
                    fn: h.onpause
                }] : [],
                n._onplay = h.onplay ? [{
                    fn: h.onplay
                }] : [], n._onstop = h.onstop ? [{
                    fn: h.onstop
                }] : [], n._onmute = h.onmute ? [{
                    fn: h.onmute
                }] : [], n._onvolume = h.onvolume ? [{
                    fn: h.onvolume
                }] : [], n._onrate = h.onrate ? [{
                    fn: h.onrate
                }] : [], n._onseek = h.onseek ? [{
                    fn: h.onseek
                }] : [], n._onunlock = h.onunlock ? [{
                    fn: h.onunlock
                }] : [], n._onresume = [], n._webAudio = t.usingWebAudio && !n._html5, void 0 !== t.ctx && t.ctx && t.autoUnlock && t._unlockAudio(), t._howls.push(n), n._autoplay && n._queue.push({
                    event: "play",
                    action: function() {
                        n.play()
                    }
                }), n._preload && n.load(), n
        },
        load: function() {
            var h =
                null;
            if (t.noAudio) return void this._emit("loaderror", null, "No audio support.");
            "string" == typeof this._src && (this._src = [this._src]);
            for (var g = 0; g < this._src.length; g++) {
                var n;
                if (this._format && this._format[g]) var r = this._format[g];
                else {
                    if ("string" != typeof(n = this._src[g])) {
                        this._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                        continue
                    }(r = /^data:audio\/([^;,]+);/i.exec(n)) || (r = /\.([^.]+)$/.exec(n.split("?", 1)[0]));
                    r && (r = r[1].toLowerCase())
                }
                if (r || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
                    r && t.codecs(r)) {
                    h = this._src[g];
                    break
                }
            }
            return h ? (this._src = h, this._state = "loading", "https:" === window.location.protocol && "http:" === h.slice(0, 5) && (this._html5 = !0, this._webAudio = !1), new E(this), this._webAudio && T(this), this) : void this._emit("loaderror", null, "No codec support for selected audio sources.")
        },
        play: function(h, g) {
            var n = this,
                r = null;
            if ("number" == typeof h) r = h, h = null;
            else {
                if ("string" == typeof h && "loaded" === n._state && !n._sprite[h]) return null;
                if (void 0 === h && (h = "__default", !n._playLock)) {
                    for (var w =
                            0, J = 0; J < n._sounds.length; J++) n._sounds[J]._paused && !n._sounds[J]._ended && (w++, r = n._sounds[J]._id);
                    1 === w ? h = null : r = null
                }
            }
            var z = r ? n._soundById(r) : n._inactiveSound();
            if (!z) return null;
            if (r && !h && (h = z._sprite || "__default"), "loaded" !== n._state) {
                z._sprite = h;
                z._ended = !1;
                var C = z._id;
                return n._queue.push({
                    event: "play",
                    action: function() {
                        n.play(C)
                    }
                }), C
            }
            if (r && !z._paused) return g || n._loadQueue("play"), z._id;
            n._webAudio && t._autoResume();
            var E = Math.max(0, 0 < z._seek ? z._seek : n._sprite[h][0] / 1E3),
                O = Math.max(0, (n._sprite[h][0] +
                    n._sprite[h][1]) / 1E3 - E),
                T = 1E3 * O / Math.abs(z._rate),
                G = n._sprite[h][0] / 1E3,
                ha = (n._sprite[h][0] + n._sprite[h][1]) / 1E3,
                pb = !(!z._loop && !n._sprite[h][2]);
            z._sprite = h;
            z._ended = !1;
            var da = function() {
                z._paused = !1;
                z._seek = E;
                z._start = G;
                z._stop = ha;
                z._loop = pb
            };
            if (E >= ha) return void n._ended(z);
            var Ba = z._node;
            if (n._webAudio) r = function() {
                n._playLock = !1;
                da();
                n._refreshBuffer(z);
                Ba.gain.setValueAtTime(z._muted || n._muted ? 0 : z._volume, t.ctx.currentTime);
                z._playStart = t.ctx.currentTime;
                void 0 === Ba.bufferSource.start ? z._loop ?
                    Ba.bufferSource.noteGrainOn(0, E, 86400) : Ba.bufferSource.noteGrainOn(0, E, O) : z._loop ? Ba.bufferSource.start(0, E, 86400) : Ba.bufferSource.start(0, E, O);
                T !== 1 / 0 && (n._endTimers[z._id] = setTimeout(n._ended.bind(n, z), T));
                g || setTimeout(function() {
                    n._emit("play", z._id);
                    n._loadQueue()
                }, 0)
            }, "running" === t.state ? r() : (n._playLock = !0, n.once("resume", r), n._clearTimer(z._id));
            else {
                var hb = function() {
                    Ba.currentTime = E;
                    Ba.muted = z._muted || n._muted || t._muted || Ba.muted;
                    Ba.volume = z._volume * t.volume();
                    Ba.playbackRate = z._rate;
                    try {
                        var r =
                            Ba.play();
                        if (r && "undefined" != typeof Promise && (r instanceof Promise || "function" == typeof r.then) ? (n._playLock = !0, da(), r.then(function() {
                                n._playLock = !1;
                                Ba._unlocked = !0;
                                g || (n._emit("play", z._id), n._loadQueue())
                            }).catch(function() {
                                n._playLock = !1;
                                n._emit("playerror", z._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                                z._ended = !0;
                                z._paused = !0
                            })) : g || (n._playLock = !1, da(), n._emit("play", z._id), n._loadQueue()), Ba.playbackRate =
                            z._rate, Ba.paused) return void n._emit("playerror", z._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                        "__default" !== h || z._loop ? n._endTimers[z._id] = setTimeout(n._ended.bind(n, z), T) : (n._endTimers[z._id] = function() {
                            n._ended(z);
                            Ba.removeEventListener("ended", n._endTimers[z._id], !1)
                        }, Ba.addEventListener("ended", n._endTimers[z._id], !1))
                    } catch (vb) {
                        n._emit("playerror", z._id, vb)
                    }
                };
                r = window && window.ejecta || !Ba.readyState &&
                    t._navigator.isCocoonJS;
                if (3 <= Ba.readyState || r) hb();
                else {
                    n._playLock = !0;
                    var va = function() {
                        hb();
                        Ba.removeEventListener(t._canPlayEvent, va, !1)
                    };
                    Ba.addEventListener(t._canPlayEvent, va, !1);
                    n._clearTimer(z._id)
                }
            }
            return z._id
        },
        pause: function(h, g) {
            var n = this;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "pause",
                action: function() {
                    n.pause(h)
                }
            }), n;
            for (var r = n._getSoundIds(h), w = 0; w < r.length; w++) {
                n._clearTimer(r[w]);
                var t = n._soundById(r[w]);
                if (t && !t._paused && (t._seek = n.seek(r[w]), t._rateSeek =
                        0, t._paused = !0, n._stopFade(r[w]), t._node))
                    if (n._webAudio) {
                        if (!t._node.bufferSource) continue;
                        void 0 === t._node.bufferSource.stop ? t._node.bufferSource.noteOff(0) : t._node.bufferSource.stop(0);
                        n._cleanBuffer(t._node)
                    } else isNaN(t._node.duration) && t._node.duration !== 1 / 0 || t._node.pause();
                g || n._emit("pause", t ? t._id : null)
            }
            return n
        },
        stop: function(h, g) {
            var n = this;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "stop",
                action: function() {
                    n.stop(h)
                }
            }), n;
            for (var r = n._getSoundIds(h), w = 0; w < r.length; w++) {
                n._clearTimer(r[w]);
                var t = n._soundById(r[w]);
                t && (t._seek = t._start || 0, t._rateSeek = 0, t._paused = !0, t._ended = !0, n._stopFade(r[w]), t._node && (n._webAudio ? t._node.bufferSource && (void 0 === t._node.bufferSource.stop ? t._node.bufferSource.noteOff(0) : t._node.bufferSource.stop(0), n._cleanBuffer(t._node)) : isNaN(t._node.duration) && t._node.duration !== 1 / 0 || (t._node.currentTime = t._start || 0, t._node.pause())), g || n._emit("stop", t._id))
            }
            return n
        },
        mute: function(h, g) {
            var n = this;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "mute",
                action: function() {
                    n.mute(h, g)
                }
            }), n;
            if (void 0 === g) {
                if ("boolean" != typeof h) return n._muted;
                n._muted = h
            }
            for (var r = n._getSoundIds(g), w = 0; w < r.length; w++) {
                var z = n._soundById(r[w]);
                z && (z._muted = h, z._interval && n._stopFade(z._id), n._webAudio && z._node ? z._node.gain.setValueAtTime(h ? 0 : z._volume, t.ctx.currentTime) : z._node && (z._node.muted = !!t._muted || h), n._emit("mute", z._id))
            }
            return n
        },
        volume: function() {
            var h, g, n = this,
                r = arguments;
            if (0 === r.length) return n._volume;
            1 === r.length || 2 === r.length && void 0 === r[1] ? 0 <= n._getSoundIds().indexOf(r[0]) ?
                g = parseInt(r[0], 10) : h = parseFloat(r[0]) : 2 <= r.length && (h = parseFloat(r[0]), g = parseInt(r[1], 10));
            var z;
            if (!(void 0 !== h && 0 <= h && 1 >= h)) return z = g ? n._soundById(g) : n._sounds[0], z ? z._volume : 0;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "volume",
                action: function() {
                    n.volume.apply(n, r)
                }
            }), n;
            void 0 === g && (n._volume = h);
            g = n._getSoundIds(g);
            for (var J = 0; J < g.length; J++)(z = n._soundById(g[J])) && (z._volume = h, r[2] || n._stopFade(g[J]), n._webAudio && z._node && !z._muted ? z._node.gain.setValueAtTime(h, t.ctx.currentTime) :
                z._node && !z._muted && (z._node.volume = h * t.volume()), n._emit("volume", z._id));
            return n
        },
        fade: function(h, g, n, r) {
            var w = this;
            if ("loaded" !== w._state || w._playLock) return w._queue.push({
                event: "fade",
                action: function() {
                    w.fade(h, g, n, r)
                }
            }), w;
            h = parseFloat(h);
            g = parseFloat(g);
            n = parseFloat(n);
            w.volume(h, r);
            for (var x = w._getSoundIds(r), z = 0; z < x.length; z++) {
                var C = w._soundById(x[z]);
                if (C) {
                    if (r || w._stopFade(x[z]), w._webAudio && !C._muted) {
                        var E = t.ctx.currentTime,
                            ma = E + n / 1E3;
                        C._volume = h;
                        C._node.gain.setValueAtTime(h, E);
                        C._node.gain.linearRampToValueAtTime(g,
                            ma)
                    }
                    w._startFadeInterval(C, h, g, n, x[z], void 0 === r)
                }
            }
            return w
        },
        _startFadeInterval: function(h, g, n, r, t, z) {
            var w = this,
                x = g,
                J = n - g;
            t = Math.abs(J / .01);
            t = Math.max(4, 0 < t ? r / t : r);
            var L = Date.now();
            h._fadeTo = n;
            h._interval = setInterval(function() {
                var t = (Date.now() - L) / r;
                L = Date.now();
                x += J * t;
                x = Math.max(0, x);
                x = Math.min(1, x);
                x = Math.round(100 * x) / 100;
                w._webAudio ? h._volume = x : w.volume(x, h._id, !0);
                z && (w._volume = x);
                (n < g && x <= n || n > g && x >= n) && (clearInterval(h._interval), h._interval = null, h._fadeTo = null, w.volume(n, h._id), w._emit("fade",
                    h._id))
            }, t)
        },
        _stopFade: function(h) {
            var g = this._soundById(h);
            return g && g._interval && (this._webAudio && g._node.gain.cancelScheduledValues(t.ctx.currentTime), clearInterval(g._interval), g._interval = null, this.volume(g._fadeTo, h), g._fadeTo = null, this._emit("fade", h)), this
        },
        loop: function() {
            var h, g, n, r = arguments;
            if (0 === r.length) return this._loop;
            if (1 === r.length) {
                if ("boolean" != typeof r[0]) return !!(n = this._soundById(parseInt(r[0], 10))) && n._loop;
                this._loop = h = r[0]
            } else 2 === r.length && (h = r[0], g = parseInt(r[1], 10));
            g = this._getSoundIds(g);
            for (r = 0; r < g.length; r++)(n = this._soundById(g[r])) && (n._loop = h, this._webAudio && n._node && n._node.bufferSource && (n._node.bufferSource.loop = h, h && (n._node.bufferSource.loopStart = n._start || 0, n._node.bufferSource.loopEnd = n._stop)));
            return this
        },
        rate: function() {
            var h, g, n = this,
                r = arguments;
            0 === r.length ? g = n._sounds[0]._id : 1 === r.length ? 0 <= n._getSoundIds().indexOf(r[0]) ? g = parseInt(r[0], 10) : h = parseFloat(r[0]) : 2 === r.length && (h = parseFloat(r[0]), g = parseInt(r[1], 10));
            var z;
            if ("number" != typeof h) return z =
                n._soundById(g), z ? z._rate : n._rate;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "rate",
                action: function() {
                    n.rate.apply(n, r)
                }
            }), n;
            void 0 === g && (n._rate = h);
            g = n._getSoundIds(g);
            for (var J = 0; J < g.length; J++)
                if (z = n._soundById(g[J])) {
                    n.playing(g[J]) && (z._rateSeek = n.seek(g[J]), z._playStart = n._webAudio ? t.ctx.currentTime : z._playStart);
                    z._rate = h;
                    n._webAudio && z._node && z._node.bufferSource ? z._node.bufferSource.playbackRate.setValueAtTime(h, t.ctx.currentTime) : z._node && (z._node.playbackRate = h);
                    var C =
                        n.seek(g[J]);
                    C = 1E3 * ((n._sprite[z._sprite][0] + n._sprite[z._sprite][1]) / 1E3 - C) / Math.abs(z._rate);
                    !n._endTimers[g[J]] && z._paused || (n._clearTimer(g[J]), n._endTimers[g[J]] = setTimeout(n._ended.bind(n, z), C));
                    n._emit("rate", z._id)
                }
            return n
        },
        seek: function() {
            var h, g, n = this,
                r = arguments;
            0 === r.length ? g = n._sounds[0]._id : 1 === r.length ? 0 <= n._getSoundIds().indexOf(r[0]) ? g = parseInt(r[0], 10) : n._sounds.length && (g = n._sounds[0]._id, h = parseFloat(r[0])) : 2 === r.length && (h = parseFloat(r[0]), g = parseInt(r[1], 10));
            if (void 0 === g) return n;
            if ("loaded" !== n._state || n._playLock) return n._queue.push({
                event: "seek",
                action: function() {
                    n.seek.apply(n, r)
                }
            }), n;
            var z = n._soundById(g);
            if (z) {
                if (!("number" == typeof h && 0 <= h)) return n._webAudio ? (h = n.playing(g) ? t.ctx.currentTime - z._playStart : 0, z._seek + ((z._rateSeek ? z._rateSeek - z._seek : 0) + h * Math.abs(z._rate))) : z._node.currentTime;
                var J = n.playing(g);
                J && n.pause(g, !0);
                z._seek = h;
                z._ended = !1;
                n._clearTimer(g);
                n._webAudio || !z._node || isNaN(z._node.duration) || (z._node.currentTime = h);
                var C = function() {
                    n._emit("seek",
                        g);
                    J && n.play(g, !0)
                };
                if (J && !n._webAudio) {
                    var E = function() {
                        n._playLock ? setTimeout(E, 0) : C()
                    };
                    setTimeout(E, 0)
                } else C()
            }
            return n
        },
        playing: function(h) {
            if ("number" == typeof h) return h = this._soundById(h), !!h && !h._paused;
            for (h = 0; h < this._sounds.length; h++)
                if (!this._sounds[h]._paused) return !0;
            return !1
        },
        duration: function(h) {
            var g = this._duration;
            h = this._soundById(h);
            return h && (g = this._sprite[h._sprite][1] / 1E3), g
        },
        state: function() {
            return this._state
        },
        unload: function() {
            for (var h = this._sounds, g = 0; g < h.length; g++)(h[g]._paused ||
                this.stop(h[g]._id), this._webAudio) || (/MSIE |Trident\//.test(t._navigator && t._navigator.userAgent) || (h[g]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"), h[g]._node.removeEventListener("error", h[g]._errorFn, !1), h[g]._node.removeEventListener(t._canPlayEvent, h[g]._loadFn, !1), t._releaseHtml5Audio(h[g]._node)), delete h[g]._node, this._clearTimer(h[g]._id);
            g = t._howls.indexOf(this);
            0 <= g && t._howls.splice(g, 1);
            h = !0;
            for (g = 0; g < t._howls.length; g++)
                if (t._howls[g]._src ===
                    this._src || 0 <= this._src.indexOf(t._howls[g]._src)) {
                    h = !1;
                    break
                }
            return z && h && delete z[this._src], t.noAudio = !1, this._state = "unloaded", this._sounds = [], null
        },
        on: function(h, g, n, r) {
            h = this["_on" + h];
            return "function" == typeof g && h.push(r ? {
                id: n,
                fn: g,
                once: r
            } : {
                id: n,
                fn: g
            }), this
        },
        off: function(h, g, n) {
            var r = this["_on" + h];
            if ("number" == typeof g && (n = g, g = null), g || n)
                for (h = 0; h < r.length; h++) {
                    var w = n === r[h].id;
                    if (g === r[h].fn && w || !g && w) {
                        r.splice(h, 1);
                        break
                    }
                } else if (h) this["_on" + h] = [];
                else
                    for (g = Object.keys(this), h = 0; h < g.length; h++) 0 ===
                        g[h].indexOf("_on") && Array.isArray(this[g[h]]) && (this[g[h]] = []);
            return this
        },
        once: function(h, g, n) {
            return this.on(h, g, n, 1), this
        },
        _emit: function(h, g, n) {
            for (var r = this["_on" + h], w = r.length - 1; 0 <= w; w--) r[w].id && r[w].id !== g && "load" !== h || (setTimeout(function(h) {
                h.call(this, g, n)
            }.bind(this, r[w].fn), 0), r[w].once && this.off(h, r[w].fn, r[w].id));
            return this._loadQueue(h), this
        },
        _loadQueue: function(h) {
            if (0 < this._queue.length) {
                var g = this._queue[0];
                g.event === h && (this._queue.shift(), this._loadQueue());
                h || g.action()
            }
            return this
        },
        _ended: function(h) {
            var g = h._sprite;
            if (!this._webAudio && h._node && !h._node.paused && !h._node.ended && h._node.currentTime < h._stop) return setTimeout(this._ended.bind(this, h), 100), this;
            g = !(!h._loop && !this._sprite[g][2]);
            if (this._emit("end", h._id), !this._webAudio && g && this.stop(h._id, !0).play(h._id), this._webAudio && g) {
                this._emit("play", h._id);
                h._seek = h._start || 0;
                h._rateSeek = 0;
                h._playStart = t.ctx.currentTime;
                var n = 1E3 * (h._stop - h._start) / Math.abs(h._rate);
                this._endTimers[h._id] = setTimeout(this._ended.bind(this,
                    h), n)
            }
            return this._webAudio && !g && (h._paused = !0, h._ended = !0, h._seek = h._start || 0, h._rateSeek = 0, this._clearTimer(h._id), this._cleanBuffer(h._node), t._autoSuspend()), this._webAudio || g || this.stop(h._id, !0), this
        },
        _clearTimer: function(h) {
            if (this._endTimers[h]) {
                if ("function" != typeof this._endTimers[h]) clearTimeout(this._endTimers[h]);
                else {
                    var g = this._soundById(h);
                    g && g._node && g._node.removeEventListener("ended", this._endTimers[h], !1)
                }
                delete this._endTimers[h]
            }
            return this
        },
        _soundById: function(h) {
            for (var g =
                    0; g < this._sounds.length; g++)
                if (h === this._sounds[g]._id) return this._sounds[g];
            return null
        },
        _inactiveSound: function() {
            this._drain();
            for (var h = 0; h < this._sounds.length; h++)
                if (this._sounds[h]._ended) return this._sounds[h].reset();
            return new E(this)
        },
        _drain: function() {
            var h = this._pool,
                g = 0,
                n;
            if (!(this._sounds.length < h)) {
                for (n = 0; n < this._sounds.length; n++) this._sounds[n]._ended && g++;
                for (n = this._sounds.length - 1; 0 <= n && !(g <= h); n--) this._sounds[n]._ended && (this._webAudio && this._sounds[n]._node && this._sounds[n]._node.disconnect(0),
                    this._sounds.splice(n, 1), g--)
            }
        },
        _getSoundIds: function(h) {
            if (void 0 === h) {
                h = [];
                for (var g = 0; g < this._sounds.length; g++) h.push(this._sounds[g]._id);
                return h
            }
            return [h]
        },
        _refreshBuffer: function(h) {
            return h._node.bufferSource = t.ctx.createBufferSource(), h._node.bufferSource.buffer = z[this._src], h._panner ? h._node.bufferSource.connect(h._panner) : h._node.bufferSource.connect(h._node), h._node.bufferSource.loop = h._loop, h._loop && (h._node.bufferSource.loopStart = h._start || 0, h._node.bufferSource.loopEnd = h._stop || 0),
                h._node.bufferSource.playbackRate.setValueAtTime(h._rate, t.ctx.currentTime), this
        },
        _cleanBuffer: function(h) {
            var g = t._navigator && 0 <= t._navigator.vendor.indexOf("Apple");
            if (t._scratchBuffer && h.bufferSource && (h.bufferSource.onended = null, h.bufferSource.disconnect(0), g)) try {
                h.bufferSource.buffer = t._scratchBuffer
            } catch (x) {}
            return h.bufferSource = null, this
        }
    };
    var E = function(h) {
        this._parent = h;
        this.init()
    };
    E.prototype = {
        init: function() {
            var h = this._parent;
            return this._muted = h._muted, this._loop = h._loop, this._volume =
                h._volume, this._rate = h._rate, this._seek = 0, this._paused = !0, this._ended = !0, this._sprite = "__default", this._id = ++t._counter, h._sounds.push(this), this.create(), this
        },
        create: function() {
            var h = this._parent,
                g = t._muted || this._muted || this._parent._muted ? 0 : this._volume;
            return h._webAudio ? (this._node = void 0 === t.ctx.createGain ? t.ctx.createGainNode() : t.ctx.createGain(), this._node.gain.setValueAtTime(g, t.ctx.currentTime), this._node.paused = !0, this._node.connect(t.masterGain)) : (this._node = t._obtainHtml5Audio(), this._errorFn =
                this._errorListener.bind(this), this._node.addEventListener("error", this._errorFn, !1), this._loadFn = this._loadListener.bind(this), this._node.addEventListener(t._canPlayEvent, this._loadFn, !1), this._node.src = h._src, this._node.preload = "auto", this._node.volume = g * t.volume(), this._node.load()), this
        },
        reset: function() {
            var h = this._parent;
            return this._muted = h._muted, this._loop = h._loop, this._volume = h._volume, this._rate = h._rate, this._seek = 0, this._rateSeek = 0, this._paused = !0, this._ended = !0, this._sprite = "__default",
                this._id = ++t._counter, this
        },
        _errorListener: function() {
            this._parent._emit("loaderror", this._id, this._node.error ? this._node.error.code : 0);
            this._node.removeEventListener("error", this._errorFn, !1)
        },
        _loadListener: function() {
            var h = this._parent;
            h._duration = Math.ceil(10 * this._node.duration) / 10;
            0 === Object.keys(h._sprite).length && (h._sprite = {
                __default: [0, 1E3 * h._duration]
            });
            "loaded" !== h._state && (h._state = "loaded", h._emit("load"), h._loadQueue());
            this._node.removeEventListener(t._canPlayEvent, this._loadFn, !1)
        }
    };
    var z = {},
        T = function(h) {
            var g = h._src;
            if (z[g]) return h._duration = z[g].duration, void r(h);
            if (/^data:[^;]+;base64,/.test(g)) {
                for (var t = atob(g.split(",")[1]), C = new Uint8Array(t.length), E = 0; E < t.length; ++E) C[E] = t.charCodeAt(E);
                ha(C.buffer, h)
            } else {
                var J = new XMLHttpRequest;
                J.open("GET", g, !0);
                J.withCredentials = h._xhrWithCredentials;
                J.responseType = "arraybuffer";
                J.onload = function() {
                    var g = (J.status + "")[0];
                    if ("0" !== g && "2" !== g && "3" !== g) return void h._emit("loaderror", null, "Failed loading audio file with status: " +
                        J.status + ".");
                    ha(J.response, h)
                };
                J.onerror = function() {
                    h._webAudio && (h._html5 = !0, h._webAudio = !1, h._sounds = [], delete z[g], h.load())
                };
                n(J)
            }
        },
        n = function(h) {
            try {
                h.send()
            } catch (w) {
                h.onerror()
            }
        },
        ha = function(h, g) {
            var n = function() {
                    g._emit("loaderror", null, "Decoding audio data failed.")
                },
                w = function(h) {
                    h && 0 < g._sounds.length ? (z[g._src] = h, r(g, h)) : n()
                };
            "undefined" != typeof Promise && 1 === t.ctx.decodeAudioData.length ? t.ctx.decodeAudioData(h).then(w).catch(n) : t.ctx.decodeAudioData(h, w, n)
        },
        r = function(h, g) {
            g && !h._duration &&
                (h._duration = g.duration);
            0 === Object.keys(h._sprite).length && (h._sprite = {
                __default: [0, 1E3 * h._duration]
            });
            "loaded" !== h._state && (h._state = "loaded", h._emit("load"), h._loadQueue())
        },
        g = function() {
            if (t.usingWebAudio) {
                try {
                    "undefined" != typeof AudioContext ? t.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? t.ctx = new webkitAudioContext : t.usingWebAudio = !1
                } catch (x) {
                    t.usingWebAudio = !1
                }
                t.ctx || (t.usingWebAudio = !1);
                var h = /iP(hone|od|ad)/.test(t._navigator && t._navigator.platform),
                    g = t._navigator && t._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
                g = g ? parseInt(g[1], 10) : null;
                h && g && 9 > g && (h = /safari/.test(t._navigator && t._navigator.userAgent.toLowerCase()), (t._navigator && t._navigator.standalone && !h || t._navigator && !t._navigator.standalone && !h) && (t.usingWebAudio = !1));
                t.usingWebAudio && (t.masterGain = void 0 === t.ctx.createGain ? t.ctx.createGainNode() : t.ctx.createGain(), t.masterGain.gain.setValueAtTime(t._muted ? 0 : 1, t.ctx.currentTime), t.masterGain.connect(t.ctx.destination));
                t._setup()
            }
        };
    "function" == typeof define && define.amd && define([], function() {
        return {
            Howler: t,
            Howl: C
        }
    });
    "undefined" != typeof exports && (exports.Howler = t, exports.Howl = C);
    "undefined" != typeof window ? (window.HowlerGlobal = O, window.Howler = t, window.Howl = C, window.Sound = E) : "undefined" != typeof global && (global.HowlerGlobal = O, global.Howler = t, global.Howl = C, global.Sound = E)
}();
! function() {
    HowlerGlobal.prototype._pos = [0, 0, 0];
    HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
    HowlerGlobal.prototype.stereo = function(t) {
        if (!this.ctx || !this.ctx.listener) return this;
        for (var C = this._howls.length - 1; 0 <= C; C--) this._howls[C].stereo(t);
        return this
    };
    HowlerGlobal.prototype.pos = function(t, C, E) {
        return this.ctx && this.ctx.listener ? (C = "number" != typeof C ? this._pos[1] : C, E = "number" != typeof E ? this._pos[2] : E, "number" != typeof t ? this._pos : (this._pos = [t, C, E], void 0 !== this.ctx.listener.positionX ? (this.ctx.listener.positionX.setTargetAtTime(this._pos[0],
            Howler.ctx.currentTime, .1), this.ctx.listener.positionY.setTargetAtTime(this._pos[1], Howler.ctx.currentTime, .1), this.ctx.listener.positionZ.setTargetAtTime(this._pos[2], Howler.ctx.currentTime, .1)) : this.ctx.listener.setPosition(this._pos[0], this._pos[1], this._pos[2]), this)) : this
    };
    HowlerGlobal.prototype.orientation = function(t, C, E, z, O, n) {
        if (!this.ctx || !this.ctx.listener) return this;
        var T = this._orientation;
        return C = "number" != typeof C ? T[1] : C, E = "number" != typeof E ? T[2] : E, z = "number" != typeof z ? T[3] : z, O = "number" !=
            typeof O ? T[4] : O, n = "number" != typeof n ? T[5] : n, "number" != typeof t ? T : (this._orientation = [t, C, E, z, O, n], void 0 !== this.ctx.listener.forwardX ? (this.ctx.listener.forwardX.setTargetAtTime(t, Howler.ctx.currentTime, .1), this.ctx.listener.forwardY.setTargetAtTime(C, Howler.ctx.currentTime, .1), this.ctx.listener.forwardZ.setTargetAtTime(E, Howler.ctx.currentTime, .1), this.ctx.listener.upX.setTargetAtTime(t, Howler.ctx.currentTime, .1), this.ctx.listener.upY.setTargetAtTime(C, Howler.ctx.currentTime, .1), this.ctx.listener.upZ.setTargetAtTime(E,
                Howler.ctx.currentTime, .1)) : this.ctx.listener.setOrientation(t, C, E, z, O, n), this)
    };
    Howl.prototype.init = function(t) {
        return function(C) {
            return this._orientation = C.orientation || [1, 0, 0], this._stereo = C.stereo || null, this._pos = C.pos || null, this._pannerAttr = {
                coneInnerAngle: void 0 !== C.coneInnerAngle ? C.coneInnerAngle : 360,
                coneOuterAngle: void 0 !== C.coneOuterAngle ? C.coneOuterAngle : 360,
                coneOuterGain: void 0 !== C.coneOuterGain ? C.coneOuterGain : 0,
                distanceModel: void 0 !== C.distanceModel ? C.distanceModel : "inverse",
                maxDistance: void 0 !==
                    C.maxDistance ? C.maxDistance : 1E4,
                panningModel: void 0 !== C.panningModel ? C.panningModel : "HRTF",
                refDistance: void 0 !== C.refDistance ? C.refDistance : 1,
                rolloffFactor: void 0 !== C.rolloffFactor ? C.rolloffFactor : 1
            }, this._onstereo = C.onstereo ? [{
                fn: C.onstereo
            }] : [], this._onpos = C.onpos ? [{
                fn: C.onpos
            }] : [], this._onorientation = C.onorientation ? [{
                fn: C.onorientation
            }] : [], t.call(this, C)
        }
    }(Howl.prototype.init);
    Howl.prototype.stereo = function(t, C) {
        var E = this;
        if (!E._webAudio) return E;
        if ("loaded" !== E._state) return E._queue.push({
            event: "stereo",
            action: function() {
                E.stereo(t, C)
            }
        }), E;
        var z = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
        if (void 0 === C) {
            if ("number" != typeof t) return E._stereo;
            E._stereo = t;
            E._pos = [t, 0, 0]
        }
        for (var T = E._getSoundIds(C), n = 0; n < T.length; n++) {
            var ha = E._soundById(T[n]);
            if (ha) {
                if ("number" != typeof t) return ha._stereo;
                ha._stereo = t;
                ha._pos = [t, 0, 0];
                ha._node && (ha._pannerAttr.panningModel = "equalpower", ha._panner && ha._panner.pan || O(ha, z), "spatial" === z ? void 0 !== ha._panner.positionX ? (ha._panner.positionX.setValueAtTime(t,
                    Howler.ctx.currentTime), ha._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime), ha._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : ha._panner.setPosition(t, 0, 0) : ha._panner.pan.setValueAtTime(t, Howler.ctx.currentTime));
                E._emit("stereo", ha._id)
            }
        }
        return E
    };
    Howl.prototype.pos = function(t, C, E, z) {
        var T = this;
        if (!T._webAudio) return T;
        if ("loaded" !== T._state) return T._queue.push({
            event: "pos",
            action: function() {
                T.pos(t, C, E, z)
            }
        }), T;
        if (C = "number" != typeof C ? 0 : C, E = "number" != typeof E ? -.5 : E, void 0 ===
            z) {
            if ("number" != typeof t) return T._pos;
            T._pos = [t, C, E]
        }
        for (var n = T._getSoundIds(z), ha = 0; ha < n.length; ha++) {
            var r = T._soundById(n[ha]);
            if (r) {
                if ("number" != typeof t) return r._pos;
                r._pos = [t, C, E];
                r._node && (r._panner && !r._panner.pan || O(r, "spatial"), void 0 !== r._panner.positionX ? (r._panner.positionX.setValueAtTime(t, Howler.ctx.currentTime), r._panner.positionY.setValueAtTime(C, Howler.ctx.currentTime), r._panner.positionZ.setValueAtTime(E, Howler.ctx.currentTime)) : r._panner.setPosition(t, C, E));
                T._emit("pos", r._id)
            }
        }
        return T
    };
    Howl.prototype.orientation = function(t, C, E, z) {
        var T = this;
        if (!T._webAudio) return T;
        if ("loaded" !== T._state) return T._queue.push({
            event: "orientation",
            action: function() {
                T.orientation(t, C, E, z)
            }
        }), T;
        if (C = "number" != typeof C ? T._orientation[1] : C, E = "number" != typeof E ? T._orientation[2] : E, void 0 === z) {
            if ("number" != typeof t) return T._orientation;
            T._orientation = [t, C, E]
        }
        for (var n = T._getSoundIds(z), ha = 0; ha < n.length; ha++) {
            var r = T._soundById(n[ha]);
            if (r) {
                if ("number" != typeof t) return r._orientation;
                r._orientation = [t,
                    C, E
                ];
                r._node && (r._panner || (r._pos || (r._pos = T._pos || [0, 0, -.5]), O(r, "spatial")), void 0 !== r._panner.orientationX ? (r._panner.orientationX.setValueAtTime(t, Howler.ctx.currentTime), r._panner.orientationY.setValueAtTime(C, Howler.ctx.currentTime), r._panner.orientationZ.setValueAtTime(E, Howler.ctx.currentTime)) : r._panner.setOrientation(t, C, E));
                T._emit("orientation", r._id)
            }
        }
        return T
    };
    Howl.prototype.pannerAttr = function() {
        var t, C, E = arguments;
        if (!this._webAudio) return this;
        if (0 === E.length) return this._pannerAttr;
        if (1 === E.length) {
            if ("object" != typeof E[0]) return C = this._soundById(parseInt(E[0], 10)), C ? C._pannerAttr : this._pannerAttr;
            var z = E[0];
            void 0 === t && (z.pannerAttr || (z.pannerAttr = {
                coneInnerAngle: z.coneInnerAngle,
                coneOuterAngle: z.coneOuterAngle,
                coneOuterGain: z.coneOuterGain,
                distanceModel: z.distanceModel,
                maxDistance: z.maxDistance,
                refDistance: z.refDistance,
                rolloffFactor: z.rolloffFactor,
                panningModel: z.panningModel
            }), this._pannerAttr = {
                coneInnerAngle: void 0 !== z.pannerAttr.coneInnerAngle ? z.pannerAttr.coneInnerAngle : this._coneInnerAngle,
                coneOuterAngle: void 0 !== z.pannerAttr.coneOuterAngle ? z.pannerAttr.coneOuterAngle : this._coneOuterAngle,
                coneOuterGain: void 0 !== z.pannerAttr.coneOuterGain ? z.pannerAttr.coneOuterGain : this._coneOuterGain,
                distanceModel: void 0 !== z.pannerAttr.distanceModel ? z.pannerAttr.distanceModel : this._distanceModel,
                maxDistance: void 0 !== z.pannerAttr.maxDistance ? z.pannerAttr.maxDistance : this._maxDistance,
                refDistance: void 0 !== z.pannerAttr.refDistance ? z.pannerAttr.refDistance : this._refDistance,
                rolloffFactor: void 0 !==
                    z.pannerAttr.rolloffFactor ? z.pannerAttr.rolloffFactor : this._rolloffFactor,
                panningModel: void 0 !== z.pannerAttr.panningModel ? z.pannerAttr.panningModel : this._panningModel
            })
        } else 2 === E.length && (z = E[0], t = parseInt(E[1], 10));
        t = this._getSoundIds(t);
        for (E = 0; E < t.length; E++)
            if (C = this._soundById(t[E])) {
                var T = C._pannerAttr;
                T = {
                    coneInnerAngle: void 0 !== z.coneInnerAngle ? z.coneInnerAngle : T.coneInnerAngle,
                    coneOuterAngle: void 0 !== z.coneOuterAngle ? z.coneOuterAngle : T.coneOuterAngle,
                    coneOuterGain: void 0 !== z.coneOuterGain ?
                        z.coneOuterGain : T.coneOuterGain,
                    distanceModel: void 0 !== z.distanceModel ? z.distanceModel : T.distanceModel,
                    maxDistance: void 0 !== z.maxDistance ? z.maxDistance : T.maxDistance,
                    refDistance: void 0 !== z.refDistance ? z.refDistance : T.refDistance,
                    rolloffFactor: void 0 !== z.rolloffFactor ? z.rolloffFactor : T.rolloffFactor,
                    panningModel: void 0 !== z.panningModel ? z.panningModel : T.panningModel
                };
                var n = C._panner;
                n ? (n.coneInnerAngle = T.coneInnerAngle, n.coneOuterAngle = T.coneOuterAngle, n.coneOuterGain = T.coneOuterGain, n.distanceModel =
                    T.distanceModel, n.maxDistance = T.maxDistance, n.refDistance = T.refDistance, n.rolloffFactor = T.rolloffFactor, n.panningModel = T.panningModel) : (C._pos || (C._pos = this._pos || [0, 0, -.5]), O(C, "spatial"))
            }
        return this
    };
    Sound.prototype.init = function(t) {
        return function() {
            var C = this._parent;
            this._orientation = C._orientation;
            this._stereo = C._stereo;
            this._pos = C._pos;
            this._pannerAttr = C._pannerAttr;
            t.call(this);
            this._stereo ? C.stereo(this._stereo) : this._pos && C.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
        }
    }(Sound.prototype.init);
    Sound.prototype.reset = function(t) {
        return function() {
            var C = this._parent;
            return this._orientation = C._orientation, this._stereo = C._stereo, this._pos = C._pos, this._pannerAttr = C._pannerAttr, this._stereo ? C.stereo(this._stereo) : this._pos ? C.pos(this._pos[0], this._pos[1], this._pos[2], this._id) : this._panner && (this._panner.disconnect(0), this._panner = void 0, C._refreshBuffer(this)), t.call(this)
        }
    }(Sound.prototype.reset);
    var O = function(t, C) {
        "spatial" === (C || "spatial") ? (t._panner = Howler.ctx.createPanner(), t._panner.coneInnerAngle =
            t._pannerAttr.coneInnerAngle, t._panner.coneOuterAngle = t._pannerAttr.coneOuterAngle, t._panner.coneOuterGain = t._pannerAttr.coneOuterGain, t._panner.distanceModel = t._pannerAttr.distanceModel, t._panner.maxDistance = t._pannerAttr.maxDistance, t._panner.refDistance = t._pannerAttr.refDistance, t._panner.rolloffFactor = t._pannerAttr.rolloffFactor, t._panner.panningModel = t._pannerAttr.panningModel, void 0 !== t._panner.positionX ? (t._panner.positionX.setValueAtTime(t._pos[0], Howler.ctx.currentTime), t._panner.positionY.setValueAtTime(t._pos[1],
                Howler.ctx.currentTime), t._panner.positionZ.setValueAtTime(t._pos[2], Howler.ctx.currentTime)) : t._panner.setPosition(t._pos[0], t._pos[1], t._pos[2]), void 0 !== t._panner.orientationX ? (t._panner.orientationX.setValueAtTime(t._orientation[0], Howler.ctx.currentTime), t._panner.orientationY.setValueAtTime(t._orientation[1], Howler.ctx.currentTime), t._panner.orientationZ.setValueAtTime(t._orientation[2], Howler.ctx.currentTime)) : t._panner.setOrientation(t._orientation[0], t._orientation[1], t._orientation[2])) :
        (t._panner = Howler.ctx.createStereoPanner(), t._panner.pan.setValueAtTime(t._stereo, Howler.ctx.currentTime));
        t._panner.connect(t._node);
        t._paused || t._parent.pause(t._id, !0).play(t._id, !0)
    }
}();
! function(O) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = O() : "function" == typeof define && define.amd ? define([], O) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).pako = O()
}(function() {
    return function z(t, C, E) {
        function T(r, g) {
            if (!C[r]) {
                if (!t[r]) {
                    var h = "function" == typeof require && require;
                    if (!g && h) return h(r, !0);
                    if (n) return n(r, !0);
                    g = Error("Cannot find module '" + r + "'");
                    throw g.code = "MODULE_NOT_FOUND", g;
                }
                g = C[r] = {
                    exports: {}
                };
                t[r][0].call(g.exports, function(h) {
                    var g = t[r][1][h];
                    return T(g ? g : h)
                }, g, g.exports, z, t, C, E)
            }
            return C[r].exports
        }
        for (var n = "function" == typeof require && require, ha = 0; ha < E.length; ha++) T(E[ha]);
        return T
    }({
        1: [function(t, C, E) {
            function z(t) {
                if (!(this instanceof z)) return new z(t);
                t = this.options = ha.assign({
                    level: ma,
                    method: J,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: L,
                    to: ""
                }, t || {});
                t.raw && 0 < t.windowBits ? t.windowBits = -t.windowBits : t.gzip && 0 < t.windowBits && 16 > t.windowBits && (t.windowBits += 16);
                this.err = 0;
                this.msg = "";
                this.ended = !1;
                this.chunks = [];
                this.strm = new h;
                this.strm.avail_out = 0;
                var C = n.deflateInit2(this.strm, t.level, t.method, t.windowBits, t.memLevel, t.strategy);
                if (C !== x) throw Error(g[C]);
                if (t.header && n.deflateSetHeader(this.strm, t.header), t.dictionary) {
                    var E;
                    if (E = "string" == typeof t.dictionary ? r.string2buf(t.dictionary) : "[object ArrayBuffer]" === w.call(t.dictionary) ? new Uint8Array(t.dictionary) : t.dictionary, C = n.deflateSetDictionary(this.strm, E), C !== x) throw Error(g[C]);
                    this._dict_set = !0
                }
            }

            function T(h,
                g) {
                g = new z(g);
                if (g.push(h, !0), g.err) throw g.msg;
                return g.result
            }
            var n = t("./zlib/deflate"),
                ha = t("./utils/common"),
                r = t("./utils/strings"),
                g = t("./zlib/messages"),
                h = t("./zlib/zstream"),
                w = Object.prototype.toString,
                x = 0,
                ma = -1,
                L = 0,
                J = 8;
            z.prototype.push = function(h, g) {
                var t, z = this.strm,
                    C = this.options.chunkSize;
                if (this.ended) return !1;
                g = g === ~~g ? g : !0 === g ? 4 : 0;
                "string" == typeof h ? z.input = r.string2buf(h) : "[object ArrayBuffer]" === w.call(h) ? z.input = new Uint8Array(h) : z.input = h;
                z.next_in = 0;
                z.avail_in = z.input.length;
                do {
                    if (0 ===
                        z.avail_out && (z.output = new ha.Buf8(C), z.next_out = 0, z.avail_out = C), t = n.deflate(z, g), 1 !== t && t !== x) return this.onEnd(t), this.ended = !0, !1;
                    0 !== z.avail_out && (0 !== z.avail_in || 4 !== g && 2 !== g) || ("string" === this.options.to ? this.onData(r.buf2binstring(ha.shrinkBuf(z.output, z.next_out))) : this.onData(ha.shrinkBuf(z.output, z.next_out)))
                } while ((0 < z.avail_in || 0 === z.avail_out) && 1 !== t);
                return 4 === g ? (t = n.deflateEnd(this.strm), this.onEnd(t), this.ended = !0, t === x) : 2 !== g || (this.onEnd(x), z.avail_out = 0, !0)
            };
            z.prototype.onData =
                function(h) {
                    this.chunks.push(h)
                };
            z.prototype.onEnd = function(h) {
                h === x && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = ha.flattenChunks(this.chunks));
                this.chunks = [];
                this.err = h;
                this.msg = this.strm.msg
            };
            E.Deflate = z;
            E.deflate = T;
            E.deflateRaw = function(h, g) {
                return g = g || {}, g.raw = !0, T(h, g)
            };
            E.gzip = function(h, g) {
                return g = g || {}, g.gzip = !0, T(h, g)
            }
        }, {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/deflate": 8,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        2: [function(t, C, E) {
            function z(r) {
                if (!(this instanceof z)) return new z(r);
                var t = this.options = ha.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, r || {});
                t.raw && 0 <= t.windowBits && 16 > t.windowBits && (t.windowBits = -t.windowBits, 0 === t.windowBits && (t.windowBits = -15));
                !(0 <= t.windowBits && 16 > t.windowBits) || r && r.windowBits || (t.windowBits += 32);
                15 < t.windowBits && 48 > t.windowBits && 0 === (15 & t.windowBits) && (t.windowBits |= 15);
                this.err = 0;
                this.msg = "";
                this.ended = !1;
                this.chunks = [];
                this.strm = new w;
                this.strm.avail_out = 0;
                r = n.inflateInit2(this.strm, t.windowBits);
                if (r !== g.Z_OK) throw Error(h[r]);
                this.header = new x;
                n.inflateGetHeader(this.strm, this.header)
            }

            function T(h, g) {
                g = new z(g);
                if (g.push(h, !0), g.err) throw g.msg;
                return g.result
            }
            var n = t("./zlib/inflate"),
                ha = t("./utils/common"),
                r = t("./utils/strings"),
                g = t("./zlib/constants"),
                h = t("./zlib/messages"),
                w = t("./zlib/zstream"),
                x = t("./zlib/gzheader"),
                ma = Object.prototype.toString;
            z.prototype.push = function(h, t) {
                var w, x, z, C, E, G = this.strm,
                    J = this.options.chunkSize,
                    L = this.options.dictionary,
                    da = !1;
                if (this.ended) return !1;
                t = t === ~~t ? t : !0 === t ? g.Z_FINISH : g.Z_NO_FLUSH;
                "string" == typeof h ? G.input = r.binstring2buf(h) : "[object ArrayBuffer]" === ma.call(h) ? G.input = new Uint8Array(h) : G.input = h;
                G.next_in = 0;
                G.avail_in = G.input.length;
                do {
                    if (0 === G.avail_out && (G.output = new ha.Buf8(J), G.next_out = 0, G.avail_out = J), w = n.inflate(G, g.Z_NO_FLUSH), w === g.Z_NEED_DICT && L && (E = "string" == typeof L ? r.string2buf(L) : "[object ArrayBuffer]" === ma.call(L) ? new Uint8Array(L) : L, w = n.inflateSetDictionary(this.strm, E)), w === g.Z_BUF_ERROR && !0 === da && (w = g.Z_OK, da = !1), w !== g.Z_STREAM_END && w !== g.Z_OK) return this.onEnd(w),
                        this.ended = !0, !1;
                    G.next_out && (0 !== G.avail_out && w !== g.Z_STREAM_END && (0 !== G.avail_in || t !== g.Z_FINISH && t !== g.Z_SYNC_FLUSH) || ("string" === this.options.to ? (x = r.utf8border(G.output, G.next_out), z = G.next_out - x, C = r.buf2string(G.output, x), G.next_out = z, G.avail_out = J - z, z && ha.arraySet(G.output, G.output, x, z, 0), this.onData(C)) : this.onData(ha.shrinkBuf(G.output, G.next_out))));
                    0 === G.avail_in && 0 === G.avail_out && (da = !0)
                } while ((0 < G.avail_in || 0 === G.avail_out) && w !== g.Z_STREAM_END);
                return w === g.Z_STREAM_END && (t = g.Z_FINISH),
                    t === g.Z_FINISH ? (w = n.inflateEnd(this.strm), this.onEnd(w), this.ended = !0, w === g.Z_OK) : t !== g.Z_SYNC_FLUSH || (this.onEnd(g.Z_OK), G.avail_out = 0, !0)
            };
            z.prototype.onData = function(h) {
                this.chunks.push(h)
            };
            z.prototype.onEnd = function(h) {
                h === g.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = ha.flattenChunks(this.chunks));
                this.chunks = [];
                this.err = h;
                this.msg = this.strm.msg
            };
            E.Inflate = z;
            E.inflate = T;
            E.inflateRaw = function(h, g) {
                return g = g || {}, g.raw = !0, T(h, g)
            };
            E.ungzip = T
        }, {
            "./utils/common": 3,
            "./utils/strings": 4,
            "./zlib/constants": 6,
            "./zlib/gzheader": 9,
            "./zlib/inflate": 11,
            "./zlib/messages": 13,
            "./zlib/zstream": 15
        }],
        3: [function(t, C, E) {
            t = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
            E.assign = function(n) {
                for (var t = Array.prototype.slice.call(arguments, 1); t.length;) {
                    var r = t.shift();
                    if (r) {
                        if ("object" != typeof r) throw new TypeError(r + "must be non-object");
                        for (var g in r) r.hasOwnProperty(g) && (n[g] = r[g])
                    }
                }
                return n
            };
            E.shrinkBuf = function(n, t) {
                return n.length ===
                    t ? n : n.subarray ? n.subarray(0, t) : (n.length = t, n)
            };
            var z = {
                    arraySet: function(n, t, r, g, h) {
                        if (t.subarray && n.subarray) return void n.set(t.subarray(r, r + g), h);
                        for (var w = 0; w < g; w++) n[h + w] = t[r + w]
                    },
                    flattenChunks: function(n) {
                        var t, r;
                        var g = r = 0;
                        for (t = n.length; g < t; g++) r += n[g].length;
                        var h = new Uint8Array(r);
                        g = r = 0;
                        for (t = n.length; g < t; g++) {
                            var w = n[g];
                            h.set(w, r);
                            r += w.length
                        }
                        return h
                    }
                },
                T = {
                    arraySet: function(n, t, r, g, h) {
                        for (var w = 0; w < g; w++) n[h + w] = t[r + w]
                    },
                    flattenChunks: function(n) {
                        return [].concat.apply([], n)
                    }
                };
            E.setTyped = function(n) {
                n ?
                    (E.Buf8 = Uint8Array, E.Buf16 = Uint16Array, E.Buf32 = Int32Array, E.assign(E, z)) : (E.Buf8 = Array, E.Buf16 = Array, E.Buf32 = Array, E.assign(E, T))
            };
            E.setTyped(t)
        }, {}],
        4: [function(t, C, E) {
            function z(g, h) {
                if (65537 > h && (g.subarray && ha || !g.subarray && n)) return String.fromCharCode.apply(null, T.shrinkBuf(g, h));
                for (var r = "", t = 0; t < h; t++) r += String.fromCharCode(g[t]);
                return r
            }
            var T = t("./common"),
                n = !0,
                ha = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (g) {
                n = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (g) {
                ha = !1
            }
            var r =
                new T.Buf8(256);
            for (t = 0; 256 > t; t++) r[t] = 252 <= t ? 6 : 248 <= t ? 5 : 240 <= t ? 4 : 224 <= t ? 3 : 192 <= t ? 2 : 1;
            r[254] = r[254] = 1;
            E.string2buf = function(g) {
                var h, n, r, t = g.length,
                    z = 0;
                for (n = 0; n < t; n++) {
                    var C = g.charCodeAt(n);
                    55296 === (64512 & C) && n + 1 < t && (h = g.charCodeAt(n + 1), 56320 === (64512 & h) && (C = 65536 + (C - 55296 << 10) + (h - 56320), n++));
                    z += 128 > C ? 1 : 2048 > C ? 2 : 65536 > C ? 3 : 4
                }
                var E = new T.Buf8(z);
                for (n = r = 0; r < z; n++) C = g.charCodeAt(n), 55296 === (64512 & C) && n + 1 < t && (h = g.charCodeAt(n + 1), 56320 === (64512 & h) && (C = 65536 + (C - 55296 << 10) + (h - 56320), n++)), 128 > C ? E[r++] =
                    C : 2048 > C ? (E[r++] = 192 | C >>> 6, E[r++] = 128 | 63 & C) : 65536 > C ? (E[r++] = 224 | C >>> 12, E[r++] = 128 | C >>> 6 & 63, E[r++] = 128 | 63 & C) : (E[r++] = 240 | C >>> 18, E[r++] = 128 | C >>> 12 & 63, E[r++] = 128 | C >>> 6 & 63, E[r++] = 128 | 63 & C);
                return E
            };
            E.buf2binstring = function(g) {
                return z(g, g.length)
            };
            E.binstring2buf = function(g) {
                for (var h = new T.Buf8(g.length), n = 0, r = h.length; n < r; n++) h[n] = g.charCodeAt(n);
                return h
            };
            E.buf2string = function(g, h) {
                var n, t, C, E = h || g.length,
                    J = Array(2 * E);
                for (h = n = 0; h < E;)
                    if (t = g[h++], 128 > t) J[n++] = t;
                    else if (C = r[t], 4 < C) J[n++] = 65533, h += C -
                    1;
                else {
                    for (t &= 2 === C ? 31 : 3 === C ? 15 : 7; 1 < C && h < E;) t = t << 6 | 63 & g[h++], C--;
                    1 < C ? J[n++] = 65533 : 65536 > t ? J[n++] = t : (t -= 65536, J[n++] = 55296 | t >> 10 & 1023, J[n++] = 56320 | 1023 & t)
                }
                return z(J, n)
            };
            E.utf8border = function(g, h) {
                var n;
                h = h || g.length;
                h > g.length && (h = g.length);
                for (n = h - 1; 0 <= n && 128 === (192 & g[n]);) n--;
                return 0 > n ? h : 0 === n ? h : n + r[g[n]] > h ? n : h
            }
        }, {
            "./common": 3
        }],
        5: [function(t, C, E) {
            C.exports = function(t, C, n, E) {
                var r = 65535 & t | 0;
                t = t >>> 16 & 65535 | 0;
                for (var g; 0 !== n;) {
                    g = 2E3 < n ? 2E3 : n;
                    n -= g;
                    do r = r + C[E++] | 0, t = t + r | 0; while (--g);
                    r %= 65521;
                    t %= 65521
                }
                return r |
                    t << 16 | 0
            }
        }, {}],
        6: [function(t, C, E) {
            C.exports = {
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                Z_BUF_ERROR: -5,
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                Z_BINARY: 0,
                Z_TEXT: 1,
                Z_UNKNOWN: 2,
                Z_DEFLATED: 8
            }
        }, {}],
        7: [function(t, C, E) {
            var z = function() {
                for (var t, n = [], z = 0; 256 > z; z++) {
                    t = z;
                    for (var r = 0; 8 > r; r++) t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;
                    n[z] = t
                }
                return n
            }();
            C.exports = function(t, n, C, r) {
                C = r + C;
                for (t ^= -1; r < C; r++) t = t >>> 8 ^ z[255 & (t ^ n[r])];
                return t ^ -1
            }
        }, {}],
        8: [function(t, C, E) {
            function z(h, g) {
                return h.msg = pb[g], g
            }

            function T(h) {
                for (var g = h.length; 0 <= --g;) h[g] = 0
            }

            function n(h) {
                var g = h.state,
                    n = g.pending;
                n > h.avail_out && (n = h.avail_out);
                0 !== n && (ca.arraySet(h.output, g.pending_buf, g.pending_out, n, h.next_out), h.next_out += n, g.pending_out += n, h.total_out += n, h.avail_out -= n, g.pending -= n, 0 === g.pending && (g.pending_out =
                    0))
            }

            function ha(h, g) {
                Kb._tr_flush_block(h, 0 <= h.block_start ? h.block_start : -1, h.strstart - h.block_start, g);
                h.block_start = h.strstart;
                n(h.strm)
            }

            function r(h, g) {
                h.pending_buf[h.pending++] = g
            }

            function g(h, g) {
                h.pending_buf[h.pending++] = g >>> 8 & 255;
                h.pending_buf[h.pending++] = 255 & g
            }

            function h(h, g) {
                var n, r, D = h.max_chain_length,
                    t = h.strstart,
                    w = h.prev_length,
                    x = h.nice_match,
                    A = h.strstart > h.w_size - Z ? h.strstart - (h.w_size - Z) : 0,
                    z = h.window,
                    C = h.w_mask,
                    E = h.prev,
                    G = h.strstart + wa,
                    da = z[t + w - 1],
                    J = z[t + w];
                h.prev_length >= h.good_match &&
                    (D >>= 2);
                x > h.lookahead && (x = h.lookahead);
                do
                    if (n = g, z[n + w] === J && z[n + w - 1] === da && z[n] === z[t] && z[++n] === z[t + 1]) {
                        t += 2;
                        for (n++; z[++t] === z[++n] && z[++t] === z[++n] && z[++t] === z[++n] && z[++t] === z[++n] && z[++t] === z[++n] && z[++t] === z[++n] && z[++t] === z[++n] && z[++t] === z[++n] && t < G;);
                        if (r = wa - (G - t), t = G - wa, r > w) {
                            if (h.match_start = g, w = r, r >= x) break;
                            da = z[t + w - 1];
                            J = z[t + w]
                        }
                    }
                while ((g = E[g & C]) > A && 0 !== --D);
                return w <= h.lookahead ? w : h.lookahead
            }

            function w(h) {
                var g, n, r = h.w_size;
                do {
                    if (n = h.window_size - h.lookahead - h.strstart, h.strstart >= r + (r -
                            Z)) {
                        ca.arraySet(h.window, h.window, r, r, 0);
                        h.match_start -= r;
                        h.strstart -= r;
                        h.block_start -= r;
                        var D = g = h.hash_size;
                        do {
                            var t = h.head[--D];
                            h.head[D] = t >= r ? t - r : 0
                        } while (--g);
                        D = g = r;
                        do t = h.prev[--D], h.prev[D] = t >= r ? t - r : 0; while (--g);
                        n += r
                    }
                    if (0 === h.strm.avail_in) break;
                    D = h.strm;
                    t = h.window;
                    var w = h.strstart + h.lookahead,
                        x = D.avail_in;
                    if (g = (x > n && (x = n), 0 === x ? 0 : (D.avail_in -= x, ca.arraySet(t, D.input, D.next_in, x, w), 1 === D.state.wrap ? D.adler = G(D.adler, t, x, w) : 2 === D.state.wrap && (D.adler = ka(D.adler, t, x, w)), D.next_in += x, D.total_in +=
                            x, x)), h.lookahead += g, h.lookahead + h.insert >= pa)
                        for (n = h.strstart - h.insert, h.ins_h = h.window[n], h.ins_h = (h.ins_h << h.hash_shift ^ h.window[n + 1]) & h.hash_mask; h.insert && (h.ins_h = (h.ins_h << h.hash_shift ^ h.window[n + pa - 1]) & h.hash_mask, h.prev[n & h.w_mask] = h.head[h.ins_h], h.head[h.ins_h] = n, n++, h.insert--, !(h.lookahead + h.insert < pa)););
                } while (h.lookahead < Z && 0 !== h.strm.avail_in)
            }

            function x(g, n) {
                for (var r, u;;) {
                    if (g.lookahead < Z) {
                        if (w(g), g.lookahead < Z && n === da) return Q;
                        if (0 === g.lookahead) break
                    }
                    if (r = 0, g.lookahead >= pa && (g.ins_h =
                            (g.ins_h << g.hash_shift ^ g.window[g.strstart + pa - 1]) & g.hash_mask, r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = g.strstart), 0 !== r && g.strstart - r <= g.w_size - Z && (g.match_length = h(g, r)), g.match_length >= pa)
                        if (u = Kb._tr_tally(g, g.strstart - g.match_start, g.match_length - pa), g.lookahead -= g.match_length, g.match_length <= g.max_lazy_match && g.lookahead >= pa) {
                            g.match_length--;
                            do g.strstart++, g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + pa - 1]) & g.hash_mask, r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h],
                                g.head[g.ins_h] = g.strstart; while (0 !== --g.match_length);
                            g.strstart++
                        } else g.strstart += g.match_length, g.match_length = 0, g.ins_h = g.window[g.strstart], g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + 1]) & g.hash_mask;
                    else u = Kb._tr_tally(g, 0, g.window[g.strstart]), g.lookahead--, g.strstart++;
                    if (u && (ha(g, !1), 0 === g.strm.avail_out)) return Q
                }
                return g.insert = g.strstart < pa - 1 ? g.strstart : pa - 1, n === Ba ? (ha(g, !0), 0 === g.strm.avail_out ? W : cc) : g.last_lit && (ha(g, !1), 0 === g.strm.avail_out) ? Q : kc
            }

            function ma(g, n) {
                for (var r,
                        u, t;;) {
                    if (g.lookahead < Z) {
                        if (w(g), g.lookahead < Z && n === da) return Q;
                        if (0 === g.lookahead) break
                    }
                    if (r = 0, g.lookahead >= pa && (g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + pa - 1]) & g.hash_mask, r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = g.strstart), g.prev_length = g.match_length, g.prev_match = g.match_start, g.match_length = pa - 1, 0 !== r && g.prev_length < g.max_lazy_match && g.strstart - r <= g.w_size - Z && (g.match_length = h(g, r), 5 >= g.match_length && (g.strategy === vb || g.match_length === pa && 4096 < g.strstart - g.match_start) &&
                            (g.match_length = pa - 1)), g.prev_length >= pa && g.match_length <= g.prev_length) {
                        t = g.strstart + g.lookahead - pa;
                        u = Kb._tr_tally(g, g.strstart - 1 - g.prev_match, g.prev_length - pa);
                        g.lookahead -= g.prev_length - 1;
                        g.prev_length -= 2;
                        do ++g.strstart <= t && (g.ins_h = (g.ins_h << g.hash_shift ^ g.window[g.strstart + pa - 1]) & g.hash_mask, r = g.prev[g.strstart & g.w_mask] = g.head[g.ins_h], g.head[g.ins_h] = g.strstart); while (0 !== --g.prev_length);
                        if (g.match_available = 0, g.match_length = pa - 1, g.strstart++, u && (ha(g, !1), 0 === g.strm.avail_out)) return Q
                    } else if (g.match_available) {
                        if (u =
                            Kb._tr_tally(g, 0, g.window[g.strstart - 1]), u && ha(g, !1), g.strstart++, g.lookahead--, 0 === g.strm.avail_out) return Q
                    } else g.match_available = 1, g.strstart++, g.lookahead--
                }
                return g.match_available && (Kb._tr_tally(g, 0, g.window[g.strstart - 1]), g.match_available = 0), g.insert = g.strstart < pa - 1 ? g.strstart : pa - 1, n === Ba ? (ha(g, !0), 0 === g.strm.avail_out ? W : cc) : g.last_lit && (ha(g, !1), 0 === g.strm.avail_out) ? Q : kc
            }

            function L(g, h, n, r, t) {
                this.good_length = g;
                this.max_lazy = h;
                this.nice_length = n;
                this.max_chain = r;
                this.func = t
            }

            function J() {
                this.strm =
                    null;
                this.status = 0;
                this.pending_buf = null;
                this.wrap = this.pending = this.pending_out = this.pending_buf_size = 0;
                this.gzhead = null;
                this.gzindex = 0;
                this.method = Lc;
                this.last_flush = -1;
                this.w_mask = this.w_bits = this.w_size = 0;
                this.window = null;
                this.window_size = 0;
                this.head = this.prev = null;
                this.nice_match = this.good_match = this.strategy = this.level = this.max_lazy_match = this.max_chain_length = this.prev_length = this.lookahead = this.match_start = this.strstart = this.match_available = this.prev_match = this.match_length = this.block_start =
                    this.hash_shift = this.hash_mask = this.hash_bits = this.hash_size = this.ins_h = 0;
                this.dyn_ltree = new ca.Buf16(2 * Wa);
                this.dyn_dtree = new ca.Buf16(2 * (2 * Ac + 1));
                this.bl_tree = new ca.Buf16(2 * (2 * A + 1));
                T(this.dyn_ltree);
                T(this.dyn_dtree);
                T(this.bl_tree);
                this.bl_desc = this.d_desc = this.l_desc = null;
                this.bl_count = new ca.Buf16(za + 1);
                this.heap = new ca.Buf16(2 * mb + 1);
                T(this.heap);
                this.heap_max = this.heap_len = 0;
                this.depth = new ca.Buf16(2 * mb + 1);
                T(this.depth);
                this.bi_valid = this.bi_buf = this.insert = this.matches = this.static_len = this.opt_len =
                    this.d_buf = this.last_lit = this.lit_bufsize = this.l_buf = 0
            }

            function ob(g) {
                var h;
                return g && g.state ? (g.total_in = g.total_out = 0, g.data_type = ua, h = g.state, h.pending = 0, h.pending_out = 0, 0 > h.wrap && (h.wrap = -h.wrap), h.status = h.wrap ? na : U, g.adler = 2 === h.wrap ? 0 : 1, h.last_flush = da, Kb._tr_init(h), hb) : z(g, va)
            }

            function nb(g) {
                var h = ob(g);
                h === hb && (g = g.state, g.window_size = 2 * g.w_size, T(g.head), g.max_lazy_match = Da[g.level].max_lazy, g.good_match = Da[g.level].good_length, g.nice_match = Da[g.level].nice_length, g.max_chain_length = Da[g.level].max_chain,
                    g.strstart = 0, g.block_start = 0, g.lookahead = 0, g.insert = 0, g.match_length = g.prev_length = pa - 1, g.match_available = 0, g.ins_h = 0);
                return h
            }

            function Kc(g, h, n, r, t, w) {
                if (!g) return va;
                var u = 1;
                if (h === Ga && (h = 6), 0 > r ? (u = 0, r = -r) : 15 < r && (u = 2, r -= 16), 1 > t || t > ib || n !== Lc || 8 > r || 15 < r || 0 > h || 9 < h || 0 > w || w > zc) return z(g, va);
                8 === r && (r = 9);
                var B = new J;
                return g.state = B, B.strm = g, B.wrap = u, B.gzhead = null, B.w_bits = r, B.w_size = 1 << B.w_bits, B.w_mask = B.w_size - 1, B.hash_bits = t + 7, B.hash_size = 1 << B.hash_bits, B.hash_mask = B.hash_size - 1, B.hash_shift = ~~((B.hash_bits +
                    pa - 1) / pa), B.window = new ca.Buf8(2 * B.w_size), B.head = new ca.Buf16(B.hash_size), B.prev = new ca.Buf16(B.w_size), B.lit_bufsize = 1 << t + 6, B.pending_buf_size = 4 * B.lit_bufsize, B.pending_buf = new ca.Buf8(B.pending_buf_size), B.d_buf = 1 * B.lit_bufsize, B.l_buf = 3 * B.lit_bufsize, B.level = h, B.strategy = w, B.method = n, nb(g)
            }
            var ca = t("../utils/common"),
                Kb = t("./trees"),
                G = t("./adler32"),
                ka = t("./crc32"),
                pb = t("./messages"),
                da = 0,
                Ba = 4,
                hb = 0,
                va = -2,
                Ga = -1,
                vb = 1,
                zc = 4,
                ua = 2,
                Lc = 8,
                ib = 9,
                mb = 286,
                Ac = 30,
                A = 19,
                Wa = 2 * mb + 1,
                za = 15,
                pa = 3,
                wa = 258,
                Z = wa + pa + 1,
                na =
                42,
                U = 113,
                Q = 1,
                kc = 2,
                W = 3,
                cc = 4;
            var Da = [new L(0, 0, 0, 0, function(g, h) {
                var n = 65535;
                for (n > g.pending_buf_size - 5 && (n = g.pending_buf_size - 5);;) {
                    if (1 >= g.lookahead) {
                        if (w(g), 0 === g.lookahead && h === da) return Q;
                        if (0 === g.lookahead) break
                    }
                    g.strstart += g.lookahead;
                    g.lookahead = 0;
                    var r = g.block_start + n;
                    if ((0 === g.strstart || g.strstart >= r) && (g.lookahead = g.strstart - r, g.strstart = r, ha(g, !1), 0 === g.strm.avail_out) || g.strstart - g.block_start >= g.w_size - Z && (ha(g, !1), 0 === g.strm.avail_out)) return Q
                }
                return g.insert = 0, h === Ba ? (ha(g, !0), 0 ===
                    g.strm.avail_out ? W : cc) : (g.strstart > g.block_start && ha(g, !1), Q)
            }), new L(4, 4, 8, 4, x), new L(4, 5, 16, 8, x), new L(4, 6, 32, 32, x), new L(4, 4, 16, 16, ma), new L(8, 16, 32, 32, ma), new L(8, 16, 128, 128, ma), new L(8, 32, 128, 256, ma), new L(32, 128, 258, 1024, ma), new L(32, 258, 258, 4096, ma)];
            E.deflateInit = function(g, h) {
                return Kc(g, h, Lc, 15, 8, 0)
            };
            E.deflateInit2 = Kc;
            E.deflateReset = nb;
            E.deflateResetKeep = ob;
            E.deflateSetHeader = function(g, h) {
                return g && g.state ? 2 !== g.state.wrap ? va : (g.state.gzhead = h, hb) : va
            };
            E.deflate = function(h, t) {
                var B, u;
                if (!h ||
                    !h.state || 5 < t || 0 > t) return h ? z(h, va) : va;
                if (u = h.state, !h.output || !h.input && 0 !== h.avail_in || 666 === u.status && t !== Ba) return z(h, 0 === h.avail_out ? -5 : va);
                if (u.strm = h, B = u.last_flush, u.last_flush = t, u.status === na)
                    if (2 === u.wrap) h.adler = 0, r(u, 31), r(u, 139), r(u, 8), u.gzhead ? (r(u, (u.gzhead.text ? 1 : 0) + (u.gzhead.hcrc ? 2 : 0) + (u.gzhead.extra ? 4 : 0) + (u.gzhead.name ? 8 : 0) + (u.gzhead.comment ? 16 : 0)), r(u, 255 & u.gzhead.time), r(u, u.gzhead.time >> 8 & 255), r(u, u.gzhead.time >> 16 & 255), r(u, u.gzhead.time >> 24 & 255), r(u, 9 === u.level ? 2 : 2 <= u.strategy ||
                        2 > u.level ? 4 : 0), r(u, 255 & u.gzhead.os), u.gzhead.extra && u.gzhead.extra.length && (r(u, 255 & u.gzhead.extra.length), r(u, u.gzhead.extra.length >> 8 & 255)), u.gzhead.hcrc && (h.adler = ka(h.adler, u.pending_buf, u.pending, 0)), u.gzindex = 0, u.status = 69) : (r(u, 0), r(u, 0), r(u, 0), r(u, 0), r(u, 0), r(u, 9 === u.level ? 2 : 2 <= u.strategy || 2 > u.level ? 4 : 0), r(u, 3), u.status = U);
                    else {
                        var x = Lc + (u.w_bits - 8 << 4) << 8;
                        x |= (2 <= u.strategy || 2 > u.level ? 0 : 6 > u.level ? 1 : 6 === u.level ? 2 : 3) << 6;
                        0 !== u.strstart && (x |= 32);
                        u.status = U;
                        g(u, x + (31 - x % 31));
                        0 !== u.strstart && (g(u,
                            h.adler >>> 16), g(u, 65535 & h.adler));
                        h.adler = 1
                    }
                if (69 === u.status)
                    if (u.gzhead.extra) {
                        for (x = u.pending; u.gzindex < (65535 & u.gzhead.extra.length) && (u.pending !== u.pending_buf_size || (u.gzhead.hcrc && u.pending > x && (h.adler = ka(h.adler, u.pending_buf, u.pending - x, x)), n(h), x = u.pending, u.pending !== u.pending_buf_size));) r(u, 255 & u.gzhead.extra[u.gzindex]), u.gzindex++;
                        u.gzhead.hcrc && u.pending > x && (h.adler = ka(h.adler, u.pending_buf, u.pending - x, x));
                        u.gzindex === u.gzhead.extra.length && (u.gzindex = 0, u.status = 73)
                    } else u.status = 73;
                if (73 === u.status)
                    if (u.gzhead.name) {
                        x = u.pending;
                        do {
                            if (u.pending === u.pending_buf_size && (u.gzhead.hcrc && u.pending > x && (h.adler = ka(h.adler, u.pending_buf, u.pending - x, x)), n(h), x = u.pending, u.pending === u.pending_buf_size)) {
                                var A = 1;
                                break
                            }
                            A = u.gzindex < u.gzhead.name.length ? 255 & u.gzhead.name.charCodeAt(u.gzindex++) : 0;
                            r(u, A)
                        } while (0 !== A);
                        u.gzhead.hcrc && u.pending > x && (h.adler = ka(h.adler, u.pending_buf, u.pending - x, x));
                        0 === A && (u.gzindex = 0, u.status = 91)
                    } else u.status = 91;
                if (91 === u.status)
                    if (u.gzhead.comment) {
                        x = u.pending;
                        do {
                            if (u.pending === u.pending_buf_size && (u.gzhead.hcrc && u.pending > x && (h.adler = ka(h.adler, u.pending_buf, u.pending - x, x)), n(h), x = u.pending, u.pending === u.pending_buf_size)) {
                                A = 1;
                                break
                            }
                            A = u.gzindex < u.gzhead.comment.length ? 255 & u.gzhead.comment.charCodeAt(u.gzindex++) : 0;
                            r(u, A)
                        } while (0 !== A);
                        u.gzhead.hcrc && u.pending > x && (h.adler = ka(h.adler, u.pending_buf, u.pending - x, x));
                        0 === A && (u.status = 103)
                    } else u.status = 103;
                if (103 === u.status && (u.gzhead.hcrc ? (u.pending + 2 > u.pending_buf_size && n(h), u.pending + 2 <= u.pending_buf_size &&
                        (r(u, 255 & h.adler), r(u, h.adler >> 8 & 255), h.adler = 0, u.status = U)) : u.status = U), 0 !== u.pending) {
                    if (n(h), 0 === h.avail_out) return u.last_flush = -1, hb
                } else if (0 === h.avail_in && (t << 1) - (4 < t ? 9 : 0) <= (B << 1) - (4 < B ? 9 : 0) && t !== Ba) return z(h, -5);
                if (666 === u.status && 0 !== h.avail_in) return z(h, -5);
                if (0 !== h.avail_in || 0 !== u.lookahead || t !== da && 666 !== u.status) {
                    if (2 === u.strategy) a: {
                        for (var D;;) {
                            if (0 === u.lookahead && (w(u), 0 === u.lookahead)) {
                                if (t === da) {
                                    var C = Q;
                                    break a
                                }
                                break
                            }
                            if (u.match_length = 0, D = Kb._tr_tally(u, 0, u.window[u.strstart]),
                                u.lookahead--, u.strstart++, D && (ha(u, !1), 0 === u.strm.avail_out)) {
                                C = Q;
                                break a
                            }
                        }
                        C = (u.insert = 0, t === Ba ? (ha(u, !0), 0 === u.strm.avail_out ? W : cc) : u.last_lit && (ha(u, !1), 0 === u.strm.avail_out) ? Q : kc)
                    }
                    else if (3 === u.strategy) a: {
                        var E, G;
                        for (D = u.window;;) {
                            if (u.lookahead <= wa) {
                                if (w(u), u.lookahead <= wa && t === da) {
                                    C = Q;
                                    break a
                                }
                                if (0 === u.lookahead) break
                            }
                            if (u.match_length = 0, u.lookahead >= pa && 0 < u.strstart && (G = u.strstart - 1, E = D[G], E === D[++G] && E === D[++G] && E === D[++G])) {
                                for (B = u.strstart + wa; E === D[++G] && E === D[++G] && E === D[++G] && E === D[++G] &&
                                    E === D[++G] && E === D[++G] && E === D[++G] && E === D[++G] && G < B;);
                                u.match_length = wa - (B - G);
                                u.match_length > u.lookahead && (u.match_length = u.lookahead)
                            }
                            if (u.match_length >= pa ? (C = Kb._tr_tally(u, 1, u.match_length - pa), u.lookahead -= u.match_length, u.strstart += u.match_length, u.match_length = 0) : (C = Kb._tr_tally(u, 0, u.window[u.strstart]), u.lookahead--, u.strstart++), C && (ha(u, !1), 0 === u.strm.avail_out)) {
                                C = Q;
                                break a
                            }
                        }
                        C = (u.insert = 0, t === Ba ? (ha(u, !0), 0 === u.strm.avail_out ? W : cc) : u.last_lit && (ha(u, !1), 0 === u.strm.avail_out) ? Q : kc)
                    }
                    else C =
                        Da[u.level].func(u, t);
                    if (C !== W && C !== cc || (u.status = 666), C === Q || C === W) return 0 === h.avail_out && (u.last_flush = -1), hb;
                    if (C === kc && (1 === t ? Kb._tr_align(u) : 5 !== t && (Kb._tr_stored_block(u, 0, 0, !1), 3 === t && (T(u.head), 0 === u.lookahead && (u.strstart = 0, u.block_start = 0, u.insert = 0))), n(h), 0 === h.avail_out)) return u.last_flush = -1, hb
                }
                return t !== Ba ? hb : 0 >= u.wrap ? 1 : (2 === u.wrap ? (r(u, 255 & h.adler), r(u, h.adler >> 8 & 255), r(u, h.adler >> 16 & 255), r(u, h.adler >> 24 & 255), r(u, 255 & h.total_in), r(u, h.total_in >> 8 & 255), r(u, h.total_in >> 16 & 255), r(u,
                    h.total_in >> 24 & 255)) : (g(u, h.adler >>> 16), g(u, 65535 & h.adler)), n(h), 0 < u.wrap && (u.wrap = -u.wrap), 0 !== u.pending ? hb : 1)
            };
            E.deflateEnd = function(g) {
                var h;
                return g && g.state ? (h = g.state.status, h !== na && 69 !== h && 73 !== h && 91 !== h && 103 !== h && h !== U && 666 !== h ? z(g, va) : (g.state = null, h === U ? z(g, -3) : hb)) : va
            };
            E.deflateSetDictionary = function(g, h) {
                var n, r, t;
                var x = h.length;
                if (!g || !g.state || (n = g.state, r = n.wrap, 2 === r || 1 === r && n.status !== na || n.lookahead)) return va;
                1 === r && (g.adler = G(g.adler, h, x, 0));
                n.wrap = 0;
                x >= n.w_size && (0 === r && (T(n.head),
                    n.strstart = 0, n.block_start = 0, n.insert = 0), t = new ca.Buf8(n.w_size), ca.arraySet(t, h, x - n.w_size, n.w_size, 0), h = t, x = n.w_size);
                t = g.avail_in;
                var z = g.next_in;
                var A = g.input;
                g.avail_in = x;
                g.next_in = 0;
                g.input = h;
                for (w(n); n.lookahead >= pa;) {
                    h = n.strstart;
                    x = n.lookahead - (pa - 1);
                    do n.ins_h = (n.ins_h << n.hash_shift ^ n.window[h + pa - 1]) & n.hash_mask, n.prev[h & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = h, h++; while (--x);
                    n.strstart = h;
                    n.lookahead = pa - 1;
                    w(n)
                }
                return n.strstart += n.lookahead, n.block_start = n.strstart, n.insert = n.lookahead,
                    n.lookahead = 0, n.match_length = n.prev_length = pa - 1, n.match_available = 0, g.next_in = z, g.input = A, g.avail_in = t, n.wrap = r, hb
            };
            E.deflateInfo = "pako deflate (from Nodeca project)"
        }, {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./messages": 13,
            "./trees": 14
        }],
        9: [function(t, C, E) {
            C.exports = function() {
                this.os = this.xflags = this.time = this.text = 0;
                this.extra = null;
                this.extra_len = 0;
                this.comment = this.name = "";
                this.hcrc = 0;
                this.done = !1
            }
        }, {}],
        10: [function(t, C, E) {
            C.exports = function(t, C) {
                var n, z, r;
                var g = t.state;
                var h = t.next_in;
                var w = t.input;
                var x = h + (t.avail_in - 5);
                var E = t.next_out;
                var L = t.output;
                C = E - (C - t.avail_out);
                var J = E + (t.avail_out - 257);
                var T = g.dmax;
                var nb = g.wsize;
                var Kc = g.whave;
                var ca = g.wnext;
                var Kb = g.window;
                var G = g.hold;
                var ka = g.bits;
                var pb = g.lencode;
                var da = g.distcode;
                var Ba = (1 << g.lenbits) - 1;
                var hb = (1 << g.distbits) - 1;
                a: do {
                    15 > ka && (G += w[h++] << ka, ka += 8, G += w[h++] << ka, ka += 8);
                    var va = pb[G & Ba];
                    b: for (;;) {
                        if (n = va >>> 24, G >>>= n, ka -= n, n = va >>> 16 & 255, 0 === n) L[E++] = 65535 & va;
                        else {
                            if (!(16 & n)) {
                                if (0 === (64 & n)) {
                                    va = pb[(65535 & va) + (G & (1 << n) -
                                        1)];
                                    continue b
                                }
                                if (32 & n) {
                                    g.mode = 12;
                                    break a
                                }
                                t.msg = "invalid literal/length code";
                                g.mode = 30;
                                break a
                            }
                            var Ga = 65535 & va;
                            (n &= 15) && (ka < n && (G += w[h++] << ka, ka += 8), Ga += G & (1 << n) - 1, G >>>= n, ka -= n);
                            15 > ka && (G += w[h++] << ka, ka += 8, G += w[h++] << ka, ka += 8);
                            va = da[G & hb];
                            c: for (;;) {
                                if (n = va >>> 24, G >>>= n, ka -= n, n = va >>> 16 & 255, !(16 & n)) {
                                    if (0 === (64 & n)) {
                                        va = da[(65535 & va) + (G & (1 << n) - 1)];
                                        continue c
                                    }
                                    t.msg = "invalid distance code";
                                    g.mode = 30;
                                    break a
                                }
                                if (z = 65535 & va, n &= 15, ka < n && (G += w[h++] << ka, ka += 8, ka < n && (G += w[h++] << ka, ka += 8)), z += G & (1 << n) - 1, z > T) {
                                    t.msg =
                                        "invalid distance too far back";
                                    g.mode = 30;
                                    break a
                                }
                                if (G >>>= n, ka -= n, n = E - C, z > n) {
                                    if (n = z - n, n > Kc && g.sane) {
                                        t.msg = "invalid distance too far back";
                                        g.mode = 30;
                                        break a
                                    }
                                    if (va = 0, r = Kb, 0 === ca) {
                                        if (va += nb - n, n < Ga) {
                                            Ga -= n;
                                            do L[E++] = Kb[va++]; while (--n);
                                            va = E - z;
                                            r = L
                                        }
                                    } else if (ca < n) {
                                        if (va += nb + ca - n, n -= ca, n < Ga) {
                                            Ga -= n;
                                            do L[E++] = Kb[va++]; while (--n);
                                            if (va = 0, ca < Ga) {
                                                n = ca;
                                                Ga -= n;
                                                do L[E++] = Kb[va++]; while (--n);
                                                va = E - z;
                                                r = L
                                            }
                                        }
                                    } else if (va += ca - n, n < Ga) {
                                        Ga -= n;
                                        do L[E++] = Kb[va++]; while (--n);
                                        va = E - z;
                                        r = L
                                    }
                                    for (; 2 < Ga;) L[E++] = r[va++], L[E++] = r[va++], L[E++] =
                                        r[va++], Ga -= 3;
                                    Ga && (L[E++] = r[va++], 1 < Ga && (L[E++] = r[va++]))
                                } else {
                                    va = E - z;
                                    do L[E++] = L[va++], L[E++] = L[va++], L[E++] = L[va++], Ga -= 3; while (2 < Ga);
                                    Ga && (L[E++] = L[va++], 1 < Ga && (L[E++] = L[va++]))
                                }
                                break
                            }
                        }
                        break
                    }
                } while (h < x && E < J);
                Ga = ka >> 3;
                h -= Ga;
                ka -= Ga << 3;
                t.next_in = h;
                t.next_out = E;
                t.avail_in = h < x ? 5 + (x - h) : 5 - (h - x);
                t.avail_out = E < J ? 257 + (J - E) : 257 - (E - J);
                g.hold = G & (1 << ka) - 1;
                g.bits = ka
            }
        }, {}],
        11: [function(t, C, E) {
            function z(g) {
                return (g >>> 24 & 255) + (g >>> 8 & 65280) + ((65280 & g) << 8) + ((255 & g) << 24)
            }

            function T() {
                this.mode = 0;
                this.last = !1;
                this.wrap =
                    0;
                this.havedict = !1;
                this.total = this.check = this.dmax = this.flags = 0;
                this.head = null;
                this.wnext = this.whave = this.wsize = this.wbits = 0;
                this.window = null;
                this.extra = this.offset = this.length = this.bits = this.hold = 0;
                this.distcode = this.lencode = null;
                this.have = this.ndist = this.nlen = this.ncode = this.distbits = this.lenbits = 0;
                this.next = null;
                this.lens = new ma.Buf16(320);
                this.work = new ma.Buf16(288);
                this.distdyn = this.lendyn = null;
                this.was = this.back = this.sane = 0
            }

            function n(g) {
                var h;
                return g && g.state ? (h = g.state, g.total_in = g.total_out =
                    h.total = 0, g.msg = "", h.wrap && (g.adler = 1 & h.wrap), h.mode = Kb, h.last = 0, h.havedict = 0, h.dmax = 32768, h.head = null, h.hold = 0, h.bits = 0, h.lencode = h.lendyn = new ma.Buf32(G), h.distcode = h.distdyn = new ma.Buf32(ka), h.sane = 1, h.back = -1, Kc) : ca
            }

            function ha(g) {
                var h;
                return g && g.state ? (h = g.state, h.wsize = 0, h.whave = 0, h.wnext = 0, n(g)) : ca
            }

            function r(g, h) {
                var n, r;
                return g && g.state ? (r = g.state, 0 > h ? (n = 0, h = -h) : (n = (h >> 4) + 1, 48 > h && (h &= 15)), h && (8 > h || 15 < h) ? ca : (null !== r.window && r.wbits !== h && (r.window = null), r.wrap = n, r.wbits = h, ha(g))) : ca
            }

            function g(g,
                h) {
                var n, t;
                return g ? (t = new T, g.state = t, t.window = null, n = r(g, h), n !== Kc && (g.state = null), n) : ca
            }

            function h(g, h, n, r) {
                var t;
                g = g.state;
                return null === g.window && (g.wsize = 1 << g.wbits, g.wnext = 0, g.whave = 0, g.window = new ma.Buf8(g.wsize)), r >= g.wsize ? (ma.arraySet(g.window, h, n - g.wsize, g.wsize, 0), g.wnext = 0, g.whave = g.wsize) : (t = g.wsize - g.wnext, t > r && (t = r), ma.arraySet(g.window, h, n - r, t, g.wnext), r -= t, r ? (ma.arraySet(g.window, h, n - r, r, 0), g.wnext = r, g.whave = g.wsize) : (g.wnext += t, g.wnext === g.wsize && (g.wnext = 0), g.whave < g.wsize && (g.whave +=
                    t))), 0
            }
            var w, x, ma = t("../utils/common"),
                L = t("./adler32"),
                J = t("./crc32"),
                ob = t("./inffast"),
                nb = t("./inftrees"),
                Kc = 0,
                ca = -2,
                Kb = 1,
                G = 852,
                ka = 592,
                pb = !0;
            E.inflateReset = ha;
            E.inflateReset2 = r;
            E.inflateResetKeep = n;
            E.inflateInit = function(h) {
                return g(h, 15)
            };
            E.inflateInit2 = g;
            E.inflate = function(g, n) {
                var r, t, C, E, G, T, da, ha = 0,
                    ka = new ma.Buf8(4),
                    Ba = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                if (!g || !g.state || !g.output || !g.input && 0 !== g.avail_in) return ca;
                var A = g.state;
                12 === A.mode && (A.mode = 13);
                var Wa = g.next_out;
                var za =
                    g.output;
                var pa = g.avail_out;
                var wa = g.next_in;
                var Z = g.input;
                var na = g.avail_in;
                var U = A.hold;
                var Q = A.bits;
                var kc = na;
                var W = pa;
                var cc = Kc;
                a: for (;;) switch (A.mode) {
                    case Kb:
                        if (0 === A.wrap) {
                            A.mode = 13;
                            break
                        }
                        for (; 16 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        if (2 & A.wrap && 35615 === U) {
                            A.check = 0;
                            ka[0] = 255 & U;
                            ka[1] = U >>> 8 & 255;
                            A.check = J(A.check, ka, 2, 0);
                            Q = U = 0;
                            A.mode = 2;
                            break
                        }
                        if (A.flags = 0, A.head && (A.head.done = !1), !(1 & A.wrap) || (((255 & U) << 8) + (U >> 8)) % 31) {
                            g.msg = "incorrect header check";
                            A.mode = 30;
                            break
                        }
                        if (8 !== (15 & U)) {
                            g.msg =
                                "unknown compression method";
                            A.mode = 30;
                            break
                        }
                        if (U >>>= 4, Q -= 4, T = (15 & U) + 8, 0 === A.wbits) A.wbits = T;
                        else if (T > A.wbits) {
                            g.msg = "invalid window size";
                            A.mode = 30;
                            break
                        }
                        A.dmax = 1 << T;
                        g.adler = A.check = 1;
                        A.mode = 512 & U ? 10 : 12;
                        Q = U = 0;
                        break;
                    case 2:
                        for (; 16 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        if (A.flags = U, 8 !== (255 & A.flags)) {
                            g.msg = "unknown compression method";
                            A.mode = 30;
                            break
                        }
                        if (57344 & A.flags) {
                            g.msg = "unknown header flags set";
                            A.mode = 30;
                            break
                        }
                        A.head && (A.head.text = U >> 8 & 1);
                        512 & A.flags && (ka[0] = 255 & U, ka[1] = U >>> 8 & 255, A.check =
                            J(A.check, ka, 2, 0));
                        Q = U = 0;
                        A.mode = 3;
                    case 3:
                        for (; 32 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        A.head && (A.head.time = U);
                        512 & A.flags && (ka[0] = 255 & U, ka[1] = U >>> 8 & 255, ka[2] = U >>> 16 & 255, ka[3] = U >>> 24 & 255, A.check = J(A.check, ka, 4, 0));
                        Q = U = 0;
                        A.mode = 4;
                    case 4:
                        for (; 16 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        A.head && (A.head.xflags = 255 & U, A.head.os = U >> 8);
                        512 & A.flags && (ka[0] = 255 & U, ka[1] = U >>> 8 & 255, A.check = J(A.check, ka, 2, 0));
                        Q = U = 0;
                        A.mode = 5;
                    case 5:
                        if (1024 & A.flags) {
                            for (; 16 > Q;) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q +=
                                    8
                            }
                            A.length = U;
                            A.head && (A.head.extra_len = U);
                            512 & A.flags && (ka[0] = 255 & U, ka[1] = U >>> 8 & 255, A.check = J(A.check, ka, 2, 0));
                            Q = U = 0
                        } else A.head && (A.head.extra = null);
                        A.mode = 6;
                    case 6:
                        if (1024 & A.flags && (r = A.length, r > na && (r = na), r && (A.head && (T = A.head.extra_len - A.length, A.head.extra || (A.head.extra = Array(A.head.extra_len)), ma.arraySet(A.head.extra, Z, wa, r, T)), 512 & A.flags && (A.check = J(A.check, Z, r, wa)), na -= r, wa += r, A.length -= r), A.length)) break a;
                        A.length = 0;
                        A.mode = 7;
                    case 7:
                        if (2048 & A.flags) {
                            if (0 === na) break a;
                            r = 0;
                            do T = Z[wa + r++],
                                A.head && T && 65536 > A.length && (A.head.name += String.fromCharCode(T)); while (T && r < na);
                            if (512 & A.flags && (A.check = J(A.check, Z, r, wa)), na -= r, wa += r, T) break a
                        } else A.head && (A.head.name = null);
                        A.length = 0;
                        A.mode = 8;
                    case 8:
                        if (4096 & A.flags) {
                            if (0 === na) break a;
                            r = 0;
                            do T = Z[wa + r++], A.head && T && 65536 > A.length && (A.head.comment += String.fromCharCode(T)); while (T && r < na);
                            if (512 & A.flags && (A.check = J(A.check, Z, r, wa)), na -= r, wa += r, T) break a
                        } else A.head && (A.head.comment = null);
                        A.mode = 9;
                    case 9:
                        if (512 & A.flags) {
                            for (; 16 > Q;) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            if (U !== (65535 & A.check)) {
                                g.msg = "header crc mismatch";
                                A.mode = 30;
                                break
                            }
                            Q = U = 0
                        }
                        A.head && (A.head.hcrc = A.flags >> 9 & 1, A.head.done = !0);
                        g.adler = A.check = 0;
                        A.mode = 12;
                        break;
                    case 10:
                        for (; 32 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        g.adler = A.check = z(U);
                        Q = U = 0;
                        A.mode = 11;
                    case 11:
                        if (0 === A.havedict) return g.next_out = Wa, g.avail_out = pa, g.next_in = wa, g.avail_in = na, A.hold = U, A.bits = Q, 2;
                        g.adler = A.check = 1;
                        A.mode = 12;
                    case 12:
                        if (5 === n || 6 === n) break a;
                    case 13:
                        if (A.last) {
                            U >>>= 7 & Q;
                            Q -= 7 & Q;
                            A.mode = 27;
                            break
                        }
                        for (; 3 >
                            Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        switch (A.last = 1 & U, U >>>= 1, --Q, 3 & U) {
                            case 0:
                                A.mode = 14;
                                break;
                            case 1:
                                var Da = A;
                                if (pb) {
                                    w = new ma.Buf32(512);
                                    x = new ma.Buf32(32);
                                    for (C = 0; 144 > C;) Da.lens[C++] = 8;
                                    for (; 256 > C;) Da.lens[C++] = 9;
                                    for (; 280 > C;) Da.lens[C++] = 7;
                                    for (; 288 > C;) Da.lens[C++] = 8;
                                    nb(1, Da.lens, 0, 288, w, 0, Da.work, {
                                        bits: 9
                                    });
                                    for (C = 0; 32 > C;) Da.lens[C++] = 5;
                                    nb(2, Da.lens, 0, 32, x, 0, Da.work, {
                                        bits: 5
                                    });
                                    pb = !1
                                }
                                Da.lencode = w;
                                Da.lenbits = 9;
                                Da.distcode = x;
                                Da.distbits = 5;
                                if (A.mode = 20, 6 === n) {
                                    U >>>= 2;
                                    Q -= 2;
                                    break a
                                }
                                break;
                            case 2:
                                A.mode =
                                    17;
                                break;
                            case 3:
                                g.msg = "invalid block type", A.mode = 30
                        }
                        U >>>= 2;
                        Q -= 2;
                        break;
                    case 14:
                        U >>>= 7 & Q;
                        for (Q -= 7 & Q; 32 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        if ((65535 & U) !== (U >>> 16 ^ 65535)) {
                            g.msg = "invalid stored block lengths";
                            A.mode = 30;
                            break
                        }
                        if (A.length = 65535 & U, U = 0, Q = 0, A.mode = 15, 6 === n) break a;
                    case 15:
                        A.mode = 16;
                    case 16:
                        if (r = A.length) {
                            if (r > na && (r = na), r > pa && (r = pa), 0 === r) break a;
                            ma.arraySet(za, Z, wa, r, Wa);
                            na -= r;
                            wa += r;
                            pa -= r;
                            Wa += r;
                            A.length -= r;
                            break
                        }
                        A.mode = 12;
                        break;
                    case 17:
                        for (; 14 > Q;) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] <<
                                Q;
                            Q += 8
                        }
                        if (A.nlen = (31 & U) + 257, U >>>= 5, Q -= 5, A.ndist = (31 & U) + 1, U >>>= 5, Q -= 5, A.ncode = (15 & U) + 4, U >>>= 4, Q -= 4, 286 < A.nlen || 30 < A.ndist) {
                            g.msg = "too many length or distance symbols";
                            A.mode = 30;
                            break
                        }
                        A.have = 0;
                        A.mode = 18;
                    case 18:
                        for (; A.have < A.ncode;) {
                            for (; 3 > Q;) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            A.lens[Ba[A.have++]] = 7 & U;
                            U >>>= 3;
                            Q -= 3
                        }
                        for (; 19 > A.have;) A.lens[Ba[A.have++]] = 0;
                        if (A.lencode = A.lendyn, A.lenbits = 7, da = {
                                bits: A.lenbits
                            }, cc = nb(0, A.lens, 0, 19, A.lencode, 0, A.work, da), A.lenbits = da.bits, cc) {
                            g.msg = "invalid code lengths set";
                            A.mode = 30;
                            break
                        }
                        A.have = 0;
                        A.mode = 19;
                    case 19:
                        for (; A.have < A.nlen + A.ndist;) {
                            for (; ha = A.lencode[U & (1 << A.lenbits) - 1], E = ha >>> 24, Da = 65535 & ha, !(E <= Q);) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            if (16 > Da) U >>>= E, Q -= E, A.lens[A.have++] = Da;
                            else {
                                if (16 === Da) {
                                    for (C = E + 2; Q < C;) {
                                        if (0 === na) break a;
                                        na--;
                                        U += Z[wa++] << Q;
                                        Q += 8
                                    }
                                    if (U >>>= E, Q -= E, 0 === A.have) {
                                        g.msg = "invalid bit length repeat";
                                        A.mode = 30;
                                        break
                                    }
                                    T = A.lens[A.have - 1];
                                    r = 3 + (3 & U);
                                    U >>>= 2;
                                    Q -= 2
                                } else if (17 === Da) {
                                    for (C = E + 3; Q < C;) {
                                        if (0 === na) break a;
                                        na--;
                                        U += Z[wa++] << Q;
                                        Q += 8
                                    }
                                    U >>>= E;
                                    Q -=
                                        E;
                                    T = 0;
                                    r = 3 + (7 & U);
                                    U >>>= 3;
                                    Q -= 3
                                } else {
                                    for (C = E + 7; Q < C;) {
                                        if (0 === na) break a;
                                        na--;
                                        U += Z[wa++] << Q;
                                        Q += 8
                                    }
                                    U >>>= E;
                                    Q -= E;
                                    T = 0;
                                    r = 11 + (127 & U);
                                    U >>>= 7;
                                    Q -= 7
                                }
                                if (A.have + r > A.nlen + A.ndist) {
                                    g.msg = "invalid bit length repeat";
                                    A.mode = 30;
                                    break
                                }
                                for (; r--;) A.lens[A.have++] = T
                            }
                        }
                        if (30 === A.mode) break;
                        if (0 === A.lens[256]) {
                            g.msg = "invalid code -- missing end-of-block";
                            A.mode = 30;
                            break
                        }
                        if (A.lenbits = 9, da = {
                                bits: A.lenbits
                            }, cc = nb(1, A.lens, 0, A.nlen, A.lencode, 0, A.work, da), A.lenbits = da.bits, cc) {
                            g.msg = "invalid literal/lengths set";
                            A.mode = 30;
                            break
                        }
                        if (A.distbits =
                            6, A.distcode = A.distdyn, da = {
                                bits: A.distbits
                            }, cc = nb(2, A.lens, A.nlen, A.ndist, A.distcode, 0, A.work, da), A.distbits = da.bits, cc) {
                            g.msg = "invalid distances set";
                            A.mode = 30;
                            break
                        }
                        if (A.mode = 20, 6 === n) break a;
                    case 20:
                        A.mode = 21;
                    case 21:
                        if (6 <= na && 258 <= pa) {
                            g.next_out = Wa;
                            g.avail_out = pa;
                            g.next_in = wa;
                            g.avail_in = na;
                            A.hold = U;
                            A.bits = Q;
                            ob(g, W);
                            Wa = g.next_out;
                            za = g.output;
                            pa = g.avail_out;
                            wa = g.next_in;
                            Z = g.input;
                            na = g.avail_in;
                            U = A.hold;
                            Q = A.bits;
                            12 === A.mode && (A.back = -1);
                            break
                        }
                        for (A.back = 0; ha = A.lencode[U & (1 << A.lenbits) - 1], E = ha >>>
                            24, C = ha >>> 16 & 255, Da = 65535 & ha, !(E <= Q);) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        if (C && 0 === (240 & C)) {
                            var D = E;
                            var xb = C;
                            for (G = Da; ha = A.lencode[G + ((U & (1 << D + xb) - 1) >> D)], E = ha >>> 24, C = ha >>> 16 & 255, Da = 65535 & ha, !(D + E <= Q);) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            U >>>= D;
                            Q -= D;
                            A.back += D
                        }
                        if (U >>>= E, Q -= E, A.back += E, A.length = Da, 0 === C) {
                            A.mode = 26;
                            break
                        }
                        if (32 & C) {
                            A.back = -1;
                            A.mode = 12;
                            break
                        }
                        if (64 & C) {
                            g.msg = "invalid literal/length code";
                            A.mode = 30;
                            break
                        }
                        A.extra = 15 & C;
                        A.mode = 22;
                    case 22:
                        if (A.extra) {
                            for (C = A.extra; Q < C;) {
                                if (0 ===
                                    na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            A.length += U & (1 << A.extra) - 1;
                            U >>>= A.extra;
                            Q -= A.extra;
                            A.back += A.extra
                        }
                        A.was = A.length;
                        A.mode = 23;
                    case 23:
                        for (; ha = A.distcode[U & (1 << A.distbits) - 1], E = ha >>> 24, C = ha >>> 16 & 255, Da = 65535 & ha, !(E <= Q);) {
                            if (0 === na) break a;
                            na--;
                            U += Z[wa++] << Q;
                            Q += 8
                        }
                        if (0 === (240 & C)) {
                            D = E;
                            xb = C;
                            for (G = Da; ha = A.distcode[G + ((U & (1 << D + xb) - 1) >> D)], E = ha >>> 24, C = ha >>> 16 & 255, Da = 65535 & ha, !(D + E <= Q);) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            U >>>= D;
                            Q -= D;
                            A.back += D
                        }
                        if (U >>>= E, Q -= E, A.back += E, 64 & C) {
                            g.msg = "invalid distance code";
                            A.mode = 30;
                            break
                        }
                        A.offset = Da;
                        A.extra = 15 & C;
                        A.mode = 24;
                    case 24:
                        if (A.extra) {
                            for (C = A.extra; Q < C;) {
                                if (0 === na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            A.offset += U & (1 << A.extra) - 1;
                            U >>>= A.extra;
                            Q -= A.extra;
                            A.back += A.extra
                        }
                        if (A.offset > A.dmax) {
                            g.msg = "invalid distance too far back";
                            A.mode = 30;
                            break
                        }
                        A.mode = 25;
                    case 25:
                        if (0 === pa) break a;
                        if (r = W - pa, A.offset > r) {
                            if (r = A.offset - r, r > A.whave && A.sane) {
                                g.msg = "invalid distance too far back";
                                A.mode = 30;
                                break
                            }
                            r > A.wnext ? (r -= A.wnext, t = A.wsize - r) : t = A.wnext - r;
                            r > A.length && (r = A.length);
                            C = A.window
                        } else C =
                            za, t = Wa - A.offset, r = A.length;
                        r > pa && (r = pa);
                        pa -= r;
                        A.length -= r;
                        do za[Wa++] = C[t++]; while (--r);
                        0 === A.length && (A.mode = 21);
                        break;
                    case 26:
                        if (0 === pa) break a;
                        za[Wa++] = A.length;
                        pa--;
                        A.mode = 21;
                        break;
                    case 27:
                        if (A.wrap) {
                            for (; 32 > Q;) {
                                if (0 === na) break a;
                                na--;
                                U |= Z[wa++] << Q;
                                Q += 8
                            }
                            if (W -= pa, g.total_out += W, A.total += W, W && (g.adler = A.check = A.flags ? J(A.check, za, W, Wa - W) : L(A.check, za, W, Wa - W)), W = pa, (A.flags ? U : z(U)) !== A.check) {
                                g.msg = "incorrect data check";
                                A.mode = 30;
                                break
                            }
                            Q = U = 0
                        }
                        A.mode = 28;
                    case 28:
                        if (A.wrap && A.flags) {
                            for (; 32 > Q;) {
                                if (0 ===
                                    na) break a;
                                na--;
                                U += Z[wa++] << Q;
                                Q += 8
                            }
                            if (U !== (4294967295 & A.total)) {
                                g.msg = "incorrect length check";
                                A.mode = 30;
                                break
                            }
                            Q = U = 0
                        }
                        A.mode = 29;
                    case 29:
                        cc = 1;
                        break a;
                    case 30:
                        cc = -3;
                        break a;
                    case 31:
                        return -4;
                    default:
                        return ca
                }
                return g.next_out = Wa, g.avail_out = pa, g.next_in = wa, g.avail_in = na, A.hold = U, A.bits = Q, (A.wsize || W !== g.avail_out && 30 > A.mode && (27 > A.mode || 4 !== n)) && h(g, g.output, g.next_out, W - g.avail_out) ? (A.mode = 31, -4) : (kc -= g.avail_in, W -= g.avail_out, g.total_in += kc, g.total_out += W, A.total += W, A.wrap && W && (g.adler = A.check = A.flags ?
                    J(A.check, za, W, g.next_out - W) : L(A.check, za, W, g.next_out - W)), g.data_type = A.bits + (A.last ? 64 : 0) + (12 === A.mode ? 128 : 0) + (20 === A.mode || 15 === A.mode ? 256 : 0), (0 === kc && 0 === W || 4 === n) && cc === Kc && (cc = -5), cc)
            };
            E.inflateEnd = function(g) {
                if (!g || !g.state) return ca;
                var h = g.state;
                return h.window && (h.window = null), g.state = null, Kc
            };
            E.inflateGetHeader = function(g, h) {
                var n;
                return g && g.state ? (n = g.state, 0 === (2 & n.wrap) ? ca : (n.head = h, h.done = !1, Kc)) : ca
            };
            E.inflateSetDictionary = function(g, n) {
                var r, t, x = n.length;
                return g && g.state ? (r = g.state,
                    0 !== r.wrap && 11 !== r.mode ? ca : 11 === r.mode && (t = 1, t = L(t, n, x, 0), t !== r.check) ? -3 : h(g, n, x, x) ? (r.mode = 31, -4) : (r.havedict = 1, Kc)) : ca
            };
            E.inflateInfo = "pako inflate (from Nodeca project)"
        }, {
            "../utils/common": 3,
            "./adler32": 5,
            "./crc32": 7,
            "./inffast": 10,
            "./inftrees": 12
        }],
        12: [function(t, C, E) {
            var z = t("../utils/common"),
                T = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                n = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                ha = [1, 2,
                    3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0
                ],
                r = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
            C.exports = function(g, h, t, x, C, E, J, ob) {
                var w, L, ca, ma, G, ka, pb = ob.bits,
                    da, Ba, hb, va, Ga, vb = 0,
                    zc, ua = null,
                    Lc = 0,
                    ib = new z.Buf16(16);
                var mb = new z.Buf16(16);
                var Ac = null,
                    A = 0;
                for (da = 0; 15 >= da; da++) ib[da] = 0;
                for (Ba = 0; Ba < x; Ba++) ib[h[t + Ba]]++;
                var Wa = pb;
                for (hb = 15; 1 <= hb && 0 === ib[hb]; hb--);
                if (Wa > hb && (Wa = hb), 0 ===
                    hb) return C[E++] = 20971520, C[E++] = 20971520, ob.bits = 1, 0;
                for (pb = 1; pb < hb && 0 === ib[pb]; pb++);
                Wa < pb && (Wa = pb);
                for (da = w = 1; 15 >= da; da++)
                    if (w <<= 1, w -= ib[da], 0 > w) return -1;
                if (0 < w && (0 === g || 1 !== hb)) return -1;
                mb[1] = 0;
                for (da = 1; 15 > da; da++) mb[da + 1] = mb[da] + ib[da];
                for (Ba = 0; Ba < x; Ba++) 0 !== h[t + Ba] && (J[mb[h[t + Ba]]++] = Ba);
                if (0 === g ? (ua = Ac = J, ma = 19) : 1 === g ? (ua = T, Lc -= 257, Ac = n, A -= 257, ma = 256) : (ua = ha, Ac = r, ma = -1), zc = 0, Ba = 0, da = pb, mb = E, va = Wa, Ga = 0, ca = -1, vb = 1 << Wa, x = vb - 1, 1 === g && 852 < vb || 2 === g && 592 < vb) return 1;
                for (var za = 0;;) {
                    za++;
                    var pa = da -
                        Ga;
                    J[Ba] < ma ? (G = 0, ka = J[Ba]) : J[Ba] > ma ? (G = Ac[A + J[Ba]], ka = ua[Lc + J[Ba]]) : (G = 96, ka = 0);
                    w = 1 << da - Ga;
                    pb = L = 1 << va;
                    do L -= w, C[mb + (zc >> Ga) + L] = pa << 24 | G << 16 | ka | 0; while (0 !== L);
                    for (w = 1 << da - 1; zc & w;) w >>= 1;
                    if (0 !== w ? (zc &= w - 1, zc += w) : zc = 0, Ba++, 0 === --ib[da]) {
                        if (da === hb) break;
                        da = h[t + J[Ba]]
                    }
                    if (da > Wa && (zc & x) !== ca) {
                        0 === Ga && (Ga = Wa);
                        mb += pb;
                        va = da - Ga;
                        for (w = 1 << va; va + Ga < hb && (w -= ib[va + Ga], !(0 >= w));) va++, w <<= 1;
                        if (vb += 1 << va, 1 === g && 852 < vb || 2 === g && 592 < vb) return 1;
                        ca = zc & x;
                        C[ca] = Wa << 24 | va << 16 | mb - E | 0
                    }
                }
                return 0 !== zc && (C[mb + zc] = da - Ga << 24 | 4194304),
                    ob.bits = Wa, 0
            }
        }, {
            "../utils/common": 3
        }],
        13: [function(t, C, E) {
            C.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }, {}],
        14: [function(t, C, E) {
            function z(g) {
                for (var h = g.length; 0 <= --h;) g[h] = 0
            }

            function T(g, h, n, r, t) {
                this.static_tree = g;
                this.extra_bits = h;
                this.extra_base = n;
                this.elems = r;
                this.max_length = t;
                this.has_stree = g && g.length
            }

            function n(g, h) {
                this.dyn_tree = g;
                this.max_code = 0;
                this.stat_desc =
                    h
            }

            function ha(g, h) {
                g.pending_buf[g.pending++] = 255 & h;
                g.pending_buf[g.pending++] = h >>> 8 & 255
            }

            function r(g, h, n) {
                g.bi_valid > Lc - n ? (g.bi_buf |= h << g.bi_valid & 65535, ha(g, g.bi_buf), g.bi_buf = h >> Lc - g.bi_valid, g.bi_valid += n - Lc) : (g.bi_buf |= h << g.bi_valid & 65535, g.bi_valid += n)
            }

            function g(g, h, n) {
                r(g, n[2 * h], n[2 * h + 1])
            }

            function h(g, h) {
                var n = 0;
                do n |= 1 & g, g >>>= 1, n <<= 1; while (0 < --h);
                return n >>> 1
            }

            function w(g, n, r) {
                var t, u = Array(ua + 1),
                    B = 0;
                for (t = 1; t <= ua; t++) u[t] = B = B + r[t - 1] << 1;
                for (r = 0; r <= n; r++) t = g[2 * r + 1], 0 !== t && (g[2 * r] = h(u[t]++,
                    t))
            }

            function x(g) {
                var h;
                for (h = 0; h < va; h++) g.dyn_ltree[2 * h] = 0;
                for (h = 0; h < Ga; h++) g.dyn_dtree[2 * h] = 0;
                for (h = 0; h < vb; h++) g.bl_tree[2 * h] = 0;
                g.dyn_ltree[2 * ib] = 1;
                g.opt_len = g.static_len = 0;
                g.last_lit = g.matches = 0
            }

            function ma(g) {
                8 < g.bi_valid ? ha(g, g.bi_buf) : 0 < g.bi_valid && (g.pending_buf[g.pending++] = g.bi_buf);
                g.bi_buf = 0;
                g.bi_valid = 0
            }

            function L(g, h, n, r) {
                var t = 2 * h,
                    u = 2 * n;
                return g[t] < g[u] || g[t] === g[u] && r[h] <= r[n]
            }

            function J(g, h, n) {
                for (var r = g.heap[n], t = n << 1; t <= g.heap_len && (t < g.heap_len && L(h, g.heap[t + 1], g.heap[t], g.depth) &&
                        t++, !L(h, r, g.heap[t], g.depth));) g.heap[n] = g.heap[t], n = t, t <<= 1;
                g.heap[n] = r
            }

            function ob(h, n, t) {
                var u, B, w = 0;
                if (0 !== h.last_lit) {
                    do {
                        var x = h.pending_buf[h.d_buf + 2 * w] << 8 | h.pending_buf[h.d_buf + 2 * w + 1];
                        var z = h.pending_buf[h.l_buf + w];
                        w++;
                        0 === x ? g(h, z, n) : (u = Q[z], g(h, u + hb + 1, n), B = Wa[u], 0 !== B && (z -= kc[u], r(h, z, B)), x--, u = 256 > x ? U[x] : U[256 + (x >>> 7)], g(h, u, t), B = za[u], 0 !== B && (x -= W[u], r(h, x, B)))
                    } while (w < h.last_lit)
                }
                g(h, ib, n)
            }

            function nb(g, h) {
                var n, r = h.dyn_tree;
                var t = h.stat_desc.static_tree;
                var u = h.stat_desc.has_stree,
                    x =
                    h.stat_desc.elems,
                    B = -1;
                g.heap_len = 0;
                g.heap_max = zc;
                for (n = 0; n < x; n++) 0 !== r[2 * n] ? (g.heap[++g.heap_len] = B = n, g.depth[n] = 0) : r[2 * n + 1] = 0;
                for (; 2 > g.heap_len;) {
                    var z = g.heap[++g.heap_len] = 2 > B ? ++B : 0;
                    r[2 * z] = 1;
                    g.depth[z] = 0;
                    g.opt_len--;
                    u && (g.static_len -= t[2 * z + 1])
                }
                h.max_code = B;
                for (n = g.heap_len >> 1; 1 <= n; n--) J(g, r, n);
                z = x;
                do n = g.heap[1], g.heap[1] = g.heap[g.heap_len--], J(g, r, 1), t = g.heap[1], g.heap[--g.heap_max] = n, g.heap[--g.heap_max] = t, r[2 * z] = r[2 * n] + r[2 * t], g.depth[z] = (g.depth[n] >= g.depth[t] ? g.depth[n] : g.depth[t]) + 1, r[2 * n +
                    1] = r[2 * t + 1] = z, g.heap[1] = z++, J(g, r, 1); while (2 <= g.heap_len);
                g.heap[--g.heap_max] = g.heap[1];
                var A, C;
                n = h.dyn_tree;
                z = h.max_code;
                x = h.stat_desc.static_tree;
                var D = h.stat_desc.has_stree,
                    E = h.stat_desc.extra_bits,
                    G = h.stat_desc.extra_base,
                    L = h.stat_desc.max_length,
                    Q = 0;
                for (u = 0; u <= ua; u++) g.bl_count[u] = 0;
                n[2 * g.heap[g.heap_max] + 1] = 0;
                for (h = g.heap_max + 1; h < zc; h++) t = g.heap[h], u = n[2 * n[2 * t + 1] + 1] + 1, u > L && (u = L, Q++), n[2 * t + 1] = u, t > z || (g.bl_count[u]++, A = 0, t >= G && (A = E[t - G]), C = n[2 * t], g.opt_len += C * (u + A), D && (g.static_len += C * (x[2 * t +
                    1] + A)));
                if (0 !== Q) {
                    do {
                        for (u = L - 1; 0 === g.bl_count[u];) u--;
                        g.bl_count[u]--;
                        g.bl_count[u + 1] += 2;
                        g.bl_count[L]--;
                        Q -= 2
                    } while (0 < Q);
                    for (u = L; 0 !== u; u--)
                        for (t = g.bl_count[u]; 0 !== t;) A = g.heap[--h], A > z || (n[2 * A + 1] !== u && (g.opt_len += (u - n[2 * A + 1]) * n[2 * A], n[2 * A + 1] = u), t--)
                }
                w(r, B, g.bl_count)
            }

            function Kc(g, h, n) {
                var r, t = -1,
                    u = h[1],
                    w = 0,
                    x = 7,
                    B = 4;
                0 === u && (x = 138, B = 3);
                h[2 * (n + 1) + 1] = 65535;
                for (r = 0; r <= n; r++) {
                    var z = u;
                    u = h[2 * (r + 1) + 1];
                    ++w < x && z === u || (w < B ? g.bl_tree[2 * z] += w : 0 !== z ? (z !== t && g.bl_tree[2 * z]++, g.bl_tree[2 * mb]++) : 10 >= w ? g.bl_tree[2 * Ac]++ :
                        g.bl_tree[2 * A]++, w = 0, t = z, 0 === u ? (x = 138, B = 3) : z === u ? (x = 6, B = 3) : (x = 7, B = 4))
                }
            }

            function ca(h, n, t) {
                var u, w, x = -1,
                    B = n[1],
                    z = 0,
                    C = 7,
                    D = 4;
                0 === B && (C = 138, D = 3);
                for (u = 0; u <= t; u++)
                    if (w = B, B = n[2 * (u + 1) + 1], !(++z < C && w === B)) {
                        if (z < D) {
                            do g(h, w, h.bl_tree); while (0 !== --z)
                        } else 0 !== w ? (w !== x && (g(h, w, h.bl_tree), z--), g(h, mb, h.bl_tree), r(h, z - 3, 2)) : 10 >= z ? (g(h, Ac, h.bl_tree), r(h, z - 3, 3)) : (g(h, A, h.bl_tree), r(h, z - 11, 7));
                        z = 0;
                        x = w;
                        0 === B ? (C = 138, D = 3) : w === B ? (C = 6, D = 3) : (C = 7, D = 4)
                    }
            }

            function Kb(g) {
                var h, n = 4093624447;
                for (h = 0; 31 >= h; h++, n >>>= 1)
                    if (1 & n && 0 !==
                        g.dyn_ltree[2 * h]) return pb;
                if (0 !== g.dyn_ltree[18] || 0 !== g.dyn_ltree[20] || 0 !== g.dyn_ltree[26]) return da;
                for (h = 32; h < hb; h++)
                    if (0 !== g.dyn_ltree[2 * h]) return da;
                return pb
            }

            function G(g, h, n, t) {
                r(g, (Ba << 1) + (t ? 1 : 0), 3);
                ma(g);
                ha(g, n);
                ha(g, ~n);
                ka.arraySet(g.pending_buf, g.window, h, n, g.pending);
                g.pending += n
            }
            var ka = t("../utils/common"),
                pb = 0,
                da = 1,
                Ba = 0,
                hb = 256,
                va = hb + 1 + 29,
                Ga = 30,
                vb = 19,
                zc = 2 * va + 1,
                ua = 15,
                Lc = 16,
                ib = 256,
                mb = 16,
                Ac = 17,
                A = 18,
                Wa = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                za = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4,
                    4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13
                ],
                pa = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                wa = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                Z = Array(2 * (va + 2));
            z(Z);
            var na = Array(2 * Ga);
            z(na);
            var U = Array(512);
            z(U);
            var Q = Array(256);
            z(Q);
            var kc = Array(29);
            z(kc);
            var W = Array(Ga);
            z(W);
            var cc, Da, D, xb = !1;
            E._tr_init = function(g) {
                if (!xb) {
                    var r, t, B, z = Array(ua + 1);
                    for (B = t = 0; 28 > B; B++)
                        for (kc[B] = t, r = 0; r < 1 << Wa[B]; r++) Q[t++] = B;
                    Q[t - 1] = B;
                    for (B = t = 0; 16 > B; B++)
                        for (W[B] = t, r = 0; r < 1 << za[B]; r++) U[t++] = B;
                    for (t >>= 7; B < Ga; B++)
                        for (W[B] =
                            t << 7, r = 0; r < 1 << za[B] - 7; r++) U[256 + t++] = B;
                    for (r = 0; r <= ua; r++) z[r] = 0;
                    for (r = 0; 143 >= r;) Z[2 * r + 1] = 8, r++, z[8]++;
                    for (; 255 >= r;) Z[2 * r + 1] = 9, r++, z[9]++;
                    for (; 279 >= r;) Z[2 * r + 1] = 7, r++, z[7]++;
                    for (; 287 >= r;) Z[2 * r + 1] = 8, r++, z[8]++;
                    w(Z, va + 1, z);
                    for (r = 0; r < Ga; r++) na[2 * r + 1] = 5, na[2 * r] = h(r, 5);
                    cc = new T(Z, Wa, hb + 1, va, ua);
                    Da = new T(na, za, 0, Ga, ua);
                    D = new T([], pa, 0, vb, 7);
                    xb = !0
                }
                g.l_desc = new n(g.dyn_ltree, cc);
                g.d_desc = new n(g.dyn_dtree, Da);
                g.bl_desc = new n(g.bl_tree, D);
                g.bi_buf = 0;
                g.bi_valid = 0;
                x(g)
            };
            E._tr_stored_block = G;
            E._tr_flush_block =
                function(g, h, n, t) {
                    var u = 0;
                    if (0 < g.level) {
                        2 === g.strm.data_type && (g.strm.data_type = Kb(g));
                        nb(g, g.l_desc);
                        nb(g, g.d_desc);
                        Kc(g, g.dyn_ltree, g.l_desc.max_code);
                        Kc(g, g.dyn_dtree, g.d_desc.max_code);
                        nb(g, g.bl_desc);
                        for (u = vb - 1; 3 <= u && 0 === g.bl_tree[2 * wa[u] + 1]; u--);
                        u = (g.opt_len += 3 * (u + 1) + 14, u);
                        var w = g.opt_len + 3 + 7 >>> 3;
                        var z = g.static_len + 3 + 7 >>> 3;
                        z <= w && (w = z)
                    } else w = z = n + 5;
                    if (n + 4 <= w && -1 !== h) G(g, h, n, t);
                    else if (4 === g.strategy || z === w) r(g, 2 + (t ? 1 : 0), 3), ob(g, Z, na);
                    else {
                        r(g, 4 + (t ? 1 : 0), 3);
                        h = g.l_desc.max_code + 1;
                        n = g.d_desc.max_code +
                            1;
                        u += 1;
                        r(g, h - 257, 5);
                        r(g, n - 1, 5);
                        r(g, u - 4, 4);
                        for (w = 0; w < u; w++) r(g, g.bl_tree[2 * wa[w] + 1], 3);
                        ca(g, g.dyn_ltree, h - 1);
                        ca(g, g.dyn_dtree, n - 1);
                        ob(g, g.dyn_ltree, g.dyn_dtree)
                    }
                    x(g);
                    t && ma(g)
                };
            E._tr_tally = function(g, h, n) {
                return g.pending_buf[g.d_buf + 2 * g.last_lit] = h >>> 8 & 255, g.pending_buf[g.d_buf + 2 * g.last_lit + 1] = 255 & h, g.pending_buf[g.l_buf + g.last_lit] = 255 & n, g.last_lit++, 0 === h ? g.dyn_ltree[2 * n]++ : (g.matches++, h--, g.dyn_ltree[2 * (Q[n] + hb + 1)]++, g.dyn_dtree[2 * (256 > h ? U[h] : U[256 + (h >>> 7)])]++), g.last_lit === g.lit_bufsize - 1
            };
            E._tr_align =
                function(h) {
                    r(h, 2, 3);
                    g(h, ib, Z);
                    16 === h.bi_valid ? (ha(h, h.bi_buf), h.bi_buf = 0, h.bi_valid = 0) : 8 <= h.bi_valid && (h.pending_buf[h.pending++] = 255 & h.bi_buf, h.bi_buf >>= 8, h.bi_valid -= 8)
                }
        }, {
            "../utils/common": 3
        }],
        15: [function(t, C, E) {
            C.exports = function() {
                this.input = null;
                this.total_in = this.avail_in = this.next_in = 0;
                this.output = null;
                this.total_out = this.avail_out = this.next_out = 0;
                this.msg = "";
                this.state = null;
                this.data_type = 2;
                this.adler = 0
            }
        }, {}],
        "/": [function(t, C, E) {
            E = t("./lib/utils/common").assign;
            var z = t("./lib/deflate"),
                T = t("./lib/inflate");
            t = t("./lib/zlib/constants");
            var n = {};
            E(n, z, T, t);
            C.exports = n
        }, {
            "./lib/deflate": 1,
            "./lib/inflate": 2,
            "./lib/utils/common": 3,
            "./lib/zlib/constants": 6
        }]
    }, {}, [])("/")
});
var saveAs = saveAs || function(O) {
    if (!("undefined" === typeof O || "undefined" !== typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
        var t = O.document.createElementNS("http://www.w3.org/1999/xhtml", "a"),
            C = "download" in t,
            E = /constructor/i.test(O.HTMLElement) || O.safari,
            z = /CriOS\/[\d]+/.test(navigator.userAgent),
            T = function(g) {
                (O.setImmediate || O.setTimeout)(function() {
                    throw g;
                }, 0)
            },
            n = function(g) {
                setTimeout(function() {
                    "string" === typeof g ? (O.URL || O.webkitURL || O).revokeObjectURL(g) : g.remove()
                }, 4E4)
            },
            ha =
            function(g) {
                return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(g.type) ? new Blob([String.fromCharCode(65279), g], {
                    type: g.type
                }) : g
            },
            r = function(g, r, x) {
                x || (g = ha(g));
                var h = this,
                    w = "application/octet-stream" === g.type,
                    J = function() {
                        var g = ["writestart", "progress", "write", "writeend"];
                        g = [].concat(g);
                        for (var n = g.length; n--;) {
                            var r = h["on" + g[n]];
                            if ("function" === typeof r) try {
                                r.call(h, h)
                            } catch (Kb) {
                                T(Kb)
                            }
                        }
                    };
                h.readyState = h.INIT;
                if (C) {
                    var ob = (O.URL || O.webkitURL || O).createObjectURL(g);
                    setTimeout(function() {
                        t.href = ob;
                        t.download = r;
                        var g = new MouseEvent("click");
                        t.dispatchEvent(g);
                        J();
                        n(ob);
                        h.readyState = h.DONE
                    })
                } else(function() {
                    if ((z || w && E) && O.FileReader) {
                        var r = new FileReader;
                        r.onloadend = function() {
                            var g = z ? r.result : r.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                            O.open(g, "_blank") || (O.location.href = g);
                            h.readyState = h.DONE;
                            J()
                        };
                        r.readAsDataURL(g);
                        h.readyState = h.INIT
                    } else ob || (ob = (O.URL || O.webkitURL || O).createObjectURL(g)), w ? O.location.href = ob : O.open(ob, "_blank") || (O.location.href =
                        ob), h.readyState = h.DONE, J(), n(ob)
                })()
            },
            g = r.prototype;
        if ("undefined" !== typeof navigator && navigator.msSaveOrOpenBlob) return function(g, n, r) {
            n = n || g.name || "download";
            r || (g = ha(g));
            return navigator.msSaveOrOpenBlob(g, n)
        };
        g.abort = function() {};
        g.readyState = g.INIT = 0;
        g.WRITING = 1;
        g.DONE = 2;
        g.error = g.onwritestart = g.onprogress = g.onwrite = g.onabort = g.onerror = g.onwriteend = null;
        return function(g, n, t) {
            return new r(g, n || g.name || "download", t)
        }
    }
}("undefined" !== typeof self && self || "undefined" !== typeof window && window || this.content);
"undefined" !== typeof module && module.exports ? module.exports.saveAs = saveAs : "undefined" !== typeof define && null !== define && null !== define.amd && define("FileSaver.js", function() {
    return saveAs
});
"function" == typeof define && define.__amd && (define.amd = define.__amd, delete define.__amd);